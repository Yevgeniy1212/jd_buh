
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФункциональнаяОпцияРаботаВМоделиСервиса = ПолучитьФункциональнуюОпцию("РаботаВМоделиСервиса");	
	
	АдресСервераСЛК 				= Константы.си_АдресСервераСЛК.Получить();
	ПортСервераСЛК 					= Константы.си_ПортСервераСЛК.Получить();
	Серия 							= си_ЗащитаКлиентСервер.Серия();
	ВерсияБиблиотекЗащиты 			= си_ПроцедурыМеханизмаЗащиты.ВерсияБиблиотекЗащиты();
	ВерсияКонфигурацииПоставщика 	= си_ОбщегоНазначения.ВерсияКонфигурации();
	ВерсияИнформационнойБазыКлиента = ОбновлениеИнформационнойБазыСлужебный.ВерсияИБ(си_УчетСпецодеждыСерверПовтИсп.НаименованиеПодсистемы());
	
	Если ФункциональнаяОпцияРаботаВМоделиСервиса Тогда
		ПользовательСервераСЛК			= Константы.си_ПользовательСервераСЛК.Получить();
		ПарольСервераСЛК				= Константы.си_ПарольСервераСЛК.Получить();
		Если СокрЛП(ПользовательСервераСЛК) = "" И СокрЛП(ПарольСервераСЛК) = "" Тогда
			ПользовательСервераСЛК = "admin";
			ПарольСервераСЛК = "admin";
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьИнформациюОСоединении(ЭтаФорма);
	
	Если АдресСервераСЛК = "" ИЛИ НРег(АдресСервераСЛК) = НРег("localhost") Тогда
		Расположение = Перечисления.си_ВариантыРасположенияСервераСЛК.НаЛокальномКомпьютере;
		АдресСервераСЛК = "localhost";
		ПортСервераСЛК = 9099;
	Иначе
		Расположение = Перечисления.си_ВариантыРасположенияСервераСЛК.НаКомпьютереВСети;
	КонецЕсли;
	
	НастроитьДоступностьПараметровСвязи(ЭтаФорма); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РасположениеПриИзменении(Элемент)
	
	Если Расположение = ПредопределенноеЗначение("Перечисление.си_ВариантыРасположенияСервераСЛК.НаЛокальномКомпьютере") Тогда
		АдресСервераСЛК = "localhost";
	Иначе
		АдресСервераСЛК = "";
	КонецЕсли;
	
	ПортСервераСЛК = 9099;
	
	НастроитьДоступностьПараметровСвязи(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьСоединение(Команда)
	
	Результат = УстановитьСоединениеССервером();
	
	Если Результат И ЭтаФорма.Открыта() Тогда
		СведенияОПоддержке = си_ЗащитаКлиентСервер.ПолучитьСведенияОПоддержке();
		Если СведенияОПоддержке = Неопределено ИЛИ НЕ ЗначениеЗаполнено(СведенияОПоддержке) Тогда
			ОткрытьФормуМодально("Обработка.си_СведенияОЛицензииНаПоддержку.Форма");
		КонецЕсли;
		Закрыть(Истина);
	КонецЕсли;
	
	ОбновитьИнформациюОСоединении(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольСервераСЛК(Команда)
	
	Попытка
		АдресКонсолиСЛК = си_ЗащитаКлиентСервер.АдресКонсоли();
	Исключение
	КонецПопытки;
	
	Если Найти(АдресКонсолиСЛК, ?(АдресСервераСЛК = "localhost", "127.0.0.1", АдресСервераСЛК)) = 0 
		И Найти(АдресКонсолиСЛК, ПортСервераСЛК) = 0 Тогда
		Если УстановитьСоединениеССервером() Тогда
			ОбновитьПовторноИспользуемыеЗначения();
			АдресКонсолиСЛК = си_ЗащитаКлиентСервер.АдресКонсоли();
		Иначе	
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ЗапуститьПриложение(АдресКонсолиСЛК);
	#Иначе
		ПерейтиПоНавигационнойСсылке(АдресКонсолиСЛК);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьДоступностьПараметровСвязи(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ПортСервераСЛК.ТолькоПросмотр = (Форма.Расположение = ПредопределенноеЗначение("Перечисление.си_ВариантыРасположенияСервераСЛК.НаЛокальномКомпьютере")); 
	Элементы.АдресСервераСЛК.ТолькоПросмотр = (Форма.Расположение = ПредопределенноеЗначение("Перечисление.си_ВариантыРасположенияСервераСЛК.НаЛокальномКомпьютере")); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИнформациюОСоединении(Форма)

	Попытка
		Форма.ВерсияКомпонентыСЛК = си_ЗащитаКлиентСервер.Версия();
	Исключение
	КонецПопытки;
	
	Попытка
		Форма.ДанныеСеанса = си_ЗащитаКлиентСервер.ДанныеСеанса();
	Исключение
	КонецПопытки;
	
	Попытка
		Форма.ЛицензияДоступна = си_ЗащитаКлиентСервер.ПроверитьЛицензию();
	Исключение
	КонецПопытки;
	
	Если Форма.ФункциональнаяОпцияРаботаВМоделиСервиса Тогда
		Попытка
			Форма.АвторизацияПройдена = си_ЗащитаКлиентСервер.ПроверитьАвторизациюНаСервереСЛК(Форма.ПользовательСервераСЛК, Форма.ПарольСервераСЛК);
		Исключение
		КонецПопытки;
	Иначе
		Форма.Элементы.АвторизацияПройдена.Видимость = Ложь;
		Форма.Элементы.ГруппаАвторизация.Видимость = Ложь;
	КонецЕсли;
	
	Форма.Элементы.ОписаниеЛицензии.Видимость = Форма.ЛицензияДоступна;
	
	Попытка
		Если Форма.ЛицензияДоступна Тогда
			Форма.ОписаниеЛицензии = си_ОбщегоНазначения.ОписаниеЛицензии(си_ЗащитаКлиентСервер.ПолучитьЛицензию(), Ложь);
			Форма.ИнформацияДляОтладки = си_ЗащитаКлиентСервер.ПолучитьОтладочнуюСтроку();
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция УстановитьСоединениеССервером()
	
	Константы.си_АдресСервераСЛК.Установить(СокрЛП(АдресСервераСЛК));
	Константы.си_ПортСервераСЛК.Установить(ПортСервераСЛК);
	
	Если ФункциональнаяОпцияРаботаВМоделиСервиса Тогда
		Константы.си_ПользовательСервераСЛК.Установить(СокрЛП(ПользовательСервераСЛК));
		Константы.си_ПарольСервераСЛК.Установить(ПарольСервераСЛК);
	КонецЕсли;
	
	Если СокрЛП(АдресСервераСЛК) = "" Тогда
		си_ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не задан адрес сервера лицензий!'"));
		Возврат Ложь;
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();

	Возврат си_ЗащитаКлиентСервер.ЗапускМенеджераЛицензий();
	
КонецФункции

#КонецОбласти
