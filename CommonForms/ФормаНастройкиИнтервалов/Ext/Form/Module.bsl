
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Интервалы") Тогда
		Интервалы.Очистить();
		Для Сч = 1 По Параметры.Интервалы.Количество() Цикл
			НоваяСтрокаТЧ 			= Интервалы.Добавить();
			НоваяСтрокаТЧ.Значение 	= Параметры.Интервалы[Сч-1];
		КонецЦикла;	
		ИнтервалыПриИзмененииНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	ПараметрОповещения = Новый Структура;
	ПараметрОповещения.Вставить("Интервалы", ПриЗакрытииНаСервере());
	Оповестить("НастроеныИнтервалы", ПараметрОповещения , ВладелецФормы);
	Закрыть(Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИнтервалыПриИзменении(Элемент)
	ИнтервалыПриИзмененииНаСервере();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ИнтервалыПриИзмененииНаСервере()
	Интервалы.Сортировать("Значение Возр");
	
	ПерваяСтрока = Истина;
	ПредыдущееЗначение = 0;
	Для Каждого Интервал Из Интервалы Цикл
		Если ПерваяСтрока Тогда
			Интервал.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'До %1 дней'"), Интервал.Значение);
			ПредыдущееЗначение = Интервал.Значение;
			ПерваяСтрока = Ложь;
		Иначе
			Интервал.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'От %1 до %2 дней'"), ПредыдущееЗначение + 1, Интервал.Значение);
			ПредыдущееЗначение = Интервал.Значение;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры	

&НаСервере
Функция ПриЗакрытииНаСервере()
	Возврат Интервалы.Выгрузить().ВыгрузитьКолонку("Значение");
КонецФункции

