
&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	НомерСтроки = 1;
	Для Каждого Строка Из УчастникиСовместнойДеятельности Цикл
		ПроверитьЗаполнениеРеквизитовФормы(Строка, НомерСтроки, Отказ);
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Если Не Отказ Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого Элемент Из Параметры.УчастникиСовместнойДеятельности Цикл
		НоваяСтрока = ЭтаФорма.УчастникиСовместнойДеятельности.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Элемент);
	КонецЦикла;
	
	ПоверенныйОператор = Параметры.ПоверенныйОператор; 
		
	СтруктураПараметров = ИзменяемыеРеквизиты(Параметры);
	
	МассивЭлементов = Новый Массив();
	
	Для Каждого ЭлементСтруктуры из СтруктураПараметров Цикл
		МассивЭлементов.Добавить(ЭлементСтруктуры.Ключ);
	КонецЦикла;
	
	Если ТолькоПросмотр Тогда 	
				
		ОбщегоНазначенияБККлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Истина);
		
	КонецЕсли;  
	
	ПодготовитьФорму();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("УчастникиСовместнойДеятельности", Источник.УчастникиСовместнойДеятельности);
	СтруктураПараметров.Вставить("УчастникиСовместнойДеятельностиИспользоватьКакПоверенногоОператора");
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли  Модифицированность И НЕ ПеренестиВДокумент Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ПеренестиВДокумент И Модифицированность Тогда
		СтруктураРезультат = Новый Структура("
			|УчастникиСовместнойДеятельности");
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, ЭтаФорма);
		
		СтруктураРезультат.Вставить("ПоверенныйОператор", ПоверенныйОператор);	
		
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПодготовитьФорму()

	РаботаСДиалогами.УстановитьСвойстваЭлементовУчастниковСовместнойДеятельности(Элементы.ГруппаУчастникиСовместнойДеятельности, 
					Элементы.УчастникиСовместнойДеятельностиУчастникиСовместнойДеятельностиУчастникСовместнойДеятельности, ЭтаФорма.Параметры.Договор);

	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Договор) Тогда
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтаФорма.Параметры.Договор, "ДоговорСовместнойДеятельности,УчастникСРП");		
		Если РеквизитыДоговора.ДоговорСовместнойДеятельности Тогда
			ЭтаФорма.Заголовок = НСтр("ru ='Информация об участниках совместной деятельности'");
		ИначеЕсли РеквизитыДоговора.УчастникСРП Тогда
			ЭтаФорма.Заголовок = НСтр("ru ='Информация об участниках СРП'");
		КонецЕсли;	
	ИначеЕсли Параметры.Свойство("УчастникСРП") И  Параметры.Свойство("ДоговорСовместнойДеятельности") Тогда
		 Если ЭтаФорма.Параметры.ДоговорСовместнойДеятельности Тогда
			ЭтаФорма.Заголовок = НСтр("ru ='Информация об участниках совместной деятельности'");
		ИначеЕсли ЭтаФорма.Параметры.УчастникСРП Тогда
			ЭтаФорма.Заголовок = НСтр("ru ='Информация об участниках СРП'");
		КонецЕсли;
		
		Элементы.ГруппаУчастникиСовместнойДеятельности.Видимость = ЭтаФорма.Параметры.ДоговорСовместнойДеятельности ИЛИ ЭтаФорма.Параметры.УчастникСРП;
		
		Если ЭтаФорма.Параметры.ДоговорСовместнойДеятельности Тогда
			Элементы.УчастникиСовместнойДеятельности.Заголовок = НСтр("ru ='Участники совместной деятельности'");
			Элементы.УчастникиСовместнойДеятельностиУчастникиСовместнойДеятельностиУчастникСовместнойДеятельности.Заголовок = НСтр("ru ='Участник совместной деятельности'");
			
		ИначеЕсли ЭтаФорма.Параметры.УчастникСРП Тогда
			Элементы.УчастникиСовместнойДеятельности.Заголовок = НСтр("ru ='Участники СРП'");
			Элементы.УчастникиСовместнойДеятельностиУчастникиСовместнойДеятельностиУчастникСовместнойДеятельности.Заголовок = НСтр("ru ='Участник СРП'");
		КонецЕсли;

	КонецЕсли;
	
	Элементы.УчастникиСовместнойДеятельностиИспользоватьКакПоверенногоОператора.Видимость = ЭтаФорма.Параметры.УчастникСРП;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьКакПоверенногоОператора(Команда)
	
	Модифицированность = Истина;
	ТекущиеДанные = Элементы.УчастникиСовместнойДеятельности.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.УчастникСовместнойДеятельности) Тогда
		Возврат;
	КонецЕсли;
	
	ПоверенныйОператор = ТекущиеДанные.УчастникСовместнойДеятельности;
	УстановитьДоступностьКомандыИспользоватьКакПоверенногоОператора();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандыИспользоватьКакПоверенногоОператора()

	ТекущиеДанные = Элементы.УчастникиСовместнойДеятельности.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ НЕ ТекущиеДанные.Свойство("УчастникСовместнойДеятельности") Тогда
		Элементы.УчастникиСовместнойДеятельностиИспользоватьКакПоверенногоОператора.Доступность = Ложь;
	Иначе
		Элементы.УчастникиСовместнойДеятельностиИспользоватьКакПоверенногоОператора.Доступность = 
			НЕ (ТекущиеДанные.УчастникСовместнойДеятельности = ПоверенныйОператор И ЗначениеЗаполнено(ПоверенныйОператор))
			И (ЗначениеЗаполнено(ТекущиеДанные.УчастникСовместнойДеятельности) И ТекущиеДанные.УчастникСовместнойДеятельности <> ПоверенныйОператор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиСовместнойДеятельностиПриАктивизацииСтроки(Элемент)
	УстановитьДоступностьКомандыИспользоватьКакПоверенногоОператора();
КонецПроцедуры

&НаКлиенте
Процедура УчастникиСовместнойДеятельностиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	СтрокаТабличнойЧасти = Элементы.УчастникиСовместнойДеятельности.ТекущиеДанные;
	НомерСтроки = Элементы.УчастникиСовместнойДеятельности.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.УчастникСовместнойДеятельности) Тогда 
		Возврат;
	КонецЕсли;
	
	ПроверитьДублированиеУчастниковСовместнойДеятельности(УчастникиСовместнойДеятельности, СтрокаТабличнойЧасти, НомерСтроки, Отказ)

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьДублированиеУчастниковСовместнойДеятельности(УчастникиСовместнойДеятельности, СтрокаТабличнойЧасти, НомерСтроки, Отказ)
	
	НайденныеСтроки = УчастникиСовместнойДеятельности.НайтиСтроки(Новый Структура("УчастникСовместнойДеятельности", СтрокаТабличнойЧасти.УчастникСовместнойДеятельности));
	Если НайденныеСтроки.Количество() > 1 Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Контрагент ""%1"" уже выбран в качестве участника совместной деятельности. Повторный выбор не допускается.'"), 
				СтрокаТабличнойЧасти.УчастникСовместнойДеятельности),
			,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("УчастникиСовместнойДеятельности", НомерСтроки + 1, "УчастникСовместнойДеятельности"),
			,
			Отказ);	
		СтрокаТабличнойЧасти.УчастникСовместнойДеятельности = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеРеквизитовФормы(Строка, НомерСтроки, Отказ)
	
	Если Не ЗначениеЗаполнено(Строка.УчастникСовместнойДеятельности) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не заполнена колонка ""%1"" в строке ""%2"" списка ""%3""'"),
				Элементы.УчастникиСовместнойДеятельностиУчастникиСовместнойДеятельностиУчастникСовместнойДеятельности.Заголовок,
				НомерСтроки,
				Элементы.УчастникиСовместнойДеятельности.Заголовок ), ,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("УчастникиСовместнойДеятельности", НомерСтроки, "УчастникСовместнойДеятельности"), ,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

