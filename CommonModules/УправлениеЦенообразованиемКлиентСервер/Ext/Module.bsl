&НаКлиенте
Процедура ОбработатьИзмененияПоКнопкеЦеныИВалюты(Форма, ЭтоДокументРозничнойТорговли = Ложь, ДополнительныеПараметрыФормы = Неопределено) Экспорт
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	// 1. Формируем структуру параметров для заполнения формы "Цены и Валюта".
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВалютаДокумента",      Объект.ВалютаДокумента);
	СтруктураПараметров.Вставить("Курс",                 Объект.КурсВзаиморасчетов);
	СтруктураПараметров.Вставить("Кратность",            Объект.КратностьВзаиморасчетов);
	СтруктураПараметров.Вставить("СуммаВключаетНДС",     Объект.СуммаВключаетНДС);
	СтруктураПараметров.Вставить("УчитыватьНДС",      	 Объект.УчитыватьНДС);
	СтруктураПараметров.Вставить("Контрагент",           Объект.Контрагент);
	СтруктураПараметров.Вставить("Договор",              Объект.ДоговорКонтрагента);
	СтруктураПараметров.Вставить("Организация",          Объект.Организация);
	СтруктураПараметров.Вставить("ДатаДокумента",        Объект.Дата);
	Если Объект.Свойство("ТипЦен") Тогда 
		СтруктураПараметров.Вставить("ТипЦен",               Объект.ТипЦен);
	КонецЕсли;
	СтруктураПараметров.Вставить("ТолькоПросмотр",       Форма.ТолькоПросмотр ИЛИ Элементы.ЦеныИВалюта.ТолькоПросмотр);
	СтруктураПараметров.Вставить("ЭтоДокументРозничнойТорговли", ЭтоДокументРозничнойТорговли);
	
	// 2. Открываем форму "Цены и Валюта".
	
	// ФО.овечающие за видимость разделов в форме
	ИспользоватьТипыЦенНоменклатуры = ОбщегоНазначенияБКВызовСервера.ИспользоватьТипыЦенНоменклатуры();
	ИспользоватьВалютныйУчет 		= ОбщегоНазначенияБКВызовСервера.ИспользоватьВалютныйУчет();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ВалютаРегламентированногоУчета 	= ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ДоговорУказан = ЗначениеЗаполнено(Объект.ДоговорКонтрагента);
	
	Если ДоговорУказан Тогда
		
		ВалютаВзаиморасчетов = УправлениеЦенообразованиемВызовСервера.ПолучитьВалютуВзаиморасчетов(Объект.ДоговорКонтрагента);
	    				
	Иначе

		ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета;
		
	КонецЕсли;
	
	СведенияОбУчетнойПолитикеОрганизации = УправлениеЦенообразованиемВызовСервера.ПолучитьСведенияОбУчетнойПолитикеОрганизации(Объект.Организация, Объект.Дата);
	Если СведенияОбУчетнойПолитикеОрганизации = Неопределено Тогда
		ЯвляетсяПлательщикомНДС = Ложь;
		ЯвляетсяПлательщикомАкциза = Ложь;
	Иначе
		ЯвляетсяПлательщикомНДС    = СведенияОбУчетнойПолитикеОрганизации.ЯвляетсяПлательщикомНДС;
		ЯвляетсяПлательщикомАкциза = СведенияОбУчетнойПолитикеОрганизации.ЯвляетсяПлательщикомАкциза;
	КонецЕсли;
	
	// Если есть влияющие ФО:
	// - если используются типы цен и они влияют на документ - открываем форму
	// - если используется валютный учет и валюты разные - открываем форму
	// Если ФО нет, проверяем акцизы: 
	// - если в форме есть и является плательщиком - открываем форму
	// - если в форме есть, но не является плательщиком - формируем список
	// - если в форме нет  - формируем список
	
	Если ИспользоватьТипыЦенНоменклатуры И Объект.Свойство("ТипЦен") Тогда
		ОткрыватьИзМеню = Ложь;
	ИначеЕсли (ИспользоватьВалютныйУчет И ВалютаВзаиморасчетов <> ВалютаРегламентированногоУчета) И Не ЭтоДокументРозничнойТорговли Тогда 
		ОткрыватьИзМеню = Ложь;
	ИначеЕсли Объект.Свойство("СуммаВключаетАкциз") И ЯвляетсяПлательщикомАкциза Тогда 
		ОткрыватьИзМеню = Ложь;
	Иначе
		ОткрыватьИзМеню = Истина;
		ДополнительныеПараметры.Вставить("СтруктураПараметровКоманды", СтруктураПараметров);
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
	Если ОткрыватьИзМеню Тогда
		
		СписокКоманд = Новый СписокЗначений;
		
		СписокКоманд.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.ДокументБезНДС"));
		Если Не ЭтоДокументРозничнойТорговли Тогда
			СписокКоманд.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДССверху"));
		КонецЕсли;
		СписокКоманд.Добавить(ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСВСумме"));
		
		Если НЕ Форма.ТолькоПросмотр Тогда
			Форма.ПоказатьВыборИзМеню(ОповещениеОЗакрытии, СписокКоманд, Элементы.ЦеныИВалюта);
		КонецЕсли; 
	Иначе
		УправлениеЦенообразованиемКлиент.ОткрытьФормуЦеныИВалюта(Форма,,,, ДополнительныеПараметрыФормы, ЭтоДокументРозничнойТорговли);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьИзмененияПоКнопкеЦеныИВалютыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;

	Если ДополнительныеПараметры.Свойство("СтруктураПараметровКоманды") Тогда
		
		СтруктураЦеныИВалюта = ДополнительныеПараметры.СтруктураПараметровКоманды;
		
		СуммаВключаетНДСДоИзменения = СтруктураЦеныИВалюта.СуммаВключаетНДС;
		УчитыватьНДСДоИзменения		= СтруктураЦеныИВалюта.УчитыватьНДС;
				
		Если РезультатЗакрытия = Неопределено Тогда 
			Возврат;
		ИначеЕсли РезультатЗакрытия.Значение = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.ДокументБезНДС") Тогда
			СтруктураЦеныИВалюта.УчитыватьНДС 		= Ложь;
			СтруктураЦеныИВалюта.СуммаВключаетНДС 	= Ложь;
		ИначеЕсли РезультатЗакрытия.Значение = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСВСумме") Тогда
			СтруктураЦеныИВалюта.УчитыватьНДС 		= Истина;
			СтруктураЦеныИВалюта.СуммаВключаетНДС 	= Истина;
		Иначе
			СтруктураЦеныИВалюта.УчитыватьНДС 		= Истина;
			СтруктураЦеныИВалюта.СуммаВключаетНДС 	= Ложь;
		КонецЕсли;
		
		ПересчитыватьНДС = Новый Структура();
		ПересчитыватьНДС.Вставить("ИзменилсяУчет", 		УчитыватьНДСДоИзменения <> СтруктураЦеныИВалюта.УчитыватьНДС);
		ПересчитыватьНДС.Вставить("ИзменилосьВхождение",СуммаВключаетНДСДоИзменения <> СтруктураЦеныИВалюта.СуммаВключаетНДС); 

		СтруктураЦеныИВалюта.Вставить("ПерезаполнитьЦены",    Ложь);
		СтруктураЦеныИВалюта.Вставить("ПересчитатьЦены",      Ложь);
		СтруктураЦеныИВалюта.Вставить("ПересчитатьНДС",       ПересчитыватьНДС);
		СтруктураЦеныИВалюта.Вставить("БылиВнесеныИзменения", ПересчитыватьНДС.ИзменилсяУчет ИЛИ ПересчитыватьНДС.ИзменилосьВхождение);
				
	Иначе
		СтруктураЦеныИВалюта = РезультатЗакрытия;
	КонецЕсли;
	
	Если ТипЗнч(СтруктураЦеныИВалюта) = Тип("Структура")
		И СтруктураЦеныИВалюта.БылиВнесеныИзменения
		И НЕ СтруктураЦеныИВалюта.ТолькоПросмотр Тогда

		ВалютаДоИзменения    = Объект.ВалютаДокумента;
		КурсДоИзменения      = Объект.КурсВзаиморасчетов;
		КратностьДоИзменения = Объект.КратностьВзаиморасчетов;
		
		Если СтруктураЦеныИВалюта.Свойство("ТипЦен") Тогда
			Объект.ТипЦен                  = СтруктураЦеныИВалюта.ТипЦен;
		КонецЕсли;
		Объект.ВалютаДокумента         = СтруктураЦеныИВалюта.ВалютаДокумента;
		Объект.КурсВзаиморасчетов      = СтруктураЦеныИВалюта.Курс;
		Объект.КратностьВзаиморасчетов = СтруктураЦеныИВалюта.Кратность;
		Объект.СуммаВключаетНДС        = СтруктураЦеныИВалюта.СуммаВключаетНДС;
		Объект.УчитыватьНДС		   	   = СтруктураЦеныИВалюта.УчитыватьНДС;
		
		Форма.Модифицированность = Истина;

		Форма.ПриИзмененииЦеныИВалюты(ВалютаДоИзменения, 
			КурсДоИзменения,
			КратностьДоИзменения,
			СтруктураЦеныИВалюта.ПерезаполнитьЦены,
			СтруктураЦеныИВалюта.ПересчитатьЦены,
			СтруктураЦеныИВалюта.ПересчитатьНДС);
			
		Форма.ОбновитьОтображениеДанных();
		
	КонецЕсли;
	
КонецПроцедуры
