////////////////////////////////////////////////////////////////////////////////
// Подсистема "Защита конфигурации".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ВариантСМодальнымиОкнами

// Инициализировать подсистему 
//
Процедура ИнициализироватьЗащищенныеПодсистемыКонфигурации(Параметры=Неопределено) Экспорт
	
	СписокРолей = Новый Массив;
	СписокРолей.Добавить("си_ЗапускСЛК");
	СписокРолей.Добавить("си_УправлениеСпецодеждой");
	СписокРолей.Добавить("ПолныеПрава");
	Если НЕ си_ОбщегоНазначенияСервер.ПроверкаРольИзСпискаДоступна(СписокРолей) Тогда
		Возврат;
	КонецЕсли;
	
	// Вывод информации о переводе на платную поддержку
	ПоказыватьИнформацию = си_ОбщегоНазначенияСервер.ХранилищеОбщихНастроекЗагрузить("ИнформацияОВводеПлатнойПоддержки", "Показывать");
	Если ПоказыватьИнформацию = Неопределено ИЛИ ПоказыватьИнформацию Тогда
		СведенияОПоддержке = си_ЗащитаКлиентСервер.ПолучитьСведенияОПоддержке();		
		Если СведенияОПоддержке = Неопределено ИЛИ НЕ ЗначениеЗаполнено(СведенияОПоддержке) Тогда
			ОткрытьФорму("Обработка.си_ИнформацияОВводеПлатнойПоддержки.Форма");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ си_ЗащитаКлиентСервер.ЗапускМенеджераЛицензий() Тогда
		Если си_ОбщегоНазначенияСервер.ПравоРедактированияПутиСЛК() Тогда
			Результат = ОткрытьФормуМодально("ОбщаяФорма.си_НастройкаСвязиССерверомЛицензий");
			Если Результат = Истина Тогда
				ОткрытьСведенияОЛицензииНаПоддержку();
			Иначе
				Предупреждение("Ключ защиты не обнаружен!");
				Если Параметры <> Неопределено И ТипЗнч(Параметры) = Тип("Структура") Тогда
					//Параметры.Вставить("Отказ", Истина);
				КонецЕсли;
				//ЗавершитьРаботуСистемы(); // если использование типовой части конфигурации без отраслевой не предусмотрено
			КонецЕсли;
		Иначе
			Предупреждение("Ключ защиты не обнаружен!");
			Если Параметры <> Неопределено И ТипЗнч(Параметры) = Тип("Структура") Тогда
				//Параметры.Вставить("Отказ", Истина);
			КонецЕсли;
			//ЗавершитьРаботуСистемы(); // если использование типовой части конфигурации без отраслевой не предусмотрено
		КонецЕсли;
	Иначе
		ВерсияБиблиотекЗащиты = си_ПроцедурыМеханизмаЗащиты.ВерсияБиблиотекЗащиты();
		Если ВерсияБиблиотекЗащиты <> "Не определена" Тогда 
			Если си_ОбщегоНазначения.ВерсияБиблиотекЗащиты() <> ВерсияБиблиотекЗащиты Тогда
				Предупреждение("Версия библиотек защиты (" + ВерсияБиблиотекЗащиты + ") не соответствует версии, " 
				+ "требуемой для работы приложения (" + си_ОбщегоНазначения.ВерсияБиблиотекЗащиты() + ")!", 120,
				"Система лицензирования и защиты конфигурации");
			КонецЕсли;
		КонецЕсли;
		ОткрытьСведенияОЛицензииНаПоддержку();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВариантБезИспользованияМодальныхОкон

//// Инициализировать подсистему 
////
//Процедура ИнициализироватьЗащищенныеПодсистемыКонфигурации(Параметры = Неопределено) Экспорт

//	// Вывод информации о переводе на платную поддержку
//	ПоказыватьИнформацию = си_ОбщегоНазначенияСервер.ХранилищеОбщихНастроекЗагрузить("ИнформацияОВводеПлатнойПоддержки", "Показывать");
//	Если ПоказыватьИнформацию = Неопределено ИЛИ ПоказыватьИнформацию Тогда
//		СведенияОПоддержке = си_ЗащитаКлиентСервер.ПолучитьСведенияОПоддержке();		
//		Если СведенияОПоддержке = Неопределено ИЛИ НЕ ЗначениеЗаполнено(СведенияОПоддержке) Тогда
//			ОткрытьФорму("Обработка.си_ИнформацияОВводеПлатнойПоддержки.Форма");
//		КонецЕсли;
//	КонецЕсли;

//	Если НЕ си_ЗащитаКлиентСервер.ЗапускМенеджераЛицензий() Тогда
//		Если си_ОбщегоНазначенияСервер.ПравоРедактированияПутиСЛК() Тогда
//			ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработкаРезультатаРедактированияПутиСЛК", си_ЗапускЗащищеннойКонфигурации, Параметры); 
//			ОткрытьФорму("ОбщаяФорма.си_НастройкаСвязиССерверомЛицензий",,,,,,ОписаниеОповещенияОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
//		Иначе
//			ПоказатьПредупреждение(,"Ключ защиты не обнаружен!");
//			Если Параметры <> Неопределено И ТипЗнч(Параметры) = Тип("Структура") Тогда
//				Параметры.Вставить("Отказ", Истина);
//			КонецЕсли;
//			ЗавершитьРаботуСистемы(); // если использование типовой части конфигурации без отраслевой не предусмотрено
//		КонецЕсли;
//	Иначе                                                         
//		ВерсияБиблиотекЗащиты = си_ПроцедурыМеханизмаЗащиты.ВерсияБиблиотекЗащиты();
//		Если ВерсияБиблиотекЗащиты <> "Не определена" Тогда 
//			Если си_ОбщегоНазначения.ВерсияБиблиотекЗащиты() <> ВерсияБиблиотекЗащиты Тогда
//				ПоказатьПредупреждение(,"Версия библиотек защиты (" + ВерсияБиблиотекЗащиты + ") не соответствует версии, "
//				+ "требуемой для работы приложения (" + си_ОбщегоНазначения.ВерсияБиблиотекЗащиты() + ")!", 120,
//				"Система лицензирования и защиты конфигурации");
//			КонецЕсли;
//		КонецЕсли;
//		ОткрытьСведенияОЛицензииНаПоддержку();
//	КонецЕсли;
//	
//КонецПроцедуры

//// Обработка результата редактирования пути СЛК
////
//Процедура ОбработкаРезультатаРедактированияПутиСЛК(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
//	
//	Если РезультатЗакрытия <> Истина Тогда
//		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияПредупрежденияНетКлюча", си_ЗапускЗащищеннойКонфигурации,ДополнительныеПараметры); 
//		ПоказатьПредупреждение(ОписаниеОповещенияОЗакрытии, "Ключ защиты не обнаружен!");
//	Иначе
//		ОткрытьСведенияОЛицензииНаПоддержку();
//	КонецЕсли;
//	
//КонецПроцедуры

//// Обработка результата предупреждения о том что не найден ключ
////
//Процедура ПослеЗакрытияПредупрежденияНетКлюча(ДополнительныеПараметры) Экспорт
//	
//	Если ДополнительныеПараметры <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
//		ДополнительныеПараметры.Вставить("Отказ", Истина);
//	КонецЕсли;
//	ЗавершитьРаботуСистемы(Ложь); // если использование типовой части конфигурации без отраслевой не предусмотрено
//	
//КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОткрытьСведенияОЛицензииНаПоддержку()

	СостояниеПоддержки = си_ЗащитаКлиентСервер.СостояниеПоддержки();
	Если си_ОбщегоНазначенияСервер.ПравоРедактированияСведенийОЛицензииНаПоддержку() И СостояниеПоддержки <> "EPaidSupportIsActive" 
		И НЕ НапомнитьОПродленииЛицензииНаПоддержку(СостояниеПоддержки) Тогда
		ОткрытьФорму("Обработка.си_СведенияОЛицензииНаПоддержку.Форма");
	КонецЕсли;

КонецПроцедуры

Функция НапомнитьОПродленииЛицензииНаПоддержку(СостояниеПоддержки)

	Если СостояниеПоддержки <> "EPaidSupportActivationPeriodExpires" Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	НеНапоминатьОПродленииЛицензииДо = си_ОбщегоНазначенияСервер.ХранилищеОбщихНастроекЗагрузить("ПлатнаяПоддержкаТОР", "НеНапоминатьОПродленииЛицензииДо");
	Если НЕ ЗначениеЗаполнено(НеНапоминатьОПродленииЛицензииДо) ИЛИ ТекущаяДата() >= НеНапоминатьОПродленииЛицензииДо Тогда
		ОткрытьФорму("ОбщаяФорма.си_ПродлениеЛицензииНаПоддержку");
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти
