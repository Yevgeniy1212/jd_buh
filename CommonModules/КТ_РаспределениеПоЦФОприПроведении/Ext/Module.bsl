 
Процедура КТ_РаспределениеПоЦФООбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	КТ_ДатаРаспределенияПоЦФО = Константы.КТ_ДатаПереходаНаРаспределениеПоЦФО.Получить();
	
	ПустаяСпецификацияТМЦ_ОС = Источник.ДоговорКонтрагента.СпецификацияКДоговору.Пустая();
	
	//проверка был ли ранее создан документ Распределение и на изменение даты документа источника
	Отбор = Новый Структура("ДокументПоступления", Источник.Ссылка);
	ДокРаспределения = Документы.КТ_РаспределениеТРУпоЦФО.Выбрать(,, Отбор);
	Если ДокРаспределения.Следующий() Тогда
		НайденныйДок = ДокРаспределения.Ссылка.ПолучитьОбъект();
		Если НайденныйДок.Проведен Тогда
			НайденныйДок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
	КонецЕсли;
	
	Если Источник.Дата > КТ_ДатаРаспределенияПоЦФО Тогда
		Если Источник.ДоговорКонтрагента.ВариантДоговора = Перечисления.ВариантДоговора.Расширенный 
			И ПустаяСпецификацияТМЦ_ОС И (Источник.Товары.Количество() + Источник.ОС.Количество() > 0) Тогда
			Сообщить("В договоре не выбрана спецификация!");
		ИначеЕсли Не Источник.ДоговорКонтрагента.ВариантДоговора = Перечисления.ВариантДоговора.Расширенный Тогда
			Сообщить("Выбран обычный договор. Распределение ТРУ по ЦФО не создан!");
		Иначе
			Отбор = Новый Структура("ДокументПоступления", Источник.Ссылка);
			ДокРаспределения = Документы.КТ_РаспределениеТРУпоЦФО.Выбрать(,, Отбор);
			Если ДокРаспределения.Следующий() Тогда
				НайденныйДок = ДокРаспределения.Ссылка.ПолучитьОбъект();
				Если НайденныйДок.Проведен Тогда
					НайденныйДок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				КонецЕсли;
			Иначе
				НовДок = Документы.КТ_РаспределениеТРУпоЦФО.СоздатьДокумент();
				НовДок.Дата = Источник.Дата;
				НовДок.ДокументПоступления = Источник.Ссылка;
				
				НовДок.Записать(РежимЗаписиДокумента.Запись);
				НайденныйДок = НовДок.Ссылка.ПолучитьОбъект();
			КонецЕсли;
			
			ИзменитьДанныеДокумента(НайденныйДок, Источник);
			
			Если Источник.Проведен Тогда
				Попытка
					НайденныйДок.Записать(РежимЗаписиДокумента.Проведение);
					Сообщить("Документ проведен: " + НайденныйДок);
				Исключение
					НайденныйДок.Записать(РежимЗаписиДокумента.Запись);
					Сообщить("Документ записан: " + НайденныйДок);
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры                                                                                       

Функция ИзменитьДанныеДокумента(НайденныйДок, Источник) Экспорт
	
	КТ_ДатаРаспределенияПоЦФО = Константы.КТ_ДатаПереходаНаРаспределениеПоЦФО.Получить();
	
	ПустаяСпецификацияТМЦ_ОС = Источник.ДоговорКонтрагента.СпецификацияКДоговору.Пустая();
	
	Если Источник.Дата > КТ_ДатаРаспределенияПоЦФО Тогда
		Если Источник.ДоговорКонтрагента.ВариантДоговора = Перечисления.ВариантДоговора.Расширенный 
			И ПустаяСпецификацияТМЦ_ОС И (Источник.Товары.Количество() > 0 ИЛИ Источник.ОС.Количество() > 0) Тогда
			Сообщить(НСтр("ru = 'В договоре не выбрана спецификация!'"), 10);
		Иначе

			//Обновим свойства документа
			ЗаполнитьЗначенияСвойств(НайденныйДок, Источник, "Организация,Автор,Дата,Контрагент,ДоговорКонтрагента");
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			 "ВЫБРАТЬ
			 |	Заявлено.ЦФО КАК ЦФО,
			 |	Заявлено.ТРУ КАК ТРУ,
			 |	ВЫБОР
			 |		КОГДА Заявлено.ЗаявленоПоГодовойЗаявке = 0
			 |			ТОГДА Заявлено.ЗаявленоБезКорректировки
			 |		ИНАЧЕ Заявлено.ЗаявленоПоГодовойЗаявке
			 |	КОНЕЦ - ЕСТЬNULL(Поступило.КоличествоПоступилоОборот, 0) КАК ОстатокКоличество,
			 |	РасшифровкаКДоговору.Номенклатура КАК Номенклатура
			 |ИЗ
			 |	(ВЫБРАТЬ
			 |		ВложенныйЗапрос.ЦФО КАК ЦФО,
			 |		ВложенныйЗапрос.ТРУ КАК ТРУ,
			 |		ВложенныйЗапрос.ВерсияБюджета КАК ВерсияБюджета,
			 |		СУММА(ВложенныйЗапрос.ЗаявленоБезКорректировки) КАК ЗаявленоБезКорректировки,
			 |		СУММА(ВложенныйЗапрос.ЗаявленоПоГодовойЗаявке) КАК ЗаявленоПоГодовойЗаявке
			 |	ИЗ
			 |		(ВЫБРАТЬ
			 |			ЗаявленоПоВерсииБюджетаБезКорректировки.ЦФО КАК ЦФО,
			 |			ЗаявленоПоВерсииБюджетаБезКорректировки.ТРУ КАК ТРУ,
			 |			ЗаявленоПоВерсииБюджетаБезКорректировки.ВерсияБюджета КАК ВерсияБюджета,
             |			ЕСТЬNULL(ЗаявленоПоВерсииБюджетаБезКорректировки.КоличествоВДоговореОборот, 0) - ЕСТЬNULL(ЗаявленоПоВерсииБюджетаБезКорректировки.КоличествоОтказОтПоставкиОборот, 0) КАК ЗаявленоБезКорректировки,
             |			0 КАК ЗаявленоПоГодовойЗаявке
			 |		ИЗ
			 |			РегистрНакопления.ОстаткиЗаявленныхТРУ.Обороты КАК ЗаявленоПоВерсииБюджетаБезКорректировки
			 |		ГДЕ
			 |			ЗаявленоПоВерсииБюджетаБезКорректировки.ВерсияБюджета = &ВерсияБюджета
			 |          И ЗаявленоПоВерсииБюджетаБезКорректировки.ОдносторонняяСпецификация = &ОдносторонняяСпецификация
			 |		
			 |		ОБЪЕДИНИТЬ ВСЕ
			 |		
			 |		ВЫБРАТЬ
			 |			ЗаявленоПоГодовойЗаявке.ЦФО,
			 |			ЗаявленоПоГодовойЗаявке.ТРУ,
			 |			ЗаявленоПоГодовойЗаявке.ВерсияБюджета,
			 |			0,
             |		ЕСТЬNULL(ЗаявленоПоГодовойЗаявке.КоличествоВДоговореОборот, 0) - ЕСТЬNULL(ЗаявленоПоГодовойЗаявке.КоличествоОтказОтПоставкиОборот, 0)
             |		ИЗ
			 |			РегистрНакопления.ОстаткиЗаявленныхТРУ.Обороты(, , , ) КАК ЗаявленоПоГодовойЗаявке
			 |		ГДЕ
			 |			ЕСТЬNULL(ЗаявленоПоГодовойЗаявке.КоличествоВДоговореОборот, 0) - ЕСТЬNULL(ЗаявленоПоГодовойЗаявке.КоличествоОтказОтПоставкиОборот, 0) <> 0
			 |			И ЗаявленоПоГодовойЗаявке.ВерсияБюджета = &ВерсияБюджета
			 |		    И ЗаявленоПоГодовойЗаявке.ОдносторонняяСпецификация = &ОдносторонняяСпецификация
			 |) КАК ВложенныйЗапрос
			 |	
			 |	СГРУППИРОВАТЬ ПО
			 |		ВложенныйЗапрос.ЦФО,
			 |		ВложенныйЗапрос.ТРУ,
			 |		ВложенныйЗапрос.ВерсияБюджета) КАК Заявлено
			 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			 |			ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.Ссылка КАК Договор,
			 |			ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.ТРУ КАК ТРУ,
			 |			ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.ЦФО КАК ЦФО,
			 |			ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.Номенклатура КАК Номенклатура
			 |		ИЗ
			 |			Справочник.ДоговорыКонтрагентов.РасшифровкаСпецификацииКДоговору КАК ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору
			 |		ГДЕ
			 |			ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.ТРУ.ВидТРУ = ЗНАЧЕНИЕ(Перечисление.КТ_ВидыТРУ.ТМЦ)
			 |			И ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.Номенклатура = &Номенклатура
			 |			И ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.Ссылка = &Договор
			 |		
			 |		ОБЪЕДИНИТЬ ВСЕ
			 |		
			 |		ВЫБРАТЬ
			 |			РасшифровкаПоОС.Договор,
			 |			РасшифровкаПоОС.ТРУ,
			 |			РасшифровкаПоОС.ЦФО,
			 |			РасшифровкаПоОС.ОсновноеСредство
			 |		ИЗ
			 |			(ВЫБРАТЬ
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговоруОС.Ссылка КАК Договор,
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговоруОС.ТРУ КАК ТРУ,
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговоруОС.ЦФО КАК ЦФО,
			 |				ДоговорыКонтрагентовДетализацияРасшифровкиОС.ОсновноеСредство КАК ОсновноеСредство
			 |			ИЗ
			 |				Справочник.ДоговорыКонтрагентов.РасшифровкаСпецификацииКДоговоруОС КАК ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговоруОС
			 |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов.ДетализацияРасшифровкиОС КАК ДоговорыКонтрагентовДетализацияРасшифровкиОС
			 |					ПО ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговоруОС.Ссылка = ДоговорыКонтрагентовДетализацияРасшифровкиОС.Ссылка
			 |						И ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговоруОС.ТРУ = ДоговорыКонтрагентовДетализацияРасшифровкиОС.ТРУ
			 |			
			 |			ОБЪЕДИНИТЬ ВСЕ
			 |			
			 |			ВЫБРАТЬ
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.Ссылка,
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.ТРУ,
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.ЦФО,
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.Номенклатура
			 |			ИЗ
			 |				Справочник.ДоговорыКонтрагентов.РасшифровкаСпецификацииКДоговору КАК ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору
			 |			ГДЕ
			 |				ДоговорыКонтрагентовРасшифровкаСпецификацииКДоговору.ТРУ.ВидТРУ = ЗНАЧЕНИЕ(Перечисление.КТ_ВидыТРУ.ОС)) КАК РасшифровкаПоОС
			 |		ГДЕ
			 |			РасшифровкаПоОС.Договор = &Договор) КАК РасшифровкаКДоговору
			 |		ПО Заявлено.ЦФО = РасшифровкаКДоговору.ЦФО
			 |			И Заявлено.ТРУ = РасшифровкаКДоговору.ТРУ
			 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиЗаявленныхТРУ.Обороты(, , , ОдносторонняяСпецификация =  &ОдносторонняяСпецификация) КАК Поступило
			 |		ПО 
			 |  Заявлено.ЦФО = Поступило.ЦФО
			 |			И
			 |          Заявлено.ТРУ = Поступило.ТРУ
			 |			И Заявлено.ВерсияБюджета = Поступило.ВерсияБюджета
			 |
             |
			 |УПОРЯДОЧИТЬ ПО
			 |	ОстатокКоличество УБЫВ";
			Запрос.УстановитьПараметр("Договор"    , НайденныйДок.ДоговорКонтрагента);
			Запрос.УстановитьПараметр("ОдносторонняяСпецификация", НайденныйДок.ДоговорКонтрагента.СпецификацияКДоговору);
			
			ЗапросПоПоступлению = Новый Запрос;
			ЗапросПоПоступлению.Текст = "ВЫБРАТЬ
			|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК КоличествоПоступило,
			|	СУММА(ПоступлениеТоваровУслугТовары.Сумма - ВЫБОР
			|			КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС                         
			|				ТОГДА ПоступлениеТоваровУслугТовары.СуммаНДС
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК СуммаПоступило,
			|	ПоступлениеТоваровУслугТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.Ссылка = &Поступление
			|
			|СГРУППИРОВАТЬ ПО
			|	ПоступлениеТоваровУслугТовары.Номенклатура,
			|	ПоступлениеТоваровУслугТовары.Ссылка.ДоговорКонтрагента
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугОС.ОсновноеСредство,
			|	СУММА(1),
			|	СУММА(ПоступлениеТоваровУслугОС.Сумма - ВЫБОР
			|			КОГДА ПоступлениеТоваровУслугОС.Ссылка.СуммаВключаетНДС
			|				ТОГДА ПоступлениеТоваровУслугОС.СуммаНДС
			|			ИНАЧЕ 0
			|		КОНЕЦ),
			|	ПоступлениеТоваровУслугОС.Ссылка.ДоговорКонтрагента
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
			|ГДЕ
			|	ПоступлениеТоваровУслугОС.Ссылка = &Поступление
			|
			|СГРУППИРОВАТЬ ПО
			|	ПоступлениеТоваровУслугОС.ОсновноеСредство,
			|	ПоступлениеТоваровУслугОС.Ссылка.ДоговорКонтрагента";
			ЗапросПоПоступлению.УстановитьПараметр("Поступление", НайденныйДок.ДокументПоступления);
			
			ПолученнаяТЗПоступление = ЗапросПоПоступлению.Выполнить().Выгрузить();
			
			НайденныйДок.Товары.Очистить();
			НайденныйДок.ОС.Очистить();
			Если ПолученнаяТЗПоступление.Количество() > 0 Тогда
				Для Каждого Стр из ПолученнаяТЗПоступление Цикл
					Запрос.УстановитьПараметр("ВерсияБюджета", Источник.ДоговорКонтрагента.СпецификацияКДоговору.ВерсияБюджета);
					Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
					ПолученнаяТЗОстатки = Запрос.Выполнить().Выгрузить();
					
					Распределено = 0; Остаток = 0;
					Если ПолученнаяТЗОстатки.Количество() > 0 Тогда
						Для Каждого СтрИзОстатков из ПолученнаяТЗОстатки Цикл
							Если ТипЗнч(Стр.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда //по товарам
								Если Стр.КоличествоПоступило > ПолученнаяТЗОстатки.Итог("ОстатокКоличество") Тогда 
									
									Источник.Записать(РежимЗаписиДокумента.ОтменаПроведения);
									НайденныйДок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
									
									СообщениеТекст = "Документ - " + Источник + " не может быть ПРОВЕДЕН," + Символы.ПС + 
											              "превышен остаток спецификации: " + ПолученнаяТЗОстатки.Итог("ОстатокКоличество") + " " + Стр.Номенклатура.БазоваяЕдиницаИзмерения + Символы.ПС + 
															 "по заявленному ТРУ, номенклатура - " + Стр.Номенклатура + Символы.ПС + 
											                   "Отмена проведения документа: " + НайденныйДок;
									ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеТекст);
									Прервать;
									
								Иначе
									Если Распределено = 0 И Стр.КоличествоПоступило <= СтрИзОстатков.ОстатокКоличество Тогда
										
										ЗаписьНовСтроки(НайденныйДок.Товары, СтрИзОстатков.ЦФО, Стр.Номенклатура, Стр.КоличествоПоступило, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Стр.СуммаПоступило*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов), 2), Стр.СуммаПоступило));
										Распределено = Распределено + Стр.КоличествоПоступило;
										Прервать;
										
									ИначеЕсли Распределено = 0 И Стр.КоличествоПоступило > СтрИзОстатков.ОстатокКоличество Тогда 
										Цена    = Стр.СуммаПоступило / Стр.КоличествоПоступило;
										
										ЗаписьНовСтроки(НайденныйДок.Товары, СтрИзОстатков.ЦФО, Стр.Номенклатура, СтрИзОстатков.ОстатокКоличество, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Цена * СтрИзОстатков.ОстатокКоличество)*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), (Цена * СтрИзОстатков.ОстатокКоличество)));
										Распределено = Распределено + СтрИзОстатков.ОстатокКоличество;
										Остаток = Стр.КоличествоПоступило - СтрИзОстатков.ОстатокКоличество;
										Продолжить;
										
									ИначеЕсли Распределено > 0 И Стр.КоличествоПоступило > Распределено И Остаток > 0 И Остаток <= СтрИзОстатков.ОстатокКоличество Тогда 
										Цена    = Стр.СуммаПоступило / Стр.КоличествоПоступило;
										
										ЗаписьНовСтроки(НайденныйДок.Товары, СтрИзОстатков.ЦФО, Стр.Номенклатура, Остаток, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Цена * Остаток)*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), (Цена * Остаток)));
										Распределено = Распределено + Остаток;
										Остаток = Остаток - Остаток;
										Прервать;
										
									ИначеЕсли Распределено > 0 И Стр.КоличествоПоступило > Распределено И Остаток > 0 И Остаток > СтрИзОстатков.ОстатокКоличество Тогда 
										Цена    = Стр.СуммаПоступило / Стр.КоличествоПоступило;
										
										ЗаписьНовСтроки(НайденныйДок.Товары, СтрИзОстатков.ЦФО, Стр.Номенклатура, СтрИзОстатков.ОстатокКоличество, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Цена * СтрИзОстатков.ОстатокКоличество)*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), (Цена * СтрИзОстатков.ОстатокКоличество)));
										Распределено = Распределено + СтрИзОстатков.ОстатокКоличество;
										Остаток = Остаток - СтрИзОстатков.ОстатокКоличество;
										Продолжить;
										
									КонецЕсли;
								КонецЕсли;
							Иначе                //по ОС
								Если Стр.КоличествоПоступило > ПолученнаяТЗОстатки.Итог("ОстатокКоличество") Тогда 
									Источник.Записать(РежимЗаписиДокумента.ОтменаПроведения);
									Сообщить("Отмена проведения документа - " + Источник + Символы.ПС + ", превышен остаток спецификации по заявленному ТРУ, по номенклатуре: " + Стр.Номенклатура);									
									
									НайденныйДок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
									Сообщить("Отмена проведения документа: " + НайденныйДок);

									Прервать;
								Иначе
									Если Распределено = 0 И Стр.КоличествоПоступило <= СтрИзОстатков.ОстатокКоличество Тогда
										
										ЗаписьНовСтроки(НайденныйДок.ОС, СтрИзОстатков.ЦФО, Стр.Номенклатура, Стр.КоличествоПоступило, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр(Стр.СуммаПоступило*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), Стр.СуммаПоступило));
										Распределено = Распределено + Стр.КоличествоПоступило;
										Прервать;
										
									ИначеЕсли Распределено = 0 И Стр.КоличествоПоступило > СтрИзОстатков.ОстатокКоличество Тогда 
										Цена    = Стр.СуммаПоступило / Стр.КоличествоПоступило;
										
										ЗаписьНовСтроки(НайденныйДок.ОС, СтрИзОстатков.ЦФО, Стр.Номенклатура, СтрИзОстатков.ОстатокКоличество, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Цена * СтрИзОстатков.ОстатокКоличество)*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), (Цена * СтрИзОстатков.ОстатокКоличество)));
										Распределено = Распределено + СтрИзОстатков.ОстатокКоличество;
										Остаток = Стр.КоличествоПоступило - СтрИзОстатков.ОстатокКоличество;
										Продолжить;
										
									ИначеЕсли Распределено > 0 И Стр.КоличествоПоступило > Распределено И Остаток > 0 И Остаток <= СтрИзОстатков.ОстатокКоличество Тогда 
										Цена    = Стр.СуммаПоступило / Стр.КоличествоПоступило;
										
										ЗаписьНовСтроки(НайденныйДок.ОС, СтрИзОстатков.ЦФО, Стр.Номенклатура, Остаток, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Цена * Остаток)*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), (Цена * Остаток)));
										Распределено = Распределено + Остаток;
										Остаток = Остаток - Остаток;
										Прервать;
										
									ИначеЕсли Распределено > 0 И Стр.КоличествоПоступило > Распределено И Остаток > 0 И Остаток > СтрИзОстатков.ОстатокКоличество Тогда 
										Цена    = Стр.СуммаПоступило / Стр.КоличествоПоступило;
										
										ЗаписьНовСтроки(НайденныйДок.ОС, СтрИзОстатков.ЦФО, Стр.Номенклатура, СтрИзОстатков.ОстатокКоличество, ?(Источник.ВалютаДокумента<>Константы.ВалютаРегламентированногоУчета.Получить(), Окр((Цена * СтрИзОстатков.ОстатокКоличество)*Источник.КурсВзаиморасчетов/Источник.КратностьВзаиморасчетов, 2), (Цена * СтрИзОстатков.ОстатокКоличество)));
										Распределено = Распределено + СтрИзОстатков.ОстатокКоличество;
										Остаток = Остаток - СтрИзОстатков.ОстатокКоличество;
										Продолжить;
										
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			НайденныйДок.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ЗаписьНовСтроки(Товары, ЦФО, Номенклатура, КоличествоПоступило, СуммаПоступило)
	
	НовСтрТовары = Товары.Добавить(); 
	НовСтрТовары.ЦФО = ЦФО;
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
		НовСтрТовары.Номенклатура = Номенклатура;
	Иначе
		НовСтрТовары.ОсновноеСредство = Номенклатура;
	КонецЕсли;
	НовСтрТовары.Количество   = КоличествоПоступило; 
	НовСтрТовары.Сумма        = СуммаПоступило;  

КонецФункции

Процедура КТ_РаспределениеПоЦФОПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
		
//=================================Контротек 14.04.2021 Артем=================================
	Если ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Отбор = Новый Структура("ДокументПоступления", Источник.ДокументОснование);
		ДокРаспределения = Документы.КТ_РаспределениеТРУпоЦФО.Выбрать(,, Отбор);
		Если ДокРаспределения.Следующий() Тогда
			НайденныйДок = ДокРаспределения.Ссылка.ПолучитьОбъект();
			НайденныйДок.Комментарий = "Помечен на удаление в связи с проведеним сторно";
			НайденныйДок.Записать(РежимЗаписиДокумента.Запись);
			НайденныйДок.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	Иначе
//============================================================================================
		
		Отбор = Новый Структура("ДокументПоступления", Источник.Ссылка);
		ДокРаспределения = Документы.КТ_РаспределениеТРУпоЦФО.Выбрать(,, Отбор);
		Если ДокРаспределения.Следующий() Тогда
			НайденныйДок = ДокРаспределения.Ссылка.ПолучитьОбъект();
			Если Источник.ПометкаУдаления Тогда
				НайденныйДок.УстановитьПометкуУдаления(Истина);
				Возврат;
			ИначеЕсли НайденныйДок.ПометкаУдаления Тогда
				НайденныйДок.УстановитьПометкуУдаления(Ложь);
				Возврат;
			КонецЕсли;                                                                             
			
			Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда 
				Если НайденныйДок.Проведен Тогда
					НайденныйДок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					Сообщить("Отмена проведения документа: " + НайденныйДок);
				КонецЕсли;
			КонецЕсли;
			
			Если (Источник.Товары.Количество() + Источник.ОС.Количество() = 0) Тогда
				Если НайденныйДок.Проведен Тогда
					НайденныйДок.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					Сообщить("Отмена проведения документа, нет Товаров или ОС: " + НайденныйДок);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура КТ_СторноПриЗаписи(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Отбор = Новый Структура("ДокументПоступления", Источник.ДокументОснование.Ссылка);
		ДокРаспределения = Документы.КТ_РаспределениеТРУпоЦФО.Выбрать(,, Отбор);
		Если ДокРаспределения.Следующий() Тогда
			НайденныйДок = ДокРаспределения.Ссылка.ПолучитьОбъект();
			Отбор2 = Новый Структура("ДокументОснование", ДокРаспределения.Ссылка);
			ДокСторно = Документы.Сторнирование.Выбрать(,, Отбор2);
			Если ДокСторно.Следующий() Тогда
				НайденныйДокСторно = ДокСторно.Ссылка.ПолучитьОбъект();
				Если Источник.ПометкаУдаления Тогда
					НайденныйДокСторно.УстановитьПометкуУдаления(Истина);
					Сообщить("Отмена записи документа: " + НайденныйДокСторно);
					Возврат;
				ИначеЕсли (Не Источник.ПометкаУдаления) И Источник.ДокументОснование.Проведен Тогда
					НайденныйДокСторно.УстановитьПометкуУдаления(Ложь);
					Сообщить("Запись документа: " + НайденныйДокСторно);
					Возврат;
				ИначеЕсли НайденныйДок.Проведен Тогда
					НайденныйДокСторно.УстановитьПометкуУдаления(Ложь);
					//ДокСторно.Ссылка.Записать(РежимЗаписиДокумента.Запись);
					//Документы.Сторнирование.ЗаполнитьПоДокументуОснования(ДокСторно.Ссылка, ДокРаспределения.Ссылка);
					//НайденныйДокСторно.Записать(РежимЗаписиДокумента.Запись);
					Сообщить("Запись документа: " + НайденныйДокСторно);
					Возврат;
				ИначеЕсли НайденныйДок.ПометкаУдаления Тогда
					НайденныйДокСторно.УстановитьПометкуУдаления(Истина);
					Сообщить("Отмена записи документа: " + НайденныйДокСторно);
					Возврат;
				КонецЕсли; 
			Иначе
				Если (НайденныйДок.Проведен И Источник.ДокументОснование.Проведен) И Не Источник.ПометкаУдаления Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
					|	КТ_РаспределениеТРУпоЦФО.Ссылка КАК Ссылка
					|ИЗ
					|	Документ.КТ_РаспределениеТРУпоЦФО КАК КТ_РаспределениеТРУпоЦФО
					|ГДЕ
					|	КТ_РаспределениеТРУпоЦФО.ДокументПоступления = &ДокументПоступления
					|	И КТ_РаспределениеТРУпоЦФО.Проведен = ИСТИНА";
					Запрос.УстановитьПараметр("ДокументПоступления", Источник.ДокументОснование.Ссылка);
					ДокиРаспр = Запрос.Выполнить().Выбрать();
					Пока ДокиРаспр.Следующий() Цикл
						ДокРаспр = ДокиРаспр.Ссылка;
						НовСторно = Документы.Сторнирование.СоздатьДокумент();
						Документы.Сторнирование.ЗаполнитьПоДокументуОснования(НовСторно, ДокРаспр);
						НовСторно.Записать(РежимЗаписиДокумента.Запись);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура КТ_СторноПоступленияПриЗаписи(Источник, Отказ) Экспорт
	
	Отбор2 = Новый Структура("ДокументОснование", Источник.Ссылка);
	ДокСторно = Документы.Сторнирование.Выбрать(,, Отбор2);
	Если ДокСторно.Следующий() Тогда
		НайденныйДокСторно = ДокСторно.Ссылка.ПолучитьОбъект();
		Если Источник.ПометкаУдаления ИЛИ Не Источник.Проведен Тогда
			НайденныйДокСторно.УстановитьПометкуУдаления(Истина);
			Сообщить("Отмена записи документа: " + НайденныйДокСторно);
			Возврат;
		ИначеЕсли Источник.Проведен Тогда
			НайденныйДокСторно.УстановитьПометкуУдаления(Ложь);
			//Документы.Сторнирование.ЗаполнитьПоДокументуОснования(ДокСторно.Ссылка, Источник.Ссылка);
			//ДокСторно.Ссылка.Записать(РежимЗаписиДокумента.Запись);
			Сообщить("Запись документа: " + НайденныйДокСторно);
			Возврат;
		ИначеЕсли НайденныйДокСторно.ПометкаУдаления Тогда
			НайденныйДокСторно.УстановитьПометкуУдаления(Истина);
			Сообщить("Отмена записи документа: " + НайденныйДокСторно);
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры
