
#Область ПрограммныйИнтерфейс

Процедура ОсновныеДоговорыМестоРаботыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	ЭТДКлиентПереопределяемый.ОсновныеДоговорыМестоРаботыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

Процедура ДополнительныеСоглашенияМестоРаботыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ЭтаФорма) Экспорт
	
	ЭТДКлиентПереопределяемый.ДополнительныеСоглашенияМестоРаботыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ЭтаФорма);
	
КонецПроцедуры

Процедура ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, РезультатРаботыЗадания) Экспорт
	
	ЭТДКлиентПереопределяемый.ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, РезультатРаботыЗадания);
	
КонецПроцедуры

Функция ПолучитьСписокВыбораДокументОснованиеЭТД() Экспорт
	
	Возврат ЭТДКлиентПереопределяемый.ПолучитьСписокВыбораДокументОснованиеЭТД();
	
КонецФункции

Процедура ОткрытиеФормыВыбораВладельцаПрофиля(ВыбранныйЭлемент, Организация, Форма) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ЭТДКлиентПереопределяемый.ОткрытиеФормыВыбораВладельцаПрофиля(ВыбранныйЭлемент, Организация, Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытиеФормыВыбораСотрудника(Организация, Элемент) Экспорт
	
	ЭТДКлиентПереопределяемый.ОткрытиеФормыВыбораСотрудника(Организация, Элемент);
	
КонецПроцедуры

Процедура ОткрытиеФормыВыбораДокументаОснования(ВыбранныйЭлемент, Организация, Сотрудник, Форма) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ЭТДКлиентПереопределяемый.ОткрытиеФормыВыбораДокументаОснования(ВыбранныйЭлемент, Организация, Сотрудник, Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытиеФормыВыбораДолжностиПоШтатномуРасписанию(Организация, Элемент) Экспорт
	
	ЭТДКлиентПереопределяемый.ОткрытиеФормыВыбораДолжностиПоШтатномуРасписанию(Организация, Элемент);
	
КонецПроцедуры

Процедура ОсновныеДоговорыДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка, Форма) Экспорт
	
	ЭТДКлиентПереопределяемый.ОсновныеДоговорыДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка, Форма);
	
КонецПроцедуры

Процедура ДополнительныеСоглашенияДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка, Форма) Экспорт
	
	ЭТДКлиентПереопределяемый.ДополнительныеСоглашенияДокументОснованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка, Форма);
	
КонецПроцедуры

#Область Криптобиблиотека

Процедура ОткрытьФормуВводаДанныхЭЦП(ОбработчикОповещения = Неопределено, ПараметрыФормы = Неопределено) Экспорт
	
	ИмяОбработки = "Обработка.ОбменЭТД.Форма.ВводДанныхЭЦП";
	
	#Если ТонкийКлиент ИЛИ ВебКлиент ИЛИ ТолстыйКлиентУправляемоеПриложение Тогда
		
		ОткрытьФорму(ИмяОбработки, ПараметрыФормы,,,,,ОбработчикОповещения);
		
	#КонецЕсли
	
КонецПроцедуры

Функция ИнформацияПоФайлу(Знач ПолноеИмяФайла) Экспорт
	
	Файл = Новый Файл(ПолноеИмяФайла);
	
	Структура = Новый Структура;
	Структура.Вставить("Имя", Файл.Имя);
	Структура.Вставить("ИмяБезРасширения", Файл.ИмяБезРасширения);
	Структура.Вставить("ПолноеИмя", Файл.ПолноеИмя);
	Структура.Вставить("Путь", Файл.Путь);
	Структура.Вставить("Расширение", Файл.Расширение);
	
	Возврат Структура;
	
КонецФункции

Процедура ПоказатьПредупреждениеМестоУстановкиБиблиотеки(МестоУстановкиБиблиотеки) Экспорт
	
	Если МестоУстановкиБиблиотеки <> ПредопределенноеЗначение("Перечисление.МестаВыполненияКриптографическихОпераций.НаСервере")
		ИЛИ НЕ ЭТДКлиентПереопределяемый.ПоказыватьОповещенияСервернаяКриптография() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОповещения = НСтр("ru = 'Место выполнения криптографических операций установлено в режим ""На сервере 1С:Предприятие"", поддержка которого будет прекращена в последующих релизах.
	|Рекомендуется перейти на вариант ""На компьютерах пользователей"".'");
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстОповещения;
	Сообщение.Сообщить();
	
КонецПроцедуры

Функция ТекстВопросаМестоУстановкиБиблиотекиПриИзменении() Экспорт
	Возврат НСтр("ru='При использовании варианта ""На компьютерах пользователей"" возможно потребуется настройка клиентской среды.
			|После сохранения настроек, включение варианта ""На сервере 1С:Предприятие"" будет недоступно. Продолжить?'");
КонецФункции

Процедура ОбработкаНавигационнойСсылкиМестоУстановкиБиблиотеки(НавигационнаяСсылка, СтандартнаяОбработка, Владелец) Экспорт
	
	Если НавигационнаяСсылка = "ОткрытьНастройкиЭТД" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Обработка.ПанельАдминистрированияЭТД.Форма.МастерНастройкиЭТД", , Владелец);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Работа с данными подсистемы, сохраняемыми на время текущего сеанса

Процедура СохранитьСеансовыеДанные(Знач Имя, Знач Параметр, Знач Значение) Экспорт
	
	ИнициализироватьСеансовыеДанные();
	СеансовыеДанныеЭТД[Имя].Вставить(Параметр, Значение);
	
КонецПроцедуры

Процедура УдалитьСеансовыеДанные(Знач Имя, Знач Параметр) Экспорт
	
	ИнициализироватьСеансовыеДанные();
	СеансовыеДанныеЭТД[Имя].Удалить(Параметр);
	
КонецПроцедуры

Функция ПолучитьСеансовыеДанные(Знач Имя, Знач Параметр, Знач ПустоеЗначение = Неопределено) Экспорт
	
	ИнициализироватьСеансовыеДанные();
	
	Значение = СеансовыеДанныеЭТД[Имя][Параметр];
	
	Если Значение = Неопределено Тогда
		Значение = ПустоеЗначение;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция ИмяСеансовыхДанныхПарольКлючевогоКонтейнераЭЦП() Экспорт 
	Возврат "ПарольКлючевогоКонтейнераЭЦПДляЭТД";
КонецФункции

Функция ИмяСеансовыхДанныхКлючBase64() Экспорт
	Возврат "КлючBase64ДляЭТД"; // Ключ ЭЦП в формате Base64
КонецФункции

Функция ИмяСеансовыхДанныхАдресКлюча() Экспорт
	Возврат "АдресКлючаДляЭТД"; // Путь к ключу ЭЦП
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Криптобиблиотека

///////////////////////////////////////////////////////////////////////////////
// Работа с данными подсистемы, сохраняемыми на время текущего сеанса

Функция ИнициализироватьСеансовыеДанные()
	
	Если СеансовыеДанныеЭТД = Неопределено Тогда
		СеансовыеДанныеЭТД = Новый Структура;
		СеансовыеДанныеЭТД.Вставить(ИмяСеансовыхДанныхПарольКлючевогоКонтейнераЭЦП(), Новый Соответствие);
		СеансовыеДанныеЭТД.Вставить(ИмяСеансовыхДанныхКлючBase64(), Новый Соответствие);
		СеансовыеДанныеЭТД.Вставить(ИмяСеансовыхДанныхАдресКлюча(), Новый Соответствие);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти