
#Область ПрограммныйИнтерфейс

// Процедура - Форма объекта при создании на сервере
//
// Параметры:
//  Форма	 - 	УправляемаяФорма 
//
Процедура ФормаОбъекта_ПриСозданииНаСервере(Форма) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Форма.Параметры.Ключ.Пустая() Тогда
		Если Найти(Форма.ИмяФормы,"Справочник")=0 Тогда
			РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(?(Форма.Объект.Ссылка.Метаданные().Реквизиты.Найти("ВидОперации")<>Неопределено,Строка(Форма.Объект.ВидОперации),""), Форма.Объект.Ссылка, Форма);
		КонецЕсли;
		Форма.ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	Если Найти(Форма.ИмяФормы,"Справочник")=0 Тогда
		ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ЗаблокироватьРеквизиты(Форма, Форма.Объект.Проведен);
	КонецЕсли;

	СписокОбработчиковФормыДокумента = "ПриСозданииНаСервере,ПриЧтенииНаСервере,ПриОткрытии,ПослеЗаписиНаСервере,ПослеЗаписи,ОбработкаОповещения";
	ОбработчикиСобытий = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СписокОбработчиковФормыДокумента,",");
	Для Каждого Событие Из ОбработчикиСобытий Цикл
		Если Форма.ПолучитьДействие(Событие)="" Тогда
			Форма.УстановитьДействие(Событие,Событие);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

// Процедура - Форма объекта при чтении на сервере
//
// Параметры:
//  Форма			 - 	УправляемаяФорма 
//  ТекущийОбъект	 - 	читаемый объект 
//
Процедура ФормаОбъекта_ПриЧтенииНаСервере(Форма,ТекущийОбъект) Экспорт

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, Форма.Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// РедактированиеДокументовПользователей
	ПраваДоступаКОбъектам.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
	// Конец РедактированиеДокументовПользователей
	
	Форма.ПодготовитьФормуНаСервере();
	
	Если Найти(Форма.ИмяФормы,"Справочник")=0 Тогда
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(?(Форма.Объект.Ссылка.Метаданные().Реквизиты.Найти("ВидОперации")<>Неопределено,Строка(Форма.Объект.ВидОперации),""), Форма.Объект.Ссылка, Форма);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Форма объекта после записи на сервере
//
// Параметры:
//  Форма			 - 	УправляемаяФорма 
//  ТекущийОбъект	 - 	записанный объект 
//  ПараметрыЗаписи	 - 	Структура 
//
Процедура ФормаОбъекта_ПослеЗаписиНаСервере(Форма,ТекущийОбъект, ПараметрыЗаписи) Экспорт

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	
	Если Найти(Форма.ИмяФормы,"Справочник")=0 Тогда
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(?(ТекущийОбъект.Метаданные().Реквизиты.Найти("ВидОперации")<>Неопределено,Строка(ТекущийОбъект.ВидОперации),""), ТекущийОбъект.Ссылка, Форма);
	
		ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ЗаблокироватьРеквизиты(Форма,Форма.Объект.Проведен);
	КонецЕсли;

	
КонецПроцедуры

// Процедура - Форма списка регистра при создании на сервере
//
// Параметры:
//  Форма				 - 	УправляемаяФорма 
//  Отказ				 - 	Булево 
//  СтандартнаяОбработка - 	Булево 
//
Процедура ФормаСпискаРегистра_ПриСозданииНаСервере(Форма,Отказ, СтандартнаяОбработка) Экспорт
	
	ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(Форма); 
	
	
КонецПроцедуры

// Процедура - Форма списка при создании на сервере
//
// Параметры:
//  Форма				 - 	УправляемаяФорма 
//  Отказ				 - 	Булево 
//  СтандартнаяОбработка - 	Булево 
//
Процедура ФормаСписка_ПриСозданииНаСервере(Форма,Отказ, СтандартнаяОбработка) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияБК.ФормаСпискаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
	Если Найти(Форма.ИмяФормы,"Справочник")=0 И Форма.Элементы.Найти("Список")<>Неопределено Тогда
		Если Найти(Форма.ИмяФормы, "Документ.") <> 0 Тогда
			ИмяДокумента = Сред(Форма.ИмяФормы, СтрДлина("Документ.") + 1);
			ИмяДокумента = Лев(ИмяДокумента, Найти(ИмяДокумента,".") - 1);
			МетаданныеДокумента = Метаданные.Документы.Найти(ИмяДокумента);
			Если МетаданныеДокумента=Неопределено ИЛИ МетаданныеДокумента.Реквизиты.Найти("Организация")=Неопределено Тогда
				Возврат;	
			КонецЕсли;
		КонецЕсли;
		ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(Форма);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Форма списка список перед загрузкой пользовательских настроек на сервере
//
// Параметры:
//  Форма		 - 	УправляемаяФорма  
//  Элемент		 - 	элемент формы 
//  Настройки   - ПользовательскиеНастройкиКомпоновкиДанных - восстанавливаемые настройки списка
//
Процедура ФормаСписка_СписокПередЗагрузкойПользовательскихНастроекНаСервере(Форма,Элемент, Настройки)  Экспорт
	
	ОбщегоНазначенияБККлиентСервер.ВосстановитьОтборСписка(Форма.Список, Настройки, "Организация");
	
КонецПроцедуры

// Обработчик команды формы, требующей контекстный вызов сервера.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма, из которой выполняется команда.
//   ПараметрыВызова - Структура - Параметры вызова.
//   Источник - ТаблицаФормы, ДанныеФормыСтруктура - Объект или список формы с полем "Ссылка".
//   Результат - Структура - Результат выполнения команды.
//
Процедура ВыполнитьКоманду(Знач Форма, Знач ПараметрыВызова, Знач Источник, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(Форма, ПараметрыВызова, Источник, Результат);
	
КонецПроцедуры

#КонецОбласти
