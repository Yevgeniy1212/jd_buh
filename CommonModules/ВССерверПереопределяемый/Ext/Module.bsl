////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ОбщиеФункцииПоЗапросам

//Функция возвращает текст запроса для получени контактной информации Организаций
//
Функция ПолучитьТекстЗапросаКонтактнаяИнформация()
	ТекстЗапросаКонтактнаяИнформация = 
	"
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА Организации.Ссылка ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА Организации.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|						ТОГДА Организации.Ссылка.ИндивидуальныйПредприниматель
	|					ИНАЧЕ Организации.Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ Организации.Ссылка
	|	КОНЕЦ КАК ОбъектДляПоискаАдреса,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(200))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ Организации.Наименование
	|	КОНЕЦ КАК Наименование,
	|	Организации.ИдентификационныйНомер,
	|	2 КАК Приоритет
	|ПОМЕСТИТЬ ОбъектыДляПоискаАдресов
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				вт_ДанныеДокумента.Организация
	|			ИЗ
	|				вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				вт_ДанныеДокумента.ОрганизацияПолучатель
	|			ИЗ
	|				вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|			ГДЕ
	|				вт_ДанныеДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяССылка))
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка,
	|	ПодразделенияОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ПодразделенияОрганизаций.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ПодразделенияОрганизаций.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ПодразделенияОрганизаций.Наименование
	|	КОНЕЦ,
	|	ПодразделенияОрганизаций.ИдентификационныйНомер,
	|	1
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				вт_ДанныеДокумента.СтруктурноеПодразделение
	|			ИЗ
	|				вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				вт_ДанныеДокумента.СтруктурноеПодразделениеПолучатель
	|			ИЗ
	|				вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|			ГДЕ
	|				вт_ДанныеДокумента.СтруктурноеПодразделениеПолучатель <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяССылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбъектыДляПоискаАдресов.Объект КАК Организация,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(400)) КАК АдресОрганизации,
	|	ОбъектыДляПоискаАдресов.Наименование,
	|	ОбъектыДляПоискаАдресов.ИдентификационныйНомер,
	|	ОбъектыДляПоискаАдресов.Приоритет
	|ПОМЕСТИТЬ вт_КонтактнаяИнформация
	|ИЗ
	|	ОбъектыДляПоискаАдресов КАК ОбъектыДляПоискаАдресов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И ОбъектыДляПоискаАдресов.ОбъектДляПоискаАдреса = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Вид В (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента), ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации), ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица)))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация"; 
	
	Возврат ТекстЗапросаКонтактнаяИнформация;
	
КонецФункции	

//Функция возвращает текст запроса для получени цены для подстановки в ЭДВС с определенными типами форм ВС
//
Функция ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения)
	
	Если ПараметрыЗаполнения.Свойство("СпособЗаполненияЦены") Тогда
		СпособЗаполненияЦены 	= ПараметрыЗаполнения.СпособЗаполненияЦены;
	Иначе
		СпособЗаполненияЦены 	= Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("СебестоимостьПоСкладам") Тогда
		СебестоимостьПоСкладам 	= ПараметрыЗаполнения.СебестоимостьПоСкладам;
	Иначе
		СебестоимостьПоСкладам 	= Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ВестиСкладскойУчетБУ") Тогда
		ВестиСкладскойУчетБУ 	= ПараметрыЗаполнения.ВестиСкладскойУчетБУ;
	Иначе
		ВестиСкладскойУчетБУ 	= Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ПоДвижениямДокумента") Тогда
		ПоДвижениямДокумента 	= ПараметрыЗаполнения.ПоДвижениямДокумента;
	Иначе
		ПоДвижениямДокумента 	= Ложь;
	КонецЕсли;    	
	
	Если СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ФиксированнымЗначением ИЛИ Не ПараметрыЗаполнения.ЗаполнятьЦены Тогда
		ТекстЗапросаЦена = 
		"
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	вт_ДанныеДокумента.Товар КАК Номенклатура,
		|	&ЗначениеЦены КАК ЦенаНоменклатуры
		|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
		|ИЗ
		|	вт_ДанныеДокумента КАК вт_ДанныеДокумента
		|ГДЕ
		|	вт_ДанныеДокумента.ТипФормы В(&ТипыФормЦены)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура";
	ИначеЕсли  СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ПоТипуЦены Тогда
		ТекстЗапросаЦена =
		"
		|;
		|ВЫБРАТЬ
		|	ЦеныНоменклатуры.Организация КАК Организация,
		|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатуры.Цена КАК ЦенаНоменклатуры
		|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ДатаСреза,
		|			(Организация, Номенклатура) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						вт_ДанныеДокумента.Организация,
		|						вт_ДанныеДокумента.Товар
		|					ИЗ
		|						вт_ДанныеДокумента КАК вт_ДанныеДокумента)
		|				И ТипЦен = &ТипЦены) КАК ЦеныНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	Номенклатура"
	ИначеЕсли  СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости Тогда
		Если ПоДвижениямДокумента Тогда
			Если СебестоимостьПоСкладам Тогда
				ТекстЗапросаЦена =
				"
				|;
				|//////////////////////////////////
				|
				|ВЫБРАТЬ
				|	ТиповойОбороты.Организация,
				|	ТиповойОбороты.СтруктурноеПодразделение,
				|	ТиповойОбороты.Субконто1 КАК Номенклатура,
				|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
				|	СУММА(ТиповойОбороты.КоличествоОборот) КАК Количество,
				|	СУММА(ТиповойОбороты.СуммаОборот) КАК Сумма,
				|	ТиповойОбороты.Регистратор
				|ПОМЕСТИТЬ вт_ЦеныНоменклатурыГруппировка
				|ИЗ
				|	РегистрБухгалтерии.Типовой.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В ИЕРАРХИИ (&МассивСчетовБУ), &ВидыСубконто, , , ) КАК ТиповойОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
				|		ПО ТиповойОбороты.Субконто2 = СоответствиеСкладовИВиртуальныхСкладов.Склад
				|			И (ВЫБОР КОГДА ТиповойОбороты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
				|			ТОГДА ТиповойОбороты.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
				|			ИНАЧЕ ТиповойОбороты.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
				|ГДЕ
				|	ТиповойОбороты.Регистратор В
				|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|				вт_ДанныеДокументаЦена.ДокументОснование
				|			ИЗ
				|				вт_ДанныеДокумента КАК вт_ДанныеДокументаЦена)
				|
				|СГРУППИРОВАТЬ ПО
				|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
				|	ТиповойОбороты.Субконто1,
				|	ТиповойОбороты.СтруктурноеПодразделение,
				|	ТиповойОбороты.Организация,
				|	ТиповойОбороты.Регистратор";
				
			Иначе
				ТекстЗапросаЦена =
				"
				|;
				|//////////////////////////////////
				|
				|ВЫБРАТЬ
				|	ТиповойОбороты.Организация,
				|	ТиповойОбороты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
				|	ТиповойОбороты.Субконто1 КАК Номенклатура,
				|	СУММА(ТиповойОбороты.КоличествоОборот) КАК Количество,
				|	СУММА(ТиповойОбороты.СуммаОборот) КАК Сумма,
				|	ТиповойОбороты.Регистратор
				|ПОМЕСТИТЬ вт_ЦеныНоменклатурыГруппировка
				|ИЗ
				|	РегистрБухгалтерии.Типовой.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В ИЕРАРХИИ (&МассивСчетовБУ), &ВидыСубконтоНоменклатура, , , ) КАК ТиповойОбороты
				|ГДЕ
				|	ТиповойОбороты.Регистратор В (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|						вт_ДанныеДокументаЦена.ДокументОснование
				|					ИЗ
				|						вт_ДанныеДокумента КАК вт_ДанныеДокументаЦена)
				|
				|СГРУППИРОВАТЬ ПО
				|	ТиповойОбороты.Субконто1,
				|	ТиповойОбороты.СтруктурноеПодразделение,
				|	ТиповойОбороты.Организация,
				|	ТиповойОбороты.Регистратор";
			КонецЕсли;	
		ИначеЕсли СебестоимостьПоСкладам Тогда
			ТекстЗапросаЦена = 
			"
			|;
			|
			|ВЫБРАТЬ
			|	ТиповойОстатки.Организация КАК Организация,
			|	ТиповойОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
			|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад, 
			|	ТиповойОстатки.Субконто1 КАК Номенклатура,
			|	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,
			|	СУММА(ТиповойОстатки.КоличествоОстаток) КАК Количество
			|ПОМЕСТИТЬ вт_ЦеныНоменклатурыГруппировка
			|ИЗ
			|	РегистрБухгалтерии.Типовой.Остатки(
			|			&ДатаОстатка,
			|			Счет В ИЕРАРХИИ (&МассивСчетовБУ),
			|			&ВидыСубконто,
			|			(Организация, СтруктурноеПодразделение, Субконто2, Субконто1) В
			|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|						вт_ДанныеДокументаОстатки.Организация,
			|						вт_ДанныеДокументаОстатки.СтруктурноеПодразделение,
			|						вт_ДанныеДокументаОстатки.СкладОтправитель,
			|						вт_ДанныеДокументаОстатки.Товар
			|					ИЗ
			|						вт_ДанныеДокумента КАК вт_ДанныеДокументаОстатки)) КАК ТиповойОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
			|		ПО ТиповойОстатки.Субконто2 = СоответствиеСкладовИВиртуальныхСкладов.Склад
			|			И (ВЫБОР КОГДА ТиповойОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|			ТОГДА ТиповойОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
			|			ИНАЧЕ ТиповойОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
			|ГДЕ
			|	ТиповойОстатки.КоличествоОстаток <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ТиповойОстатки.Организация,
			|	ТиповойОстатки.СтруктурноеПодразделение,
			|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
			|	ТиповойОстатки.Субконто1
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТиповойОстатки.Организация,
			|	ТиповойОстатки.СтруктурноеПодразделение,
			|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
			|	ТиповойОстатки.Субконто1,
			|	Сумма(ТиповойОстатки.СуммаОстаток),
			|	Сумма(ТиповойОстатки.КоличествоОстаток)
			|ИЗ
			|	РегистрБухгалтерии.Типовой.Остатки(
			|			&ДатаОстатка,
			|			Счет В ИЕРАРХИИ (&МассивСчетовПрочие),
			|			&ВидыСубконтоНоменклатура,
			|			(Организация,СтруктурноеПодразделение, Субконто1) В
			|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|						вт_ДанныеДокумента.Организация,
			|						вт_ДанныеДокумента.СтруктурноеПодразделение,
			|						вт_ДанныеДокумента.Товар
			|					ИЗ
			|						вт_ДанныеДокумента КАК вт_ДанныеДокумента)) КАК ТиповойОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
			|		ПО &СкладПоУмолчанию = СоответствиеСкладовИВиртуальныхСкладов.Склад
			|			И ТиповойОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
			|ГДЕ
			|	ТиповойОстатки.КоличествоОстаток <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ТиповойОстатки.Организация,
			|	ТиповойОстатки.СтруктурноеПодразделение,
			|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
			|	ТиповойОстатки.Субконто1";
		Иначе
			ТекстЗапросаЦена =
			"
			|;
			|
			|ВЫБРАТЬ
			|	ТиповойОстатки.Организация КАК Организация,
			|	ТиповойОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
			|	ТиповойОстатки.Субконто1 КАК Номенклатура,
			|	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,
			|	СУММА(ТиповойОстатки.КоличествоОстаток) КАК Количество
			|ПОМЕСТИТЬ вт_ЦеныНоменклатурыГруппировка
			|ИЗ
			|	РегистрБухгалтерии.Типовой.Остатки(
			|			&ДатаОстатка,
			|			Счет В ИЕРАРХИИ (&МассивСчетовБУ),
			|			&ВидыСубконто,
			|			(Организация, СтруктурноеПодразделение, Субконто1) В
			|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|						вт_ДанныеДокументаОстатки.Организация,
			|						вт_ДанныеДокументаОстатки.СтруктурноеПодразделение,
			|						вт_ДанныеДокументаОстатки.Товар
			|					ИЗ
			|						вт_ДанныеДокумента КАК вт_ДанныеДокументаОстатки)) КАК ТиповойОстатки
			|ГДЕ
			|	ТиповойОстатки.КоличествоОстаток <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ТиповойОстатки.Организация,
			|	ТиповойОстатки.СтруктурноеПодразделение,
			|	ТиповойОстатки.Субконто1";
			
			Если ВестиСкладскойУчетБУ Тогда
				ТекстЗапросаЦена = ТекстЗапросаЦена +"
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ТиповойОстатки.Организация,
				|	ТиповойОстатки.СтруктурноеПодразделение,
				|	ТиповойОстатки.Субконто1,
				|	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,
				|	СУММА(ТиповойОстатки.КоличествоОстаток) КАК Количество
				|ИЗ
				|	РегистрБухгалтерии.Типовой.Остатки(
				|			&ДатаОстатка,
				|			Счет В ИЕРАРХИИ (&МассивСчетовПрочие),
				|			&ВидыСубконтоНоменклатура,
				|			(Организация, СтруктурноеПодразделение, Субконто1) В
				|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
				|					вт_ДанныеДокумента.Организация,
				|					вт_ДанныеДокумента.СтруктурноеПодразделение,
				|					вт_ДанныеДокумента.Товар
				|				ИЗ
				|					вт_ДанныеДокумента КАК вт_ДанныеДокумента)) КАК ТиповойОстатки
				|ГДЕ
				|	ТиповойОстатки.КоличествоОстаток <> 0
				|
				|СГРУППИРОВАТЬ ПО
				|	ТиповойОстатки.Организация,
				|	ТиповойОстатки.СтруктурноеПодразделение,
				|	ТиповойОстатки.Субконто1";
			КонецЕсли;	
		КонецЕсли;
		
			ТекстЗапросаЦена = ТекстЗапросаЦена + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЦеныНоменклатуры.Организация,
			|	ЦеныНоменклатуры.Склад,
			|	ЦеныНоменклатуры.Номенклатура,
			|	ЦеныНоменклатуры.Регистратор,
			|	МАКСИМУМ(ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Количество, 0) = 0
			|			ТОГДА 0
			|		ИНАЧЕ ЦеныНоменклатуры.Сумма / ЦеныНоменклатуры.Количество
			|	КОНЕЦ) КАК ЦенаНоменклатуры
			|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
			|ИЗ
			|	вт_ЦеныНоменклатурыГруппировка КАК ЦеныНоменклатуры
			|СГРУППИРОВАТЬ ПО
			| ЦеныНоменклатуры.Организация,
			| ЦеныНоменклатуры.Регистратор,
			| ЦеныНоменклатуры.Склад,	
			| ЦеныНоменклатуры.Номенклатура				
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Организация,
			|	ПолеРегистратор,
			|	Склад,
			|	Номенклатура";


		Если Не СебестоимостьПоСкладам ИЛИ Не ВестиСкладскойУчетБУ Тогда
			ТекстЗапросаЦена = СтрЗаменить(ТекстЗапросаЦена, "ЦеныНоменклатуры.Склад,", "");
			ТекстЗапросаЦена = СтрЗаменить(ТекстЗапросаЦена, "Склад,", "");
			ТекстЗапросаЦена = СтрЗаменить(ТекстЗапросаЦена, "&ВидыСубконто,", "&ВидыСубконтоНоменклатура,");
		КонецЕсли;	
		Если ПоДвижениямДокумента Тогда
			ТекстЗапросаЦена = СтрЗаменить(ТекстЗапросаЦена, "ПолеРегистратор,", "Регистратор,");
		Иначе	
			ТекстЗапросаЦена = СтрЗаменить(ТекстЗапросаЦена, "ЦеныНоменклатуры.Регистратор,", "");
			ТекстЗапросаЦена = СтрЗаменить(ТекстЗапросаЦена, "ПолеРегистратор,", "");
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат ТекстЗапросаЦена;
КонецФункции	

Функция ПолучитьТекстЗапросаДляМассива(МассивВидовДокумента)
	
	ТекстЗапроса = "";
	ЕстьЭСФ = Ложь;
	ЕстьСНТ = Ложь;
	
	Для Каждого ЭлементМассива Из МассивВидовДокумента Цикл
		ТекстЗапросаДокумента = "";
		
		Если ЭлементМассива = Тип("ДокументСсылка.ГТДИмпорт") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаГТДИмпорт(ТекстЗапроса = "");
		ИначеЕсли  ЭлементМассива = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаОтчетПроизводстваЗаСмену(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаОприходованиеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПоступлениеИзПереработки(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПеремещениеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаКомплектацияНоменклатуры(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.СписаниеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаСписаниеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаТребованиеНакладная(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПоступлениеТоваровУслуг(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаРеализацияТоваровУслуг(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ЭСФ") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаЭСФ	(ТекстЗапроса = "");
			ЕстьЭСФ = Истина;
		ИначеЕсли ЭлементМассива = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда
			//++СНТ
			ТекстЗапросаДокумента = СНТСерверПереопределяемый.ТекстЗапросаСНТ(ТекстЗапроса = "");
			ЕстьСНТ = Истина;
			//--СНТ
		КонецЕсли;
		
		Если ТекстЗапроса <> "" И ТекстЗапросаДокумента <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|"  
		КонецЕсли;	
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДокумента;
		
	КонецЦикла;	
	
	ДопТекстЗапрос = "";
	Если ЕстьЭСФ Тогда
		ДопТекстЗапрос = ТекстЗапросаЭСФДокументОснование()
	//++СНТ
	ИначеЕсли ЕстьСНТ Тогда
		ДопТекстЗапрос = СНТСерверПереопределяемый.ТекстЗапросаВыбораСНТ();
	//--СНТ
	КонецЕсли;
	
	Возврат ДопТекстЗапрос + ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьТекстЗапросаДляЗаполненияЭДВС(ПараметрыЗаполнения) Экспорт
	
	ДокументыОснования 	 = ПараметрыЗаполнения.МассивДокументов;
	МассивВидовДокумента = ПараметрыЗаполнения.МассивВидовДокумента;
	
	Если ПараметрыЗаполнения.Свойство("НомерДетализируемойСтроки") Тогда
		НомерДетализируемойСтроки = ПараметрыЗаполнения.НомерДетализируемойСтроки;
	Иначе
		НомерДетализируемойСтроки = Неопределено;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ДетализироватьОС") Тогда
		ДетализироватьОС = ПараметрыЗаполнения.ДетализироватьОС;
	Иначе
		ДетализироватьОС = Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЭтоВводОстатковИзВходящегоЭСФ") Тогда
		ЭтоВводОстатковИзВходящегоЭСФ = ПараметрыЗаполнения.ЭтоВводОстатковИзВходящегоЭСФ;
	Иначе
		ЭтоВводОстатковИзВходящегоЭСФ = Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЭтоВводСписаниеИзВходящегоЭСФ") Тогда
		ЭтоВводСписаниеИзВходящегоЭСФ = ПараметрыЗаполнения.ЭтоВводСписаниеИзВходящегоЭСФ;
	Иначе
		ЭтоВводСписаниеИзВходящегоЭСФ = Ложь;
	КонецЕсли;
	
	ПроверятьСклад 	 = Ложь;
	
	Если ТипЗнч(ДокументыОснования) = Тип("Массив") Тогда
		ТекстЗапроса 	= ПолучитьТекстЗапросаДляМассива(МассивВидовДокумента);
		Если ТекстЗапроса = "" Тогда
			Возврат Неопределено;	
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ГТДИмпорт") Тогда
		Если НомерДетализируемойСтроки <> Неопределено Тогда
			ТекстЗапроса 	= ТекстЗапросаГТДИмпортДетализИмпорта();
		Иначе	
			ТекстЗапроса 	= ТекстЗапросаГТДИмпорт();
		КонецЕсли;
		ПроверятьСклад 	= Истина;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов") Тогда
		Если НомерДетализируемойСтроки <> Неопределено Тогда
			Если НЕ ДетализироватьОС = Истина Тогда
				ТекстЗапроса 	= ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалоговДетализИмпорта();
			иначе
				ТекстЗапроса 	= ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалоговДетализИмпортаОС();
			КонецЕсли;
		Иначе	
			ТекстЗапроса 	= ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов();
		КонецЕсли;
		ПроверятьСклад 	= Истина;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		ТекстЗапроса 	= ТекстЗапросаОтчетПроизводстваЗаСмену();
		ПроверятьСклад 	= Истина;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		ТекстЗапроса 	= ТекстЗапросаОприходованиеТоваров();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		ТекстЗапроса 	= ТекстЗапросаПоступлениеИзПереработки();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ТекстЗапроса 	= ТекстЗапросаПеремещениеТоваров();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		ТекстЗапроса 	= ТекстЗапросаКомплектацияНоменклатуры();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		ТекстЗапроса 	= ТекстЗапросаСписаниеТоваров();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		ТекстЗапроса 	= ТекстЗапросаТребованиеНакладная();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ТекстЗапроса 	= ТекстЗапросаПоступлениеТоваровУслуг();
		ПроверятьСклад 	= Истина;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ТекстЗапроса = ТекстЗапросаРеализацияТоваровУслуг();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ЭСФ") Тогда
		Если ПараметрыЗаполнения.Свойство("ЭтоОформлениеКонвертацииЕИ") Тогда
			ТекстЗапроса = ТекстЗапросаЭСФКонвертацияЕдицицИзмерения();	
		ИначеЕсли ЭтоВводОстатковИзВходящегоЭСФ = Истина Тогда
			ТекстЗапроса = ?(ДокументыОснования.Направление = Перечисления.НаправленияЭСФ.Исходящий, ТекстЗапросаЭСФИсходящийОстаткиЭДВС(), ТекстЗапросаЭСФДокументОснование() + ТекстЗапросаЭСФОстаткиЭДВС());
		ИначеЕсли ЭтоВводСписаниеИзВходящегоЭСФ = Истина Тогда
			ТекстЗапроса = ТекстЗапросаЭСФДокументОснование() + ТекстЗапросаЭСФСписаниеЭДВС();
		Иначе
			ТекстЗапроса = ТекстЗапросаЭСФДокументОснование() + ТекстЗапросаЭСФ();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументыОснования) = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда
		ЭтоВводНаПеремещениеИзВходящегоСНТ = ?(ПараметрыЗаполнения.Свойство("ЭтоВводНаПеремещениеИзВходящегоСНТ"), ПараметрыЗаполнения.ЭтоВводНаПеремещениеИзВходящегоСНТ, Ложь);
		Если ПараметрыЗаполнения.Свойство("ЭтоОформлениеКонвертацииЕИ") Тогда
			ТекстЗапроса = СНТСерверПереопределяемый.ТекстЗапросаСНТКонвертацияЕдиницИзмерения();
		ИначеЕсли ЭтоВводНаПеремещениеИзВходящегоСНТ = Истина Тогда
			ТекстЗапроса = СНТСерверПереопределяемый.ТекстЗапросаНаПеремещениеИзВходящегоСНТ();
		Иначе
			ТекстЗапроса 	= СНТСерверПереопределяемый.ТекстЗапросаВыбораСНТ() + СНТСерверПереопределяемый.ТекстЗапросаСНТ();
			ПроверятьСклад 	= Истина;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СкладОтправитель";
	
	ПараметрыЗаполнения.Вставить("ПроверятьСклад",ПроверятьСклад);
	
	ТекстЗапроса =  ТекстЗапроса + ПолучитьТекстЗапросаКонтактнаяИнформация() + ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//В процедуре происходит присоединение к основной таблице запроса временной таблицы вт_ЦеныНоменклатуры
//В разных типовых решениях может быть разным
//
Процедура ПрисоединитьВременнуюТаблицуЦеныНоменклатуры(ТекстЗапроса, ИмяТабличнойЧасти) Экспорт
	ТекстЗапроса = ТекстЗапроса + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЦеныНоменклатуры КАК вт_ЦеныНоменклатуры
		|		ПО вт_ДанныеДляЗаполнения.Товар = вт_ЦеныНоменклатуры.Номенклатура
		|			И вт_ДанныеДляЗаполнения.ДокументОснование = вт_ЦеныНоменклатуры.Регистратор
		|			И вт_ДанныеДляЗаполнения.Организация = вт_ЦеныНоменклатуры.Организация
		|			И вт_ДанныеДляЗаполнения.СкладОтправитель = вт_ЦеныНоменклатуры.Склад
	    |
		|ГДЕ
		|вт_ДанныеДляЗаполнения.ИмяТабличнойЧасти = """ + ИмяТабличнойЧасти + """"
КонецПроцедуры

//Функция добавляет к основным полям запроса дополнительные поля которые зависят от типового решения
//
Функция ПолучитьДополнительныеПереопределяемыеПоля() Экспорт
	ТекстЗапроса = ",
	|	ВЫБОР
	|		КОГДА вт_ДанныеДокумента.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДекларацияНаТовары)
	|			ТОГДА ЕСТЬNULL(ВиртуальныйСкладНераспределенныхТоваров.ИдентификаторСклада, 0)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(вт_ДанныеДокумента.СкладОтправитель) = ТИП(Справочник.ВиртуальныеСклады)
	|					ТОГДА ВиртуальныйСкладОтправитель.ИдентификаторСклада
	|				ИНАЧЕ ЕСТЬNULL(СоответствиеСкладовДляОтправителя.ВиртуальныйСклад.ИдентификаторСклада, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК СкладОтправительИдентификатор,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(вт_ДанныеДокумента.СкладПолучатель) = ТИП(Справочник.ВиртуальныеСклады)
	|			ТОГДА ВиртуальныйСкладПолучатель.ИдентификаторСклада
	|		ИНАЧЕ ЕСТЬNULL(СоответствиеСкладовДляПолучателя.ВиртуальныйСклад.ИдентификаторСклада, """")
	|	КОНЕЦ КАК СкладПолучательИдентификатор
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьОстаткиТоваровВС(СтруктураПараметров)Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура,
	|	ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения,
	|	ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения,
	|	ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки КАК ТоварыНаВиртуальныхСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&ТекущаяДата) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО (ИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
	|ГДЕ
	|	ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе = &ПризнакУчетаНаВиртуальномСкладе
	|	И СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе = &ПризнакУчетаНаВиртуальномСкладе
	|	И СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий = &ПризнакПеречняИзьятий";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
КонецФункции

#КонецОбласти

#Область ЗапросыПоПриходнымДокументам

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаГТДИмпорт(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДекларацияНаТовары) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	Товары.ДокументПартии.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.НаименованиеТовара КАК ТоварНаименование,
	|	Товары.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.ФактурнаяСтоимость КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.ФактурнаяСтоимость / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхождения.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения,
	|	Товары.Ссылка.НомерГТД КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерРаздела КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ГТДИмпорт"" КАК ИмяДокумента,
	|	ВЫБОР
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕТТ)
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ВТО)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|	КОНЕЦ КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ПО Товары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
	|			И Товары.Ссылка = ГТДИмпортРазделы.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаГТДИмпортДетализИмпорта(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка КАК Ссылка,
	|	ГТДИмпорт.Ссылка.НомерГТД КАК НомерГТД,
	|	ГТДИмпорт.НомерСтроки КАК НомерСтроки,
	|	ГТДИмпорт.СпособПроисхожденияТовара КАК СпособПроисхожденияТовара,
	|	ГТДИмпорт.Ссылка.Организация КАК Организация,
	|	ГТДИмпорт.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ГТДИмпорт.Ссылка.Дата КАК Дата,
	|	ГТДИмпорт.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(ГТДИмпорт.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ГТДИмпорт.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	|	ЕСТЬNULL(Товары.КодТНВЭД, """") КАК РазделыКодТНВЭД
	|ПОМЕСТИТЬ ГТДИмпортРазделы
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК Товары
	|		ПО (Товары.НомерРаздела = ГТДИмпорт.НомерСтроки)
	|			И (Товары.Ссылка = ГТДИмпорт.Ссылка)
	|			И (Товары.НомерСтроки = 1)
	|ГДЕ
	|	ГТДИмпорт.Ссылка В(&МассивДокументов)
	|	И ГТДИмпорт.НомерСтроки = &НомерДетализируемойСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГТДИмпортРазделы.Организация КАК Организация,
	|	ГТДИмпортРазделы.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ГТДИмпортРазделы.Дата КАК ДатаИсходногоДокумента,
	|	ГТДИмпортРазделы.Дата КАК Дата,
	|	ГТДИмпортРазделы.Номер КАК Номер,
	|	ГТДИмпортРазделы.Комментарий КАК Комментарий,
	|	ГТДИмпортРазделы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Товары.ДокументПартии.Склад, """") КАК СкладПолучатель,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НаименованиеТовара КАК НаименованиеТовара,
	|	Товары.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.ФактурнаяСтоимость / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЕСТЬNULL(Товары.СтранаПроисхождения.КодАльфа2, """") КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ГТДИмпортРазделы.НомерГТД КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерРаздела КАК НомерРаздела,
	|	ВЫБОР
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕТТ)
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ВТО)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|	КОНЕЦ КАК ТипПошлины
	|ПОМЕСТИТЬ вт_ТоварыОС
	|ИЗ
	|	ГТДИмпортРазделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК Товары
	|		ПО (Товары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки)
	|			И (Товары.Ссылка = ГТДИмпортРазделы.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпортРазделы.Организация,
	|	ГТДИмпортРазделы.СтруктурноеПодразделение,
	|	ГТДИмпортРазделы.Дата,
	|	ГТДИмпортРазделы.Дата,
	|	ГТДИмпортРазделы.Номер,
	|	ГТДИмпортРазделы.Комментарий,
	|	ГТДИмпортРазделы.Ссылка,
	|	ЕСТЬNULL(ОС.ДокументПартии.Склад, """"),
	|	ОС.ОсновноеСредство,
	|	ВЫРАЗИТЬ(ОС.ОсновноеСредство.НаименованиеПолное КАК СТРОКА(200)),
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	1,
	|	ОС.ФактурнаяСтоимость,
	|	"""",
	|	ОС.СтранаПроисхождения,
	|	ЕСТЬNULL(ОС.СтранаПроисхождения.КодАльфа2, """"),
	|	"""",
	|	ГТДИмпортРазделы.НомерГТД,
	|	ОС.НомерРаздела,
	|	ВЫБОР
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕТТ)
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ВТО)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|	КОНЕЦ
	|ИЗ
	|	ГТДИмпортРазделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ОС
	|		ПО (ОС.НомерРаздела = ГТДИмпортРазделы.НомерСтроки)
	|			И (ОС.Ссылка = ГТДИмпортРазделы.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТОВАРЫиОС.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ТОВАРЫиОС.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ТОВАРЫиОС.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|	ТОВАРЫиОС.Дата КАК Дата,
	|	ТОВАРЫиОС.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДетализацияИмпорта) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ТОВАРЫиОС.Комментарий КАК Комментарий,
	|	ТОВАРЫиОС.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	ТОВАРЫиОС.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ТОВАРЫиОС.Номенклатура КАК Товар,
	|	ТОВАРЫиОС.НаименованиеТовара КАК ТоварНаименование,
	|	ТОВАРЫиОС.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	ТОВАРЫиОС.КодТНВЭД КАК КодТНВЭД,
	|	ТОВАРЫиОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТОВАРЫиОС.ЕдиницаИзмерения.КодЭСФ, """") КАК ЕдиницаИзмеренияКод,
	|	ТОВАРЫиОС.Количество КАК Количество,
	|	ТОВАРЫиОС.ФактурнаяСтоимость КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТОВАРЫиОС.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТОВАРЫиОС.ФактурнаяСтоимость / ТОВАРЫиОС.Количество
	|	КОНЕЦ КАК Цена,
	|	ТОВАРЫиОС.СтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	ТОВАРЫиОС.СтранаПроисхожденияТовараКод КАК СтранаПроисхожденияТовараКод,
	|	ТОВАРЫиОС.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ТОВАРЫиОС.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ТОВАРЫиОС.НомерРаздела КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ГТДИмпорт"" КАК ИмяДокумента,
	|	ТОВАРЫиОС.ТипПошлины КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	ГТДИмпортРазделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ТоварыОС КАК ТОВАРЫиОС
	|		ПО (ТОВАРЫиОС.НомерРаздела = ГТДИмпортРазделы.НомерСтроки)
	|			И (ТОВАРЫиОС.Ссылка = ГТДИмпортРазделы.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпортРазделы.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	ГТДИмпортРазделы.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
	|	ГТДИмпортРазделы.Дата,
	|	ГТДИмпортРазделы.Дата,
	|	ГТДИмпортРазделы.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДетализацияИмпорта),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ГТДИмпортРазделы.Комментарий,
	|	ГТДИмпортРазделы.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ГТДИмпортРазделы.СпособПроисхожденияТовара,
	|	"""",
	|	"""",
	|	ГТДИмпортРазделы.РазделыКодТНВЭД,
	|	"""",
	|	"""",
	|	СУММА(ЕСТЬNULL(ТОВАРЫиОС.Количество, 0)),
	|	ГТДИмпортРазделы.ТаможеннаяСтоимость,
	|	0,
	|	"""",
	|	"""",
	|	"""",
	|	ГТДИмпортРазделы.НомерГТД,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""ИсходныеТовары"",
	|	""ГТДИмпорт"",
	|	ВЫБОР
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕТТ)
	|		КОГДА ГТДИмпортРазделы.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ВТО)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	ГТДИмпортРазделы КАК ГТДИмпортРазделы
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТоварыОС КАК ТОВАРЫиОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ТОВАРЫиОС.НомерРаздела
	|			И ГТДИмпортРазделы.Ссылка = ТОВАРЫиОС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ГТДИмпортРазделы.Организация,
	|	ГТДИмпортРазделы.СтруктурноеПодразделение,
	|	ГТДИмпортРазделы.Дата,
	|	ГТДИмпортРазделы.Номер,
	|	ГТДИмпортРазделы.Комментарий,
	|	ГТДИмпортРазделы.Ссылка,
	|	ГТДИмпортРазделы.СпособПроисхожденияТовара,
	|	ГТДИмпортРазделы.ТаможеннаяСтоимость,
	|	ГТДИмпортРазделы.НомерГТД,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортРазделы.РазделыКодТНВЭД,
	|	ГТДИмпортРазделы.Дата";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДекларацияНаТовары) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	Товары.ДокументОснование.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.НаименованиеТовара КАК ТоварНаименование,
	|	Товары.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.Сумма * Товары.КурсВалюты КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Сумма * Товары.КурсВалюты / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхождения.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения,
	|	Товары.Ссылка.РегистрационныйНомер КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерСтроки КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалоговДетализИмпорта(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.ДокументОснование.Склад КАК СкладПолучатель,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НаименованиеТовара КАК НаименованиеТовара,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(Товары.ЕдиницаИзмерения.КодЭСФ, """") КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма * Товары.КурсВалюты КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Сумма * Товары.КурсВалюты / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЕСТЬNULL(Товары.СтранаПроисхождения.КодАльфа2, """") КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.Ссылка.РегистрационныйНомер КАК НомерЗаявленияВРамкахТС
	|ПОМЕСТИТЬ вт_Документ
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.НомерСтроки = &НомерДетализируемойСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДетализацияИмпорта) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	Товары.Комментарий КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	Товары.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.НаименованиеТовара КАК ТоварНаименование,
	|	Товары.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерСтроки КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_Документ КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	Товары.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
	|	Товары.Дата,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДетализацияИмпорта),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	Товары.Комментарий,
	|	Товары.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	Товары.СкладПолучатель, 
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	Товары.Номенклатура,
	|	Товары.НаименованиеТовара,
	|	Товары.НаименованиеТовара,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.Сумма,
	|	Товары.Цена,
	|	Товары.СтранаПроисхождения,
	|	Товары.СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""ИсходныеТовары"",
	|	""ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_Документ КАК Товары";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
Функция ТекстЗапросаЗаявлениеОВвозеТоваровИУплатеКосвенныхНалоговДетализИмпортаОС(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОС.Ссылка КАК Ссылка,
	|	ОС.НомерСтроки КАК НомерСтроки,
	|	ОС.Ссылка.Организация КАК Организация,
	|	ОС.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ОС.Ссылка.Дата КАК Дата,
	|	ОС.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(ОС.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ОС.ДокументОснование.Склад КАК СкладПолучатель,
	|	ОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ОС.ОсновноеСредство.НаименованиеПолное КАК ОсновноеСредствоНаименованиеПолное,
	|	ОС.КодТНВЭД КАК КодТНВЭД,
	|	ОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ОС.ЕдиницаИзмерения.КодЭСФ, """") КАК ЕдиницаИзмеренияКод,
	|	ОС.Количество КАК Количество,
	|	ОС.Сумма * ОС.КурсВалюты КАК Сумма,
	|	ВЫБОР
	|		КОГДА ОС.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ОС.Сумма * ОС.КурсВалюты / ОС.Количество
	|	КОНЕЦ КАК Цена,
	|	ОС.Ссылка.РегистрационныйНомер КАК НомерЗаявленияВРамкахТС
	|ПОМЕСТИТЬ вт_Документ
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов.ОС КАК ОС
	|ГДЕ
	|	ОС.Ссылка В(&МассивДокументов)
	|	И ОС.НомерСтроки = &НомерДетализируемойСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОС.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ОС.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ОС.Дата КАК ДатаИсходногоДокумента,
	|	ОС.Дата КАК Дата,
	|	ОС.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДетализацияИмпорта) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ОС.Комментарий КАК Комментарий,
	|	ОС.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	ОС.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ОС.ОсновноеСредство КАК Товар,
	|	ОС.ОсновноеСредствоНаименованиеПолное КАК ТоварНаименование,
	|	ОС.ОсновноеСредствоНаименованиеПолное КАК ТоварНаименованиеВРамкахТС,
	|	ОС.КодТНВЭД КАК КодТНВЭД,
	|	ОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОС.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ОС.Количество КАК Количество,
	|	ОС.Сумма КАК Сумма,
	|	ОС.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	ОС.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ОС.НомерСтроки КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_Документ КАК ОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОС.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	ОС.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
	|	ОС.Дата,
	|	ОС.Дата,
	|	ОС.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДетализацияИмпорта),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ОС.Комментарий,
	|	ОС.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ОС.СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ОС.ОсновноеСредство,
	|	ОС.ОсновноеСредствоНаименованиеПолное,
	|	ОС.ОсновноеСредствоНаименованиеПолное,
	|	ОС.КодТНВЭД,
	|	ОС.ЕдиницаИзмерения,
	|	ОС.ЕдиницаИзмеренияКод,
	|	ОС.Количество,
	|	ОС.Сумма,
	|	ОС.Цена,
	|	"""",
	|	"""",
	|	"""",
	|	ОС.НомерЗаявленияВРамкахТС,
	|	ОС.НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""ИсходныеТовары"",
	|	""ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_Документ КАК ОС";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаОтчетПроизводстваЗаСмену(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Продукция.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Продукция.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Продукция.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Продукция.Ссылка.Дата,
	|	Продукция.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Производство) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Продукция.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Продукция.Ссылка КАК ДокументОснование,
	|	Продукция.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Продукция.Номенклатура КАК Товар,
	|	Продукция.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Продукция.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Продукция.ЕдиницаИзмерения,
	|	Продукция.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Продукция.Количество,
	|	Продукция.СуммаПлановая КАК Сумма,
	|	Продукция.ПлановаяСтоимость КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ОтчетПроизводстваЗаСмену"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство) КАК ТипПроисхождения,
	|	ИСТИНА КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК Продукция
	|ГДЕ
	|	Продукция.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратныеОтходы.Ссылка.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	ВозвратныеОтходы.Ссылка.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
	|	ВозвратныеОтходы.Ссылка.Дата,
	|	ВозвратныеОтходы.Ссылка.Дата,
	|	ВозвратныеОтходы.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Производство),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(ВозвратныеОтходы.Ссылка.Комментарий КАК СТРОКА(400)),
	|	ВозвратныеОтходы.Ссылка,
	|	ВозвратныеОтходы.Ссылка.Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ВозвратныеОтходы.Номенклатура,
	|	ВозвратныеОтходы.Номенклатура.Наименование,
	|	"""",
	|	ВозвратныеОтходы.Номенклатура.КодТНВЭД,
	|	ВозвратныеОтходы.ЕдиницаИзмерения,
	|	ВозвратныеОтходы.ЕдиницаИзмерения.КодЭСФ,
	|	ВозвратныеОтходы.Количество,
	|	ВозвратныеОтходы.Сумма,
	|	ВозвратныеОтходы.Цена,
	|	&КазахстанСсылкаСтранаПроисхождения,
	|	&КазахстанКодАльфа2,
	|	"""",
	|	"""",
	|	0,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""Товары"",
	|	""ОтчетПроизводстваЗаСмену"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(5)),
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(11)),
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(3))
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ВозвратныеОтходы
	|ГДЕ
	|	ВозвратныеОтходы.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаОприходованиеТоваров(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Товары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ОприходованиеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаПоступлениеИзПереработки(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Продукция.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Продукция.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Продукция.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Продукция.Ссылка.Дата,
	|	Продукция.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Производство) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Продукция.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Продукция.Ссылка КАК ДокументОснование,
	|	Продукция.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Продукция.Номенклатура КАК Товар,
	|	Продукция.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Продукция.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Продукция.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Продукция.Номенклатура.БазоваяЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Продукция.Количество,
	|	Продукция.СуммаПлановая КАК Сумма,
	|	Продукция.ПлановаяСтоимость КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПоступлениеИзПереработки"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство) КАК ТипПроисхождения,
	|	ИСТИНА КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПоступлениеИзПереработки.Продукция КАК Продукция
	|ГДЕ
	|	Продукция.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Материалы.Ссылка.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	Материалы.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Материалы.Ссылка.Дата,
	|	Материалы.Ссылка.Дата,
	|	Материалы.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Производство),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(Материалы.Ссылка.Комментарий КАК СТРОКА(400)),
	|	Материалы.Ссылка,
	|	Материалы.Ссылка.Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	Материалы.Номенклатура,
	|	Материалы.Номенклатура.НаименованиеПолное,
	|	"""",
	|	Материалы.Номенклатура.КодТНВЭД,
	|	Материалы.Номенклатура.БазоваяЕдиницаИзмерения,
	|	Материалы.Номенклатура.БазоваяЕдиницаИзмерения.КодЭСФ,
	|	Материалы.Количество,
	|	0,
	|	0,
	|	&КазахстанСсылкаСтранаПроисхождения,
	|	&КазахстанКодАльфа2,
	|	"""",
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""Товары"",
	|	""ПоступлениеИзПереработки"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство),
	|	ИСТИНА,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	Документ.ПоступлениеИзПереработки.ИспользованныеМатериалы КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаПоступлениеТоваровУслуг(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Товары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.Количество * Товары.Цена * Товары.Ссылка.КурсВзаиморасчетов / Товары.Ссылка.КратностьВзаиморасчетов КАК Сумма,
	|	Товары.Цена * Товары.Ссылка.КурсВзаиморасчетов / Товары.Ссылка.КратностьВзаиморасчетов КАК ЦЕНА,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПоступлениеТоваровУслуг"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО Товары.Ссылка.Контрагент = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаРеализацияТоваровУслуг(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЕСТЬNULL(СобственныеКонтрагенты.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПеремещениеМеждуФилиалами)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание)
	|	КОНЕЦ КАК ТипФормы,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Прочие)
	|	КОНЕЦ КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Товары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА Товары.Количество * Товары.Цена * Товары.Ссылка.КурсВзаиморасчетов / Товары.Ссылка.КратностьВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА Товары.Цена * Товары.Ссылка.КурсВзаиморасчетов / Товары.Ссылка.КратностьВзаиморасчетов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА &КазахстанСсылкаСтранаПроисхождения
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СтранаПроисхожденияТовара,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА &КазахстанКодАльфа2
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СтранаПроисхожденияТовараКод,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА ""5""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА ""ПоступлениеТоваровУслуг""
	|		ИНАЧЕ ""СписаниеТоваров"" 
	|	КОНЕЦ КАК ИмяДокумента,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка)
	|	КОНЕЦ КАК ТипПошлины,
	|	ВЫБОР КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка)
	|	КОНЕЦ КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО Товары.Ссылка.Контрагент = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	
	
Функция ТекстЗапросаВводаОстаток(ПараметрыЗаполнения) Экспорт
	
	МассивСкладов = ПараметрыЗаполнения.МассивСкладов;
	МассивСтруктурныхПодразделений = ПараметрыЗаполнения.МассивСтруктурныхПодразделений;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	&ДатаДокумента КАК ДатаИсходногоДокумента,
	|	&ДатаДокумента КАК Дата,
	|	"""" КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	"""" КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	ТоварыОрганизаций.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ТоварыОрганизаций.Товар КАК Товар,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ НомераГТД.НаименованиеТовара = """"
	|			ТОГДА Номенклатура.НаименованиеПолное
	|		ИНАЧЕ НомераГТД.НаименованиеТовара
	|	КОНЕЦ КАК ТоварНаименование,
	|	ЕСТЬNULL(НомераГТД.НаименованиеТовара, """") КАК ТоварНаименованиеВРамкахТС,
	|Номенклатура.КодТНВЭД КАК КодТНВЭД,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(НомераГТД.КодТНВЭД, """") = """"
	//|				ИЛИ ТоварыОрганизаций.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	//|			ТОГДА ЕСТЬNULL(Номенклатура.КодТНВЭД, """")
	//|		ИНАЧЕ ЕСТЬNULL(НомераГТД.КодТНВЭД, """")
	//|	КОНЕЦ КАК КодТНВЭД,
	|	Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Номенклатура.БазоваяЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	ТоварыОрганизаций.КоличествоОстаток КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	НомераГТД.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ЕСТЬNULL(НомераГТД.СтранаПроисхожденияТовара.КодАльфа2, ""00"") КАК СтранаПроисхожденияТовараКод,
	|	НомераГТД.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	НомераГТД.Код КАК НомерЗаявленияВРамкахТС,
	|	НомераГТД.НомерСтрокиГТД КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ВЫБОР
	|		КОГДА НомераГТД.Ссылка ЕСТЬ NULL ТОГДА
	|				ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка)
	|		ИНАЧЕ НомераГТД.Ссылка
	|	КОНЕЦ КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВводОстатков"" КАК ИмяДокумента,
	|	ВЫБОР
	|		КОГДА НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ВТО)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕТТ)
	|				ИНАЧЕ ВЫБОР
	|						КОГДА НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ТС)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипПошлины,
	|	ВЫБОР
	|		КОГДА НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|				ИЛИ НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|				ИЛИ НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ТС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.СТ1)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство)
	|				ИНАЧЕ ВЫБОР
	|						КОГДА НомераГТД.ПризнакПроисхождения = ""1""
	|								ИЛИ НомераГТД.ПризнакПроисхождения = ""2""
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт)
	|						ИНАЧЕ ВЫБОР
	|								КОГДА НомераГТД.ПризнакПроисхождения = ""3""
	|										ИЛИ НомераГТД.ПризнакПроисхождения = ""4""
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство)
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено)
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА НомераГТД.ПризнакПроисхождения = ""1""
	|					И НомераГТД.СпособПроисхожденияТовара = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|				ИЛИ (НомераГТД.ПризнакПроисхождения = """"
	|					ИЛИ НомераГТД.ПризнакПроисхождения ЕСТЬ NULL)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийБУ.Остатки(
	|			&ДатаОстатка,
	|			Организация В (&МассивОрганизаций)
	|				И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)
	|				И Склад В (&МассивСкладов)) КАК ТоварыОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ТоварыОрганизаций.НомерГТД = НомераГТД.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ТоварыОрганизаций.Товар = Номенклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыСПониженнойСтавкойПошлин.СрезПоследних(&ДатаОстатка, ) КАК ТоварыСПониженнойСтавкойПошлинСрезПоследних
	|		ПО ТоварыОрганизаций.Товар = ТоварыСПониженнойСтавкойПошлинСрезПоследних.Товар
	|			И (ТоварыСПониженнойСтавкойПошлинСрезПоследних.ВходитВПеречень = ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурноеПодразделение,
	|	СкладОтправитель";
	
	Если МассивСкладов = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Склад В (&МассивСкладов)", "");	
	КонецЕсли;
	
	Если МассивСтруктурныхПодразделений.Количество() = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)", "И СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)");		
		//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТоварыОрганизаций.СтруктурноеПодразделение", "ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)");
	КонецЕсли;
	
	Возврат ТекстЗапроса  + ПолучитьТекстЗапросаКонтактнаяИнформация() + ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения);
КонецФункции

Функция ТекстЗапросаВводаОстатокПоДаннымБУ(ПараметрыЗаполнения) Экспорт
	
	МассивСкладов 			= ПараметрыЗаполнения.МассивСкладов;
	МассивСтруктурныхПодразделений = ПараметрыЗаполнения.МассивСтруктурныхПодразделений;
	ВестиСкладскойУчетБУ 	= ПараметрыЗаполнения.ВестиСкладскойУчетБУ;
	СебестоимостьПоСкладам 	= ПараметрыЗаполнения.СебестоимостьПоСкладам;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТиповойОстатки.Организация КАК Организация,
	|	ТиповойОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК СкладОтправитель,
	|	ТиповойОстатки.Субконто1 КАК Товар,
	|	СУММА(ТиповойОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма
	|ПОМЕСТИТЬ вт_ДанныеДокументаДоГруппировка
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&ДатаОстатка,
	|			Счет В ИЕРАРХИИ (&МассивСчетовБУ),
	|			&ВидыСубконто,
	|			Организация В (&МассивОрганизаций)
	|				И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)
	|				И Субконто2 В (&МассивСкладов)) КАК ТиповойОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|		ПО ТиповойОстатки.Субконто2 = СоответствиеСкладовИВиртуальныхСкладов.Склад
	|			И (ВЫБОР КОГДА ТиповойОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ТиповойОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
	|			ИНАЧЕ ТиповойОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
	|ГДЕ
	|	ТиповойОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТиповойОстатки.Субконто1,
	|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
	|	ТиповойОстатки.СтруктурноеПодразделение,
	|	ТиповойОстатки.Организация";
	
	Если СебестоимостьПоСкладам ИЛИ ВестиСкладскойУчетБУ Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТиповойОстатки.Организация,
		|	ТиповойОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
		|	ТиповойОстатки.Субконто1,
		|	СУММА(ТиповойОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(ТиповойОстатки.СуммаОстаток) КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ (&МассивСчетовПрочие), &ВидыСубконтоНоменклатура, Организация В (&МассивОрганизаций)И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ТиповойОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО (&СкладПоУмолчанию = СоответствиеСкладовИВиртуальныхСкладов.Склад)
		|			И (ВЫБОР КОГДА ТиповойОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|			ТОГДА ТиповойОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			ИНАЧЕ ТиповойОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
		|ГДЕ
		|	ТиповойОстатки.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТиповойОстатки.Организация,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
		|	ТиповойОстатки.СтруктурноеПодразделение,
		|	ТиповойОстатки.Субконто1";
	КонецЕсли;
	
	
	Если Не ВестиСкладскойУчетБУ Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТиповойОстатки.Субконто2"	, "&СкладПоУмолчанию");
	КонецЕсли;																		
	Если МассивСкладов = Неопределено ИЛИ Не ВестиСкладскойУчетБУ Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Субконто2 В (&МассивСкладов)", "");	
	КонецЕсли;
	Если МассивСтруктурныхПодразделений.Количество() = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)", "И СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВЫБОР КОГДА ТиповойОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|			ТОГДА ТиповойОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			ИНАЧЕ ТиповойОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ", "ТиповойОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация");
		//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТиповойОстатки.СтруктурноеПодразделение", "ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)");
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	вт_ДанныеДокументаДоГруппировка.Организация,
	|	вт_ДанныеДокументаДоГруппировка.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	вт_ДанныеДокументаДоГруппировка.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	вт_ДанныеДокументаДоГруппировка.Товар,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(250)) КАК ТоварНаименование,
	|	Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Номенклатура.БазоваяЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	СУММА(вт_ДанныеДокументаДоГруппировка.Количество) КАК Количество,
	|	СУММА(вт_ДанныеДокументаДоГруппировка.Сумма) КАК Сумма
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ДанныеДокументаДоГруппировка КАК вт_ДанныеДокументаДоГруппировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО вт_ДанныеДокументаДоГруппировка.Товар = Номенклатура.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ДанныеДокументаДоГруппировка.СкладОтправитель,
	|	вт_ДанныеДокументаДоГруппировка.Организация.ИдентификационныйНомер,
	|	вт_ДанныеДокументаДоГруппировка.Организация,
	|	вт_ДанныеДокументаДоГруппировка.СтруктурноеПодразделение,
	|	вт_ДанныеДокументаДоГруппировка.Товар,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(250)),
	|	Номенклатура.КодТНВЭД,
	|	Номенклатура.БазоваяЕдиницаИзмерения,
	|	Номенклатура.БазоваяЕдиницаИзмерения.КодЭСФ";
	
	ТекстЗапроса = ТекстЗапроса + ПолучитьТекстЗапросаКонтактнаяИнформация() + ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураГСВС.Ссылка КАК НоменклатураГСВС,
	|	2 КАК ПриоритетПоискаНоменклатурыГСВС,
	|	НоменклатураГСВС.КодГСВС КАК КодГСВС
	|ПОМЕСТИТЬ ВТ_НоменклатураГСВС
	|ИЗ
	|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
	|ГДЕ
	|	НоменклатураГСВС.КодГСВС В 
	|			(ВЫБРАТЬ 
	|				ДанныеДокумента.КодТНВЭД 
	|			ИЗ 
	|				ВТ_ДанныеДокумента КАК ДанныеДокумента)
	|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОНоменклатуреГСВС.НоменклатураГСВС,
	|	ВЫБОР
	|		КОГДА СведенияОНоменклатуреГСВС.ПризнакАктивности
	|				И &ДатаСреза >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВС.ДействиеЗаписиНачальнаяДата, ДЕНЬ)
	|				И &ДатаСреза <= ВЫБОР
	|					КОГДА СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА &ДатаСреза
	|					ИНАЧЕ СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата
	|				КОНЕЦ
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ,
	|	ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10)
	|ИЗ
	|	РегистрСведений.СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДокумента КАК ДанныеДокумента
	|		ПО (ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10) = ДанныеДокумента.КодТНВЭД)
	|			И (СведенияОНоменклатуреГСВС.НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД))
	|			И (СведенияОНоменклатуреГСВС.Период <= &ДатаСреза)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПриоритетПоискаНоменклатурыГСВС,
	|	КодГСВС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВС,
	|	МИНИМУМ(ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС) КАК ПриоритетПоискаНоменклатурыГСВС
	|ПОМЕСТИТЬ ВТ_НоменклатураГСВСМинимум
	|ИЗ
	|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НоменклатураГСВС.КодГСВС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодГСВС,
	|	ПриоритетПоискаНоменклатурыГСВС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТ_НоменклатураГСВС.НоменклатураГСВС) КАК НоменклатураГСВС,
	|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВСПервичный
	|ПОМЕСТИТЬ ВТ_НоменклатураГСВССгруппированная
	|ИЗ
	|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВСМинимум КАК ВТ_НоменклатураГСВСМинимум
	|		ПО ВТ_НоменклатураГСВС.КодГСВС = ВТ_НоменклатураГСВСМинимум.КодГСВС
	|			И ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС = ВТ_НоменклатураГСВСМинимум.ПриоритетПоискаНоменклатурыГСВС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НоменклатураГСВС.КодГСВС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураГСВС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС КАК НоменклатураГСВС,
	|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
	|	СведенияОНоменклатуреГСВССрезПоследних.ПолныйКодГСВС КАК ПолныйКодГСВС,
	|	НоменклатураГСВССгруппированная.КодГСВСПервичный КАК КодГСВСПервичный
	|ПОМЕСТИТЬ ВТ_КодыГСВСАктуальные
	|ИЗ
	|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
	|			&ДатаСреза,
	|			НоменклатураГСВС В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Т.НоменклатураГСВС
	|				ИЗ
	|					ВТ_НоменклатураГСВССгруппированная КАК Т)) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВССгруппированная КАК НоменклатураГСВССгруппированная
	|		ПО (НоменклатураГСВССгруппированная.НоменклатураГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
	|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
	|			И (&ДатаСреза >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиНачальнаяДата, ДЕНЬ))
	|			И (&ДатаСреза <= ВЫБОР
	|				КОГДА СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА &ДатаСреза
	|				ИНАЧЕ СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата
	|			КОНЕЦ)
	|ИНДЕКСИРОВАТЬ ПО
	|	КодГСВСПервичный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДанныеДокумента.Организация КАК Организация,
	|	вт_ДанныеДокумента.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	вт_ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	вт_ДанныеДокумента.СтруктурноеПодразделениеПолучатель КАК СтруктурноеПодразделениеПолучатель,
	|	&ДатаДокумента КАК ДатаИсходногоДокумента,
	|	&ДатаДокумента КАК Дата,
	|	"""" КАК Номер,
	|	вт_ДанныеДокумента.ТипФормы КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	"""" КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	вт_ДанныеДокумента.СкладОтправитель КАК СкладОтправитель,
	|	вт_ДанныеДокумента.СкладОтправитель.Наименование КАК СкладОтправительНаименование,
	|	вт_ДанныеДокумента.СкладОтправитель.ИдентификаторСклада КАК СкладОтправительИдентификатор,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	"""" КАК СкладПолучательНаименование,
	|	0 КАК СкладПолучательИдентификатор,
	//|	вт_ДанныеДокумента.Организация.Наименование КАК ОтправительНаименование,
	//|	вт_ДанныеДокумента.Организация.ИдентификационныйНомер КАК ОтправительИдентификатор,
	|	ЕСТЬNULL(КонтактнаяИнформацияОтправителя.Наименование, """") КАК ОтправительНаименование,
	|	ЕСТЬNULL(КонтактнаяИнформацияОтправителя.ИдентификационныйНомер, """") КАК ОтправительИдентификатор,
	|	ЕСТЬNULL(КонтактнаяИнформацияОтправителя.АдресОрганизации, """") КАК ОтправительАдрес,
	|	"""" КАК ПолучательНаименование,
	|	"""" КАК ПолучательИдентификатор,
	|	"""" КАК ПолучательАдрес,
	|	вт_ДанныеДокумента.Товар КАК Товар,
	|	вт_ДанныеДокумента.ТоварНаименование КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	вт_ДанныеДокумента.КодТНВЭД КАК КодТНВЭД,
	|	вт_ДанныеДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ДанныеДокумента.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	вт_ДанныеДокумента.Количество КАК Количество,
	|	вт_ДанныеДокумента.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(вт_ДанныеДокумента.Количество, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ вт_ДанныеДокумента.Сумма / вт_ДанныеДокумента.Количество
	|	КОНЕЦ КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВводОстатков"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	ЕСТЬNULL(СведенияОНоменклатуреГСВСПоКодуИзНоменклатуры.НоменклатураГСВС, ЗНАЧЕНИЕ(Справочник.НоменклатураГСВС.ПустаяСсылка)) КАК ГСВС,
	|	ЕСТЬNULL(СведенияОНоменклатуреГСВСПоКодуИзНоменклатуры.ПолныйКодГСВС, """") КАК СоставнойКодГСВС,
	|	ЕСТЬNULL(СведенияОНоменклатуреГСВСПоКодуИзНоменклатуры.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ) КАК ПризнакУчетаНаВиртуальномСкладе,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СведенияОНоменклатуреГСВСПоКодуИзНоменклатуры.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПолеДляСортировки,
	| 	"""" КАК ФизическаяМетка,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	0 КАК ДополнительныйИдентификатор
	|ПОМЕСТИТЬ вт_ДанныеДляЗаполнения
	|ИЗ
	|	вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_КонтактнаяИнформация КАК КонтактнаяИнформацияОтправителя
	|		ПО (ВЫБОР КОГДА вт_ДанныеДокумента.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеДокумента.Организация = КонтактнаяИнформацияОтправителя.Организация
	|			ИНАЧЕ вт_ДанныеДокумента.СтруктурноеПодразделение = КонтактнаяИнформацияОтправителя.Организация КОНЕЦ)	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КодыГСВСАктуальные КАК СведенияОНоменклатуреГСВСПоКодуИзНоменклатуры
	|		ПО вт_ДанныеДокумента.КодТНВЭД = СведенияОНоменклатуреГСВСПоКодуИзНоменклатуры.КодГСВСПервичный
	| ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурноеПодразделение,
	|	СкладОтправитель";
	
	Возврат ТекстЗапроса + ВССервер.ПолучитьТекстПакетовЗапросаДляЗаполненияЭДВС();
	
КонецФункции

Функция ТекстЗапросаЭСФКонвертацияЕдицицИзмерения() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	Товары.Ссылка КАК ДокументОснование,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ВЫБОР
	|		КОГДА вт_ДокументОснования.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	|		ИНАЧЕ вт_ДокументОснования.ДокументОснование.Склад
	|	КОНЕЦ КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков.Код,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ЕСТЬNULL(ДанныеСтраныМира.КодАльфа2, ""00"") КАК СтранаПроисхожденияТовараКод,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|	И НЕ Товары.ПризнакУчетаНаВиртуальномСкладе
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	Товары.Комментарий КАК Комментарий,
	|	Товары.ДокументОснование КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ Товары.Сумма / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""ИсходныеТовары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	Товары.ТипПошлины КАК ТипПошлины,
	|	Товары.ТипПроисхождения КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	Товары.Комментарий,
	|	Товары.ДокументОснование,
	|	Товары.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЦенаЕдиницаИзмеренияХраненияОстатков * Товары.КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	Товары.СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	""Товары"",
	|	""ЭСФ"",
	|	Товары.ТипПошлины,
	|	Товары.ТипПроисхождения,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары";
	
	Возврат ТекстЗапросаЭСФДокументОснование() + ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СверкаОстатков

Функция ТекстЗапросаСверкаТоваровОрганизацийБУ_ТоварыНаВиртуальныхСкладах() Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыОрганизацийБУОстатки.Организация,
	|	ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
	|	ТоварыОрганизацийБУОстатки.Товар,
	|	СУММА(ТоварыОрганизацийБУОстатки.КоличествоОстаток) КАК ОстатокБУ,
	|	0 КАК ОстатокВС
	|ПОМЕСТИТЬ вт_ПромежуточныеДанные
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийБУ.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ТоварыОрганизацийБУОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|			ПО (ВЫБОР КОГДА ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
	|			ИНАЧЕ ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
	|			И ТоварыОрганизацийБУОстатки.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
	|ГДЕ
	|	ТоварыОрганизацийБУОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
	|	ТоварыОрганизацийБУОстатки.Организация,
	|	ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение,
	|	ТоварыОрганизацийБУОстатки.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладахОстатки.Организация,
	|	ТоварыНаВиртуальныхСкладахОстатки.СтруктурноеПодразделение,
	|	ТоварыНаВиртуальныхСкладахОстатки.Склад,
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура,
	|	0,
	|	СУММА(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток)
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ТоварыНаВиртуальныхСкладахОстатки
	|ГДЕ
	|	ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаВиртуальныхСкладахОстатки.Организация,
	|	ТоварыНаВиртуальныхСкладахОстатки.СтруктурноеПодразделение,
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура,
	|	ТоварыНаВиртуальныхСкладахОстатки.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ПромежуточныеДанные.Организация,
	|	вт_ПромежуточныеДанные.СтруктурноеПодразделение,
	|	вт_ПромежуточныеДанные.Склад,
	|	вт_ПромежуточныеДанные.Товар,
	|	вт_ПромежуточныеДанные.ОстатокБУ,
	|	вт_ПромежуточныеДанные.ОстатокВС,
	|	вт_ПромежуточныеДанные.ОстатокБУ - вт_ПромежуточныеДанные.ОстатокВС КАК Отклонение
	|ИЗ
	|	вт_ПромежуточныеДанные КАК вт_ПромежуточныеДанные";
	
	Возврат ТекстЗапроса;
КонецФункции	

Функция ТекстЗапросаСверкаДанныхБУ_ТоварыНаВиртуальныхСкладах(ВестиСкладскойУчетБУ) Экспорт
	Если ВестиСкладскойУчетБУ Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДанныеБУ.Организация КАК Организация,
		|	ДанныеБУ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	ДанныеБУ.Субконто1 КАК Товар,
		|	СУММА(ДанныеБУ.КоличествоОстаток) КАК ОстатокБУ,
		|	0 КАК ОстатокВС
		|ПОМЕСТИТЬ вт_ПромежуточныеДанные
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ (&МассивСчетовБУ), &ВидыСубконто, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ДанныеБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО ДанныеБУ.Субконто2 = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|			И (ВЫБОР КОГДА ДанныеБУ.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|			ТОГДА ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			ИНАЧЕ ДанныеБУ.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
		|ГДЕ
		|	ДанныеБУ.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеБУ.Субконто1,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
		|	ДанныеБУ.СтруктурноеПодразделение,
		|	ДанныеБУ.Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеБУ.Организация,
		|	ДанныеБУ.СтруктурноеПодразделение,
		|	&СкладПоУмолчанию,
		|	ДанныеБУ.Субконто1,
		|	СУММА(ДанныеБУ.КоличествоОстаток),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ (&МассивСчетовПрочие), &ВидыСубконтоНоменклатура, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ДанныеБУ
		|ГДЕ
		|	ДанныеБУ.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеБУ.Организация,
		|	ДанныеБУ.СтруктурноеПодразделение,
		|	&СкладПоУмолчанию,
		|	ДанныеБУ.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыВС.Организация,
		|	ТоварыВС.СтруктурноеПодразделение,
		|	ТоварыВС.Склад,
		|	ТоварыВС.Номенклатура,
		|	0,
		|	СУММА(ТоварыВС.КоличествоОстаток)
		|ИЗ
		|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ТоварыВС
		|ГДЕ
		|	ТоварыВС.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыВС.Организация,
		|	ТоварыВС.СтруктурноеПодразделение,
		|	ТоварыВС.Номенклатура,
		|	ТоварыВС.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_ПромежуточныеДанные.Организация,
		|	вт_ПромежуточныеДанные.СтруктурноеПодразделение,
		|	вт_ПромежуточныеДанные.Склад,
		|	вт_ПромежуточныеДанные.Товар,
		|	вт_ПромежуточныеДанные.ОстатокБУ,
		|	вт_ПромежуточныеДанные.ОстатокВС,
		|	вт_ПромежуточныеДанные.ОстатокБУ - вт_ПромежуточныеДанные.ОстатокВС КАК Отклонение
		|ИЗ
		|	вт_ПромежуточныеДанные КАК вт_ПромежуточныеДанные";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДанныеБУ.Организация КАК Организация,
		|	ДанныеБУ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	&СкладПоУмолчанию КАК Склад,
		|	ДанныеБУ.Субконто1 КАК Товар,
		|	СУММА(ДанныеБУ.КоличествоОстаток) КАК ОстатокБУ,
		|	0 КАК ОстатокВС
		|ПОМЕСТИТЬ вт_ПромежуточныеДанные
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ (&МассивСчетовБУ), &ВидыСубконто, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ДанныеБУ
		|ГДЕ
		|	ДанныеБУ.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеБУ.Субконто1,
		|	&СкладПоУмолчанию,
		|	ДанныеБУ.СтруктурноеПодразделение,
		|	ДанныеБУ.Организация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыВС.Организация,
		|	ТоварыВС.СтруктурноеПодразделение,
		|	ТоварыВС.Склад,
		|	ТоварыВС.Номенклатура,
		|	0,
		|	СУММА(ТоварыВС.КоличествоОстаток)
		|ИЗ
		|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)) КАК ТоварыВС
		|ГДЕ
		|	ТоварыВС.КоличествоОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыВС.Организация,
		|	ТоварыВС.СтруктурноеПодразделение,
		|	ТоварыВС.Номенклатура,
		|	ТоварыВС.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_ПромежуточныеДанные.Организация,
		|	вт_ПромежуточныеДанные.СтруктурноеПодразделение,
		|	вт_ПромежуточныеДанные.Склад,
		|	вт_ПромежуточныеДанные.Товар,
		|	вт_ПромежуточныеДанные.ОстатокБУ,
		|	вт_ПромежуточныеДанные.ОстатокВС,
		|	вт_ПромежуточныеДанные.ОстатокБУ - вт_ПромежуточныеДанные.ОстатокВС КАК Отклонение
		|ИЗ
		|	вт_ПромежуточныеДанные КАК вт_ПромежуточныеДанные";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции	

#КонецОбласти

#Область ЗапросыПоРасходнымДокументам

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаСписаниеТоваров(ПервыйЗапрос = Истина)
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Прочие) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Товары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""СписаниеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаТребованиеНакладная(ПервыйЗапрос = Истина)
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Материалы.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Материалы.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Материалы.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Материалы.Ссылка.Дата,
	|	Материалы.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Производство) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Материалы.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Материалы.Ссылка КАК ДокументОснование,
	|	Материалы.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Материалы.Номенклатура КАК Товар,
	|	Материалы.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Материалы.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Материалы.ЕдиницаИзмерения,
	|	Материалы.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Материалы.Количество КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ТребованиеНакладная"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ТребованиеНакладная.Материалы КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаПеремещениеТоваров(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Организация КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделениеОтправитель КАК СтруктурноеПодразделение,
	|	Товары.Ссылка.СтруктурноеПодразделениеПолучатель КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ВЫБОР 
	|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями И (Товары.Ссылка.СтруктурноеПодразделениеОтправитель <> Товары.Ссылка.СтруктурноеПодразделениеПолучатель)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПеремещениеМеждуФилиалами)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
	|	КОНЕЦ КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.СкладОтправитель КАК СкладОтправитель,
	|	Товары.Ссылка.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Товары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПеремещениеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаКомплектацияНоменклатуры(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Комплектация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Разукомплектация)
	|	КОНЕЦ КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	Товары.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ""ИсходныеТовары""
	|		ИНАЧЕ ""Товары""
	|	КОНЕЦ КАК ИмяТабличнойЧасти,
	|	""КомплектацияНоменклатуры"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ИСТИНА КАК ВозможенЭкспорт,
	|	ИСТИНА КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ИСТИНА КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.КомплектацияНоменклатуры.Комплектующие КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Комплектация.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	Комплектация.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
	|	Комплектация.Дата,
	|	Комплектация.Дата,
	|	Комплектация.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ВЫБОР
	|		КОГДА Комплектация.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Комплектация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Разукомплектация)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(Комплектация.Комментарий КАК СТРОКА(400)),
	|	Комплектация.Ссылка,
	|	Комплектация.Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	Комплектация.Номенклатура,
	|	Комплектация.Номенклатура.НаименованиеПолное,
	|	"""",
	|	Комплектация.Номенклатура.КодТНВЭД,
	|	Комплектация.ЕдиницаИзмерения,
	|	Комплектация.ЕдиницаИзмерения.КодЭСФ,
	|	Комплектация.Количество,
	|	0,
	|	0,
	|	&КазахстанСсылкаСтранаПроисхождения,
	|	&КазахстанКодАльфа2,
	|	"""",
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	ВЫБОР
	|		КОГДА Комплектация.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ""Товары""
	|		ИНАЧЕ ""ИсходныеТовары""
	|	КОНЕЦ,
	|	""КомплектацияНоменклатуры"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено),
	|	ИСТИНА,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(5)),
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(11)),
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(3))
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК Комплектация
	|ГДЕ
	|	Комплектация.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаЭСФДокументОснование()
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.СчетФактура
	|ПОМЕСТИТЬ вт_СчетаФактуры
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.Ссылка В(&МассивДокументов)
	|	И ЭСФ.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|	И ЭСФ.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СчетаФактуры.ЭСФ КАК ЭСФ,
	|	ЕСТЬNULL(СчетФактураПолученный.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ДокументОснования
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_СФ.СчетФактура
	|			ИЗ
	|				вт_СчетаФактуры КАК вт_СФ)
	|	И СчетФактураПолученный.НомерСтроки = 1
	|
	|;
	|";
	Возврат ТекстЗапроса;
КонецФункции

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаЭСФ(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Организация КАК ОрганизацияПолучатель,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА вт_ДокументОснования.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		ИНАЧЕ вт_ДокументОснования.ДокументОснование.СтруктурноеПодразделение
	|	КОНЕЦ КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата,
	|	Товары.Ссылка.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ВЫБОР
	|		КОГДА вт_ДокументОснования.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ вт_ДокументОснования.ДокументОснование.Склад
	|	КОНЕЦ КАК СкладПолучатель,
	|	Товары.Ссылка.Склад КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|	И НЕ Товары.ПризнакУчетаНаВиртуальномСкладе
	|	";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выборка товаров для формирования ЭДВС с типом "Остатки" на основании входящего ЭСФ
//
Функция ТекстЗапросаЭСФОстаткиЭДВС(ПервыйЗапрос = Истина)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Ссылка.ДатаОборота КАК ДатаОборота,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков
	|			ТОГДА Товары.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ Товары.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА Товары.КоэффициентПересчета <> 1
	|			ТОГДА Товары.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ Товары.ЕдиницаИзмеренияКод
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА Товары.КоэффициентПересчета <> 1
	|			ТОГДА Товары.Количество * Товары.КоэффициентПересчета
	|		ИНАЧЕ Товары.Количество
	|	КОНЕЦ КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	ВЫБОР
	|		КОГДА (Товары.КоэффициентПересчета <> 1 ИЛИ Товары.КоэффициентПересчета <> 0)
	|					И Товары.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|		ИНАЧЕ Товары.Цена
	|	КОНЕЦ КАК Цена,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	Товары.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ЭСФ.ДокументПодтверждающийПоставкуНомер,
	|	ЭСФ.Ссылка
	|ПОМЕСТИТЬ ВТ_ЭСФ
	|ИЗ 
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.Ссылка В (&МассивДокументов)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Товары.Ссылка КАК Ссылка,
	|	вт_Товары.Организация КАК Организация,
	|	вт_Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	вт_Товары.Дата КАК Дата,
	|	вт_Товары.Номер КАК Номер,
	|	вт_Товары.Комментарий КАК Комментарий,
	|	вт_Товары.СкладОтправитель КАК СкладОтправитель,
	|	вт_Товары.Товар КАК Товар,
	|	вт_Товары.ТоварНаименование КАК ТоварНаименование,
	|	вт_Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	вт_Товары.КодТНВЭД КАК КодТНВЭД,
	|	вт_Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	вт_Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	вт_Товары.Количество КАК Количество,
	|	вт_Товары.Сумма КАК Сумма,
	|	вт_Товары.Цена КАК Цена,
	|	вт_Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	вт_Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	вт_Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	вт_Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	вт_Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	вт_Товары.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе
	|ПОМЕСТИТЬ вт_ТоварыВСЭСФ
	|ИЗ
	|	вт_ТоварыЭСФ КАК вт_Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЭСФ КАК ЭСФ 
	|		ПО вт_Товары.Ссылка = ЭСФ.Ссылка
	|ГДЕ вт_Товары.ПризнакУчетаНаВиртуальномСкладе = ИСТИНА
	|	И ПОДСТРОКА(ЭСФ.ДокументПодтверждающийПоставкуНомер, 0, 6) <> ""KZ-SNT""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	""00"" КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|ГДЕ
	|	Товары.ПризнакУчетаНаВиртуальномСкладе = ЛОЖЬ
	|	И Товары.ДатаОборота < &ДатаПереходаНаВиртСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	Товары.СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка),
	|	Товары.Дата,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)),
	|	Товары.Ссылка,
	|	Товары.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.Сумма,
	|	Товары.Цена,
	|	"""",
	|	"""",
	|	Товары.ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	""Товары"",
	|	""ЭСФ"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_ТоварыВСЭСФ КАК Товары ";

	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выборка товаров для формирования ЭДВС с типом "Остатки" на основании исходящего ЭСФ, 
// только для вида Дополнительный
Функция ТекстЗапросаЭСФИсходящийОстаткиЭДВС(ПервыйЗапрос = Истина)

ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.Направление КАК Направление,
	|	ЭСФ.Организация КАК Организация,
	|	ЭСФ.Номер КАК Номер,
	|	ЭСФ.Дата КАК Дата,
	|	ЕСТЬNULL(ОсновнойЭСФ.ДатаОборота, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ОсновнойЭСФДатаОборота,
	|	ЭСФ.Склад КАК СкладОтправитель,
	|	ВЫРАЗИТЬ(ЭСФ.Комментарий КАК СТРОКА(400)) КАК Комментарий
	|ПОМЕСТИТЬ вт_ЭСФ
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭСФ Как ОсновнойЭСФ
	|			ПО ЭСФ.СвязанныйЭСФ = ОсновнойЭСФ.Ссылка
	|ГДЕ
	|	ЭСФ.Ссылка В(&МассивДокументов)
	|	И ЭСФ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Исходящий)
	|	И ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	вт_ЭСФ.ОсновнойЭСФДатаОборота КАК ОсновнойЭСФДатаОборота,
	|	вт_ЭСФ.Организация КАК Организация,
	|	вт_ЭСФ.Дата КАК Дата,
	|	вт_ЭСФ.Номер КАК Номер,
	|	вт_ЭСФ.Комментарий КАК Комментарий,
	|	вт_ЭСФ.СкладОтправитель КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	-1 * Товары.Количество КАК Количество,
	|	-1 * Товары.СуммаБезНалогов КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество <> 0 
	|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество) КАК ЧИСЛО(17, 2))
	|		ИНАЧЕ Товары.Цена
	|	КОНЕЦ КАК Цена,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	Товары.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЭСФ КАК вт_ЭСФ
	|		ПО Товары.Ссылка = вт_ЭСФ.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|	И вт_ЭСФ.ОсновнойЭСФДатаОборота < &ДатаПереходаНаВиртСклад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПодразделенияОрганизацийПустаяСсылка КАК СтруктурноеПодразделение,
	|	&ПодразделенияОрганизацийПустаяСсылка КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|";
	
	//|ГДЕ
	//|	Товары.ОсновнойЭСФДатаОборота < &ДатаПереходаНаВиртСклад";

	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;	

КонецФункции 

// Выборка товаров для формирования ЭДВС с типом "Списание" на основании входящего ЭСФ
Функция ТекстЗапросаЭСФСписаниеЭДВС(ПервыйЗапрос = Истина)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Ссылка.ДатаОборота КАК ДатаОборота,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков
	|			ТОГДА Товары.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ Товары.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА Товары.КоэффициентПересчета <> 1
	|			ТОГДА Товары.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ Товары.ЕдиницаИзмеренияКод
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА Товары.КоэффициентПересчета <> 1
	|			ТОГДА Товары.Количество * Товары.КоэффициентПересчета
	|		ИНАЧЕ Товары.Количество
	|	КОНЕЦ КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	ВЫБОР
	|		КОГДА (Товары.КоэффициентПересчета <> 1 ИЛИ Товары.КоэффициентПересчета <> 0)
	|					И Товары.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|		ИНАЧЕ Товары.Цена
	|	КОНЕЦ КАК Цена,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.Ссылка.Вид <> ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ТоварыЭСФ.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ) КАК ПризнакУчетаНаВиртуальномСкладеГСВС,
	|	СправочникИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
	|	СправочникИсточникиПроисхождения.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	СправочникИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	СправочникИсточникиПроисхождения.ТипПошлины КАК ТипПошлины,
	|	СправочникИсточникиПроисхождения.ТипПроисхождения КАК ТипПроисхождения,
	|	ЕСТЬNULL(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	вт_ТоварыЭСФ.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	вт_ТоварыЭСФ.КодТНВЭД КАК КодТНВЭД,
	|	вт_ТоварыЭСФ.Цена КАК Цена,
	|	вт_ТоварыЭСФ.Сумма КАК Сумма,
	|	СправочникИсточникиПроисхождения.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	СправочникИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	вт_ТоварыЭСФ.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	вт_ТоварыЭСФ.Организация КАК Организация,
	|	вт_ТоварыЭСФ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	вт_ТоварыЭСФ.ДатаОборота КАК ДатаОборота,
	|	вт_ТоварыЭСФ.Дата КАК Дата,
	|	вт_ТоварыЭСФ.Номер КАК Номер,
	|	вт_ТоварыЭСФ.СкладОтправитель КАК СкладОтправитель,
	|	вт_ТоварыЭСФ.Ссылка КАК Ссылка,
	|	вт_ТоварыЭСФ.ТоварНаименование КАК ТоварНаименование
	|ПОМЕСТИТЬ ТоварыНеПодлежащиеУчету
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(
	|			&ДатаОстатка,
	|			(Номенклатура, ИсточникПроисхождения) В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					вт_ТоварыЭСФ.Товар,
	|					вт_ТоварыЭСФ.ИсточникПроисхождения
	|				ИЗ
	|					вт_ТоварыЭСФ КАК вт_ТоварыЭСФ)) КАК ТоварыНаВиртуальныхСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК СправочникИсточникиПроисхождения
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = СправочникИсточникиПроисхождения.Ссылка
	|			И ТоварыНаВиртуальныхСкладахОстатки.Номенклатура = СправочникИсточникиПроисхождения.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&ДатаОстатка) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО (СправочникИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ТоварыЭСФ КАК вт_ТоварыЭСФ
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.Номенклатура = вт_ТоварыЭСФ.Товар
	|			И ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = вт_ТоварыЭСФ.ИсточникПроисхождения
	|			И ТоварыНаВиртуальныхСкладахОстатки.Организация = вт_ТоварыЭСФ.Организация
	|			И ТоварыНаВиртуальныхСкладахОстатки.Склад = вт_ТоварыЭСФ.СкладОтправитель
	|	
	|ГДЕ
	|	ЕСТЬNULL(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток, 0) > 0
	|	И НЕ ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ)
	|	И СправочникИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.СписаниеТоваровНеВС) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ОтсутствуетТребованиеСНТ) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоОстаток КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	Товары.ТипПошлины КАК ТипПошлины,
	|	Товары.ТипПроисхождения КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	ТоварыНеПодлежащиеУчету КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК ДанныеСтраныМира
	|		ПО Товары.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка";

	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция ПолучитьЗначениеПоУмолчанию(ИмяЗначения) Экспорт
	Возврат ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), ИмяЗначения);
КонецФункции

Функция ПолучитьПустоеЗначениеИсточниковПроисхождения() Экспорт
	Возврат Справочники.ИсточникиПроисхождения.ПустаяСсылка();
КонецФункции

Функция ПолучитьВиртуальныйСклад(ДокументСсылка) Экспорт
	
	ВиртуальныйСклад = Справочники.ВиртуальныеСклады.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		Если ЭСФСерверПереопределяемый.ЕстьРеквизитДокумента("Склад", ДокументСсылка.Метаданные()) Тогда
			
			СтруктураРезультата = ЭСФСерверПереопределяемый.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Склад, Организация, СтруктурноеПодразделение");
			
			Склад 						= СтруктураРезультата.Склад;
			Организация 				= СтруктураРезультата.Организация;
			СтруктурноеПодразделение 	= СтруктураРезультата.СтруктурноеПодразделение;
			
			Если ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда
				ВиртуальныйСклад = ВССервер.ПолучитьСоответствиеСклада(Склад, СтруктурноеПодразделение);
			Иначе
				ВиртуальныйСклад = ВССервер.ПолучитьСоответствиеСклада(Склад, Организация);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВиртуальныйСклад;
	
КонецФункции

Функция ПолучитьПрефиксВидаДокумента(ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "ГТДИмпорт" Тогда
		ПрефиксНомера = "ДТ"
	ИначеЕсли ИмяДокумента = "ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов" Тогда
		ПрефиксНомера = "ЗВ"; 	
	ИначеЕсли ИмяДокумента = "ОтчетПроизводстваЗаСмену" Тогда
		ПрефиксНомера = "ОП";
	ИначеЕсли ИмяДокумента = "ОприходованиеТоваров" Тогда
		ПрефиксНомера = "ОТ";
	ИначеЕсли ИмяДокумента = "ПоступлениеИзПереработки" Тогда
		ПрефиксНомера = "ПП";
	ИначеЕсли ИмяДокумента = "ВводОстатков" Тогда
		ПрефиксНомера = "ВО";
	ИначеЕсли ИмяДокумента = "СписаниеТоваров" Тогда
		ПрефиксНомера = "СТ";
	ИначеЕсли ИмяДокумента = "ТребованиеНакладная" Тогда
		ПрефиксНомера = "ТН";
	ИначеЕсли ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		ПрефиксНомера = "КН";
	ИначеЕсли ИмяДокумента = "ПеремещениеТоваров" Тогда
		ПрефиксНомера = "ПТ";
	ИначеЕсли ИмяДокумента = "ЭСФ" Тогда
		ПрефиксНомера = "ЭСФ";
	ИначеЕсли ИмяДокумента = "ПоступлениеТоваровУслуг" Тогда
		ПрефиксНомера = "ПТУ";
	ИначеЕсли ИмяДокумента = "РеализацияТоваровУслуг" Тогда
		ПрефиксНомера = "РТУ";
	Иначе
		ПрефиксНомера = "";	
	КонецЕсли;	
			
	Возврат ПрефиксНомера;	
	
КонецФункции	

Функция ПроверитьСоответствиеСкладовИВиртуальныхСкладов(ПараметрыПроверки) Экспорт 
	
	Запрос 			= Новый Запрос;
	ДополнительныеПараметрыЗапросаБУ = ПолучитьДополнительныеПараметрыЗапросаБУ();
	Если Не ДополнительныеПараметрыЗапросаБУ.ВестиСкладскойУчетБУ Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	Если ПараметрыПроверки.СпособЗаполнения = "ТоварамОрганизацииБУ" Тогда
		Запрос.Текст 	= 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТоварыОрганизацийБУОстатки.Склад,
		|	ТоварыОрганизацийБУОстатки.Организация,
		|	ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение,
		|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийБУ.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение в (&МассивСтруктурныхПодразделений)) КАК ТоварыОрганизацийБУОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|			ПО (ВЫБОР КОГДА ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|			ТОГДА ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			ИНАЧЕ ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
		|			И ТоварыОрганизацийБУОстатки.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|ГДЕ
		|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад ЕСТЬ NULL ";	
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеБУ.Организация КАК Организация,
		|	ДанныеБУ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад,
		|	ДанныеБУ.Субконто1 КАК Склад
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ (&МассивСчетовБУ), &ВидыСубконтоСклады, Организация В (&МассивОрганизаций) И СтруктурноеПодразделение в (&МассивСтруктурныхПодразделений)) КАК ДанныеБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО ДанныеБУ.Субконто1 = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|			И ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И (ВЫБОР КОГДА ДанныеБУ.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|			ТОГДА ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			ИНАЧЕ ДанныеБУ.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)
		|ГДЕ
		|	ДанныеБУ.КоличествоОстаток <> 0
		| 	И СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад ЕСТЬ NULL";
		Запрос.УстановитьПараметр("МассивСчетовБУ"		, ДополнительныеПараметрыЗапросаБУ.МассивСчетовБУ);
		ВидыСубконтоСклады = Новый Массив;
		ВидыСубконтоСклады.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады);
		Запрос.УстановитьПараметр("ВидыСубконтоСклады"	, ВидыСубконтоСклады);
	КонецЕсли;
	
	Если ПараметрыПроверки.МассивСтруктурныхПодразделений.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст	,"И СтруктурноеПодразделение в (&МассивСтруктурныхПодразделений)", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст	,"(ВЫБОР КОГДА ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
												|			ТОГДА ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
												|			ИНАЧЕ ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)", "ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация");
		Запрос.Текст = СтрЗаменить(Запрос.Текст	,"(ВЫБОР КОГДА ДанныеБУ.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
												|			ТОГДА ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
												|			ИНАЧЕ ДанныеБУ.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)", "ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация");

	КонецЕсли;
	
	ДатаОстатка 	= КонецДня(НачалоДня(ПараметрыПроверки.ДатаПереходаНаУчетТоваровВС) - 1);
	Запрос.УстановитьПараметр("ДатаОстатка"						, Новый Граница(ДатаОстатка, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МассивОрганизаций"				, ПараметрыПроверки.МассивОрганизаций);
	Запрос.УстановитьПараметр("МассивСтруктурныхПодразделений"	, ПараметрыПроверки.МассивСтруктурныхПодразделений);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьКодЕдиницыИзмерения(ЕдиницаИзмерения, Товар) Экспорт
	
	//Параметр Товар добавлен для совместиммости с линейкой ЕРП. Т.к. в них ЕИ подчинен номенклатуре.
	//
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторЕдиницИзмерения.КодЭСФ
	|ИЗ
	|	Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
	|ГДЕ
	|	КлассификаторЕдиницИзмерения.Ссылка = &ЕдиницаИзмерения";
	
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЕдиницаИзмеренияКод = "";
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		ЕдиницаИзмеренияКод = ВыборкаДетальныеЗаписи.КодЭСФ;	

	КонецЕсли;
	
	Возврат ЕдиницаИзмеренияКод;
	
КонецФункции

Функция ПолучитьКодСтраныПроисхожденияТовара(СтранаПроисхожденияТовара) Экспорт
	
	СтранаПроисхожденияТовараКод = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтранаПроисхожденияТовара,"КодАльфа2");
	
	Возврат СтранаПроисхожденияТовараКод;
	
КонецФункции

Функция ПолучитьПредопределеннуюСтрануКазахстан() Экспорт
	Возврат Справочники.КлассификаторСтранМира.Казахстан;	
КонецФункции

Функция ОпределитьНомерПозицииВДекларацииИлиЗаявленииДляИсточникаПроисхождения(ИсточникПроисхождения) Экспорт
	
	Структура=Новый Структура;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
	|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС,
	|	ИсточникиПроисхождения.ДатаСертификатаПроисхожденияТовара,
	|	ИсточникиПроисхождения.МеткаТовара,
	|	ИсточникиПроисхождения.СтранаПроисхожденияТовара.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	ИсточникиПроисхождения.КодТНВЭД,
	|	ИсточникиПроисхождения.ГСВС,
	|	ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС,
	|	ИсточникиПроисхождения.ТипПошлины
	|ИЗ
	|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&Дата, ) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО ИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС
	|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
	|ГДЕ
	|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения";
	
	Запрос.УстановитьПараметр("ИсточникПроисхождения", ИсточникПроисхождения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Структура.Вставить("НомерПозицииВДекларацииИлиЗаявлении",ВыборкаДетальныеЗаписи.НомерПозицииВДекларацииИлиЗаявлении);
		Структура.Вставить("НомерЗаявленияВРамкахТС",ВыборкаДетальныеЗаписи.НомерЗаявленияВРамкахТС);
		Возврат Структура;
	Иначе 
		Возврат Новый Структура("НомерПозицииВДекларацииИлиЗаявлении,НомерЗаявленияВРамкахТС","","");
	КонецЕсли;

КонецФункции

Функция ПолучитьДанныеИсточникаПроисхождения(Дата,ИсточникПроисхождения,Склад = Неопределено, ДляДокументаЭСФ, ДляДокументаСНТ = Ложь) Экспорт
		
	Структура = Новый Структура("НомерПозицииВДекларацииИлиЗаявлении, НомерЗаявленияВРамкахТС, ФизическаяМетка, КодТНВЭД, ТоварНаименованиеВРамкахТС, 
								|ТипПроисхождения, ГСВС, ПризнакПроисхождения, ИдентификаторТовара, НомерГТД, ТипПошлины, СтранаПроисхожденияТовара,
								|СтранаПроисхожденияТовараКод, ДатаСертификатаПроисхождения, ДополнительныйИдентификатор, ПризнакУчетаНаВиртуальномСкладе,
								|СоставнойКодГСВС, GTIN");

	Запрос = Новый Запрос;
	
	Если ДляДокументаЭСФ Тогда
		ТекстЗапроса ="
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникиПроисхождения.ГСВС КАК НоменклатураГСВСизИП,
		|	ИсточникиПроисхождения.ГСВС.КодГСВС КАК КодТНВЭДизИП
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВСизИП
		|ИЗ
		|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|ГДЕ
		|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения
		|	И НЕ ИсточникиПроисхождения.ГСВС.КодГСВС ЕСТЬ NULL
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОстаткиГТД.НоменклатураГСВСизИП КАК НоменклатураГСВСизИП,
		|	ОстаткиГТД.КодТНВЭДизИП КАК КодТНВЭДизИП,
		|	СведенияОНоменклатуреГСВС.ПолныйКодГСВС КАК ПолныйКодГСВСизИП
		|ПОМЕСТИТЬ ГСВСнеАктивенНетНаследника
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВСизИП КАК ОстаткиГТД
		|		ПО (ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10) = ОстаткиГТД.КодТНВЭДизИП)
		|			И (НЕ СведенияОНоменклатуреГСВС.ПризнакАктивности)
		|			И (СведенияОНоменклатуреГСВС.НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД))
		|			И (СведенияОНоменклатуреГСВС.Период <= &Дата)
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникиПроисхождения.ГСВС КАК НоменклатураГСВС,
		|	1 КАК ПриоритетПоискаНоменклатурыГСВС,
		|	ИсточникиПроисхождения.ГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВС
		|ИЗ
		|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|ГДЕ
		|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения
		|	И НЕ ИсточникиПроисхождения.ГСВС.КодГСВС ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НоменклатураГСВС.Ссылка,
		|	2,
		|	НоменклатураГСВС.КодГСВС
		|ИЗ
		|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
		|ГДЕ
		|	НоменклатураГСВС.КодГСВС = &КодТНВЭД 
		|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)
		|
		|ОБЪЕДИНИТЬ
		//Выбираем все записи по кодам ТНВЭД из номенклатуры/объекта. Если запись активна, 
		//то приоритет 3, иначе 4 (означает, что будем смотреть потомка)
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОНоменклатуреГСВС.НоменклатураГСВС,
		|	ВЫБОР
		|		КОГДА СведенияОНоменклатуреГСВС.ПризнакАктивности
		|				И &Дата >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВС.ДействиеЗаписиНачальнаяДата, ДЕНЬ)
		|				И &Дата <= ВЫБОР
		|					КОГДА СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА &Дата
		|					ИНАЧЕ СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата
		|				КОНЕЦ
		|			ТОГДА 3
		|		ИНАЧЕ 4
		|	КОНЕЦ,
		|	ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10)
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|ГДЕ (ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10) = &КодТНВЭД)
		|			И (СведенияОНоменклатуреГСВС.НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД))
		|			И (СведенияОНоменклатуреГСВС.Период <= &Дата)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПриоритетПоискаНоменклатурыГСВС,
		|	КодГСВС
		|;
		//В таблице будут содержаться данные по номенклатуре ГСВС и код ГСВС из источника и номенклатуры документа
		//получать сведения будем по номенклатуре ГСВС для обоих записей
		//В основном запросе приоритет заполнения данных будет идти сначала по источник (соедение по ГСВС из источника,
		//если там нет данных, то уже по приоритету из номенклатуры)
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВС,
		|	МИНИМУМ(ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС) КАК ПриоритетПоискаНоменклатурыГСВС
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВСМинимум
		|ИЗ
		|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НоменклатураГСВС.КодГСВС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодГСВС,
		|	ПриоритетПоискаНоменклатурыГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВТ_НоменклатураГСВС.НоменклатураГСВС) КАК НоменклатураГСВС,
		|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВСПервичный
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВССгруппированная
		|ИЗ
		|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВСМинимум КАК ВТ_НоменклатураГСВСМинимум
		|		ПО ВТ_НоменклатураГСВС.КодГСВС = ВТ_НоменклатураГСВСМинимум.КодГСВС
		|			И ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС = ВТ_НоменклатураГСВСМинимум.ПриоритетПоискаНоменклатурыГСВС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НоменклатураГСВС.КодГСВС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НоменклатураГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС КАК НоменклатураГСВС,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий КАК ПризнакПеречняИзьятий,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПолныйКодГСВС КАК ПолныйКодГСВС,
		|	ПОДСТРОКА(СведенияОНоменклатуреГСВССрезПоследних.ПолныйКодГСВС, 13, 10) КАК КодГСВС,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности КАК ПризнакАктивности,
		|	НоменклатураГСВССгруппированная.КодГСВСПервичный КАК КодГСВСПервичный,
		|	0 КАК Приоритет
		|ПОМЕСТИТЬ ВТ_КодыГСВСАктуальные
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&Дата,
		|			НоменклатураГСВС В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Т.НоменклатураГСВС
		|				ИЗ
		|					ВТ_НоменклатураГСВССгруппированная КАК Т)) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВССгруппированная КАК НоменклатураГСВССгруппированная
		|		ПО (НоменклатураГСВССгруппированная.НоменклатураГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
		|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
		|			И (&Дата >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиНачальнаяДата, ДЕНЬ))
		|			И (&Дата <= ВЫБОР
		|				КОГДА СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА &Дата
		|				ИНАЧЕ СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата
		|			КОНЕЦ)
		|ИНДЕКСИРОВАТЬ ПО
		|	КодГСВСПервичный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
		|	ИсточникиПроисхождения.Номенклатура,
		|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
		|	ИсточникиПроисхождения.МеткаТовара КАК ФизическаяМетка,
		|	ВЫБОР
		|		КОГДА ВТ_КодыГСВСАктуальныеПоисточнику.КодГСВС ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(ВТ_КодыГСВСАктуальныеПоНоменклатуре.КодГСВС, ИсточникиПроисхождения.КодТНВЭД)
		|		ИНАЧЕ ВТ_КодыГСВСАктуальныеПоисточнику.КодГСВС
		|	КОНЕЦ КАК КодТНВЭД,
		|	ВЫБОР
		|		КОГДА ИсточникиПроисхождения.ТипПроисхождения = ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт)
		|			ТОГДА ЕСТЬNULL(ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС, """")
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ТоварНаименованиеВРамкахТС,
		|	ИсточникиПроисхождения.ТипПроисхождения,
		|	ВЫБОР
		|		КОГДА ВТ_КодыГСВСАктуальныеПоисточнику.ПризнакПеречняИзьятий ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(ВТ_КодыГСВСАктуальныеПоНоменклатуре.ПризнакПеречняИзьятий, ЛОЖЬ)
		|		ИНАЧЕ ВТ_КодыГСВСАктуальныеПоисточнику.ПризнакПеречняИзьятий
		|	КОНЕЦ КАК ГСВСВходитВПеречень,
		|	ИсточникиПроисхождения.ГСВС,
		|	ИсточникиПроисхождения.ТипПошлины,
		|	ИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
		|	ИсточникиПроисхождения.СтранаПроисхожденияТовара.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
		|	ИсточникиПроисхождения.ДатаСертификатаПроисхожденияТовара КАК ДатаСертификатаПроисхождения,
		|	ИсточникиПроисхождения.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
		|	ИсточникиПроисхождения.GTIN,
		|	ВЫБОР
		|		КОГДА ВТ_КодыГСВСАктуальныеПоисточнику.ПризнакУчетаНаВиртуальномСкладе ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(ВТ_КодыГСВСАктуальныеПоНоменклатуре.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ)
		|		ИНАЧЕ ВТ_КодыГСВСАктуальныеПоисточнику.ПризнакУчетаНаВиртуальномСкладе
		|	КОНЕЦ КАК ПризнакУчетаНаВиртуальномСкладеГСВС,
		|	ЕСТЬNULL(ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе,Ложь) КАК ПризнакУчетаНаВиртуальномСкладе,
		|	ВЫБОР
		|		КОГДА ГСВСнеАктивенНетНаследника.ПолныйКодГСВСизИП ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_КодыГСВСАктуальныеПоисточнику.ПолныйКодГСВС ЕСТЬ NULL
		|						ТОГДА ЕСТЬNULL(ВТ_КодыГСВСАктуальныеПоНоменклатуре.ПолныйКодГСВС, """")
		|					ИНАЧЕ ВТ_КодыГСВСАктуальныеПоисточнику.ПолныйКодГСВС
		|				КОНЕЦ
		|		ИНАЧЕ ГСВСнеАктивенНетНаследника.ПолныйКодГСВСизИП
		|	КОНЕЦ КАК ПолныйКодГСВС,
		|	%ТекстПоляУслугаСпрНоменклатура
		|ИЗ
		|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КодыГСВСАктуальные КАК ВТ_КодыГСВСАктуальныеПоисточнику
		|		ПО ИсточникиПроисхождения.ГСВС = ВТ_КодыГСВСАктуальныеПоисточнику.НоменклатураГСВС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО ИсточникиПроисхождения.Номенклатура = СпрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КодыГСВСАктуальные КАК ВТ_КодыГСВСАктуальныеПоНоменклатуре
		|		ПО СпрНоменклатура.КодТНВЭД = ВТ_КодыГСВСАктуальныеПоНоменклатуре.КодГСВСПервичный
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГСВСнеАктивенНетНаследника КАК ГСВСнеАктивенНетНаследника
		|		ПО ИсточникиПроисхождения.ГСВС.КодГСВС = ГСВСнеАктивенНетНаследника.КодТНВЭДизИП
		|ГДЕ
		|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения";
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
		|	ИсточникиПроисхождения.Номенклатура,
		|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
		|	ИсточникиПроисхождения.МеткаТовара КАК ФизическаяМетка,
		|	ИсточникиПроисхождения.КодТНВЭД,
		|	ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС,
		|	ИсточникиПроисхождения.ТипПроисхождения,
		|	ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий, ЛОЖЬ) КАК ГСВСВходитВПеречень,
		|	ИсточникиПроисхождения.ГСВС,
		|	ИсточникиПроисхождения.ТипПошлины,
		|	ИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
		|	ИсточникиПроисхождения.СтранаПроисхожденияТовара.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
		|	ИсточникиПроисхождения.ДатаСертификатаПроисхожденияТовара КАК ДатаСертификатаПроисхождения,
		|	ИсточникиПроисхождения.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
		|	ИсточникиПроисхождения.GTIN,
		|	ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ) КАК ПризнакУчетаНаВиртуальномСкладеГСВС,
		|	ЕСТЬNULL(ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ) КАК ПризнакУчетаНаВиртуальномСкладе,
		|	ЕСТЬNULL(СведенияОНоменклатуреГСВС.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ПериодСведенияОНоменклатуреГСВС,
		|	ЕСТЬNULL(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, """") КАК ПолныйКодГСВС,
		|	%ТекстПоляУслугаСпрНоменклатура
		|ИЗ
		|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&Дата, ) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ПО ИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС
		|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО ИсточникиПроисхождения.Номенклатура = СпрНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|		ПО (СведенияОНоменклатуреГСВС.НоменклатураГСВС = ИсточникиПроисхождения.ГСВС)
		|			И (СведенияОНоменклатуреГСВС.Период <= %ДатаДокументПартии%ИсточникиПроисхождения%)
		|ГДЕ
		|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодСведенияОНоменклатуреГСВС УБЫВ";
		
		ВССервер.ДополнитьТекстЗапросаДатойДокументаПартии(ТекстЗапроса);
		
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ТекстПоляУслугаСпрНоменклатура", "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	Запрос.Текст = ТекстЗапроса;	
	Запрос.УстановитьПараметр("ИсточникПроисхождения", ИсточникПроисхождения);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("КодТНВЭД", ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(ИсточникПроисхождения.Номенклатура, "КодТНВЭД"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Структура, ВыборкаДетальныеЗаписи, , );
		
		Структура.СоставнойКодГСВС = ВыборкаДетальныеЗаписи.ПолныйКодГСВС;
		
		//Заполнение признака происхождения
		Если ВыборкаДетальныеЗаписи.Услуга Тогда
			Структура.ПризнакПроисхождения = "6";
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТипПроисхождения) ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень) Тогда
			
			Структура.ПризнакПроисхождения = "5";
			
			ТекстОшибки = НСтр(
			"ru = 'Для товара ""%1"" не указан Тип происхождения или отсутствуют данные по ГСВС в источнике происхождения.
			|По умолчанию графа ""Признак происхождения"" заполнена значением ""5"", так как данная графа обязательна к заполнению. 
			|Настоятельно рекомендуем проверить, при необходимости, скорректировать Признак.'");
			
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
			ТекстОшибки,
			ВыборкаДетальныеЗаписи.Номенклатура);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,, "Объект");
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Импорт И ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "1";
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Импорт И НЕ ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "2";
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Производство И ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "3";
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Производство И НЕ ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "4";
		Иначе
			Структура.ПризнакПроисхождения = "5";
		КонецЕсли;
		
		//заполнение ИдентификатораТовара
		Если ДляДокументаЭСФ Тогда
			
			Если ВыборкаДетальныеЗаписи.ПризнакУчетаНаВиртуальномСкладе Тогда
				
				КодГСВС = "";
				ФизическаяМетка = "";
				ИдентификаторСклада = "";
				КлючевыеПоляЗаполнены = Истина;
				СписокНезаполненныхПолей = "";
				ДополнительныйИдентификатор = "";
				
				КодГСВС =ВыборкаДетальныеЗаписи.ПолныйКодГСВС;
				
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ФизическаяМетка) Тогда
					ФизическаяМетка = "[" + ВыборкаДетальныеЗаписи.ФизическаяМетка + "]";
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДополнительныйИдентификатор) Тогда
					ДополнительныйИдентификатор = "<" + Формат(ВыборкаДетальныеЗаписи.ДополнительныйИдентификатор,"ЧГ=") + ">";
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Склад) Тогда
					ИдентификаторСклада = Формат(ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(Склад, "ИдентификаторСклада"), "ЧГ=");
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(КодГСВС) Тогда
					КлючевыеПоляЗаполнены = Ложь;
					СписокНезаполненныхПолей = СписокНезаполненныхПолей + НСтр("ru = 'Код ГСВС'");
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ИдентификаторСклада) И НЕ ДляДокументаСНТ Тогда
					КлючевыеПоляЗаполнены = Ложь;
					СписокНезаполненныхПолей = ?(ПустаяСтрока(СписокНезаполненныхПолей), "", ", ") + СписокНезаполненныхПолей + НСтр("ru = 'Идентификатор склада'");
				КонецЕсли;
				
				Если КлючевыеПоляЗаполнены Тогда
					ИдентификаторТовара = ?(НЕ ДляДокументаСНТ,"%1%2%3(%4)", "%1%2%3");
					ИдентификаторТовара = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ИдентификаторТовара, КодГСВС, ФизическаяМетка, ДополнительныйИдентификатор, ИдентификаторСклада); 
					Структура.ИдентификаторТовара = ИдентификаторТовара;
				Иначе
					ИдентификаторТовара = "";
					ТекстОшибки = НСтр("ru = 'Не удалось заполнить поле ""Идентификатор товара"" по причине: не заполнены поля: %2.'");
					ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, , СписокНезаполненныхПолей);
					ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,, "Объект");
				КонецЕсли;
			Иначе
				ИдентификаторТовара = "1";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.GTIN) Тогда
				GTIN = ВыборкаДетальныеЗаписи.GTIN;
			КонецЕсли;
			
			Структура.ИдентификаторТовара = ИдентификаторТовара;
			
		КонецЕсли;
		
		Возврат Структура;
		
	Иначе
		
		Возврат Новый Структура("НомерПозицииВДекларацииИлиЗаявлении, НомерЗаявленияВРамкахТС, ФизическаяМетка, КодТНВЭД, ТоварНаименованиеВРамкахТС, 
								|ТипПроисхождения, ГСВС, ПризнакПроисхождения, ИдентификаторТовара, НомерГТД, ТипПошлины, СтранаПроисхожденияТовара, 
								|СтранаПроисхожденияТовараКод, ДатаСертификатаПроисхождения, ДополнительныйИдентификатор, ПризнакУчетаНаВиртуальномСкладе, 
								|СоставнойКодГСВС, GTIN", "", "", "", "", "", Перечисления.ТипПроисхожденияТоваровВС.ПустаяСсылка(),
								Справочники.НоменклатураГСВС.ПустаяСсылка(), Неопределено, "", "", Перечисления.ТипыПошлинВС.ПустаяСсылка(), "", "",
								Дата(1,1,1), 0, "", "");
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНаименованиеТовара(Товар) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(НематериальныеАктивы.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА НематериальныеАктивы.НаименованиеПолное
	|		ИНАЧЕ НематериальныеАктивы.Наименование
	|	КОНЕЦ КАК НаименованиеТовара
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|ГДЕ
	|	НематериальныеАктивы.Ссылка = &Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА Номенклатура.НаименованиеПолное
	|		ИНАЧЕ Номенклатура.Наименование
	|	КОНЕЦ
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ОсновныеСредства.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА ОсновныеСредства.НаименованиеПолное
	|		ИНАЧЕ ОсновныеСредства.Наименование
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &Товар";
	
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НаименованиеТовара = "";
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		                            		
		НаименованиеТовара = ВыборкаДетальныеЗаписи.НаименованиеТовара;
		
	КонецЕсли;
	
	Возврат НаименованиеТовара;
		
КонецФункции

Функция НедопустимыйУчетныйДокумент(Объект) Экспорт
	
	ВозвращаемоеЗначение = Ложь;
	
	Если Типзнч(Объект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И 
		НЕ Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия 
		И НЕ Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары
		И НЕ Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги
		И НЕ Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства Тогда
	
		ТекстОшибки = НСтр("ru = 'Для документа ""%1"" с видом операции <%2> не может быть введен Электронный документ ВС.'");
		ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект, Объект.ВидОперации);
	
		ВозвращаемоеЗначение = Истина;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ЭСФ") И Объект.Направление = Перечисления.НаправленияЭСФ.Исходящий И
  		Объект.Вид <> Перечисления.ВидыЭСФ.Дополнительный Тогда			
		
		ТекстОшибки = НСтр("ru = 'Для исходящего ""%1"" не может быть введен Электронный документ ВС.'");
		ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект);
	
		ВозвращаемоеЗначение = Истина;
		
	КонецЕсли;
	
	Если ВозвращаемоеЗначение Тогда
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;	
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция НаличиеЭДВС(ДокументСсылка) Экспорт
	
	НайденныеДокументыЭДВС 		= Новый Массив;
	
	ВидОперацииПокупкаКомисия   = Новый СписокЗначений;
	ВидОперацииПокупкаКомисия.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия);
	ВидОперацииПокупкаКомисия.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары);
	ВидОперацииПокупкаКомисия.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги);
	ВидОперацииПокупкаКомисия.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства);
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда 
		Запрос = Новый Запрос;
		
		// Установим параметры запроса
		Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
		Запрос.УстановитьПараметр("ВидОперации", ВидОперацииПокупкаКомисия);
		
		Запрос.Текст =   
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СчетФактураПолученныйДокументыОснования.ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДокОснованияТЧ
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|ГДЕ
		|	СчетФактураПолученныйДокументыОснования.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПоступлениеТоваровУслуг.ДокументОснование,
		|	ПоступлениеТоваровУслуг.Ссылка
		|ПОМЕСТИТЬ ВТ_ДокументыПТУ
		|ИЗ
		|	ВТ_ДокОснованияТЧ КАК ДокОснованияТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ПО ДокОснованияТЧ.ДокументОснование = ПоступлениеТоваровУслуг.Ссылка
		|ГДЕ
		|	ПоступлениеТоваровУслуг.ВидОперации В (&ВидОперации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектронныйДокументВС.Ссылка КАК ЭДВС,
		|	ВТ_ДокументыПТУ.Ссылка КАК ПТУ
		|ИЗ
		|	ВТ_ДокументыПТУ КАК ВТ_ДокументыПТУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
		|		ПО ВТ_ДокументыПТУ.Ссылка = ЭлектронныйДокументВС.ДокументОснование
		|ГДЕ
		|	НЕ ЭлектронныйДокументВС.ДокументОснование ЕСТЬ NULL ";
		
		
		ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаИзЗапроса.Следующий() Цикл
			НайденныеДокументыЭДВС.Добавить(ВыборкаИзЗапроса.ЭДВС);
		КонецЦикла;

	КонецЕсли;

	Возврат НайденныеДокументыЭДВС;	
КонецФункции

Функция НаличиеЭСФ(Объект) Экспорт
	
	ЕстьСвязанныеЭСФЭлектронные = Ложь;
	
	Если Типзнч(Объект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		МассивСчетовФактур = Новый Массив;
		СчетФактураСвязанныйСОбъектом = ОбщегоНазначенияБК.НайтиПодчиненныйДокумент(Объект,"СчетФактураПолученный");
		МассивСчетовФактур.Добавить(СчетФактураСвязанныйСОбъектом);
		
		СчетФактура = МассивСчетовФактур[0];
		
		Если СчетФактура <> Неопределено И СчетФактура.СпособПолучения = Перечисления.СпособыОбменаДокументами.Электронно Тогда
			ЕстьСвязанныеЭСФЭлектронные = Истина;
			
			ТекстОшибки = НСтр("ru = 'На основании документа ""%1"" уже введен электронный ""%2""'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект, СчетФактура);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
		Иначе 
			
			ЕстьСвязанныеЭСФЭлектронные = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЕстьСвязанныеЭСФЭлектронные;

КонецФункции

Процедура СкорректироватьМассивДокументовОснований(ДокументыОснования) Экспорт
	
	//проверка на наличие документов "Поступление ТМЗ и услуг" с неподходящими видами операции
	Если ТипЗнч(ДокументыОснования) = Тип("Массив") Тогда
		
		МассивУдаляемыхДокументов = Новый Массив;
		
		Для Каждого ДокументОснование Из ДокументыОснования Цикл
			Если НедопустимыйУчетныйДокумент(ДокументОснование) ИЛИ НаличиеЭСФ(ДокументОснование)Тогда
				МассивУдаляемыхДокументов.Добавить(ДокументОснование);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ДокументОснование Из МассивУдаляемыхДокументов Цикл
			Индекс = ДокументыОснования.Найти(ДокументОснование);
			ДокументыОснования.Удалить(Индекс);
		КонецЦикла;
	КонецЕсли;
    
КонецПроцедуры

//Запоняет документ - основание документа ЭДВС 
Функция ЗаполнитьДокументОснованиеПоДокументуЭДВС(ОбъектЭДВС, ИмяДокумента) Экспорт
		
	ДанныеЭДВС = ВССервер.ПодготовитьДанныеДляЗаполненияПервичныхДокументовИзЭДВС(ОбъектЭДВС);
	
	НовыйДокумент = Документы[ИмяДокумента].СоздатьДокумент();
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Реквизиты", ДанныеЭДВС.ТаблицаРеквизиты);	
	Запрос.УстановитьПараметр("ТаблицаТовары", ДанныеЭДВС.ТаблицаТовары);

	Если ИмяДокумента = "ГТДИмпорт" Тогда
		Запрос.Текст = ДанныеДляЗаполненияГТДИмпорт();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		НовыйДокумент.Разделы.Добавить();
	ИначеЕсли ИмяДокумента = "ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов" Тогда
		Запрос.Текст = ДанныеДляЗаполненияЗаявлениеОВвозеТоваровИОбУплатеКосвенныхТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		
	ИначеЕсли ИмяДокумента = "ОприходованиеТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияОприходованиеТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "ПоступлениеТоваровУслуг" Тогда
		Запрос.Текст = ДанныеДляЗаполненияПоступлениеТоваровУслуг();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		Запрос.Текст = ДанныеДляЗаполненияКомплектацияНоменклатуры();
		Если ОбъектЭДВС.ВидДетализации = Перечисления.ВидДетализации.Комплектация Тогда
			ТабличнаяЧастьДокумента = НовыйДокумент.Комплектующие;
			Запрос.УстановитьПараметр("ТаблицаКомплектующие", ДанныеЭДВС.ТаблицаИсходныеТовары);
			Запрос.УстановитьПараметр("ТаблицаТовар", ДанныеЭДВС.ТаблицаТовары);
		Иначе
			ТабличнаяЧастьДокумента = НовыйДокумент.Комплектующие;
			Запрос.УстановитьПараметр("ТаблицаКомплектующие", ДанныеЭДВС.ТаблицаТовары);
			Запрос.УстановитьПараметр("ТаблицаТовар", ДанныеЭДВС.ТаблицаИсходныеТовары);
		КонецЕсли;

	ИначеЕсли ИмяДокумента = "ОтчетПроизводстваЗаСмену" Тогда
		Запрос.Текст = ДанныеДляЗаполненияОтчетПроизводстваЗаСмену();
		ТабличнаяЧастьДокумента = НовыйДокумент.Продукция;

	ИначеЕсли ИмяДокумента = "ПоступлениеИзПереработки" Тогда
		Запрос.Текст = ДанныеДляЗаполненияПоступлениеИзПереработки();
		ТабличнаяЧастьДокумента = НовыйДокумент.Продукция;

	ИначеЕсли ИмяДокумента = "ПеремещениеТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияПеремещениеТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "СписаниеТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияСписаниеТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "ТребованиеНакладная" Тогда
		Запрос.Текст = ДанныеДляЗаполненияТребованиеНакладная();
		ТабличнаяЧастьДокумента = НовыйДокумент.Материалы;

	ИначеЕсли ИмяДокумента = "РеализацияТоваровУслуг" Тогда
		Запрос.Текст = ДанныеДляЗаполненияРеализацияТоваровУслуг();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	ЗаполнитьЗначенияСвойств(НовыйДокумент, Результат[Результат.Количество()-2].Выгрузить()[0]);
	ТаблицаТовары = Результат[Результат.Количество()-1].Выгрузить();
	Для Каждого Товар Из ТаблицаТовары Цикл
		СтрокаТабличнойЧасти = ТабличнаяЧастьДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Товар);
	КонецЦикла;	
	
	ЗаписатьДокумент(НовыйДокумент);
	
	НовыйДокумент.Записать();
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции
	
Процедура ЗаписатьДокумент(ДокументОбъект)
	Попытка
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		Если НЕ ЗначениеЗаполнено(ДокументОбъект.Номер) Тогда
			ДокументОбъект.УстановитьНовыйНомер();
		КонецЕсли;
		ДокументОбъект.Записать();
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось создать документ!'");
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения)
	КонецПопытки;	
КонецПроцедуры

Функция ПолучитьПараметрыОбработкиТабличнойЧасти(ИмяТабличнойЧасти, СинонимТабличнойЧасти, Объект, Форма) Экспорт
	
	ПараметрыОбработки = Новый Структура;
	
	ПараметрыОбработки.Вставить("АдресХранилищаТабличнойЧасти", ПоместитьТабличнуюЧастьВоВременноеХранилищеНаСервере(ИмяТабличнойЧасти, Объект, Форма));
	ПараметрыОбработки.Вставить("ДокументСсылка"              , Объект.Ссылка);
	ПараметрыОбработки.Вставить("ДокументДата"                , Объект.Дата);
	ПараметрыОбработки.Вставить("ДокументВалюта"              , Справочники.Валюты.ПустаяСсылка());
	ПараметрыОбработки.Вставить("ДокументКурс"                , 1);
	ПараметрыОбработки.Вставить("ДокументКратность"           , 1);
	ПараметрыОбработки.Вставить("ДокументСуммаВключаетНДС"    , Ложь);
	ПараметрыОбработки.Вставить("ДокументУчитыватьНДС"        , Ложь);
	ПараметрыОбработки.Вставить("ДокументНДСВключенВСтоимость", Ложь);
	ПараметрыОбработки.Вставить("ИмяТаблицы"                  , ИмяТабличнойЧасти);
	ПараметрыОбработки.Вставить("Заголовок"                   , СинонимТабличнойЧасти);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ГСВС");
	СтруктураРеквизитов.Вставить("СоставнойКодГСВС");
	СтруктураРеквизитов.Вставить("ФизическаяМетка");
	СтруктураРеквизитов.Вставить("ПризнакПроисхождения");
	СтруктураРеквизитов.Вставить("СтранаПроисхожденияТовара");
	СтруктураРеквизитов.Вставить("СтранаПроисхожденияТовараКод");
	СтруктураРеквизитов.Вставить("КодТНВЭД");
	СтруктураРеквизитов.Вставить("ТипПошлины");
	СтруктураРеквизитов.Вставить("ТипПроисхождения");
	СтруктураРеквизитов.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитов.Вставить("ЕдиницаИзмеренияКод");
	СтруктураРеквизитов.Вставить("Количество");
	СтруктураРеквизитов.Вставить("Цена");
	СтруктураРеквизитов.Вставить("Сумма");
	СтруктураРеквизитов.Вставить("ВозможенЭкспорт");
	СтруктураРеквизитов.Вставить("НомерЗаявленияВРамкахТС");	
	
	СтруктураСвязанныхРеквизитов = Новый Структура;	
	
	ПараметрыОбработки.Вставить("СтруктураРеквизитов", СтруктураРеквизитов);
	ПараметрыОбработки.Вставить("СтруктураСвязанныхРеквизитов", СтруктураСвязанныхРеквизитов);
	
	ВидимыеКолонки = Новый Массив;
	ПолучитьВидимыеКолонкиТабличнойЧасти(Форма.Элементы[ИмяТабличнойЧасти], Форма.Элементы[ИмяТабличнойЧасти].ПутьКДанным + ".", ВидимыеКолонки);
	ПараметрыОбработки.Вставить("ВидимыеКолонки", ВидимыеКолонки);

	Возврат ПараметрыОбработки;
	
КонецФункции

Функция ПоместитьТабличнуюЧастьВоВременноеХранилищеНаСервере(ИмяТабличнойЧасти, Объект, Форма)
	
	Возврат ПоместитьВоВременноеХранилище(Объект[ИмяТабличнойЧасти].Выгрузить(), Форма.УникальныйИдентификатор);

КонецФункции

Функция ПолучитьВидимыеКолонкиТабличнойЧасти(ЭлементТабличнаяЧасть, ПутьКДаннымТаблицы, МассивКолонок)
	
	Для Каждого Элемент Из ЭлементТабличнаяЧасть.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			ПолучитьВидимыеКолонкиТабличнойЧасти(Элемент, ПутьКДаннымТаблицы, МассивКолонок);
		ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") И Элемент.Видимость Тогда
			МассивКолонок.Добавить(СтрЗаменить(Элемент.ПутьКДанным, ПутьКДаннымТаблицы, ""));
		КонецЕсли;
	КонецЦикла;

КонецФункции

Процедура ОбработкаОповещенияОбработкиТабличнойЧастиНаСервере(Объект, Форма, Параметры) Экспорт

	ТаблицаОбработки  = ПолучитьИзВременногоХранилища(Параметры.АдресОбработаннойТабличнойЧастиВХранилище);
	ИмяТабличнойЧасти = Параметры.ИмяТаблицы;
	Для Каждого Строка Из ТаблицаОбработки Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НомерСтроки", Строка.НомерСтроки);
		СтрокаТаблицы = Объект[ИмяТабличнойЧасти].НайтиСтроки(ПараметрыОтбора);
		Если СтрокаТаблицы.Количество() <> 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы[0], Строка);
		Иначе
			СтрокаТаблицы = Объект[ИмяТабличнойЧасти].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Строка);
		КонецЕсли;	
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьЗначениеИзИП(Ссылка,ЭлементСтруктуры)
	
	Если ЭлементСтруктуры = "ДатаСертификатаПроисхождения" Тогда
		ЗначениеЭлемента =  Ссылка[ЭлементСтруктуры +"Товара"];
	ИначеЕсли ЭлементСтруктуры = "ФизическаяМетка" Тогда
		ЗначениеЭлемента =  Ссылка["МеткаТовара"];
	ИначеЕсли  ЭлементСтруктуры = "СтранаПроисхожденияТовараКод" Тогда
		ЗначениеЭлемента = Ссылка.СтранаПроисхожденияТовара.КодАльфа2;
	Иначе
		ЗначениеЭлемента =  Ссылка[ЭлементСтруктуры];
	КонецЕсли;	
	Возврат ЗначениеЭлемента
	
КонецФункции

Функция ПолучитьРеквизитыОрганизации(Организация, ОтправительПолучатель, СтруктурноеПодразделение = Неопределено)  Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить(ОтправительПолучатель+"Наименование", "");
	СтруктураДанных.Вставить(ОтправительПолучатель+"Идентификатор", "");
	СтруктураДанных.Вставить(ОтправительПолучатель+"Адрес", "");

		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА Организации.Ссылка ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА Организации.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|						ТОГДА Организации.Ссылка.ИндивидуальныйПредприниматель
	|					ИНАЧЕ Организации.Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ Организации.Ссылка
	|	КОНЕЦ КАК ОбъектДляПоискаАдреса,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ Организации.Наименование
	|	КОНЕЦ КАК Наименование,
	|	Организации.ИдентификационныйНомер
	|ПОМЕСТИТЬ ОбъектыДляПоискаАдресов
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка,
	|	ПодразделенияОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ПодразделенияОрганизаций.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ПодразделенияОрганизаций.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ ПодразделенияОрганизаций.Наименование
	|	КОНЕЦ,
	|	ПодразделенияОрганизаций.ИдентификационныйНомер
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Ссылка = &СтруктурноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбъектыДляПоискаАдресов.Объект КАК Объект,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(400)) КАК Адрес,
	|	ОбъектыДляПоискаАдресов.ИдентификационныйНомер КАК Идентификатор,
	|	ОбъектыДляПоискаАдресов.Наименование КАК Наименование
	|ИЗ
	|	ОбъектыДляПоискаАдресов КАК ОбъектыДляПоискаАдресов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И ОбъектыДляПоискаАдресов.ОбъектДляПоискаАдреса = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Вид В (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента), ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации), ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица)))";
	
	РезультатЗапроса		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий()Тогда
		СтруктураДанных.Вставить(ОтправительПолучатель+"Наименование", ВыборкаДетальныеЗаписи.Наименование);
		СтруктураДанных.Вставить(ОтправительПолучатель+"Идентификатор", ВыборкаДетальныеЗаписи.Идентификатор);
		СтруктураДанных.Вставить(ОтправительПолучатель+"Адрес", ВыборкаДетальныеЗаписи.Адрес);
	КонецЕсли;
	
	Возврат СтруктураДанных;
		
КонецФункции

Функция ТипСправочникаДляПодбораПоУмолчанию() Экспорт
	Возврат Тип("СправочникСсылка.Номенклатура") 	
КонецФункции

Функция ТекстПоляУслуга() Экспорт
	
	Текст = "
	|   , 
	|	ВЫБОР 
	|		КОГДА ОстаткиГТД.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ОстаткиГТД.Номенклатура.Услуга
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Услуга";
	
	Возврат Текст;
	
КонецФункции

Функция НайтиЭДВСИЗаполнитьСсылку(ОбъектСсылка, ЭлементыСсылкаНаЭДВС, СписокЭДВС) Экспорт
	УчетНДСИАкциза.НайтиЭДВСИЗаполнитьСсылку(ОбъектСсылка, ЭлементыСсылкаНаЭДВС, СписокЭДВС);	
КонецФункции

Функция ПолучитьЕдиницуИзмеренияОтбора(СтрокаТЧ) Экспорт 
	
	ЕдиницаИзмеренияОтбора = СтрокаТЧ.ЕдиницаИзмерения;	
	
	Возврат ЕдиницаИзмеренияОтбора;
	
КонецФункции

Функция ПолучитьДанныеЕдиницыИзмеренияТовара(Товар) Экспорт
	
	ДанныеЕдиницыИзмерения = Новый Структура("СсылкаЕИ, КодЭСФ", "", "");
	
	Если ЗначениеЗаполнено(Товар) И ТипЗнч(Товар) = Тип("СправочникСсылка.Номенклатура") Тогда
		ЕдиницаИзмерения = Товар.БазоваяЕдиницаИзмерения;
		ЕИ_Код = ЕдиницаИзмерения.КодЭСФ;
		
		ДанныеЕдиницыИзмерения.СсылкаЕИ = ЕдиницаИзмерения;
		ДанныеЕдиницыИзмерения.КодЭСФ = ЕИ_Код;
		
	КонецЕсли;
	
	Возврат ДанныеЕдиницыИзмерения; 
	
КонецФункции	

Функция СпособЗаполненияЦеныЭДВСПоУмолчанию() Экспорт
	
	//в БК3
	Возврат Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости;
	
	//ЕРП
	//Возврат Перечисления.СпособЗаполненияЦеныЭДВС.ПоТипуЦены
	
КонецФункции	

//Функция определяет, поддерживает ли конфигурация работу со структурными подразделениями
Функция ПолучитьПараметрРаботыСоСтруктурнымиПодразделениями() Экспорт
	Возврат ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	//для конфигураций без поддержки структурных подразделений возвращаем Ложь
	//Возврат Ложь;
КонецФункции

// Процедура выполняет установку начального значения реквизита "СтруктурноеПодразделениеОрганизация" формы
Процедура УстановитьСвойстваЭлементаСтруктурноеПодразделение(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, Элемент, ПоддержкаРаботыСоСтруктурнымиПодразделениями) Экспорт
	РаботаСДиалогамиКлиентСервер.УстановитьВидимостьСтруктурногоПодразделения(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элемент, СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	//для конфигураций без поддержки структурных подразделений никаких действий не нужны
КонецПроцедуры

Функция СоответствиеНомеровТаблицИНазванийСНТ() Экспорт
	
	Возврат СНТСервер.СоответствиеНомеровТаблицИНазванийСНТ();
	
КонецФункции

Функция КонечноеСостояниеОбработкиДокумента(СсылкаНаДокумент) Экспорт
	
	//++СНТ
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.СНТ") Тогда
		Состояние = Перечисления.СостоянияСНТ.ПодтвержденПолучателем;
	Иначе
	//--СНТ
		Состояние = Перечисления.СостоянияЭДВС.ОбработанНаСервере;
	//++СНТ
	КонецЕсли;
	//++СНТ

	Возврат Состояние;
	
КонецФункции

Процедура УстановитьЦеныПоТипу(УстанавливаемыйТипЦен, ОбъектЭДВС, ИмяТабличнойЧасти) Экспорт

	Если НЕ ЗначениеЗаполнено(УстанавливаемыйТипЦен) Тогда
		Возврат;
	КонецЕсли; 
	
	ВалютаРегламентированногоУчета 	= ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	//	Получим цены нужного типа
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивНоменклатуры", 	ОбъектЭДВС[ИмяТабличнойЧасти].Выгрузить().ВыгрузитьКолонку("Товар"));
	Запрос.УстановитьПараметр("Организация", 			ОбъектЭДВС.Организация);
	Запрос.УстановитьПараметр("ТипЦен", 				УстанавливаемыйТипЦен);
	Запрос.УстановитьПараметр("ДатаЦен", 				ОбъектЭДВС.Дата);
	Запрос.УстановитьПараметр("ВалютаЦенПоУмолчанию", 	ВалютаРегламентированногоУчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Валюта, &ВалютаЦенПоУмолчанию) КАК Валюта,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаЦен,
	|				Номенклатура В (&МассивНоменклатуры)
	|					И Организация = &Организация
	|					И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = СправочникНоменклатура.Ссылка)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В(&МассивНоменклатуры)";
	
	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
	
	// Найдем у данной номенклатуры значение цены выбранного типа.
	Для каждого СтрокаТабличнойЧасти Из ОбъектЭДВС[ИмяТабличнойЧасти] Цикл
		
		// Сбросим выборку для последующего поиска.
			ВыборкаИзЗапроса.Сбросить();
			
			// Ищем в выборке номенклатуру.
			Если ВыборкаИзЗапроса.НайтиСледующий(СтрокаТабличнойЧасти.Товар, "Номенклатура") И ЗначениеЗаполнено(ВыборкаИзЗапроса.Цена) Тогда
				
				ЦенаБазовая = ВыборкаИзЗапроса.Цена;
				
			Иначе
				ЦенаБазовая = СтрокаТабличнойЧасти.Цена;
				
				ТекстОшибки = НСтр(
				"ru = 'Для товара ""%1"" цены не перезаполнены.'");
				
				ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТабличнойЧасти.Товар);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Цена";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки, ОбъектЭДВС.Ссылка, Поле, "Объект");	
				
			КонецЕсли;
			
			СтрокаТабличнойЧасти.Цена = ЦенаБазовая;
		
			СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
			
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЦеныПоСебестоимости(ОбъектЭДВС, ИмяТабличнойЧасти) Экспорт
	
	ПараметрыЗапроса = ПолучитьДополнительныеПараметрыЗапросаБУ();
	
	ПараметрыПолученияЦен = Новый Структура;
	ПараметрыПолученияЦен.Вставить("СпособЗаполненияЦены",Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости);
	ПараметрыПолученияЦен.Вставить("СебестоимостьПоСкладам",ПараметрыЗапроса.СебестоимостьПоСкладам);
	ПараметрыПолученияЦен.Вставить("ВестиСкладскойУчетБУ",ПараметрыЗапроса.ВестиСкладскойУчетБУ);
	ПараметрыПолученияЦен.Вставить("ПоДвижениямДокумента",Ложь);
	ПараметрыПолученияЦен.Вставить("ЗаполнятьЦены",Истина);
	
	Если Не ЗначениеЗаполнено(ОбъектЭДВС.Организация) Тогда
		ТекстОшибки = НСтр("ru = 'Для заполнения цен по себестоимости укажите организацию.'");
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки, ОбъектЭДВС.Ссылка, "Организация", "Объект");
		Возврат;
	КонецЕсли;
	
	СкладОтправитель = Справочники.Склады.ПустаяСсылка();
	
	Если (ПараметрыПолученияЦен.ВестиСкладскойУчетБУ ИЛИ 
			ПараметрыПолученияЦен.СебестоимостьПоСкладам) Тогда
		Если  Не ЗначениеЗаполнено(ОбъектЭДВС.СкладОтправитель) Тогда
			ТекстОшибки = НСтр("ru = 'Для заполнения цен по себестоимости укажите склад.'");
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки, ОбъектЭДВС.Ссылка, "СкладОтправитель", "Объект");
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация",  ОбъектЭДВС.Организация);
		Запрос.УстановитьПараметр("ВиртуальныйСклад",  ОбъектЭДВС.СкладОтправитель);
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	СоответствиеСкладовИВиртуальныхСкладов.Склад
		|ИЗ
		|	РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|ГДЕ
		|	СоответствиеСкладовИВиртуальныхСкладов.Организация = &Организация
		|	И СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад = &ВиртуальныйСклад";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		КоличествоВыборки = Выборка.Количество();
		
		Если КоличествоВыборки = 0 Тогда
			ТекстОшибки = НСтр("ru = 'Для виртуального склада ""%1"" не заполнен склад соответсвия, цены не перезаполнены.'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				ОбъектЭДВС.СкладОтправитель);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки, ОбъектЭДВС.Ссылка, "СкладОтправитель", "Объект");
			Возврат;
		Иначе
			Выборка.Следующий();
			СкладОтправитель = Выборка.Склад;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапросаЦеныНоменклатуры = ПолучитьТекстЗапросаЦена(ПараметрыПолученияЦен);
	
	Запрос = Новый Запрос;
	Для Каждого ЭлементСтрукуры  Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ЭлементСтрукуры.Ключ, ЭлементСтрукуры.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ОбъектЭДВС[ИмяТабличнойЧасти].Выгрузить());
	ДатаОстатка	= ОбъектЭДВС.Дата;
	Если Не ЗначениеЗаполнено(ДатаОстатка) Тогда
		ДатаОстатка = ВСОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОстатка", ДатаОстатка);
	Запрос.УстановитьПараметр("Организация", ОбъектЭДВС.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", ОбъектЭДВС.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("СкладОтправитель", СкладОтправитель);
	
	ТектЗапросаДанныеОбъекта = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	&ТабличнаяЧасть КАК Товары";
	
	ТектЗапросаИтог = 
	";
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Организация,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.ЦенаНоменклатуры КАК Цена
	|ИЗ вт_ЦеныНоменклатуры КАК ЦеныНоменклатуры";
	
	Запрос.Текст = ТектЗапросаДанныеОбъекта + ТекстЗапросаЦеныНоменклатуры + ТектЗапросаИтог;
	
	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
	
	// Найдем у данной номенклатуры значение цены выбранного типа.
	Для каждого СтрокаТабличнойЧасти Из ОбъектЭДВС[ИмяТабличнойЧасти] Цикл
		
		// Сбросим выборку для последующего поиска.
			ВыборкаИзЗапроса.Сбросить();
			
			// Ищем в выборке номенклатуру.
			Если ВыборкаИзЗапроса.НайтиСледующий(СтрокаТабличнойЧасти.Товар, "Номенклатура") И ЗначениеЗаполнено(ВыборкаИзЗапроса.Цена) Тогда
				
				ЦенаБазовая = ВыборкаИзЗапроса.Цена;
				
			Иначе
				ЦенаБазовая = СтрокаТабличнойЧасти.Цена;
				
				ТекстОшибки = НСтр(
				"ru = 'Для товара ""%1"" цены не перезаполнены.'");
				
				ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТабличнойЧасти.Товар);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Цена";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки, ОбъектЭДВС.Ссылка, Поле, "Объект");
				
			КонецЕсли;
			
			СтрокаТабличнойЧасти.Цена = ЦенаБазовая;
		
			СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
			
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события ПриСозданииНаСервере в форме документа ЭДВС.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма документа ЭДВС.
//
Процедура ЭДВСФормаСпискаИВыбораПриСозданииНаСервере(Форма) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьОтборПоОсновнойОрганизации(Форма);

КонецПроцедуры

// Обработчик события ПриСозданииНаСервере в форме справочника Виртуальные склады.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма справочника Виртуальные склады.
//
Процедура ВиртуальныеСкладыВСФормаСпискаИВыбораПриСозданииНаСервере(Форма) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(Форма);

КонецПроцедуры

Функция УстановитьОтборПоОсновнойОрганизации(Форма, ИмяСписка = "Список", ИмяРеквизита = "Организация", ЗначениеОтбора = Неопределено) Экспорт
	
	Если Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		
		УчетПоВсемОрганизациям = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(ПользователиКлиентСервер.АвторизованныйПользователь(), "УчетПоВсемОрганизациям");
		ОсновнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию(ЗначениеОтбора);
		
		Если Форма.ИмяФормы = "Документ.ЭлектронныйДокументВС.Форма.ФормаСписка" Тогда
			Форма.Организация = ОсновнаяОрганизация;
		КонецЕсли;
		
		ЭСФКлиентСерверПереопределяемый.ИзменитьЭлементОтбораСписка(Форма.Список, "Организация", ОсновнаяОрганизация, ЗначениеЗаполнено(ОсновнаяОрганизация));
		
	Иначе
		
		ОсновнаяОрганизация = Справочники.Организации.ПустаяСсылка();

	КонецЕсли;
	
	Возврат ОсновнаяОрганизация;
	
КонецФункции

#КонецОбласти

#Область МетодыСвязанныеССНТ

Функция ПроверитьНаличиеСвязанногоСНТ(Основание) Экспорт
	
	СвязанныйСНТ = Неопределено;
	//++СНТ
	СвязанныйСНТ = СНТСервер.ПроверитьНаличиеСвязанногоСНТ(Основание);
	//--СНТ
	Возврат СвязанныйСНТ;

КонецФункции

Функция ЗаполнитьТаблицуНомеровСтрокСНТ(МассивСНТ) Экспорт
	
	ТаблицаНомеровСтрок = Новый ТаблицаЗначений;
	
	//++СНТ
	ТаблицаНомеровСтрок = СНТСервер.ЗаполнитьТаблицуНомеровСтрокСНТ(МассивСНТ);
	//--СНТ
	
	Возврат ТаблицаНомеровСтрок;
	
КонецФункции

Процедура СопоставитьДанныеЭСФИЗСНТ(СНТ, ОбъектЭСФ, РезультатПроверки) Экспорт
	
	//++СНТ
	СНТСервер.СопоставитьДанныеЭСФИЗСНТ(СНТ, ОбъектЭСФ, РезультатПроверки);
	//--СНТ

КонецПроцедуры

Функция ТипДокументаСНТ() Экспорт
	//++СНТ
	Возврат Тип("ДокументСсылка.СНТ");
	//--СНТ
КонецФункции

Функция ТипДокументаСопоставлениеСНТиФНО() Экспорт
	
	Возврат Тип("ДокументСсылка.СопоставлениеСНТиФНО");
	
КонецФункции

Функция ИспользоватьСНТ()  Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеСНТ");
	
КонецФункции

Функция ПолучитьОбработкаОбменСНТ() Экспорт
	
	Возврат СНТСерверПовтИсп.ОбработкаОбменСНТ();
	
КонецФункции

Функция ДополнитьТекстЗапросаДаннымиСвязанногоСНТ() Экспорт
	
	//++СНТ
	Возврат СНТСервер.ДополнитьТекстЗапросаДаннымиСвязанногоСНТ();
	//--СНТ

КонецФункции

Функция ПроверитьПеремещениеИмпорт(ОбъектСНТ) Экспорт
	
	РезультатПроверки = Ложь;
	//++СНТ
	РезультатПроверки = СНТСервер.ПроверитьПеремещениеИмпорт(ОбъектСНТ);
	//--СНТ
	Возврат РезультатПроверки;
	
КонецФункции

#КонецОбласти

#Область ПараметрыДляЗаполнениеЭДВС

Функция ТипыДокументовСПерезаполнениемЦены()  Экспорт 
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПеремещениеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.КомплектацияНоменклатуры"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеИзПереработки"));
	МассивТипов.Добавить(Тип("ДокументСсылка.СписаниеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ТребованиеНакладная"));
	МассивТипов.Добавить(Тип("Неопределено"));
	
	Возврат МассивТипов;

КонецФункции

Функция ТипФормыПоТипуДокумента(ТипДокумента) Экспорт
	Если ТипДокумента = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		Возврат Перечисления.ТипыФормВС.Списание;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПеремещениеТоваров") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ЭСФ") Тогда
		Возврат Перечисления.ТипыФормВС.ВнутреннееПеремещение;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ГТДИмпорт") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов")  Тогда
		Возврат Перечисления.ТипыФормВС.ДекларацияНаТовары;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОприходованиеТоваров") 
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда 
		Возврат Перечисления.ТипыФормВС.Остатки;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СписаниеТоваров") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ТребованиеНакладная")  Тогда
		Возврат Перечисления.ТипыФормВС.Списание;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда 
		Возврат Перечисления.ТипыФормВС.Детализация;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПоступлениеИзПереработки")  Тогда
		Возврат Перечисления.ТипыФормВС.Производство;
	ИначеЕсли ТипДокумента = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда
		Возврат Перечисления.ТипыФормВС.СписаниеТоваровНеВС;
	Иначе 
		Возврат Перечисления.ТипыФормВС.ПустаяСсылка();	
	КонецЕсли;
КонецФункции

Функция ТипДокументаТаможеннойДекларации(ТипДокумента) Экспорт 
	
	ТипыДокументов = ТипыДокументовТаможеннойДекларации();
	
	Возврат ТипыДокументов.НайтиПоЗначению(ТипДокумента) <> Неопределено;
	
КонецФункции	

Функция ТипДокументаРеализацияСтруктурномуПодразделению(ТипДокумента) Экспорт 
	
	ТипыДокументов = ТипыДокументовРеализацияСтруктурномуПодразделению();
	
	Возврат ТипыДокументов.НайтиПоЗначению(ТипДокумента) <> Неопределено;
	
КонецФункции	

Функция ПолучитьДополнительныеПараметрыЗапросаБУ() Экспорт
	
	МассивСчетовБУ     		= Новый Массив;
	МассивСчетовНоменклатуры= Новый Массив;
	РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Запасы;
	
	ТаблицаСчетовРазделовУчета = Документы.ВводНачальныхОстатков.ПолучитьТаблицуСчетов();
	СтрокаТаблицыРазделовУчета = ТаблицаСчетовРазделовУчета.НайтиСтроки(Новый Структура("РазделУчета", РазделУчета));
	
	// Бухгалтерский учет
	ВестиСкладскойУчетБУ  			= ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ВедетсяУчетПоСкладам(ПланыСчетов.Типовой.Товары);
	ВестиСуммовойУчетПоСкладамБУ 	= ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ВедетсяСуммовойУчетПоСкладам(ПланыСчетов.Типовой.Товары);
	
	Если СтрокаТаблицыРазделовУчета <> Неопределено Тогда
		
		СтрокаТаблицыРазделовУчета = СтрокаТаблицыРазделовУчета[0];
		
		СчетаГруппы		= СтрокаТаблицыРазделовУчета.СчетаГруппы;
		Счета			= СтрокаТаблицыРазделовУчета.Счета;
		СчетаИсключения	= СтрокаТаблицыРазделовУчета.СчетаИсключения;	
		
		МассивКодовСчетовГруппы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СчетаГруппы, ",");
		МассивКодовИсключений   = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(СчетаИсключения, ",");
		МассивСчетовГруппы = Новый Массив;
		МассивИсключений   = Новый Массив;
		
		Для Инд = 0 По МассивКодовСчетовГруппы.Количество()-1  Цикл
			МассивСчетовГруппы.Добавить(ПланыСчетов.Типовой.НайтиПоКоду(МассивКодовСчетовГруппы[Инд]).Ссылка);		
		КонецЦикла; 
		
		Для Инд = 0 По МассивКодовИсключений.Количество()-1  Цикл
			МассивИсключений.Добавить(ПланыСчетов.Типовой.НайтиПоКоду(МассивКодовИсключений[Инд]).Ссылка);		
		КонецЦикла; 
		
		Если ВестиСуммовойУчетПоСкладамБУ ИЛИ ВестиСкладскойУчетБУ Тогда
			МассивИсключений.Добавить(ПланыСчетов.Типовой.МатериалыПереданныеВПереработку); // 1351
		КонецЕсли;	
		
		МассивСчетовГруппы.Добавить(ПланыСчетов.Типовой.МонтажОборудования); // 2932
		
		МассивСчетовБУ = ПроцедурыБухгалтерскогоУчета.ПолучитьМассивСчетовССубсчетами(МассивСчетовГруппы, Ложь, , , МассивИсключений);
		
	КонецЕсли;
	
	Если МассивСчетовБУ.Количество() = 0 Тогда
		// Состав счетов должен соответсвовать счетам для раздела учета "Запасы" документа ВводНачальныхОстатков
		// см. макет СписокСчетовРазделовУчета в документе
		МассивСчетовБУ.Добавить(ПланыСчетов.Типовой.СырьеИМатериалы);                 // 1310
		МассивСчетовБУ.Добавить(ПланыСчетов.Типовой.ГотоваяПродукция);                // 1320
		МассивСчетовБУ.Добавить(ПланыСчетов.Типовой.Товары);                          // 1330
		МассивСчетовБУ.Добавить(ПланыСчетов.Типовой.МатериалыПереданныеВПереработку); // 1351
		//Добавим счет "Монтаж оборудования"
		МассивСчетовБУ.Добавить(ПланыСчетов.Типовой.МонтажОборудования); // 2932
	КонецЕсли;
	
	
	СебестоимостьПоСкладам = ВестиСуммовойУчетПоСкладамБУ И ВестиСкладскойУчетБУ;
	МассивСчетовПрочие = Новый Массив;
	
	ВидыСубконто 			= Новый Массив;
	ВидыСубконтоНоменклатура= Новый Массив; 
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	ВидыСубконтоНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	
	Если ВестиСуммовойУчетПоСкладамБУ ИЛИ ВестиСкладскойУчетБУ Тогда
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады);
		МассивСчетовПрочие.Добавить(ПланыСчетов.Типовой.МатериалыПереданныеВПереработку); // 1351
	КонецЕсли;	
	
	СкладПоУмолчанию = ВССерверПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("МассивСчетовБУ"			, МассивСчетовБУ);
	ПараметрыЗапроса.Вставить("МассивСчетовПрочие"		, МассивСчетовПрочие);
	ПараметрыЗапроса.Вставить("ВидыСубконто"			, ВидыСубконто);
	ПараметрыЗапроса.Вставить("СебестоимостьПоСкладам"	, СебестоимостьПоСкладам);
	ПараметрыЗапроса.Вставить("СкладПоУмолчанию"		, СкладПоУмолчанию);
	ПараметрыЗапроса.Вставить("ВестиСкладскойУчетБУ"	, ВестиСкладскойУчетБУ);
	ПараметрыЗапроса.Вставить("ВидыСубконтоНоменклатура", ВидыСубконтоНоменклатура);
	Возврат ПараметрыЗапроса;
	
КонецФункции	

Функция ТипыФормЭДВСВКоторыхУстанавливаютсяЦены() Экспорт 
	
	ТипыФормЦены = Новый Массив;
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.Остатки);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.Списание);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.ВнутреннееПеремещение);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.Детализация);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.ПеремещениеМеждуФилиалами);
	
	Возврат ТипыФормЦены;
	
КонецФункции	

Функция ТипыДокументовДетализации() Экспорт 
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КомплектацияНоменклатуры"));
	
	Возврат ТипыДокументов;
КонецФункции

Функция ТипыДокументовРеализацияСтруктурномуПодразделению() Экспорт 
	
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	
	Возврат ТипыДокументов;
КонецФункции

Функция ТипыДокументовСоСкладомВТабличнойЧасти() Экспорт
	
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ГТДИмпорт"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"));
	
	Возврат ТипыДокументов;
	
КонецФункции

Функция ТипыДокументовТаможеннойДекларации() Экспорт 
	
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ГТДИмпорт"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов"));
	
	Возврат ТипыДокументов;
КонецФункции

Функция ПоддерживаетсяРаботаСоСтруктурнымиПодразделениями() Экспорт
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Возврат ПоддержкаРаботыСоСтруктурнымиПодразделениями;
	
КонецФункции

Функция УдалитьЛидирующиеНулиИзНомераОбъекта(Знач НомерОбъекта) Экспорт
	
	Номер = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(НомерОбъекта);
	
	Возврат Номер;
	
КонецФункции

Процедура ДополнитьТаблицыДанныхДляЗаполненияЭДВС(СтруктураЗаполненияЭДВС, МенеджерВременныхТаблиц) Экспорт
	
КонецПроцедуры

Процедура ДополнитьДанныеДляЗаполненияЭДВС(МассивЗаполненияЭДВС, ТаблицыДанныхДляЗаполненияЭДВС) Экспорт
	
КонецПроцедуры

Функция ДокументОбъектЗаявлениеОВвозеТоваров() Экспорт
	
	Возврат Тип("ДокументОбъект.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов")
	
КонецФункции

Функция ТипДокументаГТДИмпорт() Экспорт
	
	Возврат Тип("ДокументСсылка.ГТДИмпорт");
	
КонецФункции

#КонецОбласти

#Область Отчет_ДокументыПоступленияПоКоторымВведеныЭСФ_ЭДВС

Функция ПолучитьТекстЗапросаОтчетаДокументыПоступленияПоКоторымВведеныЭСФ_ЭДВС() Экспорт 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварыНаВиртуальныхСкладахОбороты.Регистратор.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ вт_ТоварыВС
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Обороты({(&НачалоПериода)}, {(&КонецПериода)}, Регистратор, {(Организация).* КАК Организация}) КАК ТоварыНаВиртуальныхСкладахОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.СчетФактура КАК СчетФактура,
	|	ЭСФ.Организация
	|ПОМЕСТИТЬ вт_СчетаФактуры
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка)
	|	И ЭСФ.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ТоварыВС.Регистратор
	|			ИЗ
	|				вт_ТоварыВС КАК вт_ТоварыВС)
	|	И ЭСФ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	вт_СчетаФактуры.ЭСФ КАК ЭСФ,
	|	СчетФактураПолученный.ДокументОснование КАК ДокументПоступления,
	|	вт_СчетаФактуры.Организация КАК Организация
	|ПОМЕСТИТЬ вт_ЭСФДокументПоступления
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_СФ.СчетФактура
	|			ИЗ
	|				вт_СчетаФактуры КАК вт_СФ)
	|	И НЕ СчетФактураПолученный.ДокументОснование ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЭДВС.Ссылка КАК ЭДВС,
	|	ЭДВС.ДокументОснование КАК ДокументПоступления,
	|	ЭДВС.Организация КАК Организация
	|ПОМЕСТИТЬ вт_ЭДВСДокументПоступления
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭДВС
	|ГДЕ
	|	ЭДВС.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|	И ЭДВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ТоварыВС.Регистратор
	|			ИЗ
	|				вт_ТоварыВС КАК вт_ТоварыВС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ЭДВСДокументПоступления.ЭДВС,
	|	вт_ЭСФДокументПоступления.ЭСФ,
	|	вт_ЭДВСДокументПоступления.ДокументПоступления,
	|	вт_ЭДВСДокументПоступления.Организация
	|ИЗ
	|	вт_ЭДВСДокументПоступления КАК вт_ЭДВСДокументПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ЭСФДокументПоступления КАК вт_ЭСФДокументПоступления
	|		ПО вт_ЭДВСДокументПоступления.ДокументПоступления = вт_ЭСФДокументПоступления.ДокументПоступления";
	
	
	Возврат ТекстЗапроса;
КонецФункции	

#КонецОбласти

#Область ОформлениеЭДВС

Процедура ИсключитьЭСФНеОтраженныеВУчете(МассивДокументовЭСФ, УдалятьЭлементМассива) Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.СчетФактура КАК СчетФактура,
	|	ЭСФ.Направление КАК Направление
	|ПОМЕСТИТЬ вт_СчетаФактуры
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.Ссылка В(&МассивДокументовЭСФ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СчетаФактуры.ЭСФ КАК ЭСФ,
	|	ВЫБОР
	|		КОГДА вт_СчетаФактуры.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|			ТОГДА ЕСТЬNULL(СчетФактураПолученный.ДокументОснование, НЕОПРЕДЕЛЕНО)
	|		КОГДА вт_СчетаФактуры.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Исходящий)
	|			ТОГДА ЕСТЬNULL(СчетФактураВыданный.ДокументОснование, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ДокументОснования
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураПолученный.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураВыданный.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДокументОснования.ЭСФ,
	|	вт_ДокументОснования.ДокументОснование,
	|	вт_СчетаФактуры.СчетФактура
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО вт_СчетаФактуры.ЭСФ = вт_ДокументОснования.ЭСФ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивДокументовЭСФ",МассивДокументовЭСФ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ТекстНевозможностьФормирования = ?(УдалятьЭлементМассива, НСтр("ru=' ЭДВС не сформирован!'"), "");
		Если Не ЗначениеЗаполнено(ВыборкаЗапроса.СчетФактура) Тогда
			ТекстОшибки = НСтр("ru='Документ <%1> не отражен в учете.%2'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаЗапроса.ЭСФ, ТекстНевозможностьФормирования);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);						
		ИначеЕсли Не ЗначениеЗаполнено(ВыборкаЗапроса.ДокументОснование) Тогда
			ТекстОшибки = НСтр("ru='У счета-фактуры <%1> документа <%2> не заполнена табличная часть ""Документы основания"".%3'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаЗапроса.СчетФактура, ВыборкаЗапроса.ЭСФ, ТекстНевозможностьФормирования);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);						
		Иначе
			Продолжить;
		КонецЕсли;	
		Если УдалятьЭлементМассива Тогда
			ИндексЭСФ = МассивДокументовЭСФ.Найти(ВыборкаЗапроса.ЭСФ);
			Если ИндексЭСФ <> Неопределено Тогда
				МассивДокументовЭСФ.Удалить(ИндексЭСФ);	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры	

#КонецОбласти

#Область ФормированиеДвиженийПоРС_СтатусОформленияДокумента

Функция РазрешеноИзменятьСтатусОформленияДокумента(ДокументОснование, ТипФормы) Экспорт
	
	Если НЕ ЭСФСервер.ВедетсяУчетПоТоварамНаВС(ДокументОснование.Дата) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
			И (ДокументОснование.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия 
		ИЛИ ДокументОснование.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары
		ИЛИ ДокументОснование.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги
		ИЛИ ДокументОснование.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства) Тогда
		Возврат Ложь;			
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЭСФ") 
			И ТипФормы = Перечисления.ТипыФормВС.Детализация Тогда
		Возврат Ложь;			
	Иначе	
		Возврат Истина;		
	КонецЕсли;		
КонецФункции

Функция ТекстЗапросаСтатусыОформленияДокументовЭДВС(ДокументОснование) Экспорт
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Реквизиты.ОрганизацияПолучатель Как Организация,
		|	Реквизиты.ДокументОснование КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Реквизиты.ДокументОснование.Дата КАК ДатаДокумента,
		|	&Статус КАК Статус
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО Реквизиты.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И Реквизиты.ДокументОснование.СкладОтправитель = СоответствиеСкладовИВиртуальныхСкладов.Склад";		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Реквизиты.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
		|				И Реквизиты.ДокументОснование.Организация = Реквизиты.ОрганизацияПолучатель
		|			ТОГДА Реквизиты.ОрганизацияПолучатель
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК Организация,
		|	Реквизиты.ДокументОснование КАК Документ,
		|	ВЫБОР
		|		КОГДА Реквизиты.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
		|				И Реквизиты.ОрганизацияПолучатель <> Реквизиты.Организация
		|				И Реквизиты.ДокументОснование.Организация = Реквизиты.ОрганизацияПолучатель
		|			ТОГДА Реквизиты.СкладПолучатель
		|		ИНАЧЕ Реквизиты.Склад
		|	КОНЕЦ КАК Склад,
		|	Реквизиты.ДокументОснование.Дата КАК ДатаДокумента,
		|	&Статус КАК Статус
		|ИЗ
		|	Реквизиты КАК Реквизиты";		
	КонецЕсли;	
	
	Возврат ТекстЗапроса;
КонецФункции	

Функция ПолучитьНаборЗаписейРегистраСведенийСтатусыОформленияДокументов(Источник, Статус = Неопределено)Экспорт
	
	ТипИсточника = ТипЗнч(Источник.Ссылка);
	
	Если ТипИсточника = Тип("ДокументСсылка.ГТДИмпорт") 
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗаписи,
		|	СтатусыОформленияДокументов.Документ
		|ПОМЕСТИТЬ вт_Статусы
		|ИЗ
		|	РегистрСведений.СтатусыОформленияДокументов КАК СтатусыОформленияДокументов
		|ГДЕ
		|	СтатусыОформленияДокументов.Документ = &ДокументСсылка
		|	И СтатусыОформленияДокументов.Статус <> &СтатусКОформлению
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.Ссылка.Организация,
		|	Товары.Ссылка КАК Документ,
		|	Товары.ДокументПартии.Склад КАК Склад,
		|	Товары.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_Документ
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Документ.Организация,
		|	вт_Документ.Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	вт_Документ.ДатаДокумента,
		|	ЕСТЬNULL(вт_Статусы.ЕстьЗаписи, ЛОЖЬ) КАК ЕстьЗаписи
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	вт_Документ КАК вт_Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО вт_Документ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И вт_Документ.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Статусы КАК вт_Статусы
		|		ПО вт_Документ.Документ = вт_Статусы.Документ
		|ГДЕ
		|	&ИспользоватьСНТ = Ложь
		|";
		
		Если ТипИсточника = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов") Тогда 
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ГТДИмпорт"	 , "ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументПартии", "ДокументОснование");
		КонецЕсли;	
		
	ИначеЕсли ТипИсточника = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Документ.Организация,
		|	Документ.Ссылка КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовОтправителей.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Документ.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовОтправителей
		|		ПО Документ.Организация = СоответствиеСкладовОтправителей.Организация
		|			И Документ.СкладОтправитель = СоответствиеСкладовОтправителей.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовПолучателей
		|		ПО Документ.Организация = СоответствиеСкладовПолучателей.Организация
		|			И Документ.СкладПолучатель = СоответствиеСкладовПолучателей.Склад
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И ЕСТЬNULL(СоответствиеСкладовОтправителей.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) <> ЕСТЬNULL(СоответствиеСкладовПолучателей.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка))";
	ИначеЕсли  ТипИсточника = Тип("ДокументСсылка.ЭСФ") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Документ.Ссылка.Организация КАК Организация,
		|	Документ.Ссылка КАК Документ,
		|	Документ.Ссылка.Склад КАК Склад,
		|	Документ.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.ЭСФ.Товары КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВиртуальныеСклады КАК ВС
		|			ПО Документ.Ссылка.Склад = ВС.Ссылка
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
		|	И Документ.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Обычный)
		|	И Документ.ПризнакПроисхождения <> &ПризнакУслуги
		|	И ЕстьNULL(ВС.ПризнакОприходования, ЛОЖЬ) = ИСТИНА
		|";
	ИначеЕсли  ТипИсточника = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Продукция.Ссылка КАК Документ,
		|	Продукция.Ссылка.Организация,
		|	Продукция.Ссылка.Дата КАК ДатаДокумента,
		|	Продукция.Ссылка.Склад
		|ПОМЕСТИТЬ ВТ_ОтчетПроизводстваЗаСмену
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК Продукция
		|ГДЕ
		|	Продукция.Ссылка = &ДокументСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВозвратныеОтходы.Ссылка,
		|	ВозвратныеОтходы.Ссылка.Организация,
		|	ВозвратныеОтходы.Ссылка.Дата,
		|	ВозвратныеОтходы.Ссылка.Склад
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ВозвратныеОтходы
		|ГДЕ
		|	ВозвратныеОтходы.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ОтчетПроизводстваЗаСмену.Организация,
		|	ВТ_ОтчетПроизводстваЗаСмену.Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	ВТ_ОтчетПроизводстваЗаСмену.ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	ВТ_ОтчетПроизводстваЗаСмену КАК ВТ_ОтчетПроизводстваЗаСмену
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО ВТ_ОтчетПроизводстваЗаСмену.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И ВТ_ОтчетПроизводстваЗаСмену.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад";
	ИначеЕсли  ТипИсточника = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда 
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Продукция.Ссылка КАК Документ,
		|	Продукция.Ссылка.Организация,
		|	Продукция.Ссылка.Дата КАК ДатаДокумента,
		|	Продукция.Ссылка.Склад
		|ПОМЕСТИТЬ ВТ_ПоступлениеИзПереработки
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Продукция КАК Продукция
		|ГДЕ
		|	Продукция.Ссылка = &ДокументСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИспользованныеМатериалы.Ссылка,
		|	ИспользованныеМатериалы.Ссылка.Организация,
		|	ИспользованныеМатериалы.Ссылка.Дата,
		|	ИспользованныеМатериалы.Ссылка.Склад
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.ИспользованныеМатериалы КАК ИспользованныеМатериалы
		|ГДЕ
		|	ИспользованныеМатериалы.Ссылка = &ДокументСсылка
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ПоступлениеИзПереработки.Организация,
		|	ВТ_ПоступлениеИзПереработки.Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	ВТ_ПоступлениеИзПереработки.ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	ВТ_ПоступлениеИзПереработки КАК ВТ_ПоступлениеИзПереработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО ВТ_ПоступлениеИзПереработки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И ВТ_ПоступлениеИзПереработки.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад";
	ИначеЕсли ТипИсточника = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда  
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Документ.Ссылка.Организация,
		|	Документ.Ссылка КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Документ.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО Документ.Ссылка.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И Документ.Ссылка.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению)";
	ИначеЕсли ВССервер.ИспользоватьСНТ() И ТипИсточника = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Документ.Ссылка.Организация КАК Организация,
		|	Документ.Ссылка КАК Документ,
		|	Документ.Ссылка.СкладПолучатель КАК Склад,
		|	Документ.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.СНТ.ТоварыВС КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК СправочникИсточникиПроисхождения
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&ТекущаяДата) КАК СведенияОНоменклатуреГСВССрезПоследних
		|			ПО СправочникИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС
		|		ПО Документ.ИсточникПроисхождения = СправочникИсточникиПроисхождения.Ссылка
		|			И Документ.Товар = СправочникИсточникиПроисхождения.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(, ДокументПартии = &ДокументСсылка) КАК ТоварыНаВиртуальныхСкладахОстатки
		|		ПО Документ.Товар = ТоварыНаВиртуальныхСкладахОстатки.Номенклатура
		|			И Документ.ИсточникПроисхождения = ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения
		|			И Документ.Ссылка.Организация = ТоварыНаВиртуальныхСкладахОстатки.Организация
		|			И Документ.Ссылка.СкладПолучатель = ТоварыНаВиртуальныхСкладахОстатки.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВиртуальногоСкладаВРезерве.Остатки(, ДокументПартии = &ДокументСсылка) КАК ТоварыВиртуальногоСкладаВРезерве
		|		ПО Документ.Ссылка.СкладПолучатель = ТоварыВиртуальногоСкладаВРезерве.Склад
		|			И Документ.Товар = ТоварыВиртуальногоСкладаВРезерве.Номенклатура
		|			И Документ.ИсточникПроисхождения = ТоварыВиртуальногоСкладаВРезерве.ИсточникПроисхождения
		|			И Документ.Ссылка.Организация = ТоварыВиртуальногоСкладаВРезерве.Организация
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Ввоз)
		|	И Документ.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСНТ.Подтвержден)
		|	И НЕ ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ)
		|	И ЕСТЬNULL(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВиртуальногоСкладаВРезерве.КоличествоОстаток, 0) > 0
		|	И СправочникИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе"; 		
	Иначе	
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Документ.Организация,
		|	Документ.Ссылка КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Документ.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.СписаниеТоваров КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО Документ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И Документ.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписаниеТоваров", Источник.Метаданные().Имя);
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_НаборЗаписей.Организация,
	|	вт_НаборЗаписей.Документ,
	|	вт_НаборЗаписей.Склад КАК Склад,
	|	вт_НаборЗаписей.ДатаДокумента,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СтатусыОформленияДокументов.Статус, &СтатусКОформлению) = &СтатусКОформлению И Не вт_НаборЗаписей.ЕстьЗаписи
	|			ТОГДА &СтатусКОформлению
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СтатусыОформленияДокументов.Статус <> &СтатусКОформлению
	|						ИЛИ СтатусыОформленияДокументов.Склад <> вт_НаборЗаписей.Склад
	|						ИЛИ вт_НаборЗаписей.ЕстьЗаписи
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументов.КПереоформлению)
	|				ИНАЧЕ &СтатусКОформлению
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	вт_НаборЗаписей КАК вт_НаборЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОформленияДокументов КАК СтатусыОформленияДокументов
	|		ПО вт_НаборЗаписей.Организация = СтатусыОформленияДокументов.Организация
	|			И вт_НаборЗаписей.Документ = СтатусыОформленияДокументов.Документ";
	
	
	Если ТипыДокументовСоСкладомВТабличнойЧасти().НайтиПоЗначению(ТипИсточника) = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " И Не вт_НаборЗаписей.ЕстьЗаписи", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИЛИ вт_НаборЗаписей.ЕстьЗаписи", "");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДокументСсылка", Источник.Ссылка);
	Запрос.УстановитьПараметр("ТекущаяДата"	 ,  ТекущаяДатаСеанса());
	
	Запрос.УстановитьПараметр("ПризнакУслуги" , "6");
	Запрос.УстановитьПараметр("СтатусКОформлению", Перечисления.СтатусыОформленияДокументов.КОформлению);
	Запрос.УстановитьПараметр("ИспользоватьСНТ",  ВССервер.ИспользоватьСНТ());
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

#КонецОбласти

#Область ЗаполнениеСсылокЭДВС

Процедура ЗаполнитьСсылкиЕдиницИзмеренияЭДВС(МассивЭДВС) Экспорт
	МассивСсылокЭДВС = Новый Массив;
	Для Каждого Документ Из МассивЭДВС Цикл
		МассивСсылокЭДВС.Добавить(Документ.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭлектронныйДокументВСИсходныеТовары.ЕдиницаИзмеренияКод КАК Код,
		|	МАКСИМУМ(КлассификаторЕдиницИзмерения.Ссылка) КАК Ссылка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭлектронныйДокументВСИсходныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|		ПО ЭлектронныйДокументВСИсходныеТовары.ЕдиницаИзмеренияКод = КлассификаторЕдиницИзмерения.КодЭСФ
		|ГДЕ
		|	ЭлектронныйДокументВСИсходныеТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСИсходныеТовары.ЕдиницаИзмеренияКод
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронныйДокументВСТовары.ЕдиницаИзмеренияКод,
		|	МАКСИМУМ(КлассификаторЕдиницИзмерения.Ссылка)
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭлектронныйДокументВСТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|		ПО ЭлектронныйДокументВСТовары.ЕдиницаИзмеренияКод = КлассификаторЕдиницИзмерения.КодЭСФ
		|ГДЕ
		|	ЭлектронныйДокументВСТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСТовары.ЕдиницаИзмеренияКод";
	Запрос.УстановитьПараметр("МассивЭДВС", МассивСсылокЭДВС);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СоответствиеЕдиницИзмерения = Новый Соответствие;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СоответствиеЕдиницИзмерения.Вставить(ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Для Каждого Документ из МассивЭДВС Цикл
		Для Каждого Строка Из Документ.ТоварыВС Цикл
			Строка.ЕдиницаИзмерения = СоответствиеЕдиницИзмерения[Строка.ЕдиницаИзмеренияКод];	
		КонецЦикла;
		Для Каждого Строка Из Документ.ИсходныеТоварыВС Цикл
			Строка.ЕдиницаИзмерения = СоответствиеЕдиницИзмерения[Строка.ЕдиницаИзмеренияКод];	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьСсылкиСтранПроисхожденияЭДВС(МассивЭДВС) Экспорт
	МассивСсылокЭДВС = Новый Массив;
	Для Каждого Документ Из МассивЭДВС Цикл
		МассивСсылокЭДВС.Добавить(Документ.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(КлассификаторСтранМира.Ссылка) КАК Ссылка,
		|	ЭлектронныйДокументВСИсходныеТовары.СтранаПроисхожденияТовараКод КАК Код
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭлектронныйДокументВСИсходныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|		ПО ЭлектронныйДокументВСИсходныеТовары.СтранаПроисхожденияТовараКод = КлассификаторСтранМира.КодАльфа2
		|ГДЕ
		|	ЭлектронныйДокументВСИсходныеТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСИсходныеТовары.СтранаПроисхожденияТовараКод
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(КлассификаторСтранМира.Ссылка),
		|	ЭлектронныйДокументВСТовары.СтранаПроисхожденияТовараКод
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭлектронныйДокументВСТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторСтранМира КАК КлассификаторСтранМира
		|		ПО ЭлектронныйДокументВСТовары.СтранаПроисхожденияТовараКод = КлассификаторСтранМира.КодАльфа2
		|ГДЕ
		|	ЭлектронныйДокументВСТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСТовары.СтранаПроисхожденияТовараКод";
	Запрос.УстановитьПараметр("МассивЭДВС", МассивСсылокЭДВС);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СоответствиеСтранПроисхождения = Новый Соответствие;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СоответствиеСтранПроисхождения.Вставить(ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Для Каждого Документ из МассивЭДВС Цикл
		Для Каждого Строка Из Документ.ТоварыВС Цикл
			Строка.СтранаПроисхожденияТовара = СоответствиеСтранПроисхождения[Строка.СтранаПроисхожденияТовараКод];	
		КонецЦикла;
		Для Каждого Строка Из Документ.ИсходныеТоварыВС Цикл
			Строка.СтранаПроисхожденияТовара = СоответствиеСтранПроисхождения[Строка.СтранаПроисхожденияТовараКод];	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФорм

Процедура ПриСозданииНаСервере(Форма) Экспорт
	
	КомандаИзменитьТовары = Форма.Команды.Добавить("ИзменитьТовары");
	КомандаИзменитьТовары.Заголовок = НСтр("ru='Изменить'");
	КомандаИзменитьТовары.Действие = "ИзменитьТовары";
	ЭлементИзменитьТовары = Форма.Элементы.Добавить("КнопкаИзменитьТовары", Тип("КнопкаФормы"), Форма.Элементы.Товары.КоманднаяПанель);
	ЭлементИзменитьТовары.ИмяКоманды = "ИзменитьТовары";
	
	КомандаИзменитьТоварыВС = Форма.Команды.Добавить("ИзменитьТоварыВС");
	КомандаИзменитьТоварыВС.Заголовок = НСтр("ru='Изменить'");
	КомандаИзменитьТоварыВС.Действие = "ИзменитьТоварыВС";
	ЭлементИзменитьТоварыВС = Форма.Элементы.Добавить("КнопкаИзменитьТоварыВС", Тип("КнопкаФормы"), Форма.Элементы.ТоварыВС.КоманднаяПанель);
	ЭлементИзменитьТоварыВС.ИмяКоманды = "ИзменитьТоварыВС";

	КомандаИзменитьИсходныеТовары = Форма.Команды.Добавить("ИзменитьИсходныеТовары");
	КомандаИзменитьИсходныеТовары.Заголовок = НСтр("ru='Изменить'");
	КомандаИзменитьИсходныеТовары.Действие = "ИзменитьИсходныеТовары";
	ЭлементИзменитьИсходныеТовары   = Форма.Элементы.Добавить("КнопкаИзменитьИсходныеТовары", Тип("КнопкаФормы"), Форма.Элементы.ИсходныеТовары.КоманднаяПанель);
	ЭлементИзменитьИсходныеТовары.ИмяКоманды = "ИзменитьИсходныеТовары";
	
	КомандаИзменитьИсходныеТоварыВС = Форма.Команды.Добавить("ИзменитьИсходныеТоварыВС");
	КомандаИзменитьИсходныеТоварыВС.Заголовок = НСтр("ru='Изменить'");
	КомандаИзменитьИсходныеТоварыВС.Действие = "ИзменитьИсходныеТоварыВС";
	ЭлементИзменитьИсходныеТоварыВС = Форма.Элементы.Добавить("КнопкаИзменитьИсходныеТоварыВС", Тип("КнопкаФормы"), Форма.Элементы.ИсходныеТоварыВС.КоманднаяПанель);
	ЭлементИзменитьИсходныеТоварыВС.ИмяКоманды = "ИзменитьИсходныеТоварыВС";
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
   ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
   // Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
   
КонецПроцедуры

Процедура ПриЧтенииНаСервере(ТекущийОбъект, Форма) Экспорт
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	 
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
		
КонецПроцедуры

Процедура ПриСозданииНаСервереФормаПереоформлениеДокументов(Форма) Экспорт

КонецПроцедуры

#КонецОбласти

#Область Пользователи

Функция ЭтоПолноправныйПользователь() Экспорт
	
	Возврат Пользователи.ЭтоПолноправныйПользователь();
	
КонецФункции

#КонецОбласти

#Область ЗапросыДляЗаполненияУчетныхДокументовИзЭДВС

Функция ДанныеДляЗаполненияГТДИмпорт()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование КАК НаименованиеТовара,
	|	ТаблицаТовары.КодТНВЭД,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерРаздела,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара КАК СтранаПроисхождения,
	|	ТаблицаТовары.Сумма КАК ФактурнаяСтоимость
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.НаименованиеТовара,
	|	ТаблицаТовары.КодТНВЭД,
	|	ТаблицаТовары.НомерРаздела,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения,
	|	ТаблицаТовары.ФактурнаяСтоимость,
	|	1 КАК Коэффициент	
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияЗаявлениеОВвозеТоваровИОбУплатеКосвенныхТоваров()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование КАК НаименованиеТовара,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара,
	|	ТаблицаТовары.Сумма
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.НаименованиеТовара,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара,
	|	ТаблицаТовары.Сумма,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияОприходованиеТоваров()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Цена
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Цена,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияПоступлениеТоваровУслуг()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование,
	|	ТаблицаТовары.КодТНВЭД,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара,
	|	ТаблицаТовары.Сумма
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия) КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование,
	|	ТаблицаТовары.КодТНВЭД,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара,
	|	ТаблицаТовары.Сумма,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияКомплектацияНоменклатуры()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидДетализации = ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Комплектация)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|	КОНЕЦ КАК ВидОперации
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКомплектующие.Товар КАК Номенклатура,
	|	ТаблицаКомплектующие.Количество,
	|	ТаблицаКомплектующие.ЕдиницаИзмерения,
	|	ТаблицаКомплектующие.ТоварНаименование,
	|	ТаблицаКомплектующие.КодТНВЭД,
	|	ТаблицаКомплектующие.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаКомплектующие.ПризнакПроисхождения,
	|	ТаблицаКомплектующие.СтранаПроисхожденияТовара,
	|	ТаблицаКомплектующие.Сумма
	|ПОМЕСТИТЬ ТаблицаКомплектующие
	|ИЗ
	|	&ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовар.Товар,
	|	ТаблицаТовар.Количество,
	|	ТаблицаТовар.ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаТовар
	|ИЗ
	|	&ТаблицаТовар КАК ТаблицаТовар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад,
	|	Реквизиты.ВидОперации,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|				ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|			ТОГДА ЕСТЬNULL(ТаблицаТовар.Товар, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|				ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|			ТОГДА ЕСТЬNULL(ТаблицаТовар.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|				ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация)
	|			ТОГДА ЕСТЬNULL(ТаблицаТовар.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК ЕдиницаИзмерения
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ТаблицаТовар.Товар КАК Товар,
	|			ТаблицаТовар.Количество КАК Количество,
	|			ТаблицаТовар.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|		ИЗ
	|			ТаблицаТовар КАК ТаблицаТовар) КАК ТаблицаТовар
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКомплектующие.Номенклатура,
	|	ТаблицаКомплектующие.Количество,
	|	ТаблицаКомплектующие.ЕдиницаИзмерения,
	|	ТаблицаКомплектующие.ТоварНаименование,
	|	ТаблицаКомплектующие.КодТНВЭД,
	|	ТаблицаКомплектующие.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаКомплектующие.ПризнакПроисхождения,
	|	ТаблицаКомплектующие.СтранаПроисхожденияТовара,
	|	ТаблицаКомплектующие.Сумма,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияОтчетПроизводстваЗаСмену()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Сумма КАК СуммаПлановая,
	|	ТаблицаТовары.Цена КАК ПлановаяСтоимость
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.СуммаПлановая,
	|	ТаблицаТовары.ПлановаяСтоимость,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияПоступлениеИзПереработки()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Сумма КАК СуммаПлановая,
	|	ТаблицаТовары.Цена КАК ПлановаяСтоимость
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.СуммаПлановая,
	|	ТаблицаТовары.ПлановаяСтоимость
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияПеремещениеТоваров()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель,
	|	Реквизиты.СкладПолучатель
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель,
	|	Реквизиты.СкладПолучатель
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияСписаниеТоваров()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияТребованиеНакладная()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование,
	|	ТаблицаТовары.КодТНВЭД,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара,
	|	ТаблицаТовары.Сумма
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование,
	|	ТаблицаТовары.КодТНВЭД,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара,
	|	ТаблицаТовары.Сумма,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияРеализацияТоваровУслуг()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Реквизиты.Организация,
	               |	Реквизиты.Дата,
	               |	Реквизиты.Комментарий,
	               |	Реквизиты.СкладОтправитель КАК Склад
	               |ПОМЕСТИТЬ Реквизиты
	               |ИЗ
	               |	&Реквизиты КАК Реквизиты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаТовары.Товар КАК Номенклатура,
	               |	ТаблицаТовары.Количество,
	               |	ТаблицаТовары.ЕдиницаИзмерения,
	               |	ТаблицаТовары.Сумма
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	&ТаблицаТовары КАК ТаблицаТовары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Реквизиты.Организация,
	               |	Реквизиты.Дата,
	               |	Реквизиты.Комментарий,
	               |	Реквизиты.Склад,
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ПередачаСтруктурномуПодразделению) КАК ВидОперации
	               |ИЗ
	               |	Реквизиты КАК Реквизиты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаТовары.Номенклатура,
	               |	ТаблицаТовары.Количество,
	               |	ТаблицаТовары.ЕдиницаИзмерения,
	               |	ТаблицаТовары.Сумма,
	               |	1 КАК Коэффициент
	               |ИЗ
	               |	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Заполняет список обработчиков обновления информационной базы.
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики, ЗавершениеОбновления = Ложь) Экспорт
	

	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаПроведения

Функция ТекстЗапросаТаблицаТоварыНаВС_ЭДВС(НомераТаблиц, Реквизиты, ПараметрыПроведения) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаТоварыНаВС", НомераТаблиц.Количество());
	
	Если Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ВнутреннееПеремещение Тогда
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭДВСТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	""Товары""
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.Детализация Тогда	
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель
		|		ИНАЧЕ ЭДВСТовары.ИсточникПроисхождения
		|	КОНЕЦ КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) 
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель.ДокументПартии
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель
		|		ИНАЧЕ ЭДВСТовары.ИсточникПроисхождения
		|	КОНЕЦ КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) 
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель.ДокументПартии
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.Списание Тогда		
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.СписаниеТоваровНеВС 
		Или Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ВводОстатковНаВС Тогда
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"; 
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ФизическаяМетка Тогда	
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭДВСТовары.Ссылка КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭДВСТовары.Ссылка КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";	
		
	//+
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ПеремещениеМеждуФилиалами Тогда
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭДВСТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	""Товары""
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
		|	ИППолучатель.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИППолучатель
		|		ПО ЭДВСТовары.ИсточникПроисхожденияПолучатель = ИППолучатель.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
		|	ИППолучатель.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИППолучатель
		|		ПО ЭДВСТовары.ИсточникПроисхожденияПолучатель = ИППолучатель.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	//-
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ДетализацияИмпорта Тогда
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.КорректировкаДанных 
		И Реквизиты.ВидКорректировкиДанных = Перечисления.ВидыКорректировкиДанных.СписаниеРезервов Тогда
		
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	ЭДВСТовары.СпособВыписки КАК СпособВыписки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.КорректировкаДанных 
		И Реквизиты.ВидКорректировкиДанных = Перечисления.ВидыКорректировкиДанных.РучнаяКорректировка Тогда
		
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСРезерв", НомераТаблиц.Количество());
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество КАК Количество,
		|	ЭДВСТовары.Цена КАК Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	ЭДВСТовары.СпособВыписки КАК СпособВыписки,
		|	Реквизиты.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ЭДВСТовары.РасходноеДвижениеКорректировки
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭДВСТовары.Количество <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.КоличествоРезерв КАК Количество,
		|	ЭДВСТовары.Цена КАК Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	ЭДВСТовары.СпособВыписки КАК СпособВыписки,
		|	Реквизиты.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ЭДВСТовары.РасходноеДвижениеКорректировки
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	КОНЕЦ КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭДВСТовары.КоличествоРезерв <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	Иначе	
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары", "");
	СоответсвиеПолейЗапросов.Вставить("%ЭДВСТекстПоляЕдиницаИзмеренияТовары"		, "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	Возврат ТекстЗапроса + ВСВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

//Необходимо получить входящий ЭСФ, который ведется на ВС ( в документе ЭСФ в строке товаров установлен признак Товар на виртуальном складе
//, в номенклатуре ГСВС в РС есть 2 записи, одна на 01.01.2020 с кодом ГСВС (полный код ) из документа и товар ведется на виртуальном складе, вторая будщей датой 01.01.2022, где уже новый код ГСВС, у элемента 
//номенклатуры ГСВС уже новый кодГСВС и новый полныйкодГСВС, не ведется на вс
//Проверить, что при проведении такого документа формируются движения  по регситру Товары на виртуальном складе
Функция ТекстЗапросаТаблицаТоварыНаВССУчетомДатыОборотаДатыПризнакаВС(Знач ЭСФБезСНТ = Ложь, Знач ЭтоРозничнаяРеализацияВПределахДат = Ложь, Знач ЭСФсСНТ = Ложь) Экспорт
	
	//В случае, когда в документе поставки указан NON SNT, номер документа СНТ, ЭСФ выписана в розницу между датами 16.01.2021 до 05.05.2021, то движения по товарам ВС не делаем
	Если ЭСФБезСНТ ИЛИ ЭтоРозничнаяРеализацияВПределахДат ИЛИ ЭСФсСНТ Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Ссылка КАК Ссылка,
		|	ЭСФТовары.КодТНВЭД КАК КодТНВЭД,
		|	Реквизиты.ДатаОборота КАК ДатаОборота,
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество КАК Количество,
		|	ЭСФТовары.Цена КАК Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе,
		|	&ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ ВT_ЭСФТовары
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НоменклатураГСВС.Ссылка КАК НоменклатураГСВС,
		|	2 КАК ПриоритетПоискаНоменклатурыГСВС,
		|	НоменклатураГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВС
		|ИЗ
		|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
		|ГДЕ
		|	НоменклатураГСВС.КодГСВС В
		|			(ВЫБРАТЬ 
		|				ЭСФТовары.КодТНВЭД 
		|			ИЗ 
		|				ВT_ЭСФТовары КАК ЭСФТовары)
		|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)
		|
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОНоменклатуреГСВС.НоменклатураГСВС,
		|	ВЫБОР
		|		КОГДА СведенияОНоменклатуреГСВС.ПризнакАктивности
		|				И &ДатаОкончания >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВС.ДействиеЗаписиНачальнаяДата, ДЕНЬ)
		|				И &ДатаОкончания <= ВЫБОР
		|					КОГДА СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА &ДатаОкончания
		|					ИНАЧЕ СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата
		|				КОНЕЦ
		|			ТОГДА 3
		|		ИНАЧЕ 4
		|	КОНЕЦ,
		|	ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10)
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВT_ЭСФТовары КАК ЭСФТовары
		|		ПО (ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10) = ЭСФТовары.КодТНВЭД)
		|			И (СведенияОНоменклатуреГСВС.НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД))
		|			И (СведенияОНоменклатуреГСВС.Период <= &ДатаОкончания)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПриоритетПоискаНоменклатурыГСВС,
		|	КодГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВС,
		|	МИНИМУМ(ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС) КАК ПриоритетПоискаНоменклатурыГСВС
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВСМинимум
		|ИЗ
		|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НоменклатураГСВС.КодГСВС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодГСВС,
		|	ПриоритетПоискаНоменклатурыГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВТ_НоменклатураГСВС.НоменклатураГСВС) КАК НоменклатураГСВС,
		|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВСПервичный
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВССгруппированная
		|ИЗ
		|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВСМинимум КАК ВТ_НоменклатураГСВСМинимум
		|		ПО ВТ_НоменклатураГСВС.КодГСВС = ВТ_НоменклатураГСВСМинимум.КодГСВС
		|			И ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС = ВТ_НоменклатураГСВСМинимум.ПриоритетПоискаНоменклатурыГСВС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НоменклатураГСВС.КодГСВС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НоменклатураГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.Период КАК Период,
		|	НоменклатураГСВССгруппированная.КодГСВСПервичный КАК КодГСВСПервичный
		|ПОМЕСТИТЬ ВТ_КодыГСВСАктуальные
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&ДатаОкончания,
		|			НоменклатураГСВС В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Т.НоменклатураГСВС
		|				ИЗ
		|					ВТ_НоменклатураГСВССгруппированная КАК Т)) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВССгруппированная КАК НоменклатураГСВССгруппированная
		|		ПО (НоменклатураГСВССгруппированная.НоменклатураГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
		|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
		|			И (&ДатаОкончания >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиНачальнаяДата, ДЕНЬ))
		|			И (&ДатаОкончания <= ВЫБОР
		|				КОГДА СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА &ДатаОкончания
		|				ИНАЧЕ СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата
		|			КОНЕЦ)
		|
		|ГДЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодГСВСПервичный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭСФТовары.Номенклатура КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭСФТовары.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	ЭСФТовары.Склад КАК Склад,
		|	ЭСФТовары.ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	ВT_ЭСФТовары КАК ЭСФТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КодыГСВСАктуальные КАК КодыГСВСАктуальные
		|			ПО ЭСФТовары.КодТНВЭД = КодыГСВСАктуальные.КодГСВСПервичный
		|ГДЕ
		|	(ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе = ЛОЖЬ И ЭСФТовары.ДатаОборота >= &ДатаПереходаНаВС)
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.СвязанныйЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе
		|";

	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Ссылка КАК Ссылка,
		|	ЭСФТовары.КодТНВЭД КАК КодТНВЭД,
		|	Реквизиты.ДатаОборота КАК ДатаОборота,
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество КАК Количество,
		|	ЭСФТовары.Цена КАК Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе,
		|	&ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ ВT_ЭСФТовары
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НоменклатураГСВС.Ссылка КАК НоменклатураГСВС,
		|	2 КАК ПриоритетПоискаНоменклатурыГСВС,
		|	НоменклатураГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВС
		|ИЗ
		|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
		|ГДЕ
		|	НоменклатураГСВС.КодГСВС В
		|			(ВЫБРАТЬ 
		|				ЭСФТовары.КодТНВЭД 
		|			ИЗ 
		|				ВT_ЭСФТовары КАК ЭСФТовары)
		|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)
		|
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОНоменклатуреГСВС.НоменклатураГСВС,
		|	ВЫБОР
		|		КОГДА СведенияОНоменклатуреГСВС.ПризнакАктивности
		|				И &ДатаОкончания >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВС.ДействиеЗаписиНачальнаяДата, ДЕНЬ)
		|				И &ДатаОкончания <= ВЫБОР
		|					КОГДА СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА &ДатаОкончания
		|					ИНАЧЕ СведенияОНоменклатуреГСВС.ДействиеЗаписиКонечнаяДата
		|				КОНЕЦ
		|			ТОГДА 3
		|		ИНАЧЕ 4
		|	КОНЕЦ,
		|	ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10)
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВT_ЭСФТовары КАК ЭСФТовары
		|		ПО (ПОДСТРОКА(СведенияОНоменклатуреГСВС.ПолныйКодГСВС, 13, 10) = ЭСФТовары.КодТНВЭД)
		|			И (СведенияОНоменклатуреГСВС.НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД))
		|			И (СведенияОНоменклатуреГСВС.Период <= &ДатаОкончания)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПриоритетПоискаНоменклатурыГСВС,
		|	КодГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВС,
		|	МИНИМУМ(ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС) КАК ПриоритетПоискаНоменклатурыГСВС
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВСМинимум
		|ИЗ
		|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НоменклатураГСВС.КодГСВС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодГСВС,
		|	ПриоритетПоискаНоменклатурыГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВТ_НоменклатураГСВС.НоменклатураГСВС) КАК НоменклатураГСВС,
		|	ВТ_НоменклатураГСВС.КодГСВС КАК КодГСВСПервичный
		|ПОМЕСТИТЬ ВТ_НоменклатураГСВССгруппированная
		|ИЗ
		|	ВТ_НоменклатураГСВС КАК ВТ_НоменклатураГСВС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВСМинимум КАК ВТ_НоменклатураГСВСМинимум
		|		ПО ВТ_НоменклатураГСВС.КодГСВС = ВТ_НоменклатураГСВСМинимум.КодГСВС
		|			И ВТ_НоменклатураГСВС.ПриоритетПоискаНоменклатурыГСВС = ВТ_НоменклатураГСВСМинимум.ПриоритетПоискаНоменклатурыГСВС
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НоменклатураГСВС.КодГСВС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НоменклатураГСВС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.Период КАК Период,
		|	НоменклатураГСВССгруппированная.КодГСВСПервичный КАК КодГСВСПервичный
		|ПОМЕСТИТЬ ВТ_КодыГСВСАктуальные
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&ДатаОкончания,
		|			НоменклатураГСВС В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Т.НоменклатураГСВС
		|				ИЗ
		|					ВТ_НоменклатураГСВССгруппированная КАК Т)) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураГСВССгруппированная КАК НоменклатураГСВССгруппированная
		|		ПО (НоменклатураГСВССгруппированная.НоменклатураГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
		|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
		|			И (&ДатаОкончания >= НАЧАЛОПЕРИОДА(СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиНачальнаяДата, ДЕНЬ))
		|			И (&ДатаОкончания <= ВЫБОР
		|				КОГДА СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата = ДАТАВРЕМЯ(1, 1, 1)
		|					ТОГДА &ДатаОкончания
		|				ИНАЧЕ СведенияОНоменклатуреГСВССрезПоследних.ДействиеЗаписиКонечнаяДата
		|			КОНЕЦ)
		|
		|ГДЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе ИЛИ &ЭтоПолучательРозничнаяРеализация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодГСВСПервичный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭСФТовары.Номенклатура КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭСФТовары.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	ЭСФТовары.Склад КАК Склад,
		|	ЭСФТовары.ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	ВT_ЭСФТовары КАК ЭСФТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КодыГСВСАктуальные КАК КодыГСВСАктуальные
		|			ПО ЭСФТовары.КодТНВЭД = КодыГСВСАктуальные.КодГСВСПервичный
		|ГДЕ
		|	(ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе = ЛОЖЬ И ЭСФТовары.ДатаОборота >= &ДатаПереходаНаВС) 
		|	ИЛИ
		|	(ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе = ИСТИНА И КодыГСВСАктуальные.Период <= ЭСФТовары.ДатаОборота)
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.СвязанныйЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|";
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ЭСФТекстПоляТипИзмеряемойВеличины", "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаВС(Знач ЭСФБезСНТ = Ложь, Знач ЭтоРозничнаяРеализацияВПределахДат = Ложь, Знач ЭСФсСНТ = Ложь) Экспорт
	
	//В случае, когда в документе поставки указан NON SNT, номер документа СНТ, ЭСФ выписана в розницу между датами 16.01.2021 до 05.05.2021, то движения по товарам ВС не делаем
	Если ЭСФБезСНТ ИЛИ ЭтоРозничнаяРеализацияВПределахДат ИЛИ ЭСФсСНТ Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.СвязанныйЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе
		|";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.СвязанныйЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|";
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ЭСФТекстПоляТипИзмеряемойВеличины"	, "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Процедура ДокументЭДВС_ОбработкаПроверкиЗаполнения(ОбъектЭДВС, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт

	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.Списание Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПричинаСписания");   
	КонецЕсли;
	
	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.Детализация Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидДетализации");   
	КонецЕсли;
	
	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.ВнутреннееПеремещение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СкладПолучатель");   
		МассивНепроверяемыхРеквизитов.Добавить("ОрганизацияПолучатель");   
	КонецЕсли;
	
	Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ДетализацияИмпорта Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.Товар");
		МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.ТоварНаименование");
		МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.ЕдиницаИзмерения");
	КонецЕсли;
	
	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.КорректировкаДанных Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидКорректировкиДанных");
	КонецЕсли;
	
	ТипФормы = ОбъектЭДВС.ТипФормы;
	
	Если ОбъектЭДВС.КорректировкаИП Или Не ЭСФСервер.ВедетсяУчетПоТоварамНаВС(ОбъектЭДВС.Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.ГСВС");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыВС.ГСВС");
		
	ИначеЕсли ТипФормы <> Перечисления.ТипыФормВС.ДекларацияНаТовары
			И ТипФормы <> Перечисления.ТипыФормВС.Производство
			И ТипФормы <> Перечисления.ТипыФормВС.Остатки
			И ТипФормы <> Перечисления.ТипыФормВС.КорректировкаОстатков
			И ТипФормы <> Перечисления.ТипыФормВС.ДетализацияИмпорта
			И ТипФормы <> Перечисления.ТипыФормВС.Детализация
			И ТипФормы <> Перечисления.ТипыФормВС.ФизическаяМетка Тогда
		
		Если ОбъектЭДВС.ВидДетализации = Перечисления.ВидДетализации.КонвертацияМеждуЕИ Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Товары.ГСВС");
			МассивНепроверяемыхРеквизитов.Добавить("ТоварыВС.ГСВС");
			
		ИначеЕсли ТипФормы <> Перечисления.ТипыФормВС.ПеремещениеМеждуФилиалами Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Товары.ГСВС");
			
			Если ТипФормы <> Перечисления.ТипыФормВС.СписаниеТоваровНеВС 
				И ТипФормы <> Перечисления.ТипыФормВС.ВводОстатковНаВС Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ТоварыВС.ГСВС");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.Товары, "Товары", Отказ);
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.ТоварыВС, "ТоварыВС", Отказ);
	
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.ИсходныеТовары, "ИсходныеТовары", Отказ);
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.ИсходныеТоварыВС, "ИсходныеТоварыВС", Отказ);
	
КонецПроцедуры

Процедура ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ПроверяемаяТабличнаячасть, ИмяТабличнойЧасти, Отказ)
	
	НазваниеТабличнойЧасти = ОбъектЭДВС.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
	
	Для Каждого СтрокаТабличнойЧасти Из ПроверяемаяТабличнаячасть Цикл
		
		ТекстСообщенияШаблон = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3""'");
		
		Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.Детализация И ОбъектЭДВС.ВидДетализации <> Перечисления.ВидДетализации.КонвертацияМеждуЕИ Тогда
		
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ПризнакПроисхождения) Тогда
				ТипПроисхПоПризнакуПроисхождения = ВСКлиентСервер.ОпределитьТипПроисхожденияПоПризнакуПроисхождения(СтрокаТабличнойЧасти.ПризнакПроисхождения);
				Если ТипПроисхПоПризнакуПроисхождения <> СтрокаТабличнойЧасти.ТипПроисхождения Тогда
					ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Значение в колонке ""ТипПроисхождения"" не соответствует указанному ""ПризнакуПроисхождения"" в строке %1 списка ""%2""'"), 
						Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
						НазваниеТабличнойЧасти);
					
					Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ТипПроисхождения";
					ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ФизическаяМетка Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ФизическаяМетка) 
				И (ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "ТоварыВС")Тогда
				//Товар
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Физическая метка'"), 
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ФизическаяМетка";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
			ИначеЕсли ЗначениеЗаполнено(СтрокаТабличнойЧасти.ФизическаяМетка) 
				И (ИмяТабличнойЧасти = "ИсходныеТовары" ИЛИ ИмяТабличнойЧасти = "ИсходныеТоварыВС") Тогда
				ТекстСообщенияШаблон = НСтр("ru = 'Заполнена колонка ""%1"" в строке %2 списка ""%3""!'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Физическая метка'"), 
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ФизическаяМетка";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.Количество <> 1 
				И (ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "ТоварыВС") Тогда
				ТекстСообщенияШаблон = НСтр("ru = 'В строке %1 списка ""%2"" количество не равно 1!'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Количество";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.Остатки Тогда
			
			Если ИмяТабличнойЧасти = "ТоварыВС" И ЗначениеЗаполнено(СтрокаТабличнойЧасти.НомерЗаявленияВРамкахТС) Тогда
				
				ФасетФНО328 = "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][N][0-9][0-9][0-9][0-9][0-9]";
				
				Если ВСВызовСервера.СтрокаСоответствуетФасету(СтрокаТабличнойЧасти.НомерЗаявленияВРамкахТС, ФасетФНО328) 
					И ЗначениеЗаполнено(СтрокаТабличнойЧасти.НомерПозицииВДекларацииИлиЗаявлении) 
					И НЕ ВСКлиентСерверПереопределяемый.ПроверитьТолькоЦифрыВСтроке(СтрокаТабличнойЧасти.НомерПозицииВДекларацииИлиЗаявлении) Тогда
										
					ТекстСообщенияШаблон = НСтр("ru = 'В строке %1 списка ""%2"" поле ""Номер товарной позиции из ДТ или ФНО 328.00"" может содержать максимум 5 символов и только цифры!'");
					ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
						Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
						НазваниеТабличнойЧасти);
					
					Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].НомерПозицииВДекларацииИлиЗаявлении";
					ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
					
				КонецЕсли;
				
			КонецЕсли;

		КонецЕсли;
		
		
		Если ИмяТабличнойЧасти = "ТоварыВС" И 
			(ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ВнутреннееПеремещение
			ИЛИ ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.Списание
			ИЛИ ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ПеремещениеМеждуФилиалами
			ИЛИ ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.СписаниеТоваровНеВС
			ИЛИ ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ВводОстатковНаВС) 
			ИЛИ (ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.КорректировкаДанных И ОбъектЭДВС.ВидКорректировкиДанных = Перечисления.ВидыКорректировкиДанных.РучнаяКорректировка И СтрокаТабличнойЧасти.РасходноеДвижениеКорректировки)Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИсточникПроисхождения) Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Источник происхождения'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ИсточникПроисхождения";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяТабличнойЧасти = "ТоварыВС"
			И ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.КорректировкаДанных
			И ОбъектЭДВС.ВидКорректировкиДанных = Перечисления.ВидыКорректировкиДанных.РучнаяКорректировка Тогда
			
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоличествоРезерв) И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СпособВыписки) Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Способ выписки'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].СпособВыписки";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) И Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоличествоРезерв) Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Количество (объем)'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Количество";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.КоличествоРезерв) И Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Количество) Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Количество (объем) в резерве'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].КоличествоРезерв";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;

			
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ПризнакПроисхождения) И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИсточникПроисхождения)
				И НЕ СтрокаТабличнойЧасти.РасходноеДвижениеКорректировки Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Признак происхождения'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ПризнакПроисхождения";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);

			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.ПризнакУчетаНаВиртуальномСкладе И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДополнительныйИдентификатор) И СтрокаТабличнойЧасти.РасходноеДвижениеКорректировки = Ложь Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Идентификатор товара (ID)'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ДополнительныйИдентификатор";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;
			
			Если НЕ СтрокаТабличнойЧасти.РасходноеДвижениеКорректировки
				И ЗначениеЗаполнено(СтрокаТабличнойЧасти.ДополнительныйИдентификатор) И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИсточникПроисхождения)
				И НЕ СтрокаТабличнойЧасти.ПризнакУчетаНаВиртуальномСкладе Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Товар виртуального склада'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ПризнакУчетаНаВиртуальномСкладе";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;
			
			Если НЕ Отказ И Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИсточникПроисхождения) И НЕ СтрокаТабличнойЧасти.РасходноеДвижениеКорректировки Тогда
				
				ТекстШаблон = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3"", будет создан новый источник происхождения'");
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстШаблон, 
					НСтр("ru = 'Источник происхождения'"), 
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ИсточникПроисхождения";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", НЕ Отказ);
				
			КонецЕсли;

		КонецЕсли;

		
		Если ИмяТабличнойЧасти = "ИсходныеТоварыВС" И 
			(ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.Детализация
			Или ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ФизическаяМетка) Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИсточникПроисхождения) Тогда
				
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
					НСтр("ru = 'Источник происхождения'"),
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					НазваниеТабличнойЧасти);
					
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ИсточникПроисхождения";
				
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				
			КонецЕсли;
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

Функция МассивИсключаемыхСпособовЗаполненияЦен() Экспорт
	
	ИсключаемыеТипыЦен = Новый Массив;
	
	ИспользоватьТипыЦенНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьТипыЦенНоменклатуры");
	Если Не ИспользоватьТипыЦенНоменклатуры Тогда
		ИсключаемыеТипыЦен.Добавить(Перечисления.СпособЗаполненияЦеныЭДВС.ПоТипуЦены);
	КонецЕсли;		
		
	Возврат ИсключаемыеТипыЦен;
	
КонецФункции

#КонецОбласти

#Область РаботаСоСкладами

Функция ПолучитьМассивОрганизацийБезВиртуальныхСкладов(МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка Как Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВиртуальныеСклады КАК ВиртуальныеСклады
	|		ПО (ВиртуальныеСклады.Организация = Организации.Ссылка)
	|ГДЕ
	|	Организации.Ссылка В(&МассивВыбранныхОрганизаций)
	|	И ВиртуальныеСклады.Ссылка ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка Как Организация
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВиртуальныеСклады КАК ВиртуальныеСклады
	|		ПО (ВиртуальныеСклады.Организация = ПодразделенияОрганизаций.Ссылка)
	|ГДЕ
	|	ПодразделенияОрганизаций.Ссылка В(&МассивВыбранныхОрганизаций)
	|	И ВиртуальныеСклады.Ссылка ЕСТЬ NULL 
	|";
	
	Запрос.УстановитьПараметр("МассивВыбранныхОрганизаций", МассивОрганизаций);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРезультатаЗапроса = РезультатЗапроса.Выбрать();
	МассивОрганизацийБезСкладов = Новый Массив;
	
	Пока ВыборкаРезультатаЗапроса.Следующий() цикл
		МассивОрганизацийБезСкладов.Добавить(ВыборкаРезультатаЗапроса.Организация);
	КонецЦикла;
	
	Возврат МассивОрганизацийБезСкладов;
	
КонецФункции

Функция ТаблицаСтруктурныхЕдиницДляСопоставления(ВыбранныеСЕ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&ВыбранныеОрганизации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК Организация
	|
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Ссылка В(&ВыбранныеОрганизации)
	|";
	
	Запрос.УстановитьПараметр("ВыбранныеОрганизации", ВыбранныеСЕ);
	
	ТаблицаСЕ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаСЕ;

КонецФункции	
	
#КонецОбласти


#Область Прочее

Процедура УстановитьПараметрыДинамическогоСпискаНоменклатуры(Строки, ПолеПоиска = "Ссылка") Экспорт
	
	Если Не ЭСФСервер.ВедетсяУчетПоТоварамНаВС(ТекущаяДатаСеанса()) Тогда
		Возврат;
	КонецЕсли;
	
	//в БК3
	СписокНоменклатуры = Строки.ПолучитьКлючи();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.Ссылка КАК Ссылка,
		|	Номенклатура.КодТНВЭД КАК КодТНВЭД
		|ПОМЕСТИТЬ ВТ_СписокНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&СписокНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодТНВЭД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НоменклатураГСВС.Ссылка КАК Ссылка,
		|	НоменклатураГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВТ_СписокНоменклатурыГСВС
		|ИЗ
		|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
		|ГДЕ
		|	НоменклатураГСВС.КодГСВС В
		|			(ВЫБРАТЬ
		|				Т.КодТНВЭД
		|			ИЗ
		|				ВТ_СписокНоменклатуры КАК Т)
		|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакТовараДвойногоНазначения КАК ПризнакТовараДвойногоНазначения,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУникальногоТовара КАК ПризнакУникальногоТовара,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий КАК ПризнакПеречняИзьятий,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности КАК ПризнакАктивности,
		|	СписокНоменклатурыГСВС.КодГСВС КАК КодТНВЭД
		|ПОМЕСТИТЬ ВТ_СведенияОНоменклатуре
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&Дата,
		|			НоменклатураГСВС В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ВТ_СписокНоменклатурыГСВС КАК Т)) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокНоменклатурыГСВС КАК СписокНоменклатурыГСВС
		|		ПО СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС = СписокНоменклатурыГСВС.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодТНВЭД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СписокНоменклатуры.Ссылка КАК Ссылка,
		|	ВТ_СведенияОНоменклатуре.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
		|	ВТ_СведенияОНоменклатуре.ПризнакТовараДвойногоНазначения КАК ПризнакТовараДвойногоНазначения,
		|	ВТ_СведенияОНоменклатуре.ПризнакУникальногоТовара КАК ПризнакУникальногоТовара,
		|	ВТ_СведенияОНоменклатуре.ПризнакПеречняИзьятий КАК ПризнакПеречняИзьятий,
		|	ВТ_СведенияОНоменклатуре.ПризнакАктивности КАК ПризнакАктивности
		|ИЗ
		|	ВТ_СписокНоменклатуры КАК ВТ_СписокНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНоменклатуре КАК ВТ_СведенияОНоменклатуре
		|		ПО ВТ_СписокНоменклатуры.КодТНВЭД = ВТ_СведенияОНоменклатуре.КодТНВЭД";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПараметров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Строки Цикл
		МассивПоиска = ТаблицаПараметров.НайтиСтроки(Новый Структура("Ссылка",Элемент.Значение.Данные[ПолеПоиска]));
		Если МассивПоиска.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если Элемент.Значение.Данные.Свойство("ПризнакУчетаНаВиртуальномСкладе")Тогда
			Элемент.Значение.Данные.ПризнакУчетаНаВиртуальномСкладе = МассивПоиска[0].ПризнакУчетаНаВиртуальномСкладе;
		КонецЕсли;
		Если Элемент.Значение.Данные.Свойство("ПризнакУникальногоТовара")Тогда
			Элемент.Значение.Данные.ПризнакУникальногоТовара = МассивПоиска[0].ПризнакУникальногоТовара;
		КонецЕсли;
		Если Элемент.Значение.Данные.Свойство("ПризнакПеречняИзьятий")Тогда
			Элемент.Значение.Данные.ПризнакПеречняИзьятий = МассивПоиска[0].ПризнакПеречняИзьятий;
		КонецЕсли;
		Если Элемент.Значение.Данные.Свойство("ПризнакТовараДвойногоНазначения")Тогда
			Элемент.Значение.Данные.ПризнакТовараДвойногоНазначения = МассивПоиска[0].ПризнакТовараДвойногоНазначения;
		КонецЕсли;
		Если Элемент.Значение.Данные.Свойство("ПризнакАктивности")Тогда
			Элемент.Значение.Данные.ПризнакАктивности = МассивПоиска[0].ПризнакАктивности;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
