///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет виды доступа, используемые в ограничениях прав доступа.
// Примечание: виды доступа Пользователи и ВнешниеПользователи предопределены,
// но их можно удалить из списка ВидыДоступа, если они не требуются для ограничения прав доступа.
//
// Параметры:
//  ВидыДоступа - ТаблицаЗначений:
//   * Имя                    - Строка - имя, используемое в описании поставляемых
//                                       профилей групп доступа и текстах ОДД.
//   * Представление          - Строка - представляет вид доступа в профилях и группах доступа.
//   * ТипЗначений            - Тип    - тип ссылки значений доступа,
//                                       например Тип("СправочникСсылка.Номенклатура").
//   * ТипГруппЗначений       - Тип    - тип ссылки групп значений доступа,
//                                       например Тип("СправочникСсылка.ГруппыДоступаНоменклатуры").
//   * НесколькоГруппЗначений - Булево - Истина указывает, что для значения доступа (Номенклатуры) можно
//                                       выбрать несколько групп значений (Групп доступа номенклатуры).
//
// Пример:
//  1. Для настройки прав доступа в разрезе организаций:
//  ВидДоступа = ВидыДоступа.Добавить();
//  ВидДоступа.Имя = "Организации";
//  ВидДоступа.Представление = НСтр("ru = 'Организации'");
//  ВидДоступа.ТипЗначений   = Тип("СправочникСсылка.Организации");
//
//  2. Для настройки прав доступа в разрезе групп партнеров:
//  ВидДоступа = ВидыДоступа.Добавить();
//  ВидДоступа.Имя = "ГруппыПартнеров";
//  ВидДоступа.Представление    = НСтр("ru = 'Группы партнеров'");
//  ВидДоступа.ТипЗначений      = Тип("СправочникСсылка.Партнеры");
//  ВидДоступа.ТипГруппЗначений = Тип("СправочникСсылка.ГруппыДоступаПартнеров");
//
Процедура ПриЗаполненииВидовДоступа(ВидыДоступа) Экспорт
	
    УправлениеДоступомБК.ПриЗаполненииВидовДоступа(ВидыДоступа);	
	
КонецПроцедуры

// Позволяет указать объекты метаданных, для которых задана логика ограничения доступа к данным.
// В модулях менеджеров указанных списков размещается процедура обработчика, например:
//
//// Параметры:
////   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
////
//Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
//	
//  Ограничение.Текст =
//  "РазрешитьЧтениеИзменение
//  |ГДЕ
//  |	ЗначениеРазрешено(Организация)
//  |	И ЗначениеРазрешено(Контрагент)";
//	
//КонецПроцедуры
//
// Логика ограничения доступа к данным также может быть переопределена в процедуре
// УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.
//
// Параметры:
//  Списки - Соответствие из КлючИЗначение - списки с ограничением доступа:
//             * Ключ     - ОбъектМетаданных - список с ограничением доступа.
//             * Значение - Булево - Истина - текст ограничения в модуле менеджера,
//                                   Ложь   - текст ограничения в этом переопределяемом
//                          модуле в процедуре ПриЗаполненииОграниченияДоступа.
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.Документы.АвансовыйОтчет, Истина);
	Списки.Вставить(Метаданные.Документы.АвизоПрочее, Истина);
	Списки.Вставить(Метаданные.Документы.АктОбОказанииПроизводственныхУслуг, Истина);
	Списки.Вставить(Метаданные.Документы.АктСверкиВзаиморасчетов, Истина);
	Списки.Вставить(Метаданные.Документы.ВводНачальныхОстатков, Истина);
	Списки.Вставить(Метаданные.Документы.ВводНачальныхОстатковОС, Истина);
	Списки.Вставить(Метаданные.Документы.ВводНачальныхОстатковПоЗарплате, Истина);
	Списки.Вставить(Метаданные.Документы.ВводСведенийОПлановыхУдержанияхРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций, Истина); 
	Списки.Вставить(Метаданные.Документы.ВедомостьНаВозвратПрочихВыплат, Истина);
	Списки.Вставить(Метаданные.Документы.ВедомостьНаПеречислениеПрочихВыплат, Истина);
	Списки.Вставить(Метаданные.Документы.ВедомостьПрочихДоходов, Истина);
	Списки.Вставить(Метаданные.Документы.ВозвратЗарплатыРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.ВозвратТоваровОтПокупателя, Истина);
	Списки.Вставить(Метаданные.Документы.ВозвратТоваровПоставщику, Истина);
	Списки.Вставить(Метаданные.Документы.ВыработкаНМА, Истина);
	Списки.Вставить(Метаданные.Документы.ВыработкаОС, Истина);
	Списки.Вставить(Метаданные.Документы.ГТДИмпорт, Истина);
	Списки.Вставить(Метаданные.Документы.ДвижениеНЗП, Истина);
	Списки.Вставить(Метаданные.Документы.ДепонированиеЗаработнойПлаты, Истина);
	Списки.Вставить(Метаданные.Документы.Доверенность, Истина);
	Списки.Вставить(Метаданные.Документы.ДокументРасчетовСКонтрагентом, Истина);
	Списки.Вставить(Метаданные.Документы.ЗакрытиеДтКтЗадолженности, Истина);
	Списки.Вставить(Метаданные.Документы.ЗакрытиеМесяца, Истина);
	Списки.Вставить(Метаданные.Документы.ЗарплатаКВыплатеОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаявлениеНаПредоставлениеВычетовИПН, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов, Истина);
	Списки.Вставить(Метаданные.Документы.ИзменениеГрафиковАмортизацииОС, Истина);
	Списки.Вставить(Метаданные.Документы.ИзменениеПараметровНачисленияАмортизацииНМА, Истина);
	Списки.Вставить(Метаданные.Документы.ИзменениеПараметровНачисленияАмортизацииОС, Истина);
	Списки.Вставить(Метаданные.Документы.ИзменениеСостоянияОС, Истина);
	Списки.Вставить(Метаданные.Документы.ИзменениеСпособовОтраженияРасходовПоАмортизацииНМА, Истина);
	Списки.Вставить(Метаданные.Документы.ИзменениеСпособовОтраженияРасходовПоАмортизацииОС, Истина);
	Списки.Вставить(Метаданные.Документы.ИЛПеречислениеПолучателям, Истина);
	Списки.Вставить(Метаданные.Документы.ИнвентаризацияДенежныхСредств, Истина);
	Списки.Вставить(Метаданные.Документы.ИнвентаризацияНЗП, Истина);
	Списки.Вставить(Метаданные.Документы.ИнвентаризацияОС, Истина);
	Списки.Вставить(Метаданные.Документы.ИнвентаризацияТоваровНаСкладе, Истина);
	Списки.Вставить(Метаданные.Документы.ИПНЗаявлениеНаПредоставлениеВычета, Истина);
	Списки.Вставить(Метаданные.Документы.ИсполнительныйЛист, Истина);
	Списки.Вставить(Метаданные.Документы.КадровоеПеремещениеОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.КомандировкиОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.КомплектацияНоменклатуры, Истина);
	Списки.Вставить(Метаданные.Документы.КомплектацияОС, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаДолга, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаСтоимостиСписанияТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.МодернизацияОС, Истина);
	Списки.Вставить(Метаданные.Документы.НачислениеЗарплатыРаботникамОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.ОПВВозвратВзносов, Истина);
	Списки.Вставить(Метаданные.Документы.ОПВПеречислениеВФонды, Истина);
	Списки.Вставить(Метаданные.Документы.ОперацияБух, Истина);
	Списки.Вставить(Метаданные.Документы.ОплатаОтПокупателяПлатежнойКартой, Истина);
	Списки.Вставить(Метаданные.Документы.ОприходованиеТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.ОтражениеЗарплатыВБухучете, Истина);
	Списки.Вставить(Метаданные.Документы.ОтражениеЗарплатыВРеглУчете, Истина);
	Списки.Вставить(Метаданные.Документы.ОтражениеНалоговойОтчетностиВРеглУчете, Истина);
	Списки.Вставить(Метаданные.Документы.ОтчетОРозничныхПродажах, Истина);
	Списки.Вставить(Метаданные.Документы.ОтчетПроизводстваЗаСмену, Истина);
	Списки.Вставить(Метаданные.Документы.Партия, Истина);
	Списки.Вставить(Метаданные.Документы.ПередачаНМА, Истина);
	Списки.Вставить(Метаданные.Документы.ПередачаОС, Истина);
	Списки.Вставить(Метаданные.Документы.ПередачаТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.ПеремещениеОС, Истина);
	Списки.Вставить(Метаданные.Документы.ПеремещениеТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.ПереоценкаВнеоборотныхАктивов, Истина);
	Списки.Вставить(Метаданные.Документы.ПлатежноеПоручениеВходящее, Истина);
	Списки.Вставить(Метаданные.Документы.ПлатежноеПоручениеИсходящее, Истина);
	Списки.Вставить(Метаданные.Документы.ПлатежныйОрдерПоступлениеДенежныхСредств, Истина);
	Списки.Вставить(Метаданные.Документы.ПлатежныйОрдерСписаниеДенежныхСредств, Истина);
	Списки.Вставить(Метаданные.Документы.ПоступлениеДопРасходов, Истина);
	Списки.Вставить(Метаданные.Документы.ПоступлениеИзПереработки, Истина);
	Списки.Вставить(Метаданные.Документы.ПоступлениеНМА, Истина);
	Списки.Вставить(Метаданные.Документы.ПоступлениеТоваровУслуг, Истина);
	Списки.Вставить(Метаданные.Документы.ПрекращениеПредоставленияВычетовИПН, Истина);
	Списки.Вставить(Метаданные.Документы.ПриемНаРаботуВОрганизацию, Истина);
	Списки.Вставить(Метаданные.Документы.ПринятиеКУчетуНМА, Истина);
	Списки.Вставить(Метаданные.Документы.ПринятиеКУчетуОС, Истина);
	Списки.Вставить(Метаданные.Документы.ПриходныйКассовыйОрдер, Истина);
	Списки.Вставить(Метаданные.Документы.РасходныйКассовыйОрдер, Истина);
	Списки.Вставить(Метаданные.Документы.РасчетНалоговПриПоступленииАктивовУслуг, Истина);
	Списки.Вставить(Метаданные.Документы.РасчетПениОПВиСО, Истина);
	Списки.Вставить(Метаданные.Документы.РасчетСНиСО, Истина);
	Списки.Вставить(Метаданные.Документы.РасчетУдержанийРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.РеализацияТоваровУслуг, Истина);
	Списки.Вставить(Метаданные.Документы.РеализацияУслугПоПереработке, Истина);
	Списки.Вставить(Метаданные.Документы.РегистрацияНДСЗаНерезидента, Истина);  
	Списки.Вставить(Метаданные.Документы.РегистрацияПрочихВыплат, Истина);
	Списки.Вставить(Метаданные.Документы.РегистрацияПрочихДоходовВЦеляхНалогообложения, Истина);
	Списки.Вставить(Метаданные.Документы.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС, Истина);
	Списки.Вставить(Метаданные.Документы.РегистрацияПрочихОперацийПоРеализованнымТоварамВЦеляхНДС, Истина);
	Списки.Вставить(Метаданные.Документы.РегистрацияРазовыхУдержанийРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.РегламентированныйОтчет, Истина);
	Списки.Вставить(Метаданные.Документы.РеструктуризацияОС, Истина);
	Списки.Вставить(Метаданные.Документы.СНТ, Истина);
	Списки.Вставить(Метаданные.Документы.СОВозвратОтчислений, Истина);
	Списки.Вставить(Метаданные.Документы.СОПеречислениеВФонды, Истина);
	Списки.Вставить(Метаданные.Документы.СопоставлениеСНТиФНО, Истина);
	Списки.Вставить(Метаданные.Документы.СписаниеНМА, Истина);
	Списки.Вставить(Метаданные.Документы.СписаниеОС, Истина);
	Списки.Вставить(Метаданные.Документы.СписаниеТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.Сторнирование, Истина);
	Списки.Вставить(Метаданные.Документы.СчетНаОплатуПокупателю, Истина); 
	Списки.Вставить(Метаданные.Документы.СчетНаОплатуПоставщика, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученный, Истина);
	Списки.Вставить(Метаданные.Документы.ТребованиеНакладная, Истина);
	Списки.Вставить(Метаданные.Документы.УвольнениеИзОрганизаций, Истина);
	Списки.Вставить(Метаданные.Документы.УдалитьКорректировкаЗаписейРегистров, Истина);
	Списки.Вставить(Метаданные.Документы.УдержаниеИПНиОПВНУ, Истина);
	Списки.Вставить(Метаданные.Документы.УстановкаПорядкаЗакрытияПодразделений, Истина);
	Списки.Вставить(Метаданные.Документы.УстановкаСоответствияСчетовБУиНУ, Истина);
	Списки.Вставить(Метаданные.Документы.УстановкаЦенНоменклатуры, Истина);
	Списки.Вставить(Метаданные.Документы.ЧекККМ, Истина);
	Списки.Вставить(Метаданные.Документы.ЭлектронныйАктВыполненныхРабот, Истина);
	Списки.Вставить(Метаданные.Документы.ЭлектронныйДокументВС, Истина);
	Списки.Вставить(Метаданные.Документы.ЭСФ, Истина);
	Списки.Вставить(Метаданные.Документы.ЭТД, Истина);
	Списки.Вставить(Метаданные.Документы.ЕПВозвратПлатежа, Истина);
	Списки.Вставить(Метаданные.Документы.ЕППеречислениеВФонды, Истина);
	Списки.Вставить(Метаданные.Документы.РасчетЕдиногоПлатежа, Истина);
	Списки.Вставить(Метаданные.Документы.АгрегацияКодовМаркировкиСУЗИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.АктПриемаПередачиИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаказКодовМаркировкиСУЗИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.НанесениеКодовМаркировкиСУЗИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОбОтгрузкеЕАЭСИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОбЭкспортеЕАЭСИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВводеВОборотИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВвозеИзЕАЭСИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВвозеИзТретьихСтранИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВыводеИзОборотаИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОПриемкеЕАЭСИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОРасхожденииИСМПТК, Истина);
	Списки.Вставить(Метаданные.Документы.АгрегацияВнеПроизводстваИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.АктВнутреннегоПеремещенияИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.АктПриемаПередачиИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВводеВОборотИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВвозеИзЕАЭСИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОВыводеИзОборотаИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.Документы.УведомлениеОРасхожденияхИСЦЭДМ, Истина);
		
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыВыплатыПеречисленияЗарплаты, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыВыплатыПеречисленияСоциальныхПлатежей, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыПокупателей, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыПоНМА, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыПоОС, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыПоРасчетуЗарплаты, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ДокументыПоставщиков, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ЖурналОпераций, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.КассовыеДокументы, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.ПроизводственныеДокументы, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.РасчетныеДокументыБанк, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.СкладскиеДокументы, Истина);
	Списки.Вставить(Метаданные.ЖурналыДокументов.УчетКадровОрганизаций, Истина);
	
	Списки.Вставить(Метаданные.РегистрыБухгалтерии.Налоговый, Истина);
	Списки.Вставить(Метаданные.РегистрыБухгалтерии.Типовой, Истина);
	
	Списки.Вставить(Метаданные.РегистрыНакопления.Акциз, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВзаиморасчетыОрганизацийСПолучателямиИЛ, Истина); 
	Списки.Вставить(Метаданные.РегистрыНакопления.ВзаиморасчетыПоПрочимВыплатам, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВзаиморасчетыСДепонентамиОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВзаиморасчетыСРаботникамиОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВОСМСПодлежитПеречислениюВФонды, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВОСМСРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВОСМССведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВыплаченныеДоходыРаботникамОрганизацийНУ, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВыпускПродукцииУслугБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ВыпускПродукцииУслугНалоговыйУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ИПНРасчетыСБюджетом, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ИПНСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.КорректировкаНДС, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.КорректировкаНДСКВозмещению, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДС, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДСКВозмещению, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ООСМСРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ООСМССведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОПВПодлежитПеречислениюВФонды, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОПВРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОПВСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОППВРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОППВСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОПВРРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОПВРСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ОплатаСчетов, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ЕПРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ЕПСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ЕПКомпоненты, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ПереоценкаВнеоборотныхАктивов, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.РеализацияТМЗ, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СведенияОбИсчисленииВычетовИПН, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СведенияСчетовФактурВыданных, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СведенияСчетовФактурПолученных, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СНИсчисленный, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СНСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СОРасчетыСФондами, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.СОСведенияОДоходах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ТоварыВиртуальногоСкладаВРезерве, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ТоварыНаВиртуальныхСкладах, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийБУ, Истина);
	
	Списки.Вставить(Метаданные.РегистрыСведений.ВстречныйВыпускПродукцииУслуг, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ВычетыФизическихЛицИПН, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ГражданствоФизЛиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ГрафикиАмортизацииОСБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ДанныеМонитораРуководителя, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ДатыВводаНачальныхОстатков, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ИПННалоговыеВычетыФизлиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ИПНПлановыеНалоговыеВычетыФизлиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ИПНПрименениеВычетов, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ИспользоватьНесколькоБанковскихСчетовОрганизации, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ИспользоватьНесколькоКассОрганизации, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ИсчислениеНалоговСтруктурныхЕдиниц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.КартСчетаФизЛиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.КодыОрганизацийВБанковскойСистеме, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.КоэффициентыИндексацииЗаработка, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.КоэффициентыСтавкиРефинансированияНБДляРасчетаПени, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.МестонахождениеОСБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.МетодыРаспределенияКосвенныхРасходовОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НачислениеАмортизацииОСБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НомераЛистовКассовойКниги, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОбъектыЗемельногоНалога, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОбъектыИмущественногоНалога, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОбъектыНалоговогоУчетаФА, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОбъектыТранспортногоНалога, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОсновныеДоговорыКонтрагента, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОтветственныеЛица, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОтветственныеЛицаОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ОтчетыВРежимеВариантыОтчетов, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПараметрыМетодовИСЭСФ, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПараметрыРасчетаЗемельногоНалога, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПараметрыРасчетаТранспортногоНалога, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПаспортныеДанныеФизЛиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОСБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПериодыОплатыДляМедицинскогоСтрахования, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПлановыеНачисленияРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПлановыеУдержанияРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПорядокЗакрытияПодразделенийОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПрименениеВычетовИПН, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПрочиеВычетыФизическихЛицИПН, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РаботникиОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РазмерыОтчисленийВРезервы, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РасчетВычетаПоРеализованнымТоварам, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РасчетПереоценкиВалютныхСредств, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РасчетРаспределенияКосвенныхРасходов, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РасчетСебестоимостиПродукции, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РасчетСписанияРБП, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОбИнвалидностиФизлиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОГруппахФиксированныхАктивов, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОКорректировкиСтоимостиПродукцииИТоваров, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОПенсионномОбеспеченииФизЛиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОСтавкахНалоговСборовОтчислений, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОСтавкахОСМС, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияОФизлицахУчастникахВОВ, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияПредыдущегоМестаРаботыФизЛиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СобственныеКонтрагенты, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СобытияОСОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СостоянияНМАОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СостоянияОСОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СпособыОтраженияКурсовойРазницы, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СрокиПеречисленияНалоговСборовОтчислений, Истина);   
	Списки.Вставить(Метаданные.РегистрыСведений.СтатусыДокументов, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СтатусыОформленияДокументов, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаУчетаДенежныхСредств, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаУчетаНМА, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаУчетаНоменклатуры, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаУчетаОС, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаУчетаРасчетовСКонтрагентами, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ТребуетсяОформлениеЭАВР, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.УчетнаяПолитикаБухгалтерскийУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.УчетнаяПолитикаНалоговыйУчет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ФиксированныеАктивыУчитываемыеОтдельно, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ФИОФизЛиц, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ФИОФизЛицПриПрисвоенииСИК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ЦеныНоменклатуры, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СопоставлениеДолжностейЭТД, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СопоставлениеПричинРасторженияЭТД, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СопоставлениеПрофилейНавыковЭТД, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СведенияПоАктамВыполненныхРабот, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НастройкиОнлайнПлатежей, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СостоянияВыгрузкиНоменклатуры, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НастройкиОбменаСУЗИСМПТК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПараметрыМетодовИСМПТК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПулКодовМаркировкиСУЗИСМПТК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СтатусыЗаказовИСМПТК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ШтрихкодыSSCCИСМПТК, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПрофилиДоступаИСЦЭДМ, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СоответствиеСкладовИСЦЭДМ, Истина);
	
	Списки.Вставить(Метаданные.Справочники.БанковскиеСчета, Истина);
	Списки.Вставить(Метаданные.Справочники.ДоговорыКонтрагентов, Истина);
	Списки.Вставить(Метаданные.Справочники.КартСчета, Истина);
	Списки.Вставить(Метаданные.Справочники.Кассы, Истина);
	Списки.Вставить(Метаданные.Справочники.МетодыРаспределенияКосвенныхРасходов, Истина);
	Списки.Вставить(Метаданные.Справочники.НастройкиИнтеграцииWebKassa, Истина);
	Списки.Вставить(Метаданные.Справочники.Организации, Истина);
	Списки.Вставить(Метаданные.Справочники.ОрганизацииПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.ПодразделенияОрганизаций, Истина);
	Списки.Вставить(Метаданные.Справочники.ПодразделенияОрганизацийПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.ПользователиИСЭСФ, Истина);
	Списки.Вставить(Метаданные.Справочники.Склады, Истина);
	Списки.Вставить(Метаданные.Справочники.СотрудникиОрганизаций, Истина);
	Списки.Вставить(Метаданные.Справочники.СотрудникиОрганизацийПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СпособыОтраженияРасходовПоАмортизации, Истина);
	Списки.Вставить(Метаданные.Справочники.ФизическиеЛица, Истина);
	Списки.Вставить(Метаданные.Справочники.ФизическиеЛицаПрисоединенныеФайлы, Истина);  
	Списки.Вставить(Метаданные.Справочники.ВиртуальныеСклады, Истина);
	Списки.Вставить(Метаданные.Справочники.НастройкиРасчетаРезервовПоОплатеТруда, Истина);
	Списки.Вставить(Метаданные.Справочники.СкладыИСЦЭДМ, Истина);
	
	// ЭлектронноеВзаимодействие
	ЭлектронноеВзаимодействие.ПриЗаполненииСписковСОграничениемДоступа(Списки);
	// Конец ЭлектронноеВзаимодействие
	
КонецПроцедуры

// Заполняет описания поставляемых профилей групп доступа и
// переопределяет параметры обновления профилей и групп доступа.
//
// Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  ОписанияПрофилей - Массив из см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа,
//                               см. УправлениеДоступом.НовоеОписаниеПапкиПрофилейГруппДоступа
//  ПараметрыОбновления - Структура:
//   * ОбновлятьИзмененныеПрофили - Булево - начальное значение Истина.
//   * ЗапретитьИзменениеПрофилей - Булево - начальное значение Истина.
//       Если установить Ложь, тогда поставляемые профили можно не только просматривать, но и редактировать.
//   * ОбновлятьГруппыДоступа     - Булево - начальное значение Истина.
//   * ОбновлятьГруппыДоступаСУстаревшимиНастройками - Булево - начальное значение Ложь.
//       Если установить Истина, то настройки значений, выполненные администратором для
//       вида доступа, который был удален из профиля, будут также удалены из групп доступа.
//
// Пример:
//  ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
//  ОписаниеПрофиля.Имя           = "Менеджер";
//  ОписаниеПрофиля.Идентификатор = "75fa0ecb-98aa-11df-b54f-e0cb4ed5f655";
//  ОписаниеПрофиля.Наименование  = НСтр("ru = 'Менеджер по продажам'", ОбщегоНазначения.КодОсновногоЯзыка());
//  ОписаниеПрофиля.Роли.Добавить("ЗапускВебКлиента");
//  ОписаниеПрофиля.Роли.Добавить("ЗапускТонкогоКлиента");
//  ОписаниеПрофиля.Роли.Добавить("БазовыеПраваБСП");
//  ОписаниеПрофиля.Роли.Добавить("Подсистема_Продажи");
//  ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеДокументовПокупателей");
//  ОписаниеПрофиля.Роли.Добавить("ПросмотрОтчетаКнигаПокупок");
//  ОписанияПрофилей.Добавить(ОписаниеПрофиля);
//
//  ОписаниеПапки = УправлениеДоступом.НовоеОписаниеПапкиПрофилейГруппДоступа();
//  ОписаниеПапки.Имя           = "ДополнительныеПрофили";
//  ОписаниеПапки.Идентификатор = "69a066e7-ce81-11eb-881c-b06ebfbf08c7";
//  ОписаниеПапки.Наименование  = НСтр("ru = 'Дополнительные профили'", ОбщегоНазначения.КодОсновногоЯзыка());
//  ОписанияПрофилей.Добавить(ОписаниеПапки);
//
//  ОписаниеПрофиля = УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа();
//  ОписаниеПрофиля.Родитель = "ДополнительныеПрофили";
//  ОписаниеПрофиля.Идентификатор = "70179f20-2315-11e6-9bff-d850e648b60c";
//  ОписаниеПрофиля.Наименование = НСтр("ru = 'Редактирование, отправка по почте, сохранение в файл печатных форм (дополнительно)'",
//  	ОбщегоНазначения.КодОсновногоЯзыка());
//  ОписаниеПрофиля.Описание = НСтр("ru = 'Дополнительно назначается пользователям, которым должна быть доступна возможность редактирования,
//  	|перед печатью, отправка по почте и сохранение в файл сформированных печатных форм.'");
//  ОписаниеПрофиля.Роли.Добавить("РедактированиеПечатныхФорм");
//  ОписанияПрофилей.Добавить(ОписаниеПрофиля);
//
Процедура ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	 УправлениеДоступомБК.ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления);
	 
	 //ИнтеграцияИСМПТК
	 ИнтеграцияИСМПТКПереопределяемый.ПриЗаполненииПоставляемыхПрофилейГруппДоступаБК(ОписанияПрофилей, ПараметрыОбновления);
	 //Конец ИнтеграцияИСМПТК

КонецПроцедуры

// Заполняет зависимости прав доступа "подчиненного" объекта (например, задачи ЗадачаИсполнителя),
// от "ведущего" объекта (например,  бизнес-процесса Задание), которые отличаются от стандартных.
//
// Зависимости прав используются в стандартном шаблоне ограничения доступа для вида доступа "Объект".
// 1. Стандартно при чтении "подчиненного" объекта
//    проверяется наличие права чтения "ведущего" объекта и
//    проверяется отсутствие ограничения чтения "ведущего" объекта.
// 2. Стандартно при добавлении, изменении, удалении "подчиненного" объекта
//    проверяется наличие права изменения "ведущего" объекта и
//    проверяется отсутствие ограничения изменения "ведущего" объекта.
//
// Допускается только одно переназначение по сравнению со стандартным -
// в пункте 2 вместо проверки права изменения "ведущего" объекта установить
// проверку права чтения "ведущего" объекта.
//
// Параметры:
//  ЗависимостиПрав - ТаблицаЗначений:
//   * ВедущаяТаблица     - Строка - например Метаданные.БизнесПроцессы.Задание.ПолноеИмя().
//   * ПодчиненнаяТаблица - Строка - например Метаданные.Задачи.ЗадачаИсполнителя.ПолноеИмя().
//
Процедура ПриЗаполненииЗависимостейПравДоступа(ЗависимостиПрав) Экспорт
	
	
	
КонецПроцедуры

// Заполняет описания возможных прав, назначаемых для объектов указанных типов.
//
// Параметры:
//  ВозможныеПрава - ТаблицаЗначений:
//   * ВладелецПрав - Строка - полное имя таблицы значения доступа.
//
//   * Имя          - Строка - идентификатор права, например ИзменениеПапок. Право с именем УправлениеПравами
//                  должно быть обязательно определено для общей формы настройки прав "Права доступа".
//                  УправлениеПравами - это право на изменение прав по владельцу прав, которое проверяется
//                  при открытии ОбщаяФорма.НастройкиПравОбъектов.
//
//   * Заголовок    - Строка - заголовок права, например в форме НастройкиПравОбъектов:
//                  "Изменение.
//                  |папок".
//
//   * Подсказка    - Строка - подсказка к заголовку права,
//                  например "Добавление, изменение и пометка удаления папок".
//
//   * НачальноеЗначение - Булево - начальное значение флажка права при добавлении новой строки
//                  в форме "Права доступа".
//
//   * ТребуемыеПрава - Массив из Строка - имена прав, требуемых для этого права -
//                  например, право "ДобавлениеФайлов" требует права "ИзменениеФайлов".
//
//   * ЧтениеВТаблицах - Массив из Строка - полные имена таблиц, для которых это право обозначает право Чтение.
//                  Возможно использование символа "*", который обозначает "для всех остальных таблиц",
//                  т.к. право Чтение может зависеть только от права Чтение, то имеет смысл только символ "*"
//                  (требуется для работы шаблонов ограничения доступа).
//
//   * ИзменениеВТаблицах - Массив из Строка - полные имена таблиц, для которых это право обозначает право Изменение.
//                  Возможно использование символа "*", который обозначает "для всех остальных таблиц"
//                  (требуется для работы шаблонов ограничения доступа).
//
Процедура ПриЗаполненииВозможныхПравДляНастройкиПравОбъектов(ВозможныеПрава) Экспорт
	
КонецПроцедуры

// Определяет вид используемого интерфейса пользователя для настройки доступа.
//
// Параметры:
//  УпрощенныйИнтерфейс - Булево - начальное значение Ложь.
//
Процедура ПриОпределенииИнтерфейсаНастройкиДоступа(УпрощенныйИнтерфейс) Экспорт

    УпрощенныйИнтерфейс = Истина;	
	
КонецПроцедуры

// Заполняет использование видов доступа в зависимости от функциональных опций конфигурации,
// например, ИспользоватьГруппыДоступаНоменклатуры.
//
// Параметры:
//  ВидДоступа    - Строка - имя вида доступа, заданное в процедуре ПриЗаполненииВидовДоступа.
//  Использование - Булево - начальное значение Истина.
// 
Процедура ПриЗаполненииИспользованияВидаДоступа(ВидДоступа, Использование) Экспорт
	
	УправлениеДоступомБК.ПриЗаполненииИспользованияВидаДоступа(ВидДоступа, Использование);
	
КонецПроцедуры

// Позволяет переопределить ограничение, указанное в модуле менеджера объекта метаданных.
//
// Параметры:
//  Список - ОбъектМетаданных - список, для которого нужно вернуть текст ограничения.
//                              В процедуре ПриЗаполненииСписковСОграничениемДоступа нужно
//                              указать для списка значение Ложь, иначе вызова не будет.
//
//  Ограничение - Структура:
//    * Текст                             - Строка - ограничение доступа для пользователей.
//                                          Если пустая строка, значит, доступ разрешен.
//    * ТекстДляВнешнихПользователей      - Строка - ограничение доступа для внешних пользователей.
//                                          Если пустая строка, значит, доступ запрещен.
//    * ПоВладельцуБезЗаписиКлючейДоступа - Неопределено - определить автоматически.
//                                        - Булево - если Ложь, то всегда записывать ключи доступа,
//                                          если Истина, тогда не записывать ключи доступа,
//                                          а использовать ключи доступа владельца (требуется,
//                                          чтобы ограничение было строго по объекту-владельцу).
//   * ПоВладельцуБезЗаписиКлючейДоступаДляВнешнихПользователей - Неопределено, Булево - также
//                                          как у параметра ПоВладельцуБезЗаписиКлючейДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(Список, Ограничение) Экспорт
	
	
	
КонецПроцедуры

// Заполняет состав видов доступа, используемых при ограничении прав объектов метаданных.
// Если состав видов доступа не заполнен, отчет "Права доступа" покажет некорректные сведения.
//
// Обязательно требуется заполнить только виды доступа, используемые в шаблонах ограничения доступа
// явно, а виды доступа, используемые в наборах значений доступа, могут быть получены из текущего
// состояния регистра сведений НаборыЗначенийДоступа.
//
//  Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  Описание     - Строка - многострочная строка формата <Таблица>.<Право>.<ВидДоступа>[.Таблица объекта],
//                 например, "Документ.ПриходнаяНакладная.Чтение.Организации",
//                           "Документ.ПриходнаяНакладная.Чтение.Контрагенты",
//                           "Документ.ПриходнаяНакладная.Изменение.Организации",
//                           "Документ.ПриходнаяНакладная.Изменение.Контрагенты",
//                           "Документ.ЭлектронныеПисьма.Чтение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.ЭлектронныеПисьма.Изменение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.Файлы.Чтение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Чтение.Объект.Документ.ЭлектронноеПисьмо",
//                           "Документ.Файлы.Изменение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Изменение.Объект.Документ.ЭлектронноеПисьмо".
//                 Вид доступа Объект предопределен как литерал. Этот вид доступа используется в
//                 шаблонах ограничений доступа как "ссылка" на другой объект, по которому
//                 ограничивается текущий объект таблицы.
//                 Когда вид доступа "Объект" задан, также требуется задать типы таблиц,
//                 которые используются для этого вида доступа. Т.е. перечислить типы,
//                 которые соответствуют полю, использованному в шаблоне ограничения доступа
//                 в паре с видом доступа "Объект". При перечислении типов по виду доступа "Объект"
//                 нужно перечислить только те типы поля, которые есть
//                 у поля РегистрыСведений.НаборыЗначенийДоступа.Объект, остальные типы лишние.
// 
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание) Экспорт
	
	УправлениеДоступомБК.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание);
	
	// ЭлектронноеВзаимодействие
	ЭлектронноеВзаимодействие.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание);
	// Конец ЭлектронноеВзаимодействие
	
КонецПроцедуры

// Позволяет реализовать перезапись зависимых наборов значений доступа других объектов.
//
// Вызывается из процедур
//  УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа,
//  УправлениеДоступомСлужебный.ЗаписатьЗависимыеНаборыЗначенийДоступа.
//
// Параметры:
//  Ссылка - ЛюбаяСсылка - ссылка на объект, для которого записываются наборы значений доступа.
//
//  СсылкиНаЗависимыеОбъекты - Массив - массив элементов типа СправочникСсылка, ДокументСсылка и т. п.
//                 Содержит ссылки на объекты с зависимыми наборами значений доступа.
//                 Начальное значение - пустой массив.
//
Процедура ПриИзмененииНаборовЗначенийДоступа(Ссылка, СсылкиНаЗависимыеОбъекты) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти