Функция ПолучитьТариф(ФЛ,ДатаСреза, Организация)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Физлицо,
	|	Начисления.ВидРасчета,
	|	Начисления.Размер,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета.Код ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Поле1
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА НачисленияРаботниковОрганизации.ВидРасчетаИзмерение.Код ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ОсновноеНачисление,
	|		НачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|		НачисленияРаботниковОрганизации.Размер КАК Размер,
	|		НачисленияРаботниковОрганизации.Сотрудник КАК Физлицо
	//|		НачисленияРаботниковОрганизации.Приказ КАК Приказ
	|	ИЗ
	|		РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|				&парамначало,
	|				Организация = &Организация
	|					И Сотрудник.ФизЛицо = &ФизЛицо) КАК НачисленияРаботниковОрганизации
	|	ГДЕ
	|		НачисленияРаботниковОрганизации.Размер <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА НачисленияРаботниковОрганизации.ВидРасчетаИзмерение.Код ЕСТЬ NULL 
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		НачисленияРаботниковОрганизации.ВидРасчета,
	|		НачисленияРаботниковОрганизации.Размер,
	|		НачисленияРаботниковОрганизации.Сотрудник
	//|		НачисленияРаботниковОрганизации.Приказ
	|	ИЗ
	|		РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК НачисленияРаботниковОрганизации
	|	ГДЕ
	|		НачисленияРаботниковОрганизации.Период > &парамНачало
	|		И НачисленияРаботниковОрганизации.Период <= &парамКонец
	|		И НачисленияРаботниковОрганизации.Сотрудник.ФизЛицо = &ФизЛицо
	|		И НачисленияРаботниковОрганизации.Организация = &Организация) КАК Начисления
	|ГДЕ
	|	Начисления.ОсновноеНачисление = ИСТИНА";
	Запрос.УстановитьПараметр("Дата", ДатаСреза);
	Запрос.УстановитьПараметр("ФизЛицо", ФЛ);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамначало",началомесяца(датаСреза));
	Запрос.УстановитьПараметр("парамКонец",КонецМесяца(ДатаСреза));
	
	ТаблицаНачислений = Запрос.Выполнить().Выгрузить();
	Если ТаблицаНачислений.Количество() = 0 Тогда
		
		Сообщить("Не введены сведения о плановых начисления работника с зачетом отработанного времени - " + ФЛ, СтатусСообщения.Информация);
		Возврат 0;
	КонецЕсли;
	Видрасчета=ТаблицаНачислений[0];
	Возврат Видрасчета;
	
КонецФункции

Процедура ОткрытьФормуОбработчика(Владелец, Организация = Неопределено, СтруктураПараметров = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не указана организация, отобрать список работников невозможно!");
		Возврат;
	КонецЕсли;
		
	ФормаТабеля = Обработки.сэтЗаполнениеНачислений.ПолучитьФорму("Форма", Владелец, Владелец);
	ФормаТабеля.ОтчетОбъект.СтруктураИсходныхПараметров = СтруктураПараметров;
	ФормаТабеля.Открыть();

КонецПроцедуры  // ОткрытьФормуОтбораСпискаРаботников()       

//Процедура ОткрытьФормуОбработчикаПоТабелю(Владелец, Организация = Неопределено, СтруктураПараметров = Неопределено) Экспорт
//	
//	Если Не ЗначениеЗаполнено(Организация) Тогда
//		Сообщить("Не указана организация, отобрать список работников невозможно!");
//		Возврат;
//	КонецЕсли;
//		
//	ФормаТабеля = Обработки.сэтЗаполнениеПоТабелю.ПолучитьФорму("ФормаУправляемая", Владелец, Владелец);
//	ФормаТабеля.ОтчетОбъект.СтруктураИсходныхПараметров = СтруктураПараметров;
//	ФормаТабеля.Открыть();

//КонецПроцедуры

Процедура ОткрытьФормуОбработчикаПремий(Владелец, Организация = Неопределено, СтруктураПараметров = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не указана организация, отобрать список работников невозможно!");
		Возврат;
	КонецЕсли;
		
	ФормаТабеля = Обработки.сэтЗаполнениеПремий.ПолучитьФорму("Форма", Владелец, Владелец);
	ФормаТабеля.ОтчетОбъект.СтруктураИсходныхПараметров = СтруктураПараметров;
	ФормаТабеля.Открыть();

КонецПроцедуры  // ОткрытьФормуОтбораСпискаРаботников()



//Евгений+
Функция ПолучитьСтавкуЧаса(Сотрудник,Дата,Организация,РазмерОклада) Экспорт

	Результат = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	киб_ГрафикРаботыСотрудниковСрезПоследних.ГрафикРаботы КАК ГрафикРаботы
		|ПОМЕСТИТЬ ВТ1
		|ИЗ
		|	РегистрСведений.киб_ГрафикРаботыСотрудников.СрезПоследних(&Дата, ) КАК киб_ГрафикРаботыСотрудниковСрезПоследних
		|ГДЕ
		|	киб_ГрафикРаботыСотрудниковСрезПоследних.Сотрудник = &Сотрудник
		|	И киб_ГрафикРаботыСотрудниковСрезПоследних.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	киб_ДанныеГрафиковРаботыСотрудников.ИтогЧасы КАК ИтогЧасы
		|ИЗ
		|	РегистрСведений.киб_ДанныеГрафиковРаботыСотрудников КАК киб_ДанныеГрафиковРаботыСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ1 КАК ВТ1
		|		ПО киб_ДанныеГрафиковРаботыСотрудников.ГрафикРаботы = ВТ1.ГрафикРаботы
		|ГДЕ
		|	киб_ДанныеГрафиковРаботыСотрудников.Месяц = &Месяц";
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Месяц", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
		
		Результат = РазмерОклада/ВыборкаДетальныеЗаписи.ИтогЧасы;
	КонецЦикла;
	
	
	Возврат Результат;
КонецФункции

//Евгений-
