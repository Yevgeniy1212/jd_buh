///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Переопределяет настройки подсистемы.
//
// Параметры:
//  Настройки - Структура:
//   * ИспользоватьПодписиИПечати - Булево - при установке значения Ложь отключается возможность установки подписей 
//                                           и печатей в печатных формах.
//   * СкрыватьПодписиИПечатиДляРедактирования - Булево - удалять рисунки подписей и печатей табличных документов при
//                                           снятии флажка "Подписи и печати" в форме "Печать документов", для того,
//                                           чтобы они не мешали редактировать текст, находящийся под ними.
//   * ПроверкаПроведенияПередПечатью    - Булево - признак необходимости проверки проведенности
//                                        документов перед печатью, является значением по умолчанию для команды печати
//                                        см. УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//                                        Для непроведенных документов команда печати не выполняется.
//                                        Если параметр не указан, то проверка проведенности не выполняется.
//   * ОбъектыПечати - Массив - менеджеры объектов с процедурой ПриОпределенииНастроекПечати.
//
Процедура ПриОпределенииНастроекПечати(Настройки) Экспорт
	
	// Настройка скрывает пустые рисунки факсимилей печати/подписей при сохранении в файл.
	// Корректно работает только если в общей форме ПечатьДокументов.ПодписиИПечатиТабличногоДокумента()
	// в описание рисунка добавлено свойство РазмерКартинки. Без изменений в форме искажаются пропорции
	// рисунков факсимиле, и в таком случае настройку следует отключить.
	Настройки.Вставить("СкрыватьПодписиИПечатиДляРедактирования", Истина);
	
КонецПроцедуры

// Устарела. Следует использовать УправлениеПечатьюПереопределяемый.ПриОпределенииНастроекПечати().
// Определяет объекты конфигурации, в модулях менеджеров которых размещена процедура ДобавитьКомандыПечати,
// формирующая список команд печати, предоставляемых этим объектом.
// Синтаксис процедуры ДобавитьКомандыПечати см. в документации к подсистеме.
//
// Параметры:
//  СписокОбъектов - Массив - менеджеры объектов с процедурой ДобавитьКомандыПечати.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Справочники.БанковскиеСчета);
	СписокОбъектов.Добавить(Справочники.ДоговорыКонтрагентов);
	СписокОбъектов.Добавить(Справочники.Контрагенты);
	СписокОбъектов.Добавить(Справочники.КорреспонденцииСчетов);
	СписокОбъектов.Добавить(Справочники.НематериальныеАктивы);
	СписокОбъектов.Добавить(Справочники.Номенклатура);
	СписокОбъектов.Добавить(Справочники.Организации);
	СписокОбъектов.Добавить(Справочники.ОсновныеСредства);
	СписокОбъектов.Добавить(Справочники.ПодразделенияОрганизаций);
	СписокОбъектов.Добавить(Справочники.Склады);
	СписокОбъектов.Добавить(Справочники.СотрудникиОрганизаций);
	СписокОбъектов.Добавить(Справочники.СпецификацииНоменклатуры);
	СписокОбъектов.Добавить(Справочники.СтатьиЗатрат);
	СписокОбъектов.Добавить(Справочники.ФизическиеЛица);
	
	СписокОбъектов.Добавить(Документы.АвансовыйОтчет);
	СписокОбъектов.Добавить(Документы.АвизоПрочее);
	СписокОбъектов.Добавить(Документы.АктОбОказанииПроизводственныхУслуг);
	СписокОбъектов.Добавить(Документы.АктСверкиВзаиморасчетов);
	СписокОбъектов.Добавить(Документы.ВводНачальныхОстатков);
	СписокОбъектов.Добавить(Документы.ВводНачальныхОстатковОС);
	СписокОбъектов.Добавить(Документы.ВводНачальныхОстатковПоЗарплате);
	СписокОбъектов.Добавить(Документы.ВводСведенийОПлановыхУдержанияхРаботниковОрганизаций);
	СписокОбъектов.Добавить(Документы.ВводСведенийОРеглУчетеПлановыхНачисленийРаботниковОрганизаций);
	СписокОбъектов.Добавить(Документы.ВедомостьНаВозвратПрочихВыплат);
	СписокОбъектов.Добавить(Документы.ВедомостьНаПеречислениеПрочихВыплат);
	СписокОбъектов.Добавить(Документы.ВедомостьПрочихДоходов);
	СписокОбъектов.Добавить(Документы.ВозвратЗарплатыРаботниковОрганизаций);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровОтПокупателя);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровПоставщику);
	СписокОбъектов.Добавить(Документы.ВыработкаНМА);
	СписокОбъектов.Добавить(Документы.ВыработкаОС);
	СписокОбъектов.Добавить(Документы.ГТДИмпорт);
	СписокОбъектов.Добавить(Документы.ДвижениеНЗП);
	СписокОбъектов.Добавить(Документы.ДепонированиеЗаработнойПлаты);
	СписокОбъектов.Добавить(Документы.Доверенность);
	СписокОбъектов.Добавить(Документы.ДокументРасчетовСКонтрагентом);
	СписокОбъектов.Добавить(Документы.ЕПВозвратПлатежа);
	СписокОбъектов.Добавить(Документы.ЕППеречислениеВФонды);
	СписокОбъектов.Добавить(Документы.ЗакрытиеДтКтЗадолженности);
	СписокОбъектов.Добавить(Документы.ЗакрытиеМесяца);
	СписокОбъектов.Добавить(Документы.ЗарплатаКВыплатеОрганизаций);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов);
	СписокОбъектов.Добавить(Документы.ИзменениеГрафиковАмортизацииОС);
	СписокОбъектов.Добавить(Документы.ИзменениеПараметровНачисленияАмортизацииНМА);
	СписокОбъектов.Добавить(Документы.ИзменениеПараметровНачисленияАмортизацииОС);
	СписокОбъектов.Добавить(Документы.ИзменениеСостоянияОС);
	СписокОбъектов.Добавить(Документы.ИзменениеСпособовОтраженияРасходовПоАмортизацииНМА);
	СписокОбъектов.Добавить(Документы.ИзменениеСпособовОтраженияРасходовПоАмортизацииОС);
	СписокОбъектов.Добавить(Документы.ИЛПеречислениеПолучателям);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияНЗП);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияОС);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияТоваровНаСкладе);
	СписокОбъектов.Добавить(Документы.ИПНЗаявлениеНаПредоставлениеВычета);
	СписокОбъектов.Добавить(Документы.ИсполнительныйЛист);
	СписокОбъектов.Добавить(Документы.КадровоеПеремещениеОрганизаций);
	СписокОбъектов.Добавить(Документы.КомандировкиОрганизаций);
	СписокОбъектов.Добавить(Документы.КомплектацияНоменклатуры);
	СписокОбъектов.Добавить(Документы.КомплектацияОС);
	СписокОбъектов.Добавить(Документы.КорректировкаДолга);
	СписокОбъектов.Добавить(Документы.КорректировкаСтоимостиСписанияТоваров);
	СписокОбъектов.Добавить(Документы.МодернизацияОС);
	СписокОбъектов.Добавить(Документы.НачислениеЗарплатыРаботникамОрганизаций);
	СписокОбъектов.Добавить(Документы.ОПВВозвратВзносов);
	СписокОбъектов.Добавить(Документы.ОПВПеречислениеВФонды);
	СписокОбъектов.Добавить(Документы.ОперацияБух);
	СписокОбъектов.Добавить(Документы.ОплатаОтПокупателяПлатежнойКартой);
	СписокОбъектов.Добавить(Документы.ОприходованиеТоваров);
	СписокОбъектов.Добавить(Документы.ОтражениеЗарплатыВБухучете);
	СписокОбъектов.Добавить(Документы.ОтражениеЗарплатыВРеглУчете);
	СписокОбъектов.Добавить(Документы.ОтражениеНалоговойОтчетностиВРеглУчете);
	СписокОбъектов.Добавить(Документы.ОтчетПроизводстваЗаСмену);
	СписокОбъектов.Добавить(Документы.Партия);
	СписокОбъектов.Добавить(Документы.ПередачаНМА);
	СписокОбъектов.Добавить(Документы.ПередачаОС);
	СписокОбъектов.Добавить(Документы.ПередачаТоваров);
	СписокОбъектов.Добавить(Документы.ПеремещениеОС);
	СписокОбъектов.Добавить(Документы.ПеремещениеТоваров);
	СписокОбъектов.Добавить(Документы.ПереоценкаВнеоборотныхАктивов);
	СписокОбъектов.Добавить(Документы.ПисьмоОбменСБанками);
	СписокОбъектов.Добавить(Документы.ПлатежноеПоручениеВходящее);
	СписокОбъектов.Добавить(Документы.ПлатежноеПоручениеИсходящее);
	СписокОбъектов.Добавить(Документы.ПлатежныйОрдерПоступлениеДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ПлатежныйОрдерСписаниеДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ПоступлениеДопРасходов);
	СписокОбъектов.Добавить(Документы.ПоступлениеИзПереработки);
	СписокОбъектов.Добавить(Документы.ПоступлениеНМА);
	СписокОбъектов.Добавить(Документы.ПоступлениеТоваровУслуг);
	СписокОбъектов.Добавить(Документы.ПриемНаРаботуВОрганизацию);
	СписокОбъектов.Добавить(Документы.ПринятиеКУчетуНМА);
	СписокОбъектов.Добавить(Документы.ПринятиеКУчетуОС);
	СписокОбъектов.Добавить(Документы.ПриходныйКассовыйОрдер);
	СписокОбъектов.Добавить(Документы.РасходныйКассовыйОрдер);
	СписокОбъектов.Добавить(Документы.РасчетЕдиногоПлатежа);
	СписокОбъектов.Добавить(Документы.РасчетНалоговПриПоступленииАктивовУслуг);
	СписокОбъектов.Добавить(Документы.РасчетПениОПВиСО);
	СписокОбъектов.Добавить(Документы.РасчетСНиСО);
	СписокОбъектов.Добавить(Документы.РасчетУдержанийРаботниковОрганизаций);
	СписокОбъектов.Добавить(Документы.РеализацияТоваровУслуг);
	СписокОбъектов.Добавить(Документы.РеализацияУслугПоПереработке);
	СписокОбъектов.Добавить(Документы.РегистрацияНДСЗаНерезидента);   
	СписокОбъектов.Добавить(Документы.РегистрацияПрочихВыплат);
	СписокОбъектов.Добавить(Документы.РегистрацияПрочихДоходовВЦеляхНалогообложения);
	СписокОбъектов.Добавить(Документы.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС);
	СписокОбъектов.Добавить(Документы.РегистрацияПрочихОперацийПоРеализованнымТоварамВЦеляхНДС);
	СписокОбъектов.Добавить(Документы.РегистрацияРазовыхУдержанийРаботниковОрганизаций);
	СписокОбъектов.Добавить(Документы.РеструктуризацияОС);
	СписокОбъектов.Добавить(Документы.СОВозвратОтчислений);
	СписокОбъектов.Добавить(Документы.СОПеречислениеВФонды);
	СписокОбъектов.Добавить(Документы.СписаниеНМА);
	СписокОбъектов.Добавить(Документы.СписаниеОС);
	СписокОбъектов.Добавить(Документы.СписаниеТоваров);
	СписокОбъектов.Добавить(Документы.Сторнирование);
	СписокОбъектов.Добавить(Документы.СчетНаОплатуПокупателю);
	СписокОбъектов.Добавить(Документы.СчетНаОплатуПоставщика);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданный);
	СписокОбъектов.Добавить(Документы.СчетФактураПолученный);
	СписокОбъектов.Добавить(Документы.ТребованиеНакладная);
	СписокОбъектов.Добавить(Документы.УвольнениеИзОрганизаций);
	СписокОбъектов.Добавить(Документы.УдалитьКорректировкаЗаписейРегистров);
	СписокОбъектов.Добавить(Документы.УдержаниеИПНиОПВНУ);
	СписокОбъектов.Добавить(Документы.УстановкаПорядкаЗакрытияПодразделений);
	СписокОбъектов.Добавить(Документы.УстановкаСоответствияСчетовБУиНУ);
	СписокОбъектов.Добавить(Документы.УстановкаЦенНоменклатуры);
	СписокОбъектов.Добавить(Документы.ЭСФ);
	СписокОбъектов.Добавить(Документы.ЗаявлениеНаПредоставлениеВычетовИПН);
	СписокОбъектов.Добавить(Документы.ПрекращениеПредоставленияВычетовИПН);
	СписокОбъектов.Добавить(Документы.ЭлектронныйАктВыполненныхРабот);	
	СписокОбъектов.Добавить(Документы.ЧекККМ);
	СписокОбъектов.Добавить(Документы.ОтчетОРозничныхПродажах);
	СписокОбъектов.Добавить(Документы.СНТ);
	
	СписокОбъектов.Добавить(Обработки.ВыплатаЗарплатыРасходнымиОрдерами);
	СписокОбъектов.Добавить(Обработки.РасчетПоСреднемуЗаработку);
	
	СписокОбъектов.Добавить(ПланыСчетов.Налоговый);
	СписокОбъектов.Добавить(ПланыСчетов.Типовой);
	
	СписокОбъектов.Добавить(ЖурналыДокументов.РозничныеПродажи);

	//Кибернетика Сухомлинов+
	СписокОбъектов.Добавить(Документы.ВедомостьВыдачиБУСпецодежды);
	СписокОбъектов.Добавить(Документы.ВедомостьВыдачиСпецодежды);
	СписокОбъектов.Добавить(Документы.ВозвратСпецодеждыИзЭксплуатации);
	СписокОбъектов.Добавить(Документы.ПеремещениеСпецодежды);
	СписокОбъектов.Добавить(Документы.ПланПотребностиСпецОдежды);
	СписокОбъектов.Добавить(Документы.СписанияСОПоСрокуСлужбы);
	СписокОбъектов.Добавить(Документы.СписаниеСпецОдеждыСоСклада);
	//Кибернетика Сухомлинов-  
	
КонецПроцедуры

// Позволяет переопределить список команд печати в произвольной форме.
// Может использоваться для общих форм, у которых нет модуля менеджера для размещения в нем процедуры ДобавитьКомандыПечати,
// для случаев, когда штатных средств добавления команд в такие формы недостаточно. 
// Например, если в общих формах нужны специфические команды печати.
// Вызывается из функции УправлениеПечатью.КомандыПечатиФормы.
// 
// Параметры:
//  ИмяФормы             - Строка - полное имя формы, в которой добавляются команды печати;
//  КомандыПечати        - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//  СтандартнаяОбработка - Булево - при установке значения Ложь не будет автоматически заполняться коллекция КомандыПечати.
//
// Пример:
//  Если ИмяФормы = "ОбщаяФорма.ЖурналДокументов" Тогда
//    Если Пользователи.РолиДоступны("ПечатьСчетаНаОплатуНаПринтер") Тогда
//      КомандаПечати = КомандыПечати.Добавить();
//      КомандаПечати.Идентификатор = "Счет";
//      КомандаПечати.Представление = НСтр("ru = 'Счет на оплату (на принтер)'");
//      КомандаПечати.Картинка = БиблиотекаКартинок.ПечатьСразу;
//      КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
//      КомандаПечати.СразуНаПринтер = Истина;
//    КонецЕсли;
//  КонецЕсли;
//
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	Если ИмяФормы = "Обработка.РасчетПоСреднемуЗаработку.Форма.ФормаРасчетОтпуска"
		ИЛИ ИмяФормы = "Обработка.РасчетПоСреднемуЗаработку.Форма.ФормаРасчетБольничного" Тогда
		
		СтандартнаяОбработка = Ложь;

		Обработки.РасчетПоСреднемуЗаработку.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Обработка.РасчетПоСреднемуЗаработку";
			КонецЕсли;
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ОбработкаОбъект.РасчетПоСреднемуЗаработку"));
		КонецЦикла;
		
	ИначеЕсли ИмяФормы = "Обработка.ВыплатаЗарплатыРасходнымиОрдерами.Форма.Форма" Тогда
		
		СтандартнаяОбработка = Ложь;

		Обработки.ВыплатаЗарплатыРасходнымиОрдерами.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Обработка.ВыплатаЗарплатыРасходнымиОрдерами";
			КонецЕсли;
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ОбработкаОбъект.ВыплатаЗарплатыРасходнымиОрдерами"));
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Позволяет задать дополнительные настройки команд печати в журналах документов.
//
// Параметры:
//  НастройкиСписка - Структура - модификаторы списка команд печати:
//   * МенеджерКомандПечати     - ОбщийМодуль - менеджер объекта, в котором формируется список команд печати;
//   * АвтоматическоеЗаполнение - Булево - заполнять команды печати из объектов, входящих в состав журнала.
//                                         Если установлено значение Ложь, то список команд печати журнала будет
//                                         заполнен вызовом метода ДобавитьКомандыПечати из модуля менеджера журнала.
//                                         Значение по умолчанию - Истина - метод ДобавитьКомандыПечати будет вызван из
//                                         модулей менеджеров документов, входящих в состав журнала.
//
// Пример:
//   Если НастройкиСписка.МенеджерКомандПечати = "ЖурналДокументов.СкладскиеДокументы" Тогда
//     НастройкиСписка.АвтоматическоеЗаполнение = Ложь;
//   КонецЕсли;
//
Процедура ПриПолученииНастроекСпискаКомандПечати(НастройкиСписка) Экспорт
	
КонецПроцедуры

// Позволяет выполнить постобработку печатных форм при их формировании.
// Например, можно вставить в печатную форму дату формирования.
// Вызывается после завершения процедуры Печать менеджера печати объекта, имеет те же параметры.
// Не вызывается при вызове УправлениеПечатьюКлиент.ПечатьДокументов.
//
// Параметры:
//  МассивОбъектов - Массив из ЛюбаяСсылка - список объектов, для которых была выполняется команда печати;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - возвращаемый параметр, коллекция сформированных печатных форм:
//   * ИмяМакета - Строка - идентификатор печатной формы;
//   * СинонимМакета - Строка - название печатной формы;
//
//   * ТабличныйДокумент - ТабличныйДокумент - одна или несколько печатных форм, выведенных в один табличный документ
//                         Для разметки печатных форм внутри табличного документа после вывода каждой печатной формы
//                         необходимо вызывать процедуру УправлениеПечатью.ЗадатьОбластьПечатиДокумента;
//                         Параметр не используется, если вывод печатных форм выполняется в формате офисных документов
//                         (см. параметр "ОфисныеДокументы");
//
//   * ОфисныеДокументы - Соответствие из КлючИЗначение - коллекция печатных форм в формате офисных документов:
//                         ** Ключ - Строка - адрес во временном хранилище двоичных данных печатной формы;
//                         ** Значение - Строка - имя файла печатной формы.
//
//   * ИмяФайлаПечатнойФормы - Строка - имя файла печатной формы при сохранении в файл или отправке в качестве
//                                      почтового вложения. Не используется для печатных форм в формате офисных документов.
//                                      По умолчанию имя файла устанавливается в формате
//                                      "[НазваниеПечатнойФормы] № [Номер] от [Дата]" для документов,
//                                      "[НазваниеПечатнойФормы] - [ПредставлениеОбъекта] - [ТекущаяДата]" для объектов.
//                           - Соответствие из КлючИЗначение - имена файлов для каждого объекта:
//                              ** Ключ - ЛюбаяСсылка - ссылка на объект печати из коллекции МассивОбъектов;
//                              ** Значение - Строка - имя файла;
//
//   * Экземпляров - Число - количество копий, которое необходимо вывести на печать;
//   * ПолныйПутьКМакету - Строка - используется для быстрого перехода к редактированию макета печатной формы
//                                  в общей форме ПечатьДокументов;
//   * ДоступенВыводНаДругихЯзыках - Булево - необходимо установить значение Истина, если печатная форма адаптирована
//                                            для вывода на произвольном языке.
//  
//  ОбъектыПечати - СписокЗначений - выходной параметр, соответствие между объектами и именами областей в табличных
//                                   документах, заполняется автоматически
//                                   при вызове УправлениеПечатью.ЗадатьОбластьПечатиДокумента:
//   * Значение - ЛюбаяСсылка - ссылка из коллекции МассивОбъектов,
//   * Представление - Строка - имя области с объектом в табличных документах;
//
//  ПараметрыВывода - Структура - настройки вывода печатных форм:
//   * ПараметрыОтправки - Структура - для автоматического заполнения полей в форме создания письма при отправке 
//                                     сформированных печатных форм по почте:
//     ** Получатель - см. РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.Получатель
//     ** Тема       - см. РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.Тема
//     ** Текст      - см. РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.Текст
//   * КодЯзыка - Строка - язык, на котором требуется сформировать печатную форму.
//                         Состоит из кода языка по ISO 639-1 и, опционально, кода страны по ISO 3166-1, разделенных
//                         символом подчеркивания. Примеры: "en", "en_US", "en_GB", "ru", "ru_RU".
//
//   * ЗаголовокФормы - Строка - переопределяет заголовок формы печати документов (ПечатьДокументов).
//
// Пример:
//
//  ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "<ИдентификаторПечатнойФормы>");
//  Если ПечатнаяФорма <> Неопределено Тогда
//    ТабличныйДокумент = Новый ТабличныйДокумент;
//    ТабличныйДокумент.КлючПараметровПечати = "<КлючСохраненияПараметровПечатнойФормы>";
//    Для Каждого Ссылка Из МассивОбъектов Цикл
//      Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
//        ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
//      КонецЕсли;
//      НачалоОбласти = ТабличныйДокумент.ВысотаТаблицы + 1;
//      // ... код по формированию табличного документа ...
//      УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НачалоОбласти, ОбъектыПечати, Ссылка);
//    КонецЦикла;
//    ПечатнаяФорма.ТабличныйДокумент = ТабличныйДокумент;
//  КонецЕсли;
//
Процедура ПриПечати(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	#Область МасштабированиеРисунков
	// Масштабирование рисунков в табличном документе на величину, указанную в имени области рисунка.
	//
	// Рисунок масштабируется относительно своего центра. Для задания масштаба необходимо в макете к имени области рисунка добавить
	// строку вида "_Масштаб_ХХХ_YYY", где ХХХ - число, целая часть коэффициента масштабирования, а YYY - число, дробная, не обязательная.
	// После масштабирования строка с указанием масштаба удаляется из имени области рисунка.
	// Примеры:
	//   "ПечатьОрганизации_Масштаб_2" для увеличения в два раза,
	//   "Подпись_Масштаб_0_33" для уменьшения в три раза.
	//
	ПризнакМасштабирования = "_Масштаб_";
	ДлинаПризнака = СтрДлина(ПризнакМасштабирования);
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		Для Каждого ОбластьТабличногоДокумента Из ПечатнаяФорма.ТабличныйДокумент.Области Цикл
			Если ТипЗнч(ОбластьТабличногоДокумента) = Тип("РисунокТабличногоДокумента") Тогда
				
				ИмяОбласти = ОбластьТабличногоДокумента.Имя;
				ПозицияПризнака = СтрНайти(ИмяОбласти, ПризнакМасштабирования);
				Если ПозицияПризнака <> 0 Тогда
					
					ДлинаИмениОбласти = СтрДлина(ИмяОбласти);
					
					ПозицияКоэффициента = ПозицияПризнака + ДлинаПризнака;
					
					ДлинаКоэффициента = 0;
					Пока ДлинаИмениОбласти >= (ПозицияКоэффициента + ДлинаКоэффициента)
						И СтрНайти("0123456789_", Сред(ИмяОбласти, ПозицияКоэффициента + ДлинаКоэффициента, 1)) <> 0 Цикл
						ДлинаКоэффициента = ДлинаКоэффициента + 1;
					КонецЦикла;
					
					Если ДлинаКоэффициента > 0 И Сред(ИмяОбласти, ПозицияКоэффициента + ДлинаКоэффициента - 1, 1) = "_" Тогда
						ДлинаКоэффициента = ДлинаКоэффициента - 1;
					КонецЕсли;
					
					Если ДлинаКоэффициента > 0 Тогда
						
						СтрокаКоэффициента = Сред(ИмяОбласти, ПозицияКоэффициента, ДлинаКоэффициента);
						Попытка
							Коэффициент = Число(СтрЗаменить(СтрокаКоэффициента, "_", "."));
						Исключение
							Продолжить;
						КонецПопытки;
						
						ОбластьТабличногоДокумента.Имя = СтрЗаменить(ИмяОбласти, ПризнакМасштабирования + СтрокаКоэффициента, "");
						
						НоваяВысотаРисунка = Окр(ОбластьТабличногоДокумента.Высота * Коэффициент);
						НоваяШиринаРисунка = Окр(ОбластьТабличногоДокумента.Ширина * Коэффициент);
						
						Если МассивОбъектов.Количество() > 1 Тогда
							ОбластьТабличногоДокумента.Верх = Макс(ОбластьТабличногоДокумента.Верх + (ОбластьТабличногоДокумента.Высота - НоваяВысотаРисунка), 0);
							ОбластьТабличногоДокумента.Лево = Макс(ОбластьТабличногоДокумента.Лево + (ОбластьТабличногоДокумента.Ширина - НоваяШиринаРисунка), 0);
						Иначе
							ОбластьТабличногоДокумента.Верх = Макс(ОбластьТабличногоДокумента.Верх + Цел((ОбластьТабличногоДокумента.Высота - НоваяВысотаРисунка)/2), 0);
							ОбластьТабличногоДокумента.Лево = Макс(ОбластьТабличногоДокумента.Лево + Цел((ОбластьТабличногоДокумента.Ширина - НоваяШиринаРисунка)/2), 0);
						КонецЕсли;
						
						ОбластьТабличногоДокумента.Высота = НоваяВысотаРисунка;
						ОбластьТабличногоДокумента.Ширина = НоваяШиринаРисунка;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	#КонецОбласти
	
КонецПроцедуры

// Переопределяет параметры отправки печатных форм при подготовке письма.
// Может использоваться, например, для подготовки текста письма.
//
// Параметры:
//  ПараметрыОтправки - Структура:
//   * Получатель - Массив - коллекция имен получателей;
//   * Тема - Строка - тема письма;
//   * Текст - Строка - текст письма;
//   * Вложения - Структура:
//    ** АдресВоВременномХранилище - Строка - адрес вложения во временном хранилище;
//    ** Представление - Строка - имя файла вложения.
//  ОбъектыПечати - Массив - коллекция объектов, по которым сформированы печатные формы.
//  ПараметрыВывода - Структура - параметр ПараметрыВывода в вызове процедуры Печать.
//  ПечатныеФормы - ТаблицаЗначений - коллекция табличных документов:
//   * Название - Строка - название печатной формы;
//   * ТабличныйДокумент - ТабличныйДокумент - печатная форма.
//
Процедура ПередОтправкойПоПочте(ПараметрыОтправки, ПараметрыВывода, ОбъектыПечати, ПечатныеФормы) Экспорт
	
	
	
КонецПроцедуры

// Определяет набор подписей и печатей для документов.
//
// Параметры:
//  Документы      - Массив    - коллекция ссылок на объекты печати;
//  ПодписиИПечати - Соответствие из КлючИЗначение - коллекция объектов печати и комплектов подписей/печатей к ним:
//   * Ключ     - ЛюбаяСсылка - ссылка на объект печати;
//   * Значение - Структура   - комплект подписей и печатей:
//     ** Ключ     - Строка - идентификатор подписи или печати в макете печатной формы, 
//                            должен начинаться с "Подпись...", "Печать..." или "Факсимиле...",
//                            например, "ПодписьРуководителя", "ПечатьОрганизации";
//     ** Значение - Картинка - изображение подписи или печати.
//
Процедура ПриПолученииПодписейИПечатей(МассивДокументов, ПодписиИПечати) Экспорт
	
	Для Каждого Документ Из МассивДокументов Цикл
		
		ФайлыПодписейИПечатей = Новый Структура();
		
		ДатаДокумента = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Дата");
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			
			Склад = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Склад");
			ИнформацияОбОтветственномЛице = ОбщегоНазначенияБКВызовСервера.ОтветственноеЛицо(Склад, ДатаДокумента); 
			
			Организация = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Организация");
			ОтветственныеЛицаОрганизации = ОбщегоНазначенияБКВызовСервера.ОтветственныеЛицаОрганизаций(Организация, ДатаДокумента);
			
			ФайлыПодписейИПечатей.Вставить("ПодписьРуководитель" , ОтветственныеЛицаОрганизации.РуководительФизЛицоПодпись);
			ФайлыПодписейИПечатей.Вставить("ПодписьГлБухгалтер"  , ОтветственныеЛицаОрганизации.ГлавныйБухгалтерФизЛицоПодпись);
			ФайлыПодписейИПечатей.Вставить("ПодписьОтпустил"     , ИнформацияОбОтветственномЛице.Подпись);
			ФайлыПодписейИПечатей.Вставить("ПодписьОтветственный", ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Ответственный.ФизЛицо.ФайлПодписи"));
			ФайлыПодписейИПечатей.Вставить("ПечатьОрганизации"   , ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Организация.ФайлПечати"));
			
		ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.АктСверкиВзаиморасчетов") Тогда
			ФайлыПодписейИПечатей.Вставить("ПодписьПредставительОрганизации", ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "ПредставительОрганизации.ФайлПодписи"));
			ФайлыПодписейИПечатей.Вставить("ПечатьОрганизации"   , ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Организация.ФайлПечати"));
			
		ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			ФайлыПодписейИПечатей.Вставить("ПодписьОтветственный", ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Ответственный.ФизЛицо.ФайлПодписи"));
			ФайлыПодписейИПечатей.Вставить("ПечатьОрганизации"   , ОбщегоНазначения.ПолучитьЗначениеРеквизита(Документ, "Организация.ФайлПечати"));
		КонецЕсли;
		
		КартинкиПодписейИПечатей = Новый Структура;
		
		Для Каждого ФайлКартинки Из ФайлыПодписейИПечатей Цикл
			Если ЗначениеЗаполнено(ФайлКартинки.Значение) Тогда
				Попытка
					СсылкаНаДвоичныеДанныеФайла = РаботаСФайлами.ДанныеФайла(ФайлКартинки.Значение).СсылкаНаДвоичныеДанныеФайла;
					Если ЗначениеЗаполнено(СсылкаНаДвоичныеДанныеФайла) Тогда
						Картинка = Новый Картинка(ПолучитьИзВременногоХранилища(СсылкаНаДвоичныеДанныеФайла), Истина);
						КартинкиПодписейИПечатей.Вставить(ФайлКартинки.Ключ, Картинка);
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
		
		Если КартинкиПодписейИПечатей.Количество() <> 0 Тогда
			ПодписиИПечати.Вставить(Документ, КартинкиПодписейИПечатей);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Вызывается из обработчика ПриСозданииНаСервере формы печати документов (ОбщаяФорма.ПечатьДокументов).
// Позволяет изменить внешний вид и поведение формы, например, разместить на ней дополнительные элементы:
// информационные надписи, кнопки, гиперссылки, различные настройки и т.п.
//
// При добавлении команд (кнопок) в качестве обработчика следует указывать имя "Подключаемый_ВыполнитьКоманду",
// а его реализацию размещать в УправлениеПечатьюПереопределяемый.ПечатьДокументовПриВыполненииКоманды (серверная часть),
// либо в УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду (клиентская часть).
//
// Для того, чтобы добавить свою команду на форму, необходимо сделать следующее.
// 1. Создать команду и кнопку в УправлениеПечатьюПереопределяемый.ПечатьДокументовПриСозданииНаСервере.
// 2. Реализовать клиентский обработчик команды в УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду.
// 3. (Опционально) Реализовать серверный обработчик команды в УправлениеПечатьюПереопределяемый.ПечатьДокументовПриВыполненииКоманды.
//
// При добавлении гиперссылок в качестве обработчика нажатия следует указывать имя "Подключаемый_ОбработкаНавигационнойСсылки",
// а его реализацию размещать в УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовОбработкаНавигационнойСсылки.
//
// При размещении элементов, значение которых должны запоминаться между открытиями формы печати,
// следует воспользоваться процедурами ПечатьДокументовПриЗагрузкеДанныхИзНастроекНаСервере и
// ПечатьДокументовПриСохраненииДанныхВНастройкахНаСервере.
//
// Параметры:
//  Форма                - ФормаКлиентскогоПриложения - форма ОбщаяФорма.ПечатьДокументов.
//  Отказ                - Булево - признак отказа от создания формы. Если установить
//                                  данному параметру значение Истина, то форма создана не будет.
//  СтандартнаяОбработка - Булево - в данный параметр передается признак выполнения стандартной (системной) обработки
//                                  события. Если установить данному параметру значение Ложь, 
//                                  стандартная обработка события производиться не будет.
// 
// Пример:
//  КомандаФормы = Форма.Команды.Добавить("МояКоманда");
//  КомандаФормы.Действие = "Подключаемый_ВыполнитьКоманду";
//  КомандаФормы.Заголовок = НСтр("ru = 'Моя команда'");
//  
//  КнопкаФормы = Форма.Элементы.Добавить(КомандаФормы.Имя, Тип("КнопкаФормы"), Форма.Элементы.КоманднаяПанельПраваяЧасть);
//  КнопкаФормы.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
//  КнопкаФормы.ИмяКоманды = КомандаФормы.Имя;
//
Процедура ПечатьДокументовПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	
	
КонецПроцедуры

// Вызывается из обработчика ПриЗагрузкеДанныхИзНастроекНаСервере формы печати документов (ОбщаяФорма.ПечатьДокументов).
// Совместно с ПечатьДокументовПриСохраненииДанныхВНастройкахНаСервере позволяет реализовать загрузку и сохранение 
// настроек элементов управления, размещенных с помощью ПечатьДокументовПриСозданииНаСервере.
//
// Параметры:
//  Форма     - ФормаКлиентскогоПриложения - форма ОбщаяФорма.ПечатьДокументов.
//  Настройки - Соответствие     - значения реквизитов формы.
//
Процедура ПечатьДокументовПриЗагрузкеДанныхИзНастроекНаСервере(Форма, Настройки) Экспорт
	
КонецПроцедуры

// Вызывается из обработчика ПриСохраненииДанныхВНастройкахНаСервере формы печати документов (ОбщаяФорма.ПечатьДокументов).
// Совместно с ПечатьДокументовПриЗагрузкеДанныхИзНастроекНаСервере позволяет реализовать загрузку и сохранение 
// настроек элементов управления, размещенных с помощью ПечатьДокументовПриСозданииНаСервере.
//
// Параметры:
//  Форма     - ФормаКлиентскогоПриложения - форма ОбщаяФорма.ПечатьДокументов.
//  Настройки - Соответствие     - значения реквизитов формы.
//
Процедура ПечатьДокументовПриСохраненииДанныхВНастройкахНаСервере(Форма, Настройки) Экспорт

КонецПроцедуры

// Вызывается из обработчика Подключаемый_ВыполнитьКоманду формы печати документов (ОбщаяФорма.ПечатьДокументов).
// Позволяет реализовать серверную часть обработчика команды, которая добавлена в форму 
// с помощью ПечатьДокументовПриСозданииНаСервере.
//
// Параметры:
//  Форма                   - ФормаКлиентскогоПриложения - форма ОбщаяФорма.ПечатьДокументов.
//  ДополнительныеПараметры - Произвольный     - параметры, переданные из УправлениеПечатьюКлиентПереопределяемый.ПечатьДокументовВыполнитьКоманду.
//
// Пример:
//  Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.ИмяКоманды = "МояКоманда" Тогда
//   ТабличныйДокумент = Новый ТабличныйДокумент;
//   ТабличныйДокумент.Область("R1C1").Текст = НСтр("ru = 'Пример использования серверного обработчика подключенной команды.'");
//  
//   ПечатнаяФорма = Форма[ДополнительныеПараметры.ИмяРеквизитаТабличногоДокумента];
//   ПечатнаяФорма.ВставитьОбласть(ТабличныйДокумент.Область("R1"), ПечатнаяФорма.Область("R1"), 
//    ТипСмещенияТабличногоДокумента.ПоГоризонтали)
//  КонецЕсли;
//
Процедура ПечатьДокументовПриВыполненииКоманды(Форма, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Определяет используемый макет данных печати для объектов метаданных и отдельных полей.
// По умолчанию используется макет ДанныхПечати у ссылочных объектов. Если макет отсутствует в метаданных, он будет
// сгенерирован автоматически на основе выборки всех реквизитов объекта. В данной процедуре можно переопределить
// состав полей, доступных для печати как для всего объекта, так и для отдельного поля объекта.
//
// Параметры:
//  Объект - Строка - полное имя объекта метаданных либо имя поля из макета "ДанныеПечати" объекта метаданных
//                      в формате "ПолноеИмяОбъектаМетаданных.ИмяПоля".
//  ИсточникиДанныхПечати - СписокЗначений:
//    * Значение - СхемаКомпоновкиДанных - схема данных печати. Определяет состав подчиненных полей объекта или поля,
//                                         используется при получении данных печати.
//                                         При получении данных печати отбор значений производится по полю Ссылка.
//                                         Поэтому в составе полей схемы компоновки данных обязательно должно
//                                         присутствовать поле Ссылка, даже если оно фактически не ссылочного типа,
//                                         а, например, Строка.
//      
//    * Представление - Строка - идентификатор схемы, используется при получении данных.
//    * Пометка -Булево - Истина, если в качестве дополнительного ключевого поля выступает владелец источника данных.
//
Процедура ПриОпределенииИсточниковДанныхПечати(Объект, ИсточникиДанныхПечати) Экспорт
	
	
	
КонецПроцедуры

// Подготавливает данные печати.
//
// Параметры:
//  ИсточникиДанных - Массив - объекты, для которых формируются данные печати.
//  ВнешниеНаборыДанных - Структура - коллекция наборов данных для передачи в процессор компоновки данных.
//  ИдентификаторСхемыКомпоновкиДанных - Строка - идентификатор СКД, указанный в ПриОпределенииИсточниковДанныхПечати.
//  КодЯзыка - Строка - язык, на котором требуется подготовить данные печати.
//  ДополнительныеПараметры - Структура:
//   * ОписанияИсточниковДанных - ТаблицаЗначений - дополнительные сведения об объектах, для которых формируются данные печати.
//   * ДанныеИсточниковСгруппированыПоВладельцуИсточникаДанных - Булево - указывает на то, что в результате компоновки
//                           данные печати сгруппированы не по объектам печати, а по их владельцам в схеме данных печати.
//  
Процедура ПриПодготовкеДанныхПечати(ИсточникиДанных, ВнешниеНаборыДанных, ИдентификаторСхемыКомпоновкиДанных, КодЯзыка,
	ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// Позволяет выполнить переопределение данных печатной формы перед формированием.
//
// Параметры:
//  ИдентификаторПечатнойФормы - Строка - идентификатор печатной формы;
//  ОбъектыПечати      - Массив    - коллекция ссылок на объекты печати;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//
Процедура ПередПечатью(Знач ИдентификаторПечатнойФормы, ОбъектыПечати, ПараметрыПечати) Экспорт 
	
	
	
КонецПроцедуры

// Позволяет задать дополнительные настройки команд печати.
//
// Параметры:
//   ПолноеИмяОбъектаМетаданных   - ОбъектМетаданных - к которому подключены источники команд
//   КомандыПечати 		- см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ПриПолученииКомандПечати(Знач ПолноеИмяОбъектаМетаданных, КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

#КонецОбласти

#КонецОбласти

