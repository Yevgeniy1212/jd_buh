////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// Процедуры и функции проверки корректности заполнения регламентированных данных
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Проверяет соответствие ИИН/БИН требованиям.
//
// Параметры:
//  ИдентификационныйНомер - Строка - Проверяемый индивидуальный идентификационный номер 
//                                    или бизнес-идентификационный номер.
//  ТекстСообщения - Строка - Текст сообщения о результатах проверки.
//
// Возвращаемое значение:
//  Истина - ИИН/БИН соответствует требованиям.
//  Ложь   - ИИН/БИН не соответствует требованиям.
//
Функция ИИНБИНСоответствуетТребованиям(Знач ИдентификационныйНомер, ТекстСообщения) Экспорт
	
	СоответствуетТребованиям = Истина;
	ТекстСообщения = НСтр("ru = 'Введенный ИИН / БИН корректен.'");
	
	ИдентификационныйНомер = СокрЛП(ИдентификационныйНомер);
	
	Если СтрДлина(ИдентификационныйНомер) <> 12 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'ИИН / БИН должен состоять из 12 цифр.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ИдентификационныйНомер) Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'ИИН / БИН должен состоять только из цифр.'");
		
	ИначеЕсли СтрЧислоВхождений(ИдентификационныйНомер, Лев(ИдентификационныйНомер, 1)) = 12 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Цифра %1 повторяется 12 раз.'"), Лев(ИдентификационныйНомер, 1));
		
	Иначе
		
		// а12 = (а1*b1+а2*b2+а3*b3+а4*b4+а5*b5+а6*b6+а7*b7+а8*b8+а9*b9+a10*b10+a11*b11) mod 11
		
		ПодстрокаИН11 = Лев(ИдентификационныйНомер,11);        // копируем первые 11 символов
		КонтрольноеЗначение = Прав(ИдентификационныйНомер, 1); // контрольная сумма ИИН/БИН
		
		// Разряд ИИН: 1 2 3 4 5 6 7 8 9 10 11
		// Вес разряда: 1 2 3 4 5 6 7 8 9 10 11
		
		СуммаРазрядов = 1 * Сред(ИдентификационныйНомер, 1, 1) + 2 * Сред(ИдентификационныйНомер, 2, 1) +
					    3 * Сред(ИдентификационныйНомер, 3, 1) + 4 * Сред(ИдентификационныйНомер, 4, 1) +
					    5 * Сред(ИдентификационныйНомер, 5, 1) + 6 * Сред(ИдентификационныйНомер, 6, 1) +
					    7 * Сред(ИдентификационныйНомер, 7, 1) + 8 * Сред(ИдентификационныйНомер, 8, 1) +
					    9 * Сред(ИдентификационныйНомер, 9, 1) + 10 * Сред(ИдентификационныйНомер, 10, 1) + 11 * Сред(ИдентификационныйНомер, 11, 1);
		ВычисленноеКонтрольноеЗначение = СуммаРазрядов - Цел(СуммаРазрядов / 11) * 11; // mod - остаток от деления Суммы разрядов на 11.
		
		Если ВычисленноеКонтрольноеЗначение = 10 Тогда
			
			// Разряд ИИН: 1 2 3 4 5 6 7 8 9 10 11 
			// Вес разряда: 3 4 5 6 7 8 9 10 11 1 2
			
			СуммаРазрядов = 3 * Сред(ИдентификационныйНомер, 1, 1) + 4 * Сред(ИдентификационныйНомер, 2, 1) +
						    5 * Сред(ИдентификационныйНомер, 3, 1) + 6 * Сред(ИдентификационныйНомер, 4, 1) +
						    7 * Сред(ИдентификационныйНомер, 5, 1) + 8 * Сред(ИдентификационныйНомер, 6, 1) +
						    9 * Сред(ИдентификационныйНомер, 7, 1) + 10 * Сред(ИдентификационныйНомер, 8, 1) +
						    11 * Сред(ИдентификационныйНомер, 9, 1) + 1 * Сред(ИдентификационныйНомер, 10, 1) + 2 * Сред(ИдентификационныйНомер, 11, 1);
			ВычисленноеКонтрольноеЗначение = СуммаРазрядов - Цел(СуммаРазрядов / 11) * 11;   
			
		КонецЕсли;
		
		Если ВычисленноеКонтрольноеЗначение <> Число(КонтрольноеЗначение) Тогда
			
			СоответствуетТребованиям = Ложь;
			ТекстСообщения = НСтр("ru = 'Введенный БИН / ИИН некорректен.'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СоответствуетТребованиям;
	
КонецФункции

// Проверяет соответствие РНН требованиям.
//
// Параметры:
//  РНН - Строка - Проверяемый регистрационный номер налогоплательщика.
//  ТекстСообщения - Строка - Текст сообщения о результатах проверки.
//
// Возвращаемое значение:
//  Истина - РНН соответствует требованиям.
//  Ложь   - РНН не соответствует требованиям.
//
Функция РННСоответствуетТребованиям(Знач РНН, ТекстСообщения) Экспорт
	
	СоответствуетТребованиям = Истина;
	ТекстСообщения = НСтр("ru = 'Введенный РНН корректен.'");
	
	РНН = СокрЛП(РНН);
	
	Если СтрДлина(РНН) <> 12 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'РНН должен состоять из 12 цифр.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(РНН) Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'РНН должен состоять только из цифр.'");
		
	ИначеЕсли СтрЧислоВхождений(РНН, Лев(РНН, 1)) = 12 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Цифра %1 повторяется 12 раз.'"), Лев(РНН, 1));
		
	Иначе
		
		ПодстрокаРНН11 = Лев(РНН, 11);   // Копировать первые 11 символов
		КонтрольнаяСумма = Прав(РНН, 1); // Контрольная сумма РНН
		
		Для СчетчикЦикла1 = 1 По 10 Цикл
			
			СуммаПроизведений = 0;
			Вес = СчетчикЦикла1 - 1;
			
			Для СчетчикЦикла2 = 1 По 11 Цикл // Накопить сумму произведений
				
				Вес = Вес + 1;
				
				Если Вес = 11 Тогда 
					Вес = 1; // Сбросить вес на единицу
				КонецЕсли;
				
				СуммаПроизведений = СуммаПроизведений + Вес * Число(Сред(ПодстрокаРНН11, СчетчикЦикла2, 1));
				
			КонецЦикла;
			
			// Сравнить рассчитанный коэфиициент с контрольной суммой 
			Коэффициент = СуммаПроизведений - Цел((СуммаПроизведений) / 11) * 11;
			Если Коэффициент < 10 Тогда 
				Если Коэффициент <> Число(КонтрольнаяСумма) Тогда
					СоответствуетТребованиям = Ложь;
					ТекстСообщения = НСтр("ru = 'Введенный РНН некорректен.'");
				КонецЕсли;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СоответствуетТребованиям;
	
КонецФункции

// Проверяет соответствие СИК требованиям.
//
// Параметры:
//  СИК - Строка - Проверяемый социальный индивидуальный код.
//  ТекстСообщения - Строка - Текст сообщения о результатах проверки.
//
// Возвращаемое значение:
//  Истина - СИК соответствует требованиям.
//  Ложь   - СИК не соответствует требованиям.
//
Функция СИКСоответствуетТребованиям(Знач СИК, ТекстСообщения) Экспорт
	
	СоответствуетТребованиям = Истина;
	ТекстСообщения = НСтр("ru = 'Введенный СИК корректен.'");
	
	СИК = СокрЛП(СИК);
	ДлинаСИК = СтрДлина(СИК);
	
	Если ДлинаСИК <> 16 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'СИК должен состоять из 16 символов.'");
		
	ИначеЕсли СтрЧислоВхождений(СИК, Лев(СИК, 1)) = 16 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Символ %1 повторяется 16 раз.'"), Лев(СИК, 1));
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(СИК, , "0123456789") Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'СИК должен состоять только из цифр и заглавных букв латинского алфавита.'");
		
	КонецЕсли;
	
	Возврат СоответствуетТребованиям;
	
КонецФункции

// Проверяет соответствие КБе требованиям.
// Требования к Кбе определены в "Постановление Правления Национального Банка Республики Казахстан от 15 ноября 1999 года № 388".
//
// Параметры:
//  КБе - Строка - Проверяемый код бенефициара.
//  ТекстСообщения - Строка - Текст сообщения о результатах проверки.
//
// Возвращаемое значение:
//  Истина - КБе соответствует требованиям.
//  Ложь   - КБе не соответствует требованиям.
//
Функция КБеСоответствуетТребованиям(Знач КБе, ТекстСообщения) Экспорт
	
	СоответствуетТребованиям = Истина;
	ТекстСообщения = НСтр("ru = 'Введенный КБе корректен.'");
	
	КБе = СокрЛП(КБе);
	ДлинаКБе = СтрДлина(КБе);
	
	Если ДлинаКБе <> 2 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'КБе должен состоять из 2 цифр.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КБе) Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'КБе должен состоять только из цифр.'");
		
	Иначе
		
		ПризнакРезидентства = Число(Лев(КБе, 1));
		Если ПризнакРезидентства <> 1 И ПризнакРезидентства <> 2 Тогда
			
			СоответствуетТребованиям = Ложь;
			ТекстСообщения = НСтр("ru = 'Первым символом КБе должно быть число 1 или 2.'");
			
		КонецЕсли;
		
		СекторЭкономики = Число(Прав(КБе, 1));
		Если СекторЭкономики = 0 Тогда // Сектор экономики долже быть равен: 1, 2, 3, 4, 5, 6, 7, 8, 9.
			
			СоответствуетТребованиям = Ложь;
			ТекстСообщения = НСтр("ru = 'Вторым символом КБе должно быть число от 1 до 9.'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СоответствуетТребованиям;
	
КонецФункции

// Проверяет соответствие БИК требованиям.
// Требования к БИК определены в "Постановление Правления Национального Банка Республики Казахстан от 24 августа 2012 года № 236".
//
// Параметры:
//  БИК - Строка - Проверяемый банковский идентификационный код.
//  ТекстСообщения - Строка - Текст сообщения о результатах проверки.
//
// Возвращаемое значение:
//  Истина - БИК соответствует требованиям.
//  Ложь   - БИК не соответствует требованиям.
//
Функция БИКСоответствуетТребованиям(Знач БИК, ТекстСообщения) Экспорт
	
	СоответствуетТребованиям = Истина;
	ТекстСообщения = НСтр("ru = 'Введенный БИК корректен.'");
	
	БИК = СокрЛП(БИК);
	ДлинаБИК = СтрДлина(БИК);
	
	Если ДлинаБИК <> 8 И ДлинаБИК <> 11 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'БИК должен состоять из 8 или 11 символов.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(БИК, , "0123456789") Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'БИК должен состоять только из цифр и букв латинского алфавита.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(Лев(БИК, 6)) Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'Первые шесть символов БИК должны быть буквами латинского алфавита.'");
		
	КонецЕсли;
	
	Возврат СоответствуетТребованиям 
	
КонецФункции

// Проверяет соответствие расчетного счета требованиям.
// Требования к расчетному счету определены в ISO 13616 (IBAN)
//
// Параметры:
//  РасчетныйСчет - Строка - Проверяемый расчетный счет (IBAN).
//  ТекстСообщения - Строка - Текст сообщения о результатах проверки.
//
// Возвращаемое значение:
//  Истина - Расчетный счет соответствует требованиям.
//  Ложь   - Расчетный счет не соответствует требованиям.
//
Функция РасчетныйСчетСоответствуетТребованиям(Знач РасчетныйСчет, ТекстСообщения) Экспорт
	
	СоответствуетТребованиям = Истина;
	ТекстСообщения = НСтр("ru = 'Введенный расчетный счет корректен.'");
	
	РасчетныйСчет = СокрЛП(РасчетныйСчет);
	ДлинаРасчетныйСчет = СтрДлина(РасчетныйСчет);
	
	Если ПустаяСтрока(РасчетныйСчет) Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'Расчетный счет не заполнен.'");
		
	ИначеЕсли ДлинаРасчетныйСчет > 34 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'Длина расчетного счета должна быть не более 34 символов.'");
		
	ИначеЕсли НЕ СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(РасчетныйСчет, , "0123456789") Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'Расчетный счет должен состоять только из цифр и заглавных букв латинского алфавита.'");
		
	ИначеЕсли Лев(РасчетныйСчет, 2) = "KZ" И СтрДлина(РасчетныйСчет) <> 20 Тогда
		
		СоответствуетТребованиям = Ложь;
		ТекстСообщения = НСтр("ru = 'Казахстанский расчетный счет должен иметь длину 20 символов.'");
		
	КонецЕсли;
	
	Возврат СоответствуетТребованиям;
	
КонецФункции
