
#Область ПрограммныйИнтерфейс

Функция СообщенияФоновогоЗадания(ИдентификаторЗадания) Экспорт
	
	СообщениеПользователю = ДлительныеОперации.СообщенияПользователю(Истина, ИдентификаторЗадания);
	
	Адрес = ПоместитьВоВременноеХранилище(СообщениеПользователю);
	
	Возврат Адрес;
	
КонецФункции

// Возвращает БИН организации
//
// Параметры:
//  Организация	- СправочникСсылка.Организации - Организация
// 
// Возвращаемое значение:
//  Строка - БИН
//
Функция БИНОрганизации(Организация) Экспорт
	
	Возврат ЭТДСервер.БИНОрганизации(Организация);
	
КонецФункции

Функция ПолучитьПараметрыЭТД() Экспорт
	
	Возврат ЭТДСерверПовтИсп.ПолучитьПараметрыЭТД();
	
КонецФункции

Функция ПолучитьМассивВыбораВладельцыПрофиля() Экспорт
	
	Возврат ЭТДСервер.ПолучитьМассивВыбораВладельцыПрофиля();
	
КонецФункции

Процедура ЗаполнитьПараметрыЭТД(Перезаписать = Ложь, ПараметрыЗаполнения) Экспорт
	
	ЭТДСервер.ЗаполнитьПараметрыЭТД(Перезаписать, ПараметрыЗаполнения);
	
КонецПроцедуры

Процедура СоздатьЗаписьЖурналаРегистрации(
	ИмяСобытия, 
	УровеньСтрокой = "", 
	ОбъектМетаданных = Неопределено, 
	Данные = Неопределено, 
	Комментарий = "") Экспорт
	
	ЭТДСервер.СоздатьЗаписьЖурналаРегистрации(ИмяСобытия, УровеньСтрокой, ОбъектМетаданных, Данные, Комментарий);
	
КонецПроцедуры

Функция ЭТД_ЗаписатьЗначениеJSON(Значение) Экспорт
	
	Возврат ЭТДСервер.ЭТД_ЗаписатьЗначениеJSON(Значение);
	
КонецФункции

Функция ЭТД_ПрочитатьЗначениеJSON(Значение, СвойстваДаты = "") Экспорт
	
	Возврат ЭТДСервер.ЭТД_ПрочитатьЗначениеJSON(Значение, СвойстваДаты);
	
КонецФункции

Функция ПроверкаСтатусаСервиса(Адрес, СтрокаЗапроса) Экспорт
	
	Возврат ЭТДКлиентСервер.ПроверкаСтатусаСервиса(Адрес, СтрокаЗапроса);
	
КонецФункции

Функция ПолучитьНаименованиеДолжности(КодДолжности) Экспорт
	
	Возврат ЭТДСервер.ПолучитьНаименованиеДолжности(КодДолжности);
	
КонецФункции

Функция ПолучитьНаименованиеТяжелыхУсловийТруда(КодУсловийТруда) Экспорт
	
	Возврат ЭТДСервер.ПолучитьНаименованиеТяжелыхУсловийТруда(КодУсловийТруда);
	
КонецФункции

Функция ПолучитьНаименованиеОбразованияИностранца(КодОбразования) Экспорт
	
	Возврат ЭТДСервер.ПолучитьНаименованиеОбразованияИностранца(КодОбразования);
	
КонецФункции

Функция ПолучитьНаименованиеОснованияПривлеченияИностранца(КодОснованияПривлеченияИностранца) Экспорт
	
	Возврат ЭТДСервер.ПолучитьНаименованиеОснованияПривлеченияИностранца(КодОснованияПривлеченияИностранца);
	
КонецФункции

Функция ПолучитьНаименованиеСуда(КодСуда) Экспорт
	
	Возврат ЭТДСервер.ПолучитьНаименованиеСуда(КодСуда);
	
КонецФункции

Функция ПолучитьПараметрыСотрудникаДляСоциальногоОтпуска(Сотрудник, ДатаПолученияДанных = Неопределено) Экспорт
	
	Возврат ЭТДСервер.ПолучитьПараметрыСотрудникаДляСоциальногоОтпуска(Сотрудник, ДатаПолученияДанных);
	
КонецФункции

Функция ПолучитьКоличествоВыходныхДнейЗаПериод(Сотрудник, НачалоПериода, КонецПериода) Экспорт
	
	Возврат ЭТДСервер.ПолучитьКоличествоВыходныхДнейЗаПериод(Сотрудник, НачалоПериода, КонецПериода);
	
КонецФункции

Функция ПолучитьНаименованиеПричиныРасторжения(КодПричиныРасторжения) Экспорт
	
	Возврат ЭТДСервер.ПолучитьНаименованиеПричиныРасторжения(КодПричиныРасторжения);
	
КонецФункции

Функция ПолучитьДанныеАутентификации(ДанныеОрганизации) Экспорт
	
	Возврат ЭТДСервер.ПолучитьДанныеАутентификации(ДанныеОрганизации);
	
КонецФункции

#Область Криптобиблиотека

Функция ПолучитьВерсиюВнешнегоМодуляЭТД() Экспорт
	
	Возврат ЭТДСервер.ПолучитьВерсиюВнешнегоМодуляЭТД();
	
КонецФункции

Функция ИспользоватьВнешнююКриптографиюДляКомпоненты() Экспорт
	
	Возврат ЭТДСервер.ИспользоватьВнешнююКриптографиюДляКомпоненты();
	
КонецФункции

Функция ВыполнятьКриптографическиеОперацииНаКлиенте() Экспорт
	
	Возврат ЭТДСерверПовтИсп.ВыполнятьКриптографическиеОперацииНаКлиенте();
	
КонецФункции

Функция СохранитьКлючВФайл(ДанныеКлючаЭЦП) Экспорт
	
	Возврат ЭТДКлиентСервер.СохранитьКлючВФайл(ДанныеКлючаЭЦП);
	
КонецФункции

Процедура УдалитьФайлКлюча(ДанныеКлючаЭЦП) Экспорт
	
	ЭТДКлиентСервер.УдалитьФайлКлюча(ДанныеКлючаЭЦП);
	
КонецПроцедуры

Функция УдалосьПодключитьКриптопровайдерНаСервере(Версия = "", РежимТишины = Ложь, ТолькоПодключение = Ложь) Экспорт
	
	УдалосьПодключитьНаСервере = Ложь;
	
	Криптопровайдер = ЭТДКлиентСервер.НовыйЭкземплярКриптопровайдера( ,РежимТишины, ТолькоПодключение);

	Если Криптопровайдер = Неопределено Тогда
		ОбновитьПовторноИспользуемыеЗначения();
		УдалосьПодключитьНаСервере = Ложь;
		Версия = "";
	Иначе
		УдалосьПодключитьНаСервере = Истина;
		Версия = Криптопровайдер.Версия;
	КонецЕсли;
	
	Возврат УдалосьПодключитьНаСервере;
	
КонецФункции

Функция СоздатьЭЦП_XML_Криптопровайдер(Знач ДанныеXML, ИдентификаторКлиента = "", ПараметрыКлюча = Неопределено) Экспорт
	
	Возврат ЭТДКлиентСервер.СоздатьЭЦП_XML_Криптопровайдер(ДанныеXML, ИдентификаторКлиента, ПараметрыКлюча);
	
КонецФункции

Функция СоздатьЭЦП_XML_КриптопровайдерДляСписка(Знач МассивXML, ИдентификаторКлиента = "", ПараметрыКлюча = Неопределено) Экспорт
	
	Возврат ЭТДКлиентСервер.СоздатьЭЦП_XML_КриптопровайдерДляСписка(МассивXML, ИдентификаторКлиента, ПараметрыКлюча);
	
КонецФункции

Функция ПолучитьДополнительныеСведенияКриптопровайдера() Экспорт
	
	Возврат ЭТДКлиентСервер.ПолучитьДополнительныеСведенияКриптопровайдера();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
