
#Область СлужебныеПроцедурыИФункции

//СтруктураОтбора - должна содержать имя реквизита учетного документа и значение отбора.
//
Процедура ДополнитьСтруктуруОтбораПервичногоДокумента(СтруктураОтбора, ДокументИсточник, ДополнительныеПараметры = Неопределено) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	
	//ИС МПТ
	Если ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.АктПриемаПередачиИСМПТК") Тогда 
		
		Если Не ДополнительныеПараметры = Неопределено Тогда
			Если ДополнительныеПараметры.ИмяДокумента = "РеализацияТоваровУслуг" Тогда
				
				//Если ДокументИсточник.ВидОперации = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперацииИСМПТК.Реализация") Тогда
				//	СтруктураОтбора.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.РеализацияКлиенту"));
				//Иначе 
				//	СтруктураОтбора.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию"));
				//КонецЕсли;
				
			ИначеЕсли ДополнительныеПараметры.ИмяДокумента = "ПоступлениеТоваровУслуг" Тогда
				
				//Если ДокументИсточник.ВидОперации = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперацииИСМПТК.Реализация") Тогда
				//	СтруктураОтбора.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика"));
				//Иначе 
				//	СтруктураОтбора.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПриемНаКомиссию"));
				//КонецЕсли;
				
			ИначеЕсли ДополнительныеПараметры.ИмяДокумента = "ВозвратТоваровОтПокупателя" Тогда
				
				//Если ДокументИсточник.ВидОперации = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперацииИСМПТК.Реализация") Тогда
				//	СтруктураОтбора.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента"));
				//Иначе 
				//	СтруктураОтбора.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера"));
				//КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСМПТК") Тогда 
		
		СтруктураОтбора.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Импорт"));
			
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСМПТК") Тогда 
		
		СтруктураОтбора.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Импорт"));
		
	//ИС ЦЭДМ
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.АктВнутреннегоПеремещенияИСЦЭДМ") Тогда
		
		Если ЗначениеЗаполнено(ДокументИсточник.СкладПоставщик) Тогда
			СтруктураОтбора.Вставить("СкладОтправитель", ДокументИсточник.СкладПоставщик);
		КонецЕсли;
		Если ЗначениеЗаполнено(ДокументИсточник.СкладПолучатель) Тогда
			СтруктураОтбора.Вставить("СкладПолучатель", ДокументИсточник.СкладПолучатель);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ") Тогда 
		
		//НЕ розница
		СтруктураОтбора.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Импорт"));

	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ") Тогда 
		
		//НЕ розница
		СтруктураОтбора.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Импорт"));
		
	//СУЗ
	ИначеЕсли ТипЗнч(ДокументИсточник.Ссылка) = Тип("ДокументСсылка.ЗаказКодовМаркировкиСУЗИСМПТК") Тогда
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИмяФормыВыбораСтраны() Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
 	Возврат "ОбщаяФорма.ФормаВыбораЗначенияИзСпискаИСМПТК";
	//Возврат "Справочник.СтраныМира.ФормаВыбора";
	
КонецФункции

//Определяет параметры открытия общей формы ФормаВыбораЗначенияИзСпискаИСМПТК
//
Функция ПолучитьПараметрыОткрытияФормыВыбора(ИмяФормы) Экспорт
	
	ПараметрыФормы = Новый Структура();
	
	Если ИмяФормы = "ОбщаяФорма.ФормаВыбораЗначенияИзСпискаИСМПТК" Тогда
		ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
		ПараметрыФормы.Вставить("ЗначениеВыбораДляЗапроса", "Справочник.КлассификаторСтранМира");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Выбор страны'"));
		ПараметрыФормы.Вставить("ЗаголовокКолонкиТаблицы", НСтр("ru = 'Страна'"));
	КонецЕсли;
	
	Возврат ПараметрыФормы;
	
КонецФункции

#КонецОбласти

#Область ДокументыИСМПТ

#Область ВводНаОсновании

Функция ПроверитьИмяДокументаПТУ(ИмяДокумента) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Если ИмяДокумента = "ПоступлениеТоваровУслуг" Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(ИмяДокумента) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
	///////////////////
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИмяФормыДокументаИСМПТ(ДокументИсточник, ТипДокументаИСМПТ = Неопределено) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 	
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				
		Возврат "Документ.АктПриемаПередачиИСМПТК.ФормаОбъекта";

	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда

		Возврат "Документ.УведомлениеОВводеВОборотИСМПТК.ФормаОбъекта";

	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров")	
		ИЛИ ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда

		Возврат "Документ.УведомлениеОВыводеИзОборотаИСМПТК.ФормаОбъекта";
		
	КонецЕсли;
	///////////////////	
	
КонецФункции

#КонецОбласти

#Область ОбщегоНазначенияИСМПТ

Процедура ОбработкаОповещенияДокументыИСМПТ(Форма, ДокументСсылка, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "ВыполненаЗаписьДокумента" Тогда
		Если ТипЗнч(Параметр) = Тип("Массив")
			И Не Параметр.Количество() = 0
			И ДокументСсылка = Параметр[0] Тогда
			Форма.Прочитать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеДокумента

Процедура СоздатьДокументИСМПТПоОснованию(ДокументИсточник, ИмяКоманды = Неопределено) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда  
	  	
		Если ИмяКоманды = "СоздатьЭкспортЕАЭС"
			И ИнтеграцияИСМПТКПереопределяемый.ПроверитьКонтрагентаДляСхемыВзаимногоПризнанияИСМПТ(ДокументИсточник) Тогда
			
			СоздатьЭкспортЕАЭСИСМПТ(ДокументИсточник);
			
		ИначеЕсли ИмяКоманды = "СоздатьАППИсход"
			И НЕ ИнтеграцияИСМПТКПереопределяемый.КонтрагентНерезидент(ДокументИсточник) Тогда 
			
			СоздатьАППИсходящийИСМПТ(ДокументИсточник);
			
		ИначеЕсли ИмяКоманды = "СоздатьУведОВыводе"
			И НЕ ИнтеграцияИСМПТКПереопределяемый.КонтрагентНерезидент(ДокументИсточник) Тогда 
			
			СоздатьВыводИзОборотаИСМПТ(ДокументИсточник);
			
		Иначе				
			ТекстСообщения = НСтр("ru = 'Указанный контрагент не соответствует требованиям создаваемого документа ИС МПТ!'");
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СоздатьАППИсходящийИСМПТ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров")
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
	///////////////////	
		
		СоздатьВводВОборотИСМПТ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров")
		ИЛИ ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
	
		СоздатьВыводИзОборотаИСМПТ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ДокументВвоза = РаботаСДокументамиИСМПТКВызовСервера.ПроверитьВидВвозаИзОснованияПТУ(ДокументИсточник);
		
		Если ДокументВвоза = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК() И ИмяКоманды = "СоздатьВвозЕАЭС" Тогда
			СоздатьВвозЕАЭСИСМПТ(ДокументИсточник);
		ИначеЕсли ДокументВвоза = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзЕАЭСИСМПТК() И ИмяКоманды = "СоздатьВвозИмпорт" Тогда
			СоздатьВвозИмпортИСМПТ(ДокументИсточник);
		ИначеЕсли ДокументВвоза = ОбщегоНазначенияИСМПТКВызовСервера.ИмяДокументаУведомлениеОВвозеИзТретьихСтранИСМПТК() И ИмяКоманды = "СоздатьВвозИмпорт" Тогда
			СоздатьВвозИмпортИСМПТ(ДокументИсточник);
		Иначе
			ТекстСообщения = НСтр("ru='Для документов: %СписокДокументов% не может быть введен указанный документ ИС МПТ. Возможно, выбран неподходящий вид операции.'");
			СтрокаПодстановки = Символы.ПС + ДокументИсточник + Символы.ПС;
			ТекстСообщения = ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаПодстановки); 
			ОбщегоНазначенияИСМПТККлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
				
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.УведомлениеОбОтгрузкеЕАЭСИСМПТК") Тогда 
		
		СоздатьПриемкаЕАЭСИСМПТ(ДокументИсточник);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЗаказКМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.ЗаказКодовМаркировкиСУЗИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВыводИзОборотаИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВыводеИзОборотаИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВводВОборотИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВводеВОборотИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьАППИсходящийИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.АктПриемаПередачиИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозЕАЭСИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзЕАЭСИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозИмпортИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзТретьихСтранИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьЭкспортЕАЭСИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОбЭкспортеЕАЭСИСМПТК.ФормаОбъекта", ПараметрыФормы);
		
КонецПроцедуры

Процедура СоздатьПриемкаЕАЭСИСМПТ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОПриемкеЕАЭСИСМПТК.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

#КонецОбласти

#Область ВыборДокумента

Функция ВыбратьДокументИСМПТПоОснованию(ДокументИсточник) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		ИЛИ ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
	///////////////////	
		Возврат Истина;
	Иначе
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти  

#Область ДокументыИСЦЭДМ

#Область ВводНаОсновании

Функция ПолучитьИмяФормыДокументаИСЦЭДМ(ДокументИсточник, ТипДокументаИСЦЭДМ = Неопределено) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ВидОперации = ОбщегоНазначенияБКВызовСервера.ЗначениеРеквизитаОбъекта(ДокументИсточник, "ВидОперации");
		
		Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Импорт") Тогда
			Если ТипДокументаИСЦЭДМ = Тип("ДокументСсылка.УведомлениеОВвозеИзЕАЭСИСЦЭДМ") Тогда
				Возврат "Документ.УведомлениеОВвозеИзЕАЭСИСЦЭДМ.ФормаОбъекта";
			ИначеЕсли ТипДокументаИСЦЭДМ = Тип("ДокументСсылка.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ") Тогда
		        Возврат "Документ.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ.ФормаОбъекта";
			Иначе
				Возврат "Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта";
			КонецЕсли;
		Иначе // НЕ Импорт
			Возврат "Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта";
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")	
        Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				
		Возврат "Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Возврат "Документ.УведомлениеОВводеВОборотИСЦЭДМ.ФормаОбъекта";

	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда	
		
		Возврат "Документ.УведомлениеОВыводеИзОборотаИСЦЭДМ.ФормаОбъекта";
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				
		Возврат "Документ.АктВнутреннегоПеремещенияИСЦЭДМ.ФормаОбъекта";
		
	КонецЕсли;
		
КонецФункции

#КонецОбласти

Процедура СоздатьДокументИСЦЭДМПоОснованию(ДокументИсточник, ИмяКоманды = Неопределено) Экспорт

	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Если ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда	
		
		Если ИмяКоманды = "СоздатьАППИсход" Тогда
			СоздатьАППИсходящийИСЦЭДМ(ДокументИсточник);
		ИначеЕсли ИмяКоманды = "СоздатьУведОВыводе" Тогда
			СоздатьВыводИзОборотаИСЦЭДМ(ДокументИсточник);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СоздатьАППИсходящийИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		СоздатьВводВОборотИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
				
		СоздатьВводВОборотИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.СписаниеТоваров")
		ИЛИ ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
	
		СоздатьВыводИзОборотаИСЦЭДМ(ДокументИсточник);
		
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда	
	
		СоздатьАктыПеремещенияИСЦЭДМ(ДокументИсточник);
	
	ИначеЕсли ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
		Или ТипЗнч(ДокументИсточник) = Тип("ДокументСсылка.ОтчетОПередачеКИОтНерезидентаРКИСЦЭДМ") Тогда
				
		Если ИмяКоманды = "СоздатьВвозЕАЭС_ЦЭДМ" Тогда
			СоздатьВвозЕАЭСИСЦЭДМ(ДокументИсточник);
		Иначе
			СоздатьВвозИмпортИСЦЭДМ(ДокументИсточник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьВыводИзОборотаИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВыводеИзОборотаИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВводВОборотИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВводеВОборотИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьАППИсходящийИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.АктПриемаПередачиИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьАктыПеремещенияИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.АктВнутреннегоПеремещенияИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозЕАЭСИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзЕАЭСИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

Процедура СоздатьВвозИмпортИСЦЭДМ(Основание)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", Основание);
	ОткрытьФорму("Документ.УведомлениеОВвозеИзТретьихСтранИСЦЭДМ.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

#КонецОбласти

#Область ДокументыСУЗ_БМ

Функция ПодобратьНоменклатуруВЗаказ(Форма, УникальныйИдентификатор) Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Объект = Форма.Объект;
	
	ДатаРасчетов		 = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);
	
	ЗаголовокПодбора	 = НСтр("ru = 'Подбор товаров в %1 (%2)'");
	ПредставлениеТаблицы = НСтр("ru = '""Товары""'");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПредставлениеДокумента = Объект.Ссылка;
	Иначе
		ПредставлениеДокумента = НСтр("ru = 'Заказ на эмиссию кодов маркировки'");
	КонецЕсли;
	
	ЗаголовокПодбора     = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, ПредставлениеДокумента, ПредставлениеТаблицы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаРасчетов"            , ДатаРасчетов);
	ПараметрыФормы.Вставить("Организация"             , Объект.Организация);
	ПараметрыФормы.Вставить("Заголовок"               , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ИмяТаблицы"              , "Товары");
	ПараметрыФормы.Вставить("Товар"                   , Истина);
	ПараметрыФормы.Вставить("Услуги"                  , Ложь);
	ПараметрыФормы.Вставить("ЕстьЦена"                , Истина);
	ПараметрыФормы.Вставить("ВалютаДокумента"         , РаботаСДокументамиИСМПТКПереопределяемый.ПолучитьВалютуРегламентированногоУчета());
	ПараметрыФормы.Вставить("ВыбиратьВсе"             , Истина);	
	
	СписокЗапросов = Новый СписокЗначений();
	СписокЗапросов.Добавить("ПоСправочнику"                     , НСтр("ru = 'По справочнику'"));
	СписокЗапросов.Добавить("ОстаткиНоменклатуры"               , НСтр("ru = 'Остатки номенклатуры'"));
	СписокЗапросов.Добавить("ЦеныНоменклатурыДокументов"        , НСтр("ru = 'Цены продажи'"));
	СписокЗапросов.Добавить("ОстаткиИЦеныНоменклатурыДокументов", НСтр("ru = 'Остатки и цены продажи'"));
	ПараметрыФормы.Вставить("ЗаполнятьЦеныПоПродаже", Истина);
	
	Если ЗначениеЗаполнено(Объект.ВидПродукции) Тогда
		Если Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛекарственныеПрепараты") Тогда
			ПараметрыФормы.Вставить("ОсобенностьУчета", ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ЛекарственныеПрепараты"))
		ИначеЕсли Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Обувная") Тогда
			ПараметрыФормы.Вставить("ОсобенностьУчета", ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция"))
		ИначеЕсли Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.Табачная") Тогда
			ПараметрыФормы.Вставить("ОсобенностьУчета", ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция"))
		ИначеЕсли Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.МолочнаяПродукция") Тогда
			ПараметрыФормы.Вставить("ОсобенностьУчета", ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукция"))
		ИначеЕсли Объект.ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИСМПТК.ЛегкаяПромышленность") Тогда
			ПараметрыФормы.Вставить("ОсобенностьУчета", ПредопределенноеЗначение("Перечисление.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность"))
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы.Вставить("СписокВидовПодбора", СписокЗапросов);
	ПараметрыФормы.Вставить("ОбъектСсылка"      , Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.ОсновнаяФорма", ПараметрыФормы, Форма, УникальныйИдентификатор);
	///////////////////	
	
КонецФункции

Функция ПолучитьИмяФормыПодбораНоменклатуры() Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	Возврат "Обработка.ПодборНоменклатуры.Форма.ОсновнаяФорма";
	///////////////////	
	
КонецФункции

#КонецОбласти

#Область ФормаПодбораНоменклатурыИРегистрацииновыхШК

Процедура УстановитьЗначениеХарактеристикПоУмолчанию(Форма, Элемент, ИмяТаблицы = "ШтрихкодыНоменклатуры") Экспорт
	
	//ПЕРЕОПРЕДЕЛЕНИЕ//
	ТекущиеДанные = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ХарактеристикиИспользуются = Ложь;
	ТекущиеДанные.Характеристика = Неопределено;
	///////////////////	
	
КонецПроцедуры

#КонецОбласти

//БК_Обработка_Штрихкодов
#Область ОбработкаШтрихкодов

Процедура ПроверитьШтрихкод(Форма, Штрихкод = "", ФорматBase64 = Ложь, ПроверятьУчетМаркировки = Истина, ВидОбъекта = "Документ") Экспорт
	
	Если Штрихкод = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если ПроверятьУчетМаркировки Тогда
		ВедетсяУчетМарокОбщая = ОбщегоНазначенияИСМПТК.ПроверитьЗначениеОбщейФОМаркировки();
	Иначе
		// Если проверка штрихкода не зависит от ведения учета маркировки 
		ВедетсяУчетМарокОбщая = Истина;
	КонецЕсли;
	
	Если ВедетсяУчетМарокОбщая Тогда
		
		ДанныеМаркировки = РозничноеВыбытиеИСМПТКВызовСервера.РазобратьШтриховойКодТовара(Штрихкод, ФорматBase64);
		
		//Разобрать ШК не удалось - возможно это не код маркировки и не ЕАН, прерываем добавление.
		//Далее будет выполняться поиск номенклатуры по исходному Штрихкоду
		Если Не ДанныеМаркировки.Разобран Тогда
			Возврат;
		КонецЕсли;
		
		ЭтоКодМарки = Ложь;
		Если ДанныеМаркировки.Свойство("ТипИдентификатораТовара") Тогда
			//Отсканирован штрихкод товара EAN или код маркировки.
			ЭтоКодМарки = РозничноеВыбытиеИСМПТККлиент.ЭтоКодМаркировки(ДанныеМаркировки.ТипИдентификатораТовара);
		Иначе
			//Не удалось выполнить разбор кода маркировки по шаблону. Возможно не включен учет соответствующей товарной группы. 
			//Далее будет выполняться поиск номенклатуры по исходному Штрихкоду
			Возврат;
		КонецЕсли;
		
		Если ЭтоКодМарки Тогда
			Если ПроверятьУчетМаркировки Тогда
				Если ВидОбъекта = "Документ" Тогда
					ТекстОшибки = НСтр("ru = 'При ведении учета маркированной продукции сканирование кодов маркировки в документе не предусмотрено.'");
				ИначеЕсли ВидОбъекта = "Справочник" Тогда
					ТекстОшибки = НСтр("ru = 'При ведении учета маркированной продукции сканирование кодов маркировки в справочнике не предусмотрено.'");
				ИначеЕсли ВидОбъекта = "Обработка" Тогда
					ТекстОшибки = НСтр("ru = 'При ведении учета маркированной продукции сканирование кодов маркировки в обработке не предусмотрено.'");
				ИначеЕсли ВидОбъекта = "Сервис" Тогда
					ТекстОшибки = НСтр("ru = 'При ведении учета маркированной продукции сканирование кодов маркировки для поиска в сервисе не предусмотрено.'");
				Иначе
					ТекстОшибки = НСтр("ru = 'При ведении учета маркированной продукции сканирование кодов маркировки не предусмотрено.'");
				КонецЕсли;
			Иначе
				Если ВидОбъекта = "Документ" Тогда
					ТекстОшибки = НСтр("ru = 'Сканирование кодов маркировки в документе не предусмотрено.'");
				ИначеЕсли ВидОбъекта = "Справочник" Тогда
					ТекстОшибки = НСтр("ru = 'Сканирование кодов маркировки в справочнике не предусмотрено.'");
				ИначеЕсли ВидОбъекта = "Обработка" Тогда
					ТекстОшибки = НСтр("ru = 'Сканирование кодов маркировки в обработке не предусмотрено.'");
				ИначеЕсли ВидОбъекта = "Сервис" Тогда
					ТекстОшибки = НСтр("ru = 'Сканирование кодов маркировки для поиска в сервисе не предусмотрено.'");
				Иначе
					ТекстОшибки = НСтр("ru = 'Сканирование кодов маркировки не предусмотрено.'");
				КонецЕсли;
			КонецЕсли;
			ШтрихКод = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
