#Область ПрограммныйИнтерфейс

#Область ПроцедурыИФункцииДляРаботыСоСтруктурнымиПодразделениями

// Процедура устанавливает заголовок переданного элемента управления формы в зависимости от заполненности реквзиита объекта "СтруктурноеПодразделение"
// и включенного/отключенного признака поддержки работы со структурными подразделениями
//
// Параметры
//  Элемент - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - элемент формы, для которого необходимо определить заголовок
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  ПоддержкаРаботыСоСтруктурнымиПодразделениями - Булево - признак поддержки работы со структурными подразделениями
//  
Процедура УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элемент, СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями) Экспорт
	
	РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элемент, СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
КонецПроцедуры

// Процедура выполняет установку начального значения реквизита "СтруктурноеПодразделениеОрганизация" формы
// 
// Параметры
//  Организация - СправочникСсылка.Организации - значение реквизита "Организация" объекта
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  СтруктурноеПодразделениеОрганизация - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделениеОрганизация" формы
//  ПоддержкаРаботыСоСтруктурнымиПодразделениями - Булево - (НЕ ИСПОЛЬЗУЕТСЯ, в последующем будет удален)признак поддержки работы со структурными подразделениями
//
Процедура УстановитьВидимостьСтруктурногоПодразделения(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями = Ложь) Экспорт
	
	РаботаСДиалогамиКлиентСервер.УстановитьВидимостьСтруктурногоПодразделения(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
КонецПроцедуры

// Функция - Текст разделителя запросов пакета
// 
// Возвращаемое значение:
//   Строка - текст разделителя 
//
Функция ТекстРазделителяЗапросовПакета() Экспорт
	
	ТекстРазделителя =
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстРазделителя;
	
КонецФункции

// Функция - Найти строку таб части
//
// Параметры:
//  Объект			 - 	ДокументОбъект 
//  ТабличнаяЧасть	 - 	Строка 
//  СтруктураОтбора	 - 	Структура 
// 
// Возвращаемое значение:
//   Строка табличной части  
//
Функция НайтиСтрокуТабЧасти(Объект, ТабличнаяЧасть, СтруктураОтбора) Экспорт
	
	СтрокаТабличнойЧасти = Неопределено;
	МассивНайденныхСтрок = Объект[ТабличнаяЧасть].НайтиСтроки(СтруктураОтбора);
	Если МассивНайденныхСтрок.Количество() > 0 Тогда
		
		// Нашли. Вернем первую найденную строку.
		СтрокаТабличнойЧасти = МассивНайденныхСтрок[0];
	КонецЕсли;
	
	Возврат СтрокаТабличнойЧасти;
	
КонецФункции

// Процедура - Рассчитать сумму таб части
//
// Параметры:
//  СтрокаТабличнойЧасти		 - 	строка табличной части 
//  ЗначениеПустогоКоличества	 - 	Число 
//
Процедура РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, ЗначениеПустогоКоличества = 0) Экспорт
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти,ЗначениеПустогоКоличества);
	
КонецПроцедуры

// Процедура - Заменить субконто НУ
//
// Параметры:
//  Объект					 - 	ДокументОбъект 
//  СчетБУ					 - 	ПланСчетовСсылка.Типовой - счет бухгалтерского учета 
//  СчетНУ					 - 	ПланСчетовСсылка.Типовой - счет налоговоро учета
//  НомерСубконто			 - 	Число 
//  СубконтоБУ				 - 	Характеристика.ВидыСубконтоТиповые 
//  ИмяРеквизитаСубконтоНУ	 - 	Строка 
//
Процедура ЗаменитьСубконтоНУ(Объект, СчетБУ, СчетНУ, НомерСубконто, СубконтоБУ, ИмяРеквизитаСубконтоНУ = "СубконтоНУ") Экспорт
	ОбщегоНазначенияБККлиентСервер.ЗаменитьСубконтоНУ(Объект, СчетБУ, СчетНУ, НомерСубконто, СубконтоБУ, ИмяРеквизитаСубконтоНУ);
КонецПроцедуры

// Функция - Новый ключ связи строки таблицы
//
// Параметры:
//  Таблица	 - 	табличная часть документа 
// 
// Возвращаемое значение:
//   Значение ключа связи для добавления элемента 
//
Функция НовыйКлючСвязиСтрокиТаблицы(Таблица) Экспорт
	
	Возврат ОбщегоНазначенияБККлиентСервер.НовыйКлючСвязиСтрокиТаблицы(Таблица);
	
КонецФункции

// Процедура - Установить параметры функциональных опций формы документа
//
// Параметры:
//  Форма	 - 	управляемая форма 
//
Процедура УстановитьПараметрыФункциональныхОпцийФормыДокумента(Форма) Экспорт
	
	ОбщегоНазначенияБККлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(Форма);
	
КонецПроцедуры

// Функция возвращает Истина, если при изменении даты документа требуется перечитать 
// настройки из базы данных на сервере.
//
Функция ТребуетсяВызовСервераПриИзмененииДатыДокумента(НоваяДата, ПредыдущаяДата,
	ВалютаДокумента = Неопределено, ВалютаРегламентированногоУчета = Неопределено) Экспорт
	
	Результат = Ложь;
	
	Если НачалоДня(НоваяДата) = НачалоДня(ПредыдущаяДата) Тогда
		// Ничего не изменилось либо изменилось только время, от которого ничего не зависит
		Возврат Ложь;
	Иначе 		
		Результат = Истина; 
	КонецЕсли;
	
	Если НЕ Результат
		И ЗначениеЗаполнено(ВалютаДокумента) 
		И ЗначениеЗаполнено(ВалютаРегламентированногоУчета) Тогда
		
		Если ВалютаРегламентированногоУчета <> ВалютаДокумента Тогда
			// Для валютных документов необходимо получение курсов валют на новую дату
			Результат = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Округляет число по заданному порядку. Если задан метод "ОкруглятьВБольшуюСторону",
// то число 123.37 при порядке округление 0.5 превратиться в 123.50, а число 0.1 
// при порядке округления 5 станет равным 5.
//
// Параметры:
//  Число                    - исходное число
//  ПорядокОкругления        - элемент перечисления Порядки окгугления: 
//                             "шаг" округления (0.01 (арифметическое), 0.01, 0.05, 0.1, 0.5, 1, 5, 10, 50, 100)
//	МетодОкругления			 - значение перечисления МетодыОкругления или булево (Истина = ВсегдаВБольшуюСторону, Ложь = ПоАрифметическимПравилам)
//  						   если Истина, то при порядке округления "5" 0.01 будет округлена до 5, 
//                             Ложь - округление по арифметическим правилам
//
// Возвращаемое значение:
//  Округленное по заданному порядку значение
//
Функция ОкруглитьЧисло(ЧислоДляОкругления, Знач ПорядокОкругления, Знач МетодОкругления) Экспорт
	
	Возврат ОбщегоНазначенияБККлиентСервер.ОкруглитьЧисло(ЧислоДляОкругления, ПорядокОкругления, МетодОкругления);
КонецФункции // ОкруглитьЧисло()

// Получает номер документа для вывода на печать; из номера удаляются префиксы и лидирующие нули
// Функция:
// отбрасывает префикс организации,
// отбрасывает префикс информационной базы (опционально),
// отбрасывает пользовательские префиксы (опционально),
// удаляет лидирующие нули в номере объекта
//
// Параметры:
//  НомерОбъекта - Строка, Число - номер объекта информационной базы, для которого необходимо выполнить преобразование
//  Источник - ДокументСсылка, СправочникСсылка, ДокументОбъект, СправочникОбъект - объект информационной базы, либо ссылка на него
//  УдалитьПрефиксИнформационнойБазы - Булево - признак удаления префикса информационной базы (только для номеров формата БСП)
//  УдалитьПользовательскийПрефикс - Булево - признак удаления пользовательского префикса (только для номеров формата БСП)
//  ПредставлениеНомераОбъекта - ПеречислениеСсылка.ВидыПредставленийНомеровДокументов - представление, к которому будет приведен номер объекта
//                                                Указывается только когда требуется переопределить стандартное поведение.
//  СписокПрефиксовУзлов - Массив - массив префиксов узлов РИБ. Если параметр не указан, 
//                                  то получаются значения по-умолчанию, иначе используются переданные значения.
//                                  Указывается только когда требуется переопределить стандартное поведение.
//
Функция ПолучитьНомерНаПечать(Знач НомерОбъекта, Источник = Неопределено, ПредставлениеНомераОбъекта = Неопределено, УдалитьПрефиксИнформационнойБазы = Ложь, УдалитьПользовательскийПрефикс = Истина, СписокПрефиксовУзлов = Неопределено) Экспорт
	Возврат ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(НомерОбъекта, Источник, ПредставлениеНомераОбъекта, УдалитьПрефиксИнформационнойБазы, УдалитьПользовательскийПрефикс, СписокПрефиксовУзлов);
КонецФункции

// Функция выполняет пропорциональное распределение суммы в соответствии
// с заданными коэффициентами распределения
//
// Параметры:
//  ИсхСумма   - распределяемая сумма
//  МассивКоэф - массив коэффициентов распределения
//  Точность   - точность округления при распределении. Необязателен.
//
//Возвращает:
//  МассивСумм - массив размерностью равный массиву коэффициентов, содержит
//               суммы в соответствии с весом коэффициента (из массива коэффициентов)
//               В случае если распределить не удалось (сумма = 0, кол-во коэф. = 0,
//               или суммарный вес коэф. = 0), тогда возвращается значение Неопределено
//
Функция РаспределитьПропорционально(Знач ИсхСумма, МассивКоэф, Знач Точность = 2, ПроверкаНулевыхЗначений=Истина) Экспорт
	Возврат ОбщегоНазначенияБККлиентСервер.РаспределитьПропорционально( ИсхСумма, МассивКоэф, Точность , ПроверкаНулевыхЗначений);	
КонецФункции

// Создает массив и копирует в него значения, содержащиеся в колонке объекта, для
// которого доступен обход посредством оператора Для каждого … Из.
//
// Параметры:
//  КоллекцияСтрок           - ТаблицаЗначений,
//                             ДеревоЗначений,
//                             СписокЗначений,
//                             ТабличнаяЧасть,
//                             Соответствие,
//                             Структура - коллекция, колонку которой нужно выгрузить в массив.
//                                         А так же другие объекты, для которых доступен обход
//                                         посредством оператора Для каждого … Из … Цикл.
//  ИмяКолонки               - Строка - имя поля коллекции, значения которого нужно выгрузить.
//  ТолькоУникальныеЗначения - Булево - необязательный, если истина, то в массив будут включены
//                                      только различающиеся значения.
//
// Возвращаемое значение:
//  Массив - значения колонки.
//
Функция ВыгрузитьКолонку(КоллекцияСтрок, ИмяКолонки, ТолькоУникальныеЗначения = Ложь) Экспорт
	
	МассивЗначений = Новый Массив;
	
	УникальныеЗначения = Новый Соответствие;
	
	Для каждого СтрокаКоллекции Из КоллекцияСтрок Цикл
		Значение = СтрокаКоллекции[ИмяКолонки];
		Если ТолькоУникальныеЗначения И УникальныеЗначения[Значение] <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		МассивЗначений.Добавить(Значение);
		УникальныеЗначения.Вставить(Значение, Истина);
	КонецЦикла; 
	
	Возврат МассивЗначений;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ПроцедурыИФункцииДляРаботыСоСтруктурнымиПодразделениями

Процедура РассчитатьСуммуВсегоТабЧасти(Строка, СуммаВключаетНДС, СуммаВключаетАкциз = Ложь) Экспорт
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуВсегоТабЧасти(Строка, СуммаВключаетНДС, СуммаВключаетАкциз);
	
КонецПроцедуры

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения
//
// Параметры: 
//  Сумма            - число, сумма от которой надо рассчитывать налоги, 
//  УчитыватьНДС     - булево, признак учета НДС в сумме, 
//  СуммаВключаетНДС - булево, признак включения НДС в сумму ("внутри" или "сверху"),
//  СтавкаНДС        - число , процентная ставка НДС,
//
// Возвращаемое значение:
//  Число, полученная сумма НДС
//
Функция РассчитатьСуммуНДС(Сумма, УчитыватьНДС, СуммаВключаетНДС, СтавкаНДС, СуммаАкциза = 0, СуммаВключаетАкциз = Ложь) Экспорт
	
	Возврат УчетНДСиАкцизаКлиентСервер.РассчитатьСуммуНДС(Сумма, УчитыватьНДС, СуммаВключаетНДС, СтавкаНДС, СуммаАкциза, СуммаВключаетАкциз);
	
КонецФункции

Процедура РассчитатьСуммуАкцизаТабЧасти(СтрокаТабличнойЧасти, ПараметрыОбъекта) Экспорт
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуАкцизаТабЧасти(СтрокаТабличнойЧасти, ПараметрыОбъекта);
	
КонецПроцедуры // РассчитатьСуммуАкцизаТабЧасти()

Процедура РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ПараметрыОбъекта, ИмяРеквизитаСуммаНДС = "СуммаНДС", РассчитыватьСуммуЗачета = Ложь) Экспорт
	
	ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ПараметрыОбъекта, ИмяРеквизитаСуммаНДС,РассчитыватьСуммуЗачета);
	
КонецПроцедуры // РассчитатьСуммуНДСТабЧасти()

// Рассчитывает сумму Акциза исходя из  количества и коэффициента пересчета
//
// Параметры: 
//  Количество  - число, сумма от которой надо рассчитывать налоги, 
//  Коэффициент - булево, признак учета НДС в сумме, 
//  СтавкаАкциза   - число , ставка акциза,
//  Валюта   	- СправочникСсылка.Валюты, валюта документа
//  Курс   		- число , Курс взаиморасчетов документа,
//  Кратность   - число , Кратность взаиморасчетов документа
//
// Возвращаемое значение:
//  Число, полученная сумма Акциза
//
Функция РассчитатьСуммуАкциза(Количество, Коэффициент, СтавкаАкциза, Валюта, Курс, Кратность) Экспорт
	
	Возврат УчетНДСиАкцизаКлиентСервер.РассчитатьСуммуАкциза(Количество, Коэффициент, СтавкаАкциза, Валюта, Курс, Кратность);
	
КонецФункции

Процедура УстановитьПараметрОрганизацияФункциональныхОпцийФормы(Форма, Организация, Период = Неопределено) Экспорт
	
	ОбщегоНазначенияБККлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(Форма, Организация, Период);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

