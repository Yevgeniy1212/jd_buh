////////////////////////////////////////////////////////////////////////////////
// Подсистема "Префиксация объектов"
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Экспортные служебные процедуры и функции

// Определяет признак равенства двух дат для объекта метаданных.
// Даты считаются равными, если они принадлежат одному периоду времени: Год, Месяц, День и пр.
//
// Параметры:
// Дата1 – первая дата для сравнения;
// Дата2 – вторая дата для сравнения;
// МетаданныеОбъекта – метаданные объекта, для которого необходимо получить значение функции.
// 
//  Возвращаемое значение:
//  Тип: Булево. Истина – даты объекта одного периода; Ложь – даты объекта разных периодов.
//
Функция ДатыОбъектаОдногоПериода(Знач Дата1, Знач Дата2, Ссылка) Экспорт
	
	МетаданныеОбъекта = Ссылка.Метаданные();
	
	Если ПериодичностьНомераДокументаГод(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоГода(Дата1) - НачалоГода(Дата2);
		
	ИначеЕсли ПериодичностьНомераДокументаКвартал(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоКвартала(Дата1) - НачалоКвартала(Дата2);
		
	ИначеЕсли ПериодичностьНомераДокументаМесяц(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоМесяца(Дата1) - НачалоМесяца(Дата2);
		
	ИначеЕсли ПериодичностьНомераДокументаДень(МетаданныеОбъекта) Тогда
		
		РазностьДат = НачалоДня(Дата1) - НачалоДня(Дата2);
		
	Иначе // ПериодичностьНомераДокументаНеопределено
		
		РазностьДат = 0;
		
	КонецЕсли;
	
	Возврат РазностьДат = 0;
	
КонецФункции

// Возвращает признак изменения префиксообразующих реквизитов и даты
// 
// Параметры:
//	Ссылка - ЛюбаяСсылка - ссылка на объект ИБ
// 	ТаблицаРеквизитовПослеИзменения - ТаблицаЗначений - таблица значений префиксообразующих реквизитов объекта, содержащая значения реквизитов
//
Функция ДатаИлиПрефиксообразующиеРеквизитыИзменены(Ссылка, Знач ДатаПослеИзменения, ТаблицаРеквизитовПослеИзменения, ПолноеИмяТаблицы) Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ 
	|	ШапкаОбъекта.Дата КАК Дата";
	
	Если ТаблицаРеквизитовПослеИзменения <> Неопределено Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаРеквизитовПослеИзменения Цикл 
			
			ТекстЗапроса = ТекстЗапроса + ",
			|	ЕСТЬNULL(ШапкаОбъекта." + СтрокаТаблицы.ПутьКРеквизиту + ".Префикс, """") КАК Префикс" + СтрокаТаблицы.ПсевдонимРеквизита + "ДоИзменения";
			
		КонецЦикла;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	" + ПолноеИмяТаблицы + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	РеквизитыИзменены = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитовПослеИзменения Цикл 
		
		ПрефиксПослеИзменения = "";
		Если ЗначениеЗаполнено(СтрокаТаблицы.ЗначениеРеквизита) Тогда 
			ПрефиксПослеИзменения = СтрокаТаблицы.ЗначениеРеквизита.Префикс;
		КонецЕсли;
		
		Если Выборка["Префикс" + СтрокаТаблицы.ПсевдонимРеквизита + "ДоИзменения"] <> ПрефиксПослеИзменения Тогда 
			РеквизитыИзменены = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РеквизитыИзменены
		ИЛИ Не ДатыОбъектаОдногоПериода(Выборка.Дата, ДатаПослеИзменения, Ссылка);

КонецФункции

// Возвращает признак изменения префиксообразующих реквизитов
// 
// Параметры:
//	Ссылка - ЛюбаяСсылка - ссылка на объект ИБ
// 	ТаблицаРеквизитовПослеИзменения - ТаблицаЗначений - таблица значений префиксообразующих реквизитов объекта, содержащая значения реквизитов
//
Функция ПрефиксообразующиеРеквизитыИзменены(Ссылка, ТаблицаРеквизитовПослеИзменения, ПолноеИмяТаблицы) Экспорт 

	Если ТипЗнч(ТаблицаРеквизитовПослеИзменения) <> Тип("ТаблицаЗначений")
		ИЛИ ТаблицаРеквизитовПослеИзменения.Количество() = 0 Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = "";
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитовПослеИзменения Цикл 
		
		Если ТекстЗапроса = "" Тогда 
			ТекстЗапроса = "ВЫБРАТЬ 
			|	ЕСТЬNULL(ШапкаОбъекта." + СтрокаТаблицы.Реквизит + ".Префикс, """") КАК Префикс" + СтрокаТаблицы.Реквизит + "ДоИзменения";
			Продолжить;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + ",
		|	ЕСТЬNULL(ШапкаОбъекта." + СтрокаТаблицы.Реквизит + ".Префикс, """") КАК Префикс" + СтрокаТаблицы.Реквизит + "ДоИзменения";
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	" + ПолноеИмяТаблицы + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	РеквизитыИзменены = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитовПослеИзменения Цикл 
		
		ПрефиксПослеИзменения = "";
		Если ЗначениеЗаполнено(СтрокаТаблицы.ЗначениеРеквизита) Тогда 
			ПрефиксПослеИзменения = СтрокаТаблицы.ЗначениеРеквизита.Префикс;
		КонецЕсли;
		
		Если Выборка["Префикс" + СтрокаТаблицы.Реквизит + "ДоИзменения"] <> ПрефиксПослеИзменения Тогда 
			РеквизитыИзменены = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РеквизитыИзменены;

КонецФункции

// Определяет доступность указанного реквизита объекта для использования. Для документов проверяется 
// наличие в реквизитах реквизита с указанным именем. Для справочников и ПВХ дополнительно проверяется 
// установленный режим использования для реквизита, к примеру, реквизиты со свойством "Для элемента" 
// недоступны в ссылке на группу справочника или ПВХ
//
// Параметры:
//  Объект       - Ссылка, Объект - ссылка на объект, либо объект информационной базы
//  ИмяРеквизита - Строка         - имя реквизита, доступность которого необходимо проверить
// 
Функция РеквизитДоступен(Объект, ИмяРеквизита) Экспорт
	
	// возвращаемое значение функции
	Результат = Истина;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	Если   (ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта)
		ИЛИ ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеОбъекта))
		И МетаданныеОбъекта.Иерархический Тогда
		
		Реквизит = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита);
		
		Если Реквизит = Неопределено Тогда
			
			Если ОбщегоНазначения.ЭтоСтандартныйРеквизит(МетаданныеОбъекта.СтандартныеРеквизиты, ИмяРеквизита) Тогда
				
				// Стандартный реквизит всегда доступен и для элемента и для группы.
				Возврат Истина;
				
			КонецЕсли;
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Если Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы И Не Объект.ЭтоГруппа Тогда
			
			Результат = Ложь;
			
		ИначеЕсли Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента И Объект.ЭтоГруппа Тогда
			
			Результат = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) Тогда 
		
		Результат = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита) <> Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ЗначениеРеквизитаОрганизация(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Организация") Тогда
		
		Возврат Объект.Организация;
		
	ИначеЕсли РеквизитДоступен(Объект, "ОрганизацияОтправитель") Тогда 
		
		Возврат Объект.ОрганизацияОтправитель;
		
	КонецЕсли;
	
	Возврат Справочники.Организации.ПустаяСсылка();
	
КонецФункции

Функция ЗначениеРеквизитаКасса(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Касса") Тогда 
		
		Возврат Объект.Касса;
		
	КонецЕсли;
	
	Возврат Справочники.Кассы.ПустаяСсылка();
	
КонецФункции

Функция ЗначениеРеквизитаСклад(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Склад") Тогда
		
		Возврат Объект.Склад;
		
	ИначеЕсли РеквизитДоступен(Объект, "СкладОтправитель") Тогда 
		
		Возврат Объект.СкладОтправитель;
		
	ИначеЕсли РеквизитДоступен(Объект, "СкладОрдер") Тогда 
		
		Если ТипЗнч(Объект.СкладОрдер) = Тип("СправочникСсылка.Склады") Тогда 
			Возврат Объект.СкладОрдер;
		Иначе 
			Возврат Объект.СкладОрдер.Склад;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Справочники.Склады.ПустаяСсылка();
	
КонецФункции

Функция ЗначениеРеквизитаБанковскийСчет(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "СчетОрганизации") Тогда
		
		Возврат Объект.СчетОрганизации;
		
	КонецЕсли;
	
	Возврат Справочники.БанковскиеСчета.ПустаяСсылка();
	
КонецФункции

Функция ИмяРеквизитаОрганизация(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Организация") Тогда
		
		Возврат "Организация";
		
	ИначеЕсли РеквизитДоступен(Объект, "ОрганизацияОтправитель") Тогда 
		
		Возврат "ОрганизацияОтправитель";
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция ИмяРеквизитаКасса(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Касса") Тогда 
		
		Возврат "Касса";
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция ИмяРеквизитаСклад(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Склад") Тогда
		
		Возврат "Склад";
		
	ИначеЕсли РеквизитДоступен(Объект, "СкладОтправитель") Тогда 
		
		Возврат "СкладОтправитель";
		
	ИначеЕсли РеквизитДоступен(Объект, "СкладОрдер") Тогда 
		
		Если ТипЗнч(Объект.СкладОрдер) = Тип("СправочникСсылка.Склады") Тогда 
			Возврат "СкладОрдер";
		Иначе 
			Возврат "СкладОрдер.Склад";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция ИмяРеквизитаБанковскийСчет(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "СчетОрганизации") Тогда
		
		Возврат "СчетОрганизации";
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Локальные служебные процедуры и функции

Функция ПериодичностьНомераДокументаГод(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Год;
	
КонецФункции

Функция ПериодичностьНомераДокументаКвартал(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Квартал;
	
КонецФункции

Функция ПериодичностьНомераДокументаМесяц(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Месяц;
	
КонецФункции

Функция ПериодичностьНомераДокументаДень(МетаданныеОбъекта)
	
	Возврат МетаданныеОбъекта.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.День;
	
КонецФункции
