
////////////////////////////////////////////////////////////////////////////////
// РедактированиеПериодическихСведенийСервер
//  
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ПрочитатьНаборЗаписей(Форма, ИмяРегистра, ВедущийОбъект) Экспорт
	
	ИмяИзмерения = "";
	Для Каждого Измерение Из Метаданные.РегистрыСведений[ИмяРегистра].Измерения Цикл
		Если Измерение.Тип.СодержитТип(ТипЗнч(ВедущийОбъект)) Тогда 
			ИмяИзмерения = Измерение.Имя;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(ИмяИзмерения) Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураВедущихОбъектов = Новый Структура();
	СтруктураВедущихОбъектов.Вставить(ИмяИзмерения, ВедущийОбъект);
	
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор[ИмяИзмерения].Установить(ВедущийОбъект);
	
	НаборЗаписей.Прочитать();
	
	Форма[ИмяРегистра + "НаборЗаписей"].Загрузить(НаборЗаписей.Выгрузить());
	Форма[ИмяРегистра + "НаборЗаписейПрочитан"] = Истина;
	
	// Сформируем ключ структуры по метаданным регистра
	КлючСтруктуры = "";
	
	МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистра];
	Для Каждого Измерение Из МетаданныеРегистра.Измерения Цикл
		КлючСтруктуры = КлючСтруктуры + ?(КлючСтруктуры <> "", ", ", "") + Измерение.Имя;
	КонецЦикла; 
	
	Для Каждого СтандартныйРеквизит Из МетаданныеРегистра.СтандартныеРеквизиты Цикл
		КлючСтруктуры = КлючСтруктуры + ?(КлючСтруктуры <> "", ", ", "") + СтандартныйРеквизит.Имя;
	КонецЦикла; 
	
	Для Каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
		КлючСтруктуры = КлючСтруктуры + ?(КлючСтруктуры <> "", ", ", "") + Ресурс.Имя;
	КонецЦикла; 
	
	Для Каждого Реквизит Из МетаданныеРегистра.Реквизиты Цикл
		КлючСтруктуры = КлючСтруктуры + ?(КлючСтруктуры <> "", ", ", "") + Реквизит.Имя;
	КонецЦикла; 
	
	Форма[ИмяРегистра + "КлючСтруктуры"] = КлючСтруктуры;

КонецПроцедуры

// Инициализирует данные формы для отображения данных 
// регистра сведений, подчиненного ведущему объекту
//
// Параметры
//	Форма - управляемая форма
//	ИмяРегистра - имя редактируемого регистра
// см. также 
//
Процедура ИнициализироватьЗаписьДляОтображенияНаФорме(Форма, ИмяРегистра, ВедущийОбъект) Экспорт
	
	ИмяИзмерения = "";
	Для Каждого Измерение Из Метаданные.РегистрыСведений[ИмяРегистра].Измерения Цикл
		Если Измерение.Тип.СодержитТип(ТипЗнч(ВедущийОбъект)) Тогда 
			ИмяИзмерения = Измерение.Имя;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(ИмяИзмерения) Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(ИмяИзмерения, ВедущийОбъект); 
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ РегистрСведений." + ИмяРегистра + ".СрезПоследних(, " + ИмяИзмерения + " = &" + ИмяИзмерения + ")";
	Выборка = Запрос.Выполнить().Выбрать();
	
	МенеджерЗаписи = РегистрыСведений[ИмяРегистра].СоздатьМенеджерЗаписи();
	Если Выборка.Следующий() тогда
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
	КонецЕсли;

	Форма.ЗначениеВРеквизитФормы(МенеджерЗаписи, ИмяРегистра);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

