////////////////////////////////////////////////////////////////////////////////
// УправлениеПроизводствомСервер: 
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция определяет основную спецификациию для заданной
// номенклатуры на определенный момент.
//
Функция ОпределитьСпецификациюПоУмолчанию(Номенклатура, Момент, ВозвращатьТаблицуЗначений = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Момент) Тогда // используем текущую дату
		Момент = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ОсновныеСпецификацииНоменклатурыСрезПоследних.СпецификацияНоменклатуры,
				   |	ОсновныеСпецификацииНоменклатурыСрезПоследних.Номенклатура
				   |ИЗ
				   |	РегистрСведений.ОсновныеСпецификацииНоменклатуры.СрезПоследних(&Момент, Номенклатура В (&Номенклатура)) КАК ОсновныеСпецификацииНоменклатурыСрезПоследних";
	
			   
	Запрос.УстановитьПараметр("Момент", Момент);	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() И НЕ ВозвращатьТаблицуЗначений Тогда
		Возврат	Справочники.СпецификацииНоменклатуры.ПустаяСсылка()		 			
	КонецЕсли; 
	
	Если ВозвращатьТаблицуЗначений  Тогда
		Возврат Результат.Выгрузить();
	Иначе  		
		Возврат Результат.Выгрузить()[0].СпецификацияНоменклатуры;		
	КонецЕсли; 
	
КонецФункции // ОпределитьСпецификациюПоУмолчанию()

// Возвращает текст запроса, рассчитывающий затраты сырья по спецификации и количеству продукции.
//
// Исходные данные выбираются из временной таблицы Выпуск, которая
// - должна содержать поля Спецификация и КоличествоПродукции 
// - не должна содержать поля Номенклатура, Количество, ЕдиницаИзмерения, СтатьяЗатрат
//
// Результат помещается во временную таблицу ЗатратыСырья, которая содержит:
// - сведения о потребном сырье: 
//   поля Номенклатура, Количество, ЕдиницаИзмерения, СтатьяЗатрат
// - все поля исходной таблицы Выпуск
//
Функция ТекстЗапросаВременнаяТаблицаЗатратыСырья() Экспорт
	
	// Для редактирования конструктором запроса следует заменить * на любое имя поля 
	// (например, "ВсеПоля"), после редактирования выполнить обратную замену
	Возврат
	"ВЫБРАТЬ
	|	Выпуск.*,
	|	ИсходныеКомплектующие.Номенклатура КАК Номенклатура,
	|	ИсходныеКомплектующие.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ИсходныеКомплектующие.Ссылка.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Выпуск.КоличествоПродукции * ИсходныеКомплектующие.Количество / ИсходныеКомплектующие.Ссылка.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ЗатратыСырья
	|ИЗ
	|	Выпуск КАК Выпуск
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК ИсходныеКомплектующие
	|		ПО Выпуск.Спецификация = ИсходныеКомплектующие.Ссылка" 
	+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// В строке табличной части заполняется плановая себестоимость номенклатуры.
//
// Параметры: 
//  СтрокаТЧ - строка табличной части, в которой надо заполнить плановую себестоимость;
//  Дата     - дата, на которую надо получить плановую себестоимость.
//
Процедура ЗаполнитьПлановуюСебестоимость(СтрокаТЧ, Дата, Организация) Экспорт

	ТипЦенПлановойСебестоимости    = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Если ЗначениеЗаполнено(ТипЦенПлановойСебестоимости) Тогда

		СтрокаТЧ.ПлановаяСтоимость =
			УправлениеЦенообразованием.ПолучитьЦенуНоменклатуры(СтрокаТЧ.Номенклатура,
									 ТипЦенПлановойСебестоимости, Дата,
									 ВалютаРегламентированногоУчета, 1, , Организация);
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьПлановуюСебестоимость()

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ