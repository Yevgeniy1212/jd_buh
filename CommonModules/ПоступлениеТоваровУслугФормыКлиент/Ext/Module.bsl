////////////////////////////////////////////////////////////////////////////////
// ПоступлениеТоваровУслугФормыКлиент: клиентские процедуры и функции, вызываемые 
// из форм документа "Поступление (акт, накладная)".
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередЗаписью(Форма, Отказ, ПараметрыЗаписи) Экспорт

	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Документ ""поступление тмз и услуг"" (проведение)";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	// Обновляем информацию о счете-фактуре в открытых формах документов-оснований
	ПараметрыЗаписи.Вставить("ДокументОснование", Форма.Объект.ДокументОснование);
	Оповестить("Запись_ПоступлениеТоваровУслуг", ПараметрыЗаписи, Форма.Объект.Ссылка);

КонецПроцедуры

Процедура ПриОткрытии(Форма, Отказ) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МенеджерОборудованияКлиентПереопределяемый.НачатьПодключениеОборудованиеПриОткрытииФормы(Форма, "СканерШтрихкода");
	
	СчетаУчетаВДокументахКлиентСервер.ПолучитьЗаголовокСчетаУчетаРасчетов(Форма);

КонецПроцедуры

Процедура ПриЗакрытии(Форма) Экспорт
	
	МенеджерОборудованияКлиентПереопределяемый.НачатьОтключениеОборудованиеПриЗакрытииФормы(Форма);
	
КонецПроцедуры

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

Процедура СделкаНачалоВыбора(Форма, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Объект = Форма.Объект;

	СтруктураПараметров = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, Дата, ТипыДокументов",
		Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента, Объект.Дата, "Метаданные.Документы.ПоступлениеТоваровУслуг.Реквизиты.Сделка.Тип");

	Если НЕ ЗначениеЗаполнено(Объект.СчетУчетаРасчетовПоАвансам) Тогда
		СчетДляОпределенияОстатков = Объект.СчетУчетаРасчетовСКонтрагентом;
	Иначе
		СчетДляОпределенияОстатков = Объект.СчетУчетаРасчетовПоАвансам;
	КонецЕсли; 
	
	СтруктураПараметров.Вставить("СчетУчета"     , СчетДляОпределенияОстатков);
	СтруктураПараметров.Вставить("ОстаткиОбороты", "Дт");
	
	ПараметрыФормы = Новый Структура("ПараметрыОбъекта", СтруктураПараметров);
	ОткрытьФорму("Документ.ДокументРасчетовСКонтрагентом.ФормаВыбора", ПараметрыФормы, Форма.Элементы.Сделка);
	
КонецПроцедуры

Процедура ЦеныИВалютаНажатие(Форма, СтандартнаяОбработка)Экспорт
	
	СтандартнаяОбработка = Ложь;
	УправлениеЦенообразованиемКлиент.ОткрытьФормуЦеныИВалюта(Форма, , , , ПараметрыОткрытияФормыЦеныИВалюта(Форма));

КонецПроцедуры

Процедура ВидВходящегоДокументаНачалоВыбора(Форма, ДанныеВыбора, СтандартнаяОбработка)Экспорт

	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВидДокумента", Форма.ТекстРедактирования);
	
	ОткрытьФорму("Справочник.ВидыПервичныхДокументов.ФормаВыбора", СтруктураПараметров, Форма, Истина);
	
КонецПроцедуры

// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

Процедура ПодборНоменклатуры(Форма, ИмяТаблицы, Команда,УникальныйИдентификатор) Экспорт
	
	ПараметрыПодбора = ПолучитьПараметрыПодбора(Форма, ИмяТаблицы);
	Если ПараметрыПодбора <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.ОсновнаяФорма", ПараметрыПодбора,
			Форма, Форма.УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

Процедура ИзменитьТовары(Форма, Команда,АдресХранилищаТовары, УникальныйИдентификатор) Экспорт

	ПараметрыФормы = ПолучитьПараметрыОбработкиТабличнойЧастиТовары(Форма, АдресХранилищаТовары, УникальныйИдентификатор);
	Если ПараметрыФормы <> Неопределено Тогда
		ОткрытьФорму("Обработка.ОбработкаТабличнойЧастиТовары.Форма.Форма", ПараметрыФормы,
			Форма, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьТабличнуюЧасть(Форма, ПараметрыФормы, УникальныйИдентификатор) Экспорт
	
	Если ПараметрыФормы <> Неопределено Тогда
		ОткрытьФорму("Обработка.ОбработкаТабличнойЧастиДокументов.Форма.Форма", ПараметрыФормы,
			Форма, УникальныйИдентификатор);
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПоСчету(Форма, ТабличнаяЧасть) Экспорт
		
	Объект = Форма.Объект;
	
	Если Объект[ТабличнаяЧасть].Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена. Заполнить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОчисткаТабличнойЧастиПриЗаполненииПоСчету", Форма, Новый Структура("ТабличнаяЧасть", ТабличнаяЧасть));
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		
	Иначе 
		ОткрытьФормуВыбораСчетаНаОплату(Форма,ТабличнаяЧасть);
	КонецЕсли;


КонецПроцедуры

// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМ ДОКУМЕНТА ПоступлениеТоваровУслуг

Процедура ОбработкаУчастниковСовместнойДеятельности(Форма, ВыбранноеЗначение) Экспорт
	
	Объект = Форма.Объект;
	Объект.УчастникиСовместнойДеятельности.Очистить();
	
	Для Каждого Элемент Из ВыбранноеЗначение.УчастникиСовместнойДеятельности Цикл
		НоваяСтрока = Объект.УчастникиСовместнойДеятельности.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Элемент);
	КонецЦикла;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура НадписьСчетФактураНажатие(Форма, СтандартнаяОбработка)Экспорт

	СтандартнаяОбработка = Ложь;
	УчетНДСиАкцизаКлиент.ОткрытьСчетФактуру(Форма, Форма.СчетФактура, "СчетФактураПолученный");
	
КонецПроцедуры

Процедура ОткрытьФормуДополнительно(Форма)Экспорт
	
	Объект = Форма.Объект;
	
	СтруктураДопПараметров = Новый Структура();
	
	СтруктураДопПараметров.Вставить("ДокументОснование",               	Объект.ДокументОснование);
	СтруктураДопПараметров.Вставить("Ответственный",                   	Объект.Ответственный);
	СтруктураДопПараметров.Вставить("ТолькоПросмотр",                  	Форма.ТолькоПросмотр);
	СтруктураДопПараметров.Вставить("ТипОбъекта",                      	"ПоступлениеТоваровУслуг");
	СтруктураДопПараметров.Вставить("ВидВходящегоДокумента",			Объект.ВидВходящегоДокумента);
	СтруктураДопПараметров.Вставить("ДатаВходящегоДокумента",			Объект.ДатаВходящегоДокумента);
	СтруктураДопПараметров.Вставить("НомерВходящегоДокумента",			Объект.НомерВходящегоДокумента);
	СтруктураДопПараметров.Вставить("СобытиеОС",						Объект.СобытиеОС);
	СтруктураДопПараметров.Вставить("Комментарий",						Объект.Комментарий);
	
	РаботаСДиалогамиКлиент.ОткрытьФормуДополнительно(Форма, "ПоступлениеТоваровУслуг", СтруктураДопПараметров)

КонецПроцедуры

Процедура ОткрытьУчастникиСД(Форма)Экспорт
	
	Объект = Форма.Объект;
	
	Если НЕ Форма.ТолькоПросмотр Тогда
		Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;

	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("УчастникиСовместнойДеятельности",  	Объект.УчастникиСовместнойДеятельности);
	СтруктураПараметров.Вставить("ТипОбъекта",                      	"ПоступлениеТоваровУслуг");
	СтруктураПараметров.Вставить("Договор",                      		Объект.ДоговорКонтрагента);
	
	ОткрытьФорму("ОбщаяФорма.ФормаУчастникиСовместнойДеятельности", СтруктураПараметров, Форма);
	
КонецПроцедуры

Процедура ЗарегистрироватьСчетФактуру(Форма) Экспорт
	
	ДанныеСчетаФактуры = Новый Структура();
	ДанныеСчетаФактуры.Вставить("ДатаВходящего" , Форма.ДатаСчетаФактурыПолученного);
	ДанныеСчетаФактуры.Вставить("НомерВходящего", Форма.НомерСчетаФактурыПолученного);
			
	УчетНДСиАкцизаКлиент.ОбработатьДействиеПоВводуСчетаФактуры(Форма, "СоздатьСчетФактуру", "СчетФактураПолученный", ДанныеСчетаФактуры);
	
	УчетНДСиАкцизаКлиентСервер.УправлениеГруппойСчетаФактуры(Форма);
	
КонецПроцедуры

//КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПараметрыОткрытияФормыЦеныИВалюта(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	ПараметрыОткрытия = Неопределено;
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку") Тогда 
		ОграничениеДоступности = Новый Соответствие;
		ОграничениеДоступности.Вставить("Доступность", Ложь);
		
		НедоступныеРеквизиты   = Новый Структура;
		НедоступныеРеквизиты.Вставить("УчитыватьНДС"                , ОграничениеДоступности);
		НедоступныеРеквизиты.Вставить("СуммаВключаетНДС"            , ОграничениеДоступности);
		НедоступныеРеквизиты.Вставить("НДСВключенВСтоимость"        , ОграничениеДоступности);
		НедоступныеРеквизиты.Вставить("ОтложитьПринятиеНДСКЗачету"  , ОграничениеДоступности);
		
		ПараметрыОткрытия = Новый Структура("НедоступныеРеквизиты", НедоступныеРеквизиты);
	КонецЕсли;
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

Функция ПолучитьПараметрыПодбора(Форма,ИмяТаблицы)
	
	Объект = Форма.Объект;
	
	ДатаРасчетов		 = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);
	
	ЗаголовокПодбора	 = НСтр("ru = 'Подбор номенклатуры в %1 (%2)'");
	ПредставлениеТаблицы = ?(ИмяТаблицы = "Товары", НСтр("ru = 'Товары'"), ?(ИмяТаблицы = "Услуги", НСтр("ru = 'Услуги'"), ИмяТаблицы));
	
	ЗаголовокПодбора     = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ЗаголовокПодбора, Объект.Ссылка, ПредставлениеТаблицы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаРасчетов"            , ДатаРасчетов);
	ПараметрыФормы.Вставить("Организация"             , Объект.Организация);
	ПараметрыФормы.Вставить("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
	ПараметрыФормы.Вставить("Склад"                   , Объект.Склад);
	ПараметрыФормы.Вставить("Заголовок"               , ЗаголовокПодбора);
	ПараметрыФормы.Вставить("ИмяТаблицы"              , ИмяТаблицы);
	ПараметрыФормы.Вставить("Товар"                   , ИмяТаблицы = "Товары");
	ПараметрыФормы.Вставить("Услуги"                  , ИмяТаблицы = "Услуги");
	ПараметрыФормы.Вставить("ЕстьЦена"                , Истина);
	ПараметрыФормы.Вставить("ТипЦен"                  , Объект.ТипЦен);
	ПараметрыФормы.Вставить("ВалютаДокумента"         , Объект.ВалютаДокумента);
	ПараметрыФормы.Вставить("ВыбиратьВсе"             , Истина);
	ПараметрыФормы.Вставить("Приход"                  , Истина);
	
	СписокЗапросов = Новый СписокЗначений();
	СписокЗапросов.Добавить("ПоСправочнику", НСтр("ru = 'По справочнику'"));
	Если ИмяТаблицы = "Товары" Тогда
		СписокЗапросов.Добавить("ЦеныНоменклатуры", НСтр("ru = 'Цены номенклатуры'"));
		СписокЗапросов.Добавить("ОстаткиИЦеныНоменклатуры", НСтр("ru = 'Остатки и цены номенклатуры'"));
	ИначеЕсли ИмяТаблицы = "Услуги" Тогда
		СписокЗапросов.Добавить("ЦеныУслуг", НСтр("ru = 'Цены услуг'"));
	КонецЕсли;
	
	ПараметрыФормы.Вставить("СписокВидовПодбора", СписокЗапросов);
	ПараметрыФормы.Вставить("ОбъектСсылка"      , Объект.Ссылка);
	
	Возврат ПараметрыФормы;

КонецФункции

Функция ПолучитьПараметрыОбработкиТабличнойЧастиТовары(Форма,АдресХранилищаТовары,УникальныйИдентификатор)
	
	Объект = Форма.Объект;
	
	ПараметрыОбработки = Новый Структура;
	
	ПараметрыОбработки.Вставить("АдресХранилищаТовары", 		АдресХранилищаТовары);
	
	ПараметрыОбработки.Вставить("ДокументСсылка", 				Объект.Ссылка);
	ПараметрыОбработки.Вставить("ДокументДата", 				Объект.Дата);
	ПараметрыОбработки.Вставить("ДокументОрганизация", 			Объект.Организация);
	ПараметрыОбработки.Вставить("ДокументВалюта", 			    Объект.ВалютаДокумента);
	ПараметрыОбработки.Вставить("ДокументКурс", 			    Объект.КурсВзаиморасчетов);
	ПараметрыОбработки.Вставить("ДокументКратность", 			Объект.КратностьВзаиморасчетов);
	ПараметрыОбработки.Вставить("ДокументСуммаВключаетНДС", 	Объект.СуммаВключаетНДС);
	ПараметрыОбработки.Вставить("ДокументУчитыватьНДС", 		Объект.УчитыватьНДС);
	ПараметрыОбработки.Вставить("ДокументТипЦен", 				Объект.ТипЦен);	

	Возврат ПараметрыОбработки;
	
КонецФункции

Процедура ОткрытьФормуВыбораСчетаНаОплату(Форма, ТабличнаяЧасть, ОповещениеОВыборе=Неопределено) Экспорт
	
	Объект = Форма.Объект;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация",	Объект.Организация);     
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		СтруктураОтбора.Вставить("Контрагент", Объект.Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		СтруктураОтбора.Вставить("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Отбор",              СтруктураОтбора);
	СтруктураПараметров.Вставить("РежимВыбора",        Истина);
	СтруктураПараметров.Вставить("МножественныйВыбор", Ложь);
	СтруктураПараметров.Вставить("ИмяТаблицы",         ТабличнаяЧасть);
	
	Если ОповещениеОВыборе <> Неопределено Тогда
		ОткрытьФорму("Документ.СчетНаОплатуПоставщика.ФормаВыбора", СтруктураПараметров, Форма,,,,ОповещениеОВыборе);
	Иначе 
		ОткрытьФорму("Документ.СчетНаОплатуПоставщика.ФормаВыбора", СтруктураПараметров, Форма);
	КонецЕсли;

КонецПроцедуры  
