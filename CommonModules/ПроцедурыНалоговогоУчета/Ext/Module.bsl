////////////////////////////////////////////////////////////////////////////////
// ПроцедурыНалоговогоУчета: 
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ВидУчетаНУ(Проводка, ДокументВидУчетаНУ, ЗаполнятьОбеСтороны = Истина, ПереопределятьПоСтатьеЗатрат = Истина) Экспорт
	
	// добавлено в связи с тем. что есть документы, в которых ВидУчетаНУ отсутствует (регл.документ ЗакрытиеМесяца)
	Если ДокументВидУчетаНУ = Неопределено Тогда
		ДокументВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ;
	КонецЕсли;
	
	//если для счета не ведется учет ВР, то вид учета всегда будет только НУ
	Если НЕ Проводка.СчетДт.ВестиУчетВременныхРазниц Тогда
		ВидУчетаДт = Справочники.ВидыУчетаНУ.НУ;
		УчетВРДт = Ложь;
	Иначе
		ВидУчетаДт = ДокументВидУчетаНУ;
		УчетВРДт = Истина;
	КонецЕсли; 		
	
	Если НЕ Проводка.СчетКт.ВестиУчетВременныхРазниц Тогда
		ВидУчетаКт = Справочники.ВидыУчетаНУ.НУ;
		УчетВРКт = Ложь;
	Иначе
		ВидУчетаКт = ДокументВидУчетаНУ;
		УчетВРКт = Истина;
	КонецЕсли;		
	
	Если НЕ ДокументВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ Тогда
		ВидУчетаДт = ВидУчетаДт;
		ВидУчетаКт = ВидУчетаКт;		
	Иначе
		Если УчетВРДт Тогда  
			
			ВидУчетаДт = ?(НЕ ЗначениеЗаполнено(Проводка.ВидУчетаДт), Справочники.ВидыУчетаНУ.НУ, Проводка.ВидУчетаДт);
			
			// вид учета, можно определить по статье затрат в аналитике проводки	
			// для стороны Дт		
			СтатьяЗатратВПроводке = Проводка.СчетДт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
			Если ПереопределятьПоСтатьеЗатрат И Не СтатьяЗатратВПроводке = Неопределено Тогда	
				
				Если ТипЗнч(Проводка) = Тип("РегистрБухгалтерииЗапись.Налоговый") Тогда
					Если  ЗначениеЗаполнено(Проводка.СубконтоДт.СтатьиЗатрат) Тогда
						ВидУчетаДт = ВидУчетаНУПоСтатьеЗатрат(Проводка.СубконтоДт.СтатьиЗатрат);
					КонецЕсли;
				Иначе
					Попытка
						Если  ЗначениеЗаполнено(Проводка["СубконтоДт" + СтатьяЗатратВПроводке.НомерСтроки]) Тогда
							ВидУчетаДт = ВидУчетаНУПоСтатьеЗатрат(Проводка["СубконтоДт" + СтатьяЗатратВПроводке.НомерСтроки]);
						КонецЕсли;
					Исключение
						ВидУчетаДт = ДокументВидУчетаНУ;
					КонецПопытки; 			
				КонецЕсли;    							
				
				Если ЗаполнятьОбеСтороны И УчетВРКт Тогда
					// предполагаем, что вид учета един для проводки.
					// за исключением специфических ситуаций
					ВидУчетаКт = ВидУчетаДт;
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли;
		
		Если УчетВРКт Тогда
			
			ВидУчетаКт = ?(НЕ ЗначениеЗаполнено(Проводка.ВидУчетаКт), Справочники.ВидыУчетаНУ.НУ, Проводка.ВидУчетаКт);
			// Для стороны Кт
			СтатьяЗатратВПроводке = Проводка.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
			Если ПереопределятьПоСтатьеЗатрат И НЕ СтатьяЗатратВПроводке = Неопределено Тогда
				
				Если ПереопределятьПоСтатьеЗатрат И НЕ СтатьяЗатратВПроводке = Неопределено Тогда
					
					Если ТипЗнч(Проводка) = Тип("РегистрБухгалтерииЗапись.Налоговый") Тогда
						Если  ЗначениеЗаполнено(Проводка.СубконтоКт.СтатьиЗатрат) Тогда
							ВидУчетаКт = ВидУчетаНУПоСтатьеЗатрат(Проводка.СубконтоКт.СтатьиЗатрат);
						КонецЕсли;
					Иначе
						Попытка
							Если  ЗначениеЗаполнено(Проводка["СубконтоКт" + СтатьяЗатратВПроводке.НомерСтроки]) Тогда
								ВидУчетаКт = ВидУчетаНУПоСтатьеЗатрат(Проводка["СубконтоКт" + СтатьяЗатратВПроводке.НомерСтроки]);
							КонецЕсли;
						Исключение
							ВидУчетаКт = ДокументВидУчетаНУ;
						КонецПопытки						
					КонецЕсли;
				КонецЕсли;  				
				
				Если ЗаполнятьОбеСтороны И УчетВРДт Тогда
					// предполагаем, что вид учета един для проводки.
					// за исключением специфических ситуаций
					ВидУчетаДт = ВидУчетаКт;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Проводка.СчетДт) Тогда
		Проводка.ВидУчетаДт = ВидУчетаДт;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Проводка.СчетКт) Тогда
		Проводка.ВидУчетаКт = ВидУчетаКт;
	КонецЕсли;
	
КонецПроцедуры // ВидУчетаНУ()

Функция ВидУчетаНУПоСтатьеЗатрат(СтатьяЗатрат) Экспорт
	
	Результат = Справочники.ВидыУчетаНУ.НУ;
	Если ТипЗнч(СтатьяЗатрат) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
		// если затрата не относится на вычеты по НУ
		Если НЕ СтатьяЗатрат.ПринятиеКНалоговомуУчету Тогда
			Результат = Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ;		
			
		ИначеЕсли СтатьяЗатрат.ВидРасходовНУ = Справочники.ВидыРасходовНУ.Амортизация Тогда
			Результат = Справочники.ВидыУчетаНУ.ВР; // по амортизации ОС образуется временная разница
		ИначеЕсли СтатьяЗатрат.ВидРасходовНУ.Нормируемый Тогда
			// по нормируемым затратам проводим постоянную разницу,
			// которая при проведении закрытия периода будет частично распределятся на
			// НУ - пределах норм и ПР - сверхлимита
			Результат = Справочники.ВидыУчетаНУ.РасходыСверхНорм; 			
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции	

Функция ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, Знач Дата) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ПлательщикКПН", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Дата)));
	
	Возврат Результат;
	
КонецФункции // ПолучитьПризнакПлательщикаКПН()

Функция ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Организация, Знач Дата) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("УчетВременныхРазницПоНалогуНаПрибыль", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Дата)));
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает признак плательщика НДС для выбранной организации
//
// Параметры:
//  Организация - СправочникСсылка.Организации, элемент справочника, для которого необходимо получить
//  			признак пдательщика НДС
//
// Возвращаемое значение:
//	Истина 	- в случае, если на заданную дату организация являлась плательщиком НДС
// 	Ложь	- в случае, если на заданную дату организация не являлась плательщиком НДС
//  В случае, если нужные сведения отсутствуют по-умолчанию возвращается Истина
//
Функция ПолучитьПризнакПлательщикаНДС(Организация, Знач Дата) Экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ПлательщикНДС", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Дата)));

	Возврат Результат;
	
КонецФункции // ПолучитьПризнакПлательщикаНДС()

// Функция возвращает признак плательщика Акциза для выбранной организации
//
// Параметры:
//  Организация - СправочникСсылка.Организации, элемент справочника, для которого необходимо получить
//  			признак пдательщика Акциза
//
// Возвращаемое значение:
//	Истина 	- в случае, если на заданную дату организация являлась плательщиком Акциза
// 	Ложь	- в случае, если на заданную дату организация не являлась плательщиком Акциза
//  В случае, если нужные сведения отсутствуют по-умолчанию возвращается Истина
//
Функция ПолучитьПризнакПлательщикаАкциза(Организация, Знач Дата) экспорт
	
	Результат = ПолучитьФункциональнуюОпцию("ПлательщикАкциза", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Дата)));

	Возврат Результат;
	
КонецФункции // ПолучитьПризнакПлательщикаНДС()

// Функция возвращает признак вкладчика ОППВ для выбранной организации.
//
Функция ПолучитьПризнакВкладчикаПрофПенсионныхВзносов(Организация, Знач Дата) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ВкладчикОППВ", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Дата)));
	
	Возврат Результат;

КонецФункции // ПолучитьПризнакВкладчикаПрофПенсионныхВзносов()

// Функция возвращает признак необходимости ежемесячного расчета 
// взносов и отчисления за ИП для выбранной организации.
//
Функция ПолучитьПризнакЕжемесячногоРасчетаВзносовИОтчисленийЗаИП(Организация, Знач Дата) Экспорт

	Результат = ПолучитьФункциональнуюОпцию("ЕжемесячныйРасчетВзносовИОтчисленийЗаИП", 
		Новый Структура("Организация, Период", Организация, НачалоМесяца(Дата)));
	
	Возврат Результат;

КонецФункции // ПолучитьПризнакЕжемесячногоРасчетаВзносовИОтчисленийЗаИП()

//Процедура вызывается из форм документов, и заполняет реквизит "ВидУчетаНУ"
//
Процедура ЗаполнитьВидУчетаНУ(УчитыватьКПН, ВидУчетаНУ) Экспорт
	
	Если УчитыватьКПН Тогда
		ОтражатьДокументыВНалоговомУчете = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОтражатьДокументыВНалоговомУчете"); 
		
		Если ОтражатьДокументыВНалоговомУчете И ВидУчетаНУ <> Справочники.ВидыУчетаНУ.НУ Тогда
			ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ;
		ИначеЕсли НЕ ОтражатьДокументыВНалоговомУчете И ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ 
			ИЛИ НЕ ЗначениеЗаполнено(ВидУчетаНУ) Тогда
			ВидУчетаНУ = Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ;
		КонецЕсли;		
	Иначе
		// для очистки реквизита при использовании функциональной опции "Плательщик КПН"
		ВидУчетаНУ = Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриИзмененииПризнакаОтраженияВНалоговомУчете(Организация, ДатаДокумента, УчитыватьКПН, ИзменятьРеквизитУчитыватьКПН = Ложь) Экспорт
	
	ОрганизацияЯвляетсяПлательщикомКПН = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, ДатаДокумента); 
	
	Если УчитыватьКПН Тогда
		Если НЕ ОрганизацияЯвляетсяПлательщикомКПН Тогда
			УчитыватьКПН = Ложь;
			ТекстОшибки = НСтр("ru='Для организации, не являющейся плательщиком налога на прибыль, отражение данных в налоговом учете невозможно. Признак отражения в налоговом учете снят.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецЕсли; 
	КонецЕсли;	
	
	Если ИзменятьРеквизитУчитыватьКПН Тогда
		УчитыватьКПН = ОрганизацияЯвляетсяПлательщикомКПН;
	КонецЕсли;		
	
КонецПроцедуры	

// Функция возвращает список всех возможных налогоплательщиков по разделу налогового учета
//
Функция СформироватьСписокНалогоплательщиков(РазделНалоговогоУчета = Неопределено) Экспорт
    		
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("РазделНалоговогоУчета", РазделНалоговогоУчета);
	
	Запрос.Текст = "
	|// самостоятельные организации-налогоплательщики, которых не заводили в регистр ИсчислениеНалоговСтруктурныхЕдиниц
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Налогоплательщик,
	|	Организации.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Организации КАК Организации";
	
	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда // если ведется учет по структурным единицам - получаем данные из регистра сведений ИсчислениеНалоговСтруктурныхЕдиниц
		Запрос.Текст = Запрос.Текст + "	
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсчислениеНалоговСтруктурныхЕдиниц КАК ИсчислениеНалогов
		|		ПО Организации.Ссылка = ИсчислениеНалогов.СтруктурнаяЕдиница";
		Если ЗначениеЗаполнено(РазделНалоговогоУчета) Тогда
		Запрос.Текст = Запрос.Текст + "
		|			И ИсчислениеНалогов.РазделНалоговогоУчета = &РазделНалоговогоУчета";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|
		|ГДЕ
		|	ИсчислениеНалогов.СтруктурнаяЕдиница ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ // выбираем неповторяющиеся
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсчислениеНалогов.Налогоплательщик,
		|	ИсчислениеНалогов.Налогоплательщик.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.ИсчислениеНалоговСтруктурныхЕдиниц КАК ИсчислениеНалогов";
		Если ЗначениеЗаполнено(РазделНалоговогоУчета) Тогда
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	ИсчислениеНалогов.РазделНалоговогоУчета = &РазделНалоговогоУчета";
		КонецЕсли;
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|";
	
	СписокНалогоплательщиков = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементСписка 				= СписокНалогоплательщиков.Добавить();
		ЭлементСписка.Значение 		= Выборка.Налогоплательщик;
		ЭлементСписка.Представление = Выборка.Наименование;
	КонецЦикла;

	Возврат СписокНалогоплательщиков;

КонецФункции // СформироватьСписокНалогоплательщиков

//////////////////////////////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

// Процедура формирует корреспонденции в налоговом учете
// по отражению расходов на  ремонт ОС 
Процедура ОтразитьРасходыНаРемонтПроизводственныхОС(ПроводкиНУ,
	СтруктураСведенийБУ, СтруктураСведенийНУ,Реквизиты, СтруктурноеПодразделениеДт,СтруктурноеПодразделениеКт, Стоимость, Количество, Отказ,СписокСчетовПроизводства = Неопределено) Экспорт
	
	// производственные расходы на ремонт ВА, списываемые на счет ремонта,
	// отражаем в системе производства. 
	Если СтруктураСведенийНУ.СчетНУ = ПланыСчетов.Налоговый.РасходыНаРемонтВА
		И ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.СчетЯвляетсяПроизводственным(СтруктураСведенийБУ.СчетБУ, СписокСчетовПроизводства) Тогда
		
		СчетНУПроизводства = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтруктураСведенийБУ.СчетБУ).СчетНУ;
		Если НЕ ЗначениеЗаполнено(СчетНУПроизводства) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru='Для счета бухгалтерского учета %1 не указан соответствующий ему счет налогового учета'"), СокрЛП(СчетНУПроизводства));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю (ТекстСообщения,,, Отказ);
			Возврат;
		КонецЕсли;  		
		
		// Дт производство, Кт Затраты на ремонт
		ПроводкаНУ				= ПроводкиНУ.Добавить();
		ПроводкаНУ.Период      	= Реквизиты.Период;
		ПроводкаНУ.Организация 	= Реквизиты.Организация;
		ПроводкаНУ.Сумма 		= Стоимость;
		ПроводкаНУ.Содержание  = НСтр("ru='Признаны расходы на ремонт оборудования'", ОбщегоНазначения.КодОсновногоЯзыка());
				
		// Транслируем счет производства
		ПроводкаНУ.СчетДт 	   = СчетНУПроизводства;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт, 1, СтруктураСведенийБУ.СубконтоБУ1);
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт, 2, СтруктураСведенийБУ.СубконтоБУ2);
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт, 3, СтруктураСведенийБУ.СубконтоБУ3);
		
		Если ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСвойстваСчета(ПроводкаНУ.СчетДт).Количественный Тогда
			ПроводкаНУ.КоличествоДт = Количество;
		КонецЕсли;
		
		// Заполняем аналитику по ремонту
		ПроводкаНУ.СчетКт 	   = СтруктураСведенийНУ.СчетНУ;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт, 1, СтруктураСведенийНУ.СубконтоНУ1);
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт, 2, СтруктураСведенийНУ.СубконтоНУ2);
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт, 3, СтруктураСведенийНУ.СубконтоНУ3);
		
		Если ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСвойстваСчета(ПроводкаНУ.СчетКт).Количественный Тогда
			ПроводкаНУ.КоличествоКт = Количество;
		КонецЕсли;                				
		
		ВидУчетаНУ(ПроводкаНУ, Реквизиты.ВидУчетаНУ);				
		ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(ПроводкаНУ, СтруктурноеПодразделениеДт, СтруктурноеПодразделениеКт);
		
	КонецЕсли;				
КонецПроцедуры // ОтразитьРасходыНаРемонтПроизводственныхСредств

// Процедура формирует корреспонденции в налоговом учете
// по отражению постоянных разниц для документов,
// в которых не установлен признак отражения в НУ.
// Процедура необходима для предприятий, которые являются плательщиками КПН, но  не ведут учет временных разниц
//
Процедура ОтразитьПостоянныеРазницыВНУ(Знач Реквизиты, Движения, Отказ, ВыдаватьСообщения = Истина, ЗаписыватьПроводкиБУ = Истина) Экспорт
	
	Если Отказ Тогда			
		Возврат;
	КонецЕсли;

	Реквизиты = Реквизиты[0];

	Если Не Реквизиты.УчитыватьКПН тогда
		Возврат;
	КонецЕсли;	
	
	Если Реквизиты.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль Тогда
		Возврат;
	КонецЕсли;	
	
	Если Реквизиты.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ Тогда
		Возврат;
	КонецЕсли;	
	
	ВидУчетаНУ = Реквизиты.ВидУчетаНУ;
	
	Если ЗаписыватьПроводкиБУ Тогда
		ПроводкиБУ = Движения.Типовой;
		ПроводкиБУ.Записать();
	КонецЕсли;

	ПроводкиНУ = Движения.Налоговый;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДТ.НомерСтроки,
	                      |	ДТ.СчетДт,
	                      |	ДТ.СубконтоДт1,
	                      |	ДТ.СубконтоДт2,
	                      |	ДТ.СубконтоДт3,
	                      |	ДТ.СчетКт,
	                      |	ДТ.СубконтоКт1,
	                      |	ДТ.СубконтоКт2,
	                      |	ДТ.СубконтоКт3,
	                      |	ДТ.Сумма,
	                      |	ДТ.Содержание,
	                      |	ДТ.Приоритет,
	                      |	ДТ.СчетНУ КАК СчетДтНУ,
	                      |	ДТ.НомерСтроки КАК НомерСтроки1,
	                      |	Кт.СчетНУ КАК СчетКтНУ,
	                      |	ДТ.СубконтоНУ1 КАК СубконтоДтНУ1,
	                      |	ДТ.СубконтоНУ2 КАК СубконтоДтНУ2,
	                      |	ДТ.СубконтоНУ3 КАК СубконтоДтНУ3,
	                      |	Кт.СубконтоНУ1 КАК СубконтоКтНУ1,
	                      |	Кт.СубконтоНУ2 КАК СубконтоКтНУ2,
	                      |	Кт.СубконтоНУ3 КАК СубконтоКтНУ3,
	                      |	ДТ.Организация,
	                      |	ДТ.НомерЖурнала,
	                      |	ДТ.Период,
	                      |	ДТ.СтруктурноеПодразделениеДт,
	                      |	Кт.СтруктурноеПодразделениеКт
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ДвиженияДт.СчетДт КАК СчетДт,
	                      |		ДвиженияДт.СубконтоДт1 КАК СубконтоДт1,
	                      |		ДвиженияДт.СубконтоДт2 КАК СубконтоДт2,
	                      |		ДвиженияДт.СубконтоДт3 КАК СубконтоДт3,
	                      |		ДвиженияДт.СчетКт КАК СчетКт,
	                      |		ДвиженияДт.СубконтоКт1 КАК СубконтоКт1,
	                      |		ДвиженияДт.СубконтоКт2 КАК СубконтоКт2,
	                      |		ДвиженияДт.СубконтоКт3 КАК СубконтоКт3,
	                      |		ДвиженияДт.Сумма КАК Сумма,
	                      |		ДвиженияДт.Содержание КАК Содержание,
	                      |		ДвиженияДт.Приоритет КАК Приоритет,
	                      |		ДанныеНУДт.СчетНУ КАК СчетНУ,
	                      |		ДвиженияДт.НомерСтроки КАК НомерСтроки,
	                      |		ДанныеНУДт.СубконтоНУ1 КАК СубконтоНУ1,
	                      |		ДанныеНУДт.СубконтоНУ2 КАК СубконтоНУ2,
	                      |		ДанныеНУДт.СубконтоНУ3 КАК СубконтоНУ3,
	                      |		ДвиженияДт.Организация КАК Организация,
	                      |		ДвиженияДт.НомерЖурнала КАК НомерЖурнала,
	                      |		ДвиженияДт.Период КАК Период,
	                      |		ДвиженияДт.СтруктурноеПодразделениеДт КАК СтруктурноеПодразделениеДт
	                      |	ИЗ
	                      |		(ВЫБРАТЬ
	                      |			ТиповойДвиженияССубконто.СчетДт КАК СчетДт,
	                      |			ТиповойДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	                      |			ТиповойДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	                      |			ТиповойДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
	                      |			ТиповойДвиженияССубконто.СчетКт КАК СчетКт,
	                      |			ТиповойДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	                      |			ТиповойДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	                      |			ТиповойДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
	                      |			ТиповойДвиженияССубконто.Сумма КАК Сумма,
	                      |			ТиповойДвиженияССубконто.Содержание КАК Содержание,
	                      |			МАКСИМУМ(ВЫБОР
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоДт1
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоДт2
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = ТиповойДвиженияССубконто.СубконтоДт3
	                      |						ТОГДА 10
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоДт1
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоДт2
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 5
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоДт1
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 4
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 3
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 2
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = &ПустойСчетНУ
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 1
	                      |				КОНЕЦ) КАК Приоритет,
	                      |			ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	                      |			ТиповойДвиженияССубконто.Организация КАК Организация,
	                      |			ТиповойДвиженияССубконто.НомерЖурнала КАК НомерЖурнала,
	                      |			ТиповойДвиженияССубконто.Период КАК Период,
	                      |			ТиповойДвиженияССубконто.СтруктурноеПодразделениеДт КАК СтруктурноеПодразделениеДт
	                      |		ИЗ
	                      |			РегистрБухгалтерии.Типовой.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК ТиповойДвиженияССубконто
	                      |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&Дата, ) КАК СоответствиеСчетовБУиНУСрезПоследних
	                      |				ПО ТиповойДвиженияССубконто.СчетДт = СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			ТиповойДвиженияССубконто.СубконтоДт2,
	                      |			ТиповойДвиженияССубконто.СчетДт,
	                      |			ТиповойДвиженияССубконто.СубконтоКт3,
	                      |			ТиповойДвиженияССубконто.СубконтоДт3,
	                      |			ТиповойДвиженияССубконто.СубконтоДт1,
	                      |			ТиповойДвиженияССубконто.СубконтоКт2,
	                      |			ТиповойДвиженияССубконто.СчетКт,
	                      |			ТиповойДвиженияССубконто.СубконтоКт1,
	                      |			ТиповойДвиженияССубконто.Содержание,
	                      |			ТиповойДвиженияССубконто.Сумма,
	                      |			ТиповойДвиженияССубконто.НомерСтроки,
	                      |			ТиповойДвиженияССубконто.НомерЖурнала,
	                      |			ТиповойДвиженияССубконто.Период,
	                      |			ТиповойДвиженияССубконто.Организация,
	                      |			ТиповойДвиженияССубконто.СтруктурноеПодразделениеДт) КАК ДвиженияДт
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |				ТиповойДвиженияССубконто.СчетДт КАК СчетДт,
	                      |				ТиповойДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	                      |				ТиповойДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	                      |				ТиповойДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
	                      |				ТиповойДвиженияССубконто.СчетКт КАК СчетКт,
	                      |				ТиповойДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	                      |				ТиповойДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	                      |				ТиповойДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
	                      |				ТиповойДвиженияССубконто.Сумма КАК Сумма,
	                      |				ТиповойДвиженияССубконто.Содержание КАК Содержание,
	                      |				ВЫБОР
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоДт1
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоДт2
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = ТиповойДвиженияССубконто.СубконтоДт3
	                      |						ТОГДА 10
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоДт1
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоДт2
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 5
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоДт1
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 4
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоКт3)
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 3
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетКт
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 2
	                      |					КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = &ПустойСчетНУ
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |							И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |						ТОГДА 1
	                      |				КОНЕЦ КАК Приоритет,
	                      |				СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	                      |				СоответствиеСчетовБУиНУСрезПоследних.СубконтоНУ1 КАК СубконтоНУ1,
	                      |				СоответствиеСчетовБУиНУСрезПоследних.СубконтоНУ2 КАК СубконтоНУ2,
	                      |				СоответствиеСчетовБУиНУСрезПоследних.СубконтоНУ3 КАК СубконтоНУ3,
	                      |				ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки
	                      |			ИЗ
	                      |				РегистрБухгалтерии.Типовой.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК ТиповойДвиженияССубконто
	                      |					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&Дата, ) КАК СоответствиеСчетовБУиНУСрезПоследних
	                      |					ПО ТиповойДвиженияССубконто.СчетДт = СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	                      |			ГДЕ
	                      |				СоответствиеСчетовБУиНУСрезПоследних.Учитывается = ИСТИНА) КАК ДанныеНУДт
	                      |			ПО ДвиженияДт.НомерСтроки = ДанныеНУДт.НомерСтроки
	                      |				И ДвиженияДт.Приоритет = ДанныеНУДт.Приоритет) КАК ДТ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			ДвиженияКт.СчетДт КАК СчетДт,
	                      |			ДвиженияКт.СубконтоДт1 КАК СубконтоДт1,
	                      |			ДвиженияКт.СубконтоДт2 КАК СубконтоДт2,
	                      |			ДвиженияКт.СубконтоДт3 КАК СубконтоДт3,
	                      |			ДвиженияКт.СчетКт КАК СчетКт,
	                      |			ДвиженияКт.СубконтоКт1 КАК СубконтоКт1,
	                      |			ДвиженияКт.СубконтоКт2 КАК СубконтоКт2,
	                      |			ДвиженияКт.СубконтоКт3 КАК СубконтоКт3,
	                      |			ДвиженияКт.Сумма КАК Сумма,
	                      |			ДвиженияКт.Содержание КАК Содержание,
	                      |			ДвиженияКт.Приоритет КАК Приоритет,
	                      |			ДанныеНУКт.СчетНУ КАК СчетНУ,
	                      |			ДвиженияКт.НомерСтроки КАК НомерСтроки,
	                      |			ДанныеНУКт.СубконтоНУ2 КАК СубконтоНУ2,
	                      |			ДанныеНУКт.СубконтоНУ1 КАК СубконтоНУ1,
	                      |			ДанныеНУКт.СубконтоНУ3 КАК СубконтоНУ3,
	                      |			ДвиженияКт.СтруктурноеПодразделениеКт КАК СтруктурноеПодразделениеКт
	                      |		ИЗ
	                      |			(ВЫБРАТЬ
	                      |				ТиповойДвиженияССубконто.СчетДт КАК СчетДт,
	                      |				ТиповойДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	                      |				ТиповойДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	                      |				ТиповойДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
	                      |				ТиповойДвиженияССубконто.СчетКт КАК СчетКт,
	                      |				ТиповойДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	                      |				ТиповойДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	                      |				ТиповойДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
	                      |				ТиповойДвиженияССубконто.Сумма КАК Сумма,
	                      |				ТиповойДвиженияССубконто.Содержание КАК Содержание,
	                      |				МАКСИМУМ(ВЫБОР
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = ТиповойДвиженияССубконто.СубконтоКт3
	                      |							ТОГДА 10
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 5
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 4
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 3
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 2
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = &ПустойСчетНУ
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 1
	                      |					КОНЕЦ) КАК Приоритет,
	                      |				ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	                      |				ТиповойДвиженияССубконто.Организация КАК Организация,
	                      |				ТиповойДвиженияССубконто.НомерЖурнала КАК НомерЖурнала,
	                      |				ТиповойДвиженияССубконто.Период КАК Период,
	                      |				ТиповойДвиженияССубконто.СтруктурноеПодразделениеКт КАК СтруктурноеПодразделениеКт
	                      |			ИЗ
	                      |				РегистрБухгалтерии.Типовой.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК ТиповойДвиженияССубконто
	                      |					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&Дата, ) КАК СоответствиеСчетовБУиНУСрезПоследних
	                      |					ПО ТиповойДвиженияССубконто.СчетКт = СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	                      |			
	                      |			СГРУППИРОВАТЬ ПО
	                      |				ТиповойДвиженияССубконто.СубконтоДт2,
	                      |				ТиповойДвиженияССубконто.СчетДт,
	                      |				ТиповойДвиженияССубконто.СубконтоКт3,
	                      |				ТиповойДвиженияССубконто.СубконтоДт3,
	                      |				ТиповойДвиженияССубконто.СубконтоДт1,
	                      |				ТиповойДвиженияССубконто.СубконтоКт2,
	                      |				ТиповойДвиженияССубконто.СчетКт,
	                      |				ТиповойДвиженияССубконто.СубконтоКт1,
	                      |				ТиповойДвиженияССубконто.Содержание,
	                      |				ТиповойДвиженияССубконто.Сумма,
	                      |				ТиповойДвиженияССубконто.НомерСтроки,
	                      |				ТиповойДвиженияССубконто.Организация,
	                      |				ТиповойДвиженияССубконто.НомерЖурнала,
	                      |				ТиповойДвиженияССубконто.Период,
	                      |				ТиповойДвиженияССубконто.СтруктурноеПодразделениеКт) КАК ДвиженияКт
	                      |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |					ТиповойДвиженияССубконто.СчетДт КАК СчетДт,
	                      |					ТиповойДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	                      |					ТиповойДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	                      |					ТиповойДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
	                      |					ТиповойДвиженияССубконто.СчетКт КАК СчетКт,
	                      |					ТиповойДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	                      |					ТиповойДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	                      |					ТиповойДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
	                      |					ТиповойДвиженияССубконто.Сумма КАК Сумма,
	                      |					ТиповойДвиженияССубконто.Содержание КАК Содержание,
	                      |					ВЫБОР
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = ТиповойДвиженияССубконто.СубконтоКт3
	                      |							ТОГДА 10
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = ТиповойДвиженияССубконто.СубконтоКт2
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 5
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = ТиповойДвиженияССубконто.СубконтоКт1
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 4
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И (СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт1
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт2
	                      |									ИЛИ СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = ТиповойДвиженияССубконто.СубконтоДт3)
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 3
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = ТиповойДвиженияССубконто.СчетДт
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 2
	                      |						КОГДА СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ = &ПустойСчетНУ
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	                      |								И СоответствиеСчетовБУиНУСрезПоследних.СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	                      |							ТОГДА 1
	                      |					КОНЕЦ КАК Приоритет,
	                      |					СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	                      |					СоответствиеСчетовБУиНУСрезПоследних.СубконтоНУ1 КАК СубконтоНУ1,
	                      |					СоответствиеСчетовБУиНУСрезПоследних.СубконтоНУ2 КАК СубконтоНУ2,
	                      |					СоответствиеСчетовБУиНУСрезПоследних.СубконтоНУ3 КАК СубконтоНУ3,
	                      |					ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки
	                      |				ИЗ
	                      |					РегистрБухгалтерии.Типовой.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК ТиповойДвиженияССубконто
	                      |						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&Дата, ) КАК СоответствиеСчетовБУиНУСрезПоследних
	                      |						ПО ТиповойДвиженияССубконто.СчетКт = СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	                      |				ГДЕ
	                      |					СоответствиеСчетовБУиНУСрезПоследних.Учитывается = ИСТИНА) КАК ДанныеНУКт
	                      |				ПО ДвиженияКт.НомерСтроки = ДанныеНУКт.НомерСтроки
	                      |					И ДвиженияКт.Приоритет = ДанныеНУКт.Приоритет) КАК Кт
	                      |		ПО ДТ.НомерСтроки = Кт.НомерСтроки");
	Запрос.УстановитьПараметр("Дата"		, Реквизиты.Период);
	Запрос.УстановитьПараметр("Ссылка"		, Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("ПустойСчетНУ", ПланыСчетов.Типовой.ПустаяСсылка());	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// Сформируем проводки НУ
		СчетДтНУ = Выборка.СчетДтНУ; 
		СчетКтНУ = Выборка.СчетКтНУ;     
		
		ПустойСчетДт = НЕ ЗначениеЗаполнено(СчетДтНУ);
		ПустойСчетКт = НЕ ЗначениеЗаполнено(СчетКтНУ);
		// Если нет аналогов в НУ для обоих счетов БУ - проводки не формируем
		Если ПустойСчетДт И ПустойСчетКт Тогда
			Если ВыдаватьСообщения Тогда
				Если ПустойСчетДт Тогда
					ТекстСообщения = НСтр("ru = 'Не установлено соответствие счета налогового учета для счета <%1>'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
							Выборка.СчетДт);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;	
				Если ПустойСчетКт Тогда
					ТекстСообщения = НСтр("ru = 'Не установлено соответствие счета налогового учета для счета <%1>'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
							Выборка.СчетКт);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
				ТекстСообщения = НСтр("ru = 'Корреспонденции в НУ для проводки бухгалтерского учета № <%1>
									|не сформирована!'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
						СокрЛП(Выборка.НомерСтроки));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;	
			
			Продолжить; // оба счета в НУ не транслируются
		КонецЕсли;
		
		// Формируем корреспонденцию в налоговом учете
		ПроводкаНУ = ПроводкиНУ.Добавить();
		ПроводкаНУ.Период 	   = Выборка.Период;
		ПроводкаНУ.Организация = Выборка.Организация;
		
		ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
				ПроводкаНУ, Выборка.СтруктурноеПодразделениеДт, Выборка.СтруктурноеПодразделениеКт);
		
		Если НЕ ПустойСчетДт Тогда		
			ПроводкаНУ.СчетДт = СчетДтНУ;
			
			Если НЕ СчетДтНУ.ВестиУчетВременныхРазниц Тогда
				ПроводкаНУ.ВидУчетаДТ = СПравочники.ВидыУчетаНУ.НУ;
			Иначе
				ПроводкаНУ.ВидУчетаДТ = ВидУчетаНУ;
			КонецЕсли;
			
			// попытаемся проставить субконто по данным БУ
			Для Счетчик = 1 по Выборка.СчетДт.ВидыСубконто.Количество() Цикл
				ВидСубконтоДТ = Выборка.СчетДт.ВидыСубконто[Счетчик - 1].ВидСубконто;								
				СубконтоБУ 	  = Выборка["СубконтоДт" + Счетчик];
				Для СчетчикНУ = 1 по СчетДТНУ.ВидыСубконто.Количество() Цикл
					ВидСубконтоДтНУ = СчетДтНУ.ВидыСубконто[СчетчикНУ - 1].ВидСубконто;				
					Если  ВидСубконтоДтНУ.ТипЗначения.СодержитТип(ТИпЗнч(СубконтоБУ)) Тогда
						ПроводкаНУ.СубконтоДт[ВидСубконтоДтНУ] = СубконтоБУ;
					КонецЕсли;	
				КонецЦикла;				
				
			КонецЦикла;             			
		КонецЕсли;                          	
		Если НЕ ПустойСчетКт Тогда
			ПроводкаНУ.СчетКт     = СчетКтНУ;
			ПроводкаНУ.ВидУчетаКт = ВидУчетаНУ;
			Если НЕ СчетКтНУ.ВестиУчетВременныхРазниц Тогда
				ПроводкаНУ.ВидУчетаКТ = Справочники.ВидыУчетаНУ.НУ;
			Иначе
				ПроводкаНУ.ВидУчетаКТ = ВидУчетаНУ;
			КонецЕсли;

			Для Счетчик = 1 по Выборка.СчетКт.ВидыСубконто.Количество() Цикл
				ВидСубконтоКт = Выборка.СчетКт.ВидыСубконто[Счетчик - 1].ВидСубконто;
				СубконтоБУ 	  = Выборка["СубконтоКт" + Счетчик];
				Для СчетчикНУ = 1 по СчетКТНУ.ВидыСубконто.Количество() Цикл
					ВидСубконтоКтНУ = СчетКтНУ.ВидыСубконто[СчетчикНУ - 1].ВидСубконто;				
					Если  ВидСубконтоКтНУ.ТипЗначения.СодержитТип(ТИпЗнч(СубконтоБУ)) Тогда
						ПроводкаНУ.СубконтоКт[ВидСубконтоКтНУ] = СубконтоБУ;
					КонецЕсли;	
				КонецЦикла;								
			КонецЦикла;             			
		КонецЕсли;
		// если при трансляции были заданы конкретные значения НУ, то их приоритет выше
		// устанавливаем значения субконто, полученные при трансляции.
		Для Счетчик = 1 по 3 Цикл
			СубконтоДт = Выборка["СубконтоДтНУ" + Счетчик];
			СубконтоКт = Выборка["СубконтоКтНУ" + Счетчик];
			Если ЗначениеЗаполнено(СубконтоДт) ТОгда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, Счетчик, СубконтоДт);			
			КонецЕсли;	
			Если ЗначениеЗаполнено(СубконтоКт) Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, Счетчик, СубконтоКт);			
			КонецЕсли;			
		КонецЦикла;			
		
		ПроводкаНУ.НомерЖурнала = Выборка.НомерЖурнала;
		ПроводкаНУ.Сумма        = Выборка.Сумма;
		ПроводкаНУ.Содержание   = Выборка.Содержание;			
	КонецЦикла;	
	
	Движения.Налоговый.Записывать = Истина;
	
КонецПроцедуры

// Процедура формирует корреспонденции в налоговом учете
// по отражению временной разницы на основании переданной в качестве параметра
// исходной проводки НУ или БУ.
// Если базовой является БУ проводка, то для формирования ВР проводки выполянется трансляция
//
Процедура ОтразитьВременныеРазницыВНУ(Реквизиты, ИсходнаяПроводка, Движения, СуммаВР, ТранслироватьИзБУ = Ложь, СоответствиеСчетов = Неопределено) экспорт
	
	Если СуммаВР = 0  Тогда
		Возврат;
	КонецЕсли;	
	
	Если СоответствиеСчетов = Неопределено Тогда
		СоответствиеСчетов = Новый Соответствие;	
	КонецЕсли; 
	
	Если Реквизиты.НеобходимостьОтраженияВНУ 
				И Реквизиты.ВедениеУчетаВременныхРазницБалансовымМетодом Тогда
				
		НоваяПроводкаНУ = Движения.Налоговый.Добавить();
		Если ТранслироватьИзБУ Тогда
			ЗаполнитьЗначенияСвойств(НоваяПроводкаНУ, ИсходнаяПроводка, "Период, Регистратор, Организация, СтруктурноеПодразделениеДт, СтруктурноеПодразделениеКт, Сумма, Содержание");
			// установка счетов
			Если ЗначениеЗаполнено(ИсходнаяПроводка.СчетДт) Тогда
				// проверяем специфическое соответствие
				СчетНУ = СоответствиеСчетов.Получить(ИсходнаяПроводка.СчетДт);
				// Если оно не задано, то используем стандартную трансляцию
				Если ЗначениеЗаполнено(СчетНУ) Тогда
					НоваяПроводкаНУ.СчетДт 				= СчетНУ;				
				Иначе				
					НоваяПроводкаНУ.СчетДт 				= ИсходнаяПроводка.СчетДт.СчетНУ;				
				КонецЕсли;	
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ИсходнаяПроводка.СчетКт) Тогда
				// проверяем специфическое соответствие
				СчетНУ = СоответствиеСчетов.Получить(ИсходнаяПроводка.СчетКт);
				// Если оно не задано, то используем стандартную трансляцию
				Если ЗначениеЗаполнено(СчетНУ) Тогда
					НоваяПроводкаНУ.СчетКт 				= СчетНУ;				
				Иначе				
					НоваяПроводкаНУ.СчетКт 				= ИсходнаяПроводка.СчетКт.СчетНУ;				
				КонецЕсли;	
			КонецЕсли;	
		Иначе
			// заполняем по свойствами исходной проводки
			ЗаполнитьЗначенияСвойств(НоваяПроводкаНУ, ИсходнаяПроводка,,"ВидУчетаДт, ВидУчетаКт");			
		КонецЕсли;
		Если ЗначениеЗаполнено(НоваяПроводкаНУ.СчетДт) Тогда
			Для каждого КоллекцияСубконто Из ИсходнаяПроводка.СубконтоДт Цикл
				СубконтоИсходнойПроводки 	= КоллекцияСубконто.Значение;
				ВидСубконтоИсходнойПроводки = КоллекцияСубконто.Ключ;
				
				Если ТранслироватьИзБУ Тогда
					// могут не совпадать названия субконто. Например в БУ - ОС, в НУ - ВнеоборотныеАктивы
					Для Счетчик = 1 по НоваяПроводкаНУ.СчетДт.ВидыСубконто.Количество() Цикл					
						ВидСубконтоПриемник = НоваяПроводкаНУ.СчетДт.ВидыСубконто[Счетчик-1].ВидСубконто;
						Если ВидСубконтоПриемник.ТипЗначения.СодержитТип(ТипЗнч(СубконтоИсходнойПроводки)) Тогда
							ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(НоваяПроводкаНУ.СчетДт, НоваяПроводкаНУ.СубконтоДт, ВидСубконтоПриемник, СубконтоИсходнойПроводки);
						КонецЕсли;						
					КонецЦикла; 					
				Иначе
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(НоваяПроводкаНУ.СчетДт, НоваяПроводкаНУ.СубконтоДт, ВидСубконтоИсходнойПроводки, СубконтоИсходнойПроводки);
				КонецЕсли;	
			КонецЦикла;				
		КонецЕсли;		
		
		Если ЗначениеЗаполнено(НоваяПроводкаНУ.СчетКт) Тогда
			Для каждого КоллекцияСубконто Из ИсходнаяПроводка.СубконтоКт Цикл
				СубконтоИсходнойПроводки 	= КоллекцияСубконто.Значение;
				ВидСубконтоИсходнойПроводки = КоллекцияСубконто.Ключ;
				Если ТранслироватьИзБУ Тогда
					// могут не совпадать названия субконто. Например в БУ - ОС, в НУ - ВнеоборотныеАктивы
					Для Счетчик = 1 по НоваяПроводкаНУ.СчетКт.ВидыСубконто.Количество() Цикл					
						ВидСубконтоПриемник = НоваяПроводкаНУ.СчетКт.ВидыСубконто[Счетчик-1].ВидСубконто;
						Если ВидСубконтоПриемник.ТипЗначения.СодержитТип(ТипЗнч(СубконтоИсходнойПроводки)) Тогда
							ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(НоваяПроводкаНУ.СчетКт, НоваяПроводкаНУ.СубконтоКт, ВидСубконтоПриемник, СубконтоИсходнойПроводки);
						КонецЕсли;						
					КонецЦикла; 					
				Иначе
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(НоваяПроводкаНУ.СчетКт, НоваяПроводкаНУ.СубконтоКт, ВидСубконтоИсходнойПроводки, СубконтоИсходнойПроводки);
				КонецЕсли;	
			КонецЦикла;				
		КонецЕсли;
		
		НоваяПроводкаНУ.Сумма 		= СуммаВР;		
		НоваяПроводкаНУ.Содержание  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Признаны ВР по операции: %1'", ОбщегоНазначения.КодОсновногоЯзыка()),НоваяПроводкаНУ.Содержание); 		
		
		// для счетов по которым не ведется учет ВР
		ВидУчетаНУ(НоваяПроводкаНУ, Справочники.ВидыУчетаНУ.ВР);
	КонецЕсли;	
КонецПроцедуры // ОтразитьВременныеРазницыВНУ


////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы со структурными подразделениями

// Возвращает ставку налога по выбранной организации на заданную дату
//
Функция ПолучитьСтавкуНалога(Налогоплательщик, ВидНалога, Дата, ВидДохода = Неопределено) Экспорт
	
	// в случае, если задана ставка для налога по конкретному налогоплательщику, то возвращается ставка именно этого налогоплательщика
	// в противном случае возвращается единая ставка для фирмы в целом
	СтавкаНалога = 0;
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
      |	МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК Период
      |ПОМЕСТИТЬ ВТМаксимальныйПериод
      |ИЗ
      |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений.СрезПоследних(
      |			&Дата,
      |			(Налогоплательщик = &Налогоплательщик
      |				ИЛИ Налогоплательщик = &ПустойНалогоплательщик)
      |				И (ВидДохода = &ВидДохода
      |					ИЛИ ВидДохода = &ПустойВидДохода)
      |				И ВидНалога = &ВидНалога) КАК СведенияОСтавкахНалоговСборовОтчислений
      |;
      |
      |////////////////////////////////////////////////////////////////////////////////
      |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
      |	СведенияОСтавкахНалоговСборовОтчислений.Период КАК Период,
      |	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
      |	СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик КАК Налогоплательщик,
	  |	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК Ставка,
      |	ВЫБОР
      |		КОГДА СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &Налогоплательщик
      |				И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &ВидДохода
      |			ТОГДА 1
      |		КОГДА СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &Налогоплательщик
      |				И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &ПустойВидДохода
      |			ТОГДА 2
      |		КОГДА СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &ПустойНалогоплательщик
      |				И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &ВидДохода
      |			ТОГДА 3
      |		КОГДА СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &ПустойНалогоплательщик
      |				И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &ПустойВидДохода
      |			ТОГДА 4
      |	КОНЕЦ КАК Приоритет
      |ИЗ
      |	ВТМаксимальныйПериод КАК МаксимальныйПериод
      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
      |		ПО МаксимальныйПериод.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
      |			И (СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &Налогоплательщик
      |				ИЛИ СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &ПустойНалогоплательщик)
      |			И (СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &ВидДохода
      |				ИЛИ СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &ПустойВидДохода)
      |			И (СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &ВидНалога)
      |
      |УПОРЯДОЧИТЬ ПО
      |	Приоритет");
	  
	Запрос.УстановитьПараметр("Дата", Дата);					  
	Запрос.УстановитьПараметр("Налогоплательщик", ?(Налогоплательщик = Неопределено, Справочники.Организации.ПустаяСсылка(), Налогоплательщик));					  
	Запрос.УстановитьПараметр("ПустойНалогоплательщик", Справочники.Организации.ПустаяСсылка());		
	Запрос.УстановитьПараметр("ПустойВидДохода", Перечисления.ЮрФизЛицо.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидДохода", ?(ВидДохода = Неопределено, Перечисления.ЮрФизЛицо.ФизЛицо, ВидДохода));
	Запрос.УстановитьПараметр("ВидНалога", ВидНалога);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		СтавкаНалога = Выборка.Ставка;
	КонецЕсли;	
	
	Возврат СтавкаНалога;
	
КонецФункции // ПолучитьСтавкуНалога()

// Функция возвращает налоговый комитет для переданной структурной единицы
//
// Параметры:
//	СтруктурнаяЕдиница - Организация/Подразделение организации
//	Организация - организация из шапки документа
//	глИсчислениеНалоговСтруктурныхЕдиниц - значение глобальной переменной
//	РазделНУ - значение перечисления РазделыНалоговогоУчета
//
Функция ПолучитьНалоговыйКомитетСтруктурнойЕдиницы(СтруктурнаяЕдиница, Организация, ИсчислениеНалоговСтруктурныхЕдиниц, РазделНУ) Экспорт
	
	ЗаписьОСтруктурнойЕдинице = Неопределено;
	
	Если ИсчислениеНалоговСтруктурныхЕдиниц <> Неопределено Тогда
		ЗаписьОСтруктурнойЕдинице = ИсчислениеНалоговСтруктурныхЕдиниц[СтруктурнаяЕдиница];
		Если ЗаписьОСтруктурнойЕдинице = Неопределено Тогда
			ЗаписьОСтруктурнойЕдинице = ИсчислениеНалоговСтруктурныхЕдиниц[Организация];
		КонецЕсли;
	КонецЕсли;

	Если ЗаписьОСтруктурнойЕдинице = Неопределено Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	Иначе
		ИмяРазделаНУ = Метаданные.Перечисления.РазделыНалоговогоУчета.ЗначенияПеречисления[Перечисления.РазделыНалоговогоУчета.Индекс(РазделНУ)].Имя;
		Возврат ЗаписьОСтруктурнойЕдинице[ИмяРазделаНУ].НалоговыйКомитет;
	КонецЕсли;

КонецФункции // ПолучитьНалоговыйКомитетСтруктурнойЕдиницы()

// Возвращает ставку ОСМС по выбранной организации на заданную дату
// ВидВзносыОтчисления - Строка, значение "Взносы" или "Отчисления" по имени показателя в регистре
//
Функция ПолучитьСтавкуОСМС(Дата, ВидВзносыОтчисления = "Взносы", ВидДохода = Неопределено, Налогоплательщик = Неопределено) Экспорт
	
	// в случае, если задана ставка для налога по конкретному налогоплательщику, то возвращается ставка именно этого налогоплательщика
	// в противном случае возвращается единая ставка для фирмы в целом
	Ставка = 0;
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(СведенияОСтавкахОСМССрезПоследних.Период) КАК Период
		|ПОМЕСТИТЬ ВТМаксимальныйПериод
		|ИЗ
		|	РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(
		|			&Дата,
		|			(Налогоплательщик = &Налогоплательщик
		|				ИЛИ Налогоплательщик = &ПустойНалогоплательщик)
		|				И ВидДохода = &ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СведенияОСтавкахОСМС.Период КАК Период,
		|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
		|	СведенияОСтавкахОСМС.Налогоплательщик КАК Налогоплательщик,
		|	СведенияОСтавкахОСМС.СтавкаВзносы КАК СтавкаВзносы,
		|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК СтавкаОтчисления,
		|	ВЫБОР
		|		КОГДА СведенияОСтавкахОСМС.Налогоплательщик = &Налогоплательщик
		|				И СведенияОСтавкахОСМС.ВидДохода = &ВидДохода
		|			ТОГДА 1
		|		КОГДА СведенияОСтавкахОСМС.Налогоплательщик = &ПустойНалогоплательщик
		|				И СведенияОСтавкахОСМС.ВидДохода = &ВидДохода
		|			ТОГДА 2
		|	КОНЕЦ КАК Приоритет
		|ИЗ
		|	ВТМаксимальныйПериод КАК МаксимальныйПериод
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
		|		ПО МаксимальныйПериод.Период = СведенияОСтавкахОСМС.Период
		|			И (СведенияОСтавкахОСМС.Налогоплательщик = &Налогоплательщик
		|				ИЛИ СведенияОСтавкахОСМС.Налогоплательщик = &ПустойНалогоплательщик)
		|			И (СведенияОСтавкахОСМС.ВидДохода = &ВидДохода)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет");
						  
	Запрос.УстановитьПараметр("Дата", Дата);					  
	Запрос.УстановитьПараметр("Налогоплательщик", ?(Налогоплательщик = Неопределено, Справочники.Организации.ПустаяСсылка(), Налогоплательщик));					  
	Запрос.УстановитьПараметр("ПустойНалогоплательщик", Справочники.Организации.ПустаяСсылка());					  
	Запрос.УстановитьПараметр("ВидДохода", ?(ВидДохода = Неопределено, Перечисления.ЮрФизЛицо.ФизЛицо, ВидДохода));
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Ставка = Выборка["Ставка" + ВидВзносыОтчисления];
	КонецЕсли;	
	
	Возврат Ставка;
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

/////////////////////////////////////////////////////////////////////////////////
// Раздел для работы с фиксированными активами

// Возрашает стоимость в налоговом учете для списка внеоборотных активов.
// Колонки результирующей таблицы:
//	ВнеоборотныйАктивНУ
// 	СчетУчетаНУ
// 	ВидУчетаНУ
//	СтоимостьНУ
//	ПризнакФА
//  
Функция ОпределитьСтоимостьНУПоСпискуВА(Организация, СписокВА, Период) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",	Период);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("СчетУчетаВА",	ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
	Запрос.УстановитьПараметр("СубконтоВА",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.ВнеоборотныеАктивы);
	Запрос.УстановитьПараметр("СписокВА",		СписокВА);		
	
	СостоянияФА = Новый СписокЗначений();	
	СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
	СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);
	
	Запрос.УстановитьПараметр("СостоянияФА", 	СостоянияФА);		
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СтоимостьВА_НУ.Субконто1 КАК ВнеоборотныйАктивНУ,
	|	СтоимостьВА_НУ.Счет КАК СчетУчетаНУ,
	|	ЕСТЬNULL(СтоимостьВА_НУ.СуммаОстатокДт, 0) КАК СтоимостьНУ,
	|	СтоимостьВА_НУ.ВидУчета КАК ВидУчетаНУ,
	|	ВЫБОР
	|		КОГДА ОбъектыНалоговогоУчетаФА.СостояниеФиксированногоАктива в (&СостоянияФА)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакФА
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&СчетУчетаВА),          	               
	|		&СубконтоВА, Организация = &Организация И Субконто1 В (&СписокВА)) КАК СтоимостьВА_НУ
	|
	| ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(&НачалоПериода,Организация = &Организация И ФиксированныйАктив В (&СписокВА) ) КАК ОбъектыНалоговогоУчетаФА
	| ПО СтоимостьВА_НУ.Субконто1 = ОбъектыНалоговогоУчетаФА.ФиксированныйАктив
	|	И СтоимостьВА_НУ.Организация = ОбъектыНалоговогоУчетаФА.Организация";
	
	ТЗ = Запрос.Выполнить().Выгрузить();   
	
	Возврат ТЗ;
	
КонецФункции

Функция МаксимальноеКоличествоСубконто() Экспорт

	Возврат Метаданные.ПланыСчетов.Налоговый.МаксКоличествоСубконто;

КонецФункции
