///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вызывается для получения контактов (участников) по указанному предмету взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  ИмяТаблицыКонтактов   - Строка - имя таблицы предмета взаимодействий, в котором требуется выполнить поиск.
//                                   Например, "Документы.ЗаказПокупателя".
//  ТекстЗапросаДляПоиска - Строка - в этот параметр указать фрагмент запроса для поиска. При выполнении запроса 
//                                   в параметр запроса &Предмет подставляется ссылка на предмет взаимодействия.
//
Процедура ПриПоискеКонтактов(Знач ИмяТаблицыКонтактов, ТекстЗапросаДляПоиска) Экспорт
	
	Если ИмяТаблицыКонтактов = Метаданные.Справочники.ДоговорыКонтрагентов.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Справочники.ДоговорыКонтрагентов.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	
	Если ИмяТаблицыКонтактов = Метаданные.Документы.АктСверкиВзаиморасчетов.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.АктСверкиВзаиморасчетов.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	
	Если ИмяТаблицыКонтактов = Метаданные.Документы.ПоступлениеТоваровУслуг.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.ПоступлениеТоваровУслуг.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	
	Если ИмяТаблицыКонтактов = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.РеализацияТоваровУслуг.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	
	Если ИмяТаблицыКонтактов = Метаданные.Документы.СчетНаОплатуПокупателю.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.СчетНаОплатуПокупателю.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли; 
	
	Если ИмяТаблицыКонтактов = Метаданные.Документы.СчетНаОплатуПоставщика.ПолноеИмя() Тогда
		ТекстЗапросаДляПоиска = Документы.СчетНаОплатуПоставщика.ТекстЗапросаПоКонтактам(Истина);
	КонецЕсли;
	
КонецПроцедуры	

// Позволяет переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть, например, при массовых рассылках, когда имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо - ДокументСсылка.ЭлектронноеПисьмоВходящее
//         - ДокументСсылка.ЭлектронноеПисьмоИсходящее - электронное письмо, 
//           для которого необходимо получить вложения.
//  ПрисоединенныеФайлы - Структура - задать сведения о файлах, присоединенных к письму:
//    * ВладелецФайлов                     - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//    * ИмяСправочникаПрисоединенныхФайлов - Строка - имя объекта метаданных присоединенных файлов.
//
Процедура ПриПолученииПрисоединенныхФайлов(Письмо, ПрисоединенныеФайлы) Экспорт

КонецПроцедуры

// Вызывается для настройки логики ограничения доступа к взаимодействиям.
// Пример заполнения наборов значений доступа см. в комментарии
// к процедуре УправлениеДоступом.ЗаполнитьНаборыЗначенийДоступа.
//
// Параметры:
//  Объект - ДокументОбъект.Встреча
//         - ДокументОбъект.ЗапланированноеВзаимодействие
//         - ДокументОбъект.ТелефонныйЗвонок
//         - ДокументОбъект.ЭлектронноеПисьмоВходящее
//         - ДокументОбъект.ЭлектронноеПисьмоИсходящее - объект, для которого нужно заполнить наборы.
//  Таблица - см. УправлениеДоступом.ТаблицаНаборыЗначенийДоступа
//
Процедура ПриЗаполненииНаборовЗначенийДоступа(Объект, Таблица) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.Встреча")
		ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.ЗапланированноеВзаимодействие")
		ИЛИ ТипЗнч(Объект) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		
		// Логика ограничения следующая: объект доступен если доступен  "Автор" или "Ответственный".
		// Логика "ИЛИ" реализуется через различные номера наборов.

		НомерНабора = 1;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.Автор;

		// Ограничение по "Ответственный".
		НомерНабора = НомерНабора + 1;

		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.НомерНабора     = НомерНабора;
		СтрокаТаб.ЗначениеДоступа = Объект.Ответственный;

	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		// Логика ограничения следующая: объект доступен если доступен  "Ответственный" или "Учетная запись"
		// или "Автор".
		// Логика "ИЛИ" реализуется через различные номера наборов.

		НомерНабора = 1;

		СтрокаТаблицы = Таблица.Добавить();
		СтрокаТаблицы.НомерНабора     = НомерНабора;
		СтрокаТаблицы.ЗначениеДоступа = Объект.УчетнаяЗапись;

		НомерНабора = НомерНабора + 1;

		СтрокаТаблицы = Таблица.Добавить();
		СтрокаТаблицы.НомерНабора     = НомерНабора;
		СтрокаТаблицы.ЗначениеДоступа = Объект.Автор;

		НомерНабора = НомерНабора + 1;

		СтрокаТаблицы = Таблица.Добавить();
		СтрокаТаблицы.НомерНабора     = НомерНабора;
		СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;

	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		// Логика ограничения следующая: объект доступен если доступен  "Ответственный" или "Учетная запись"
		// Логика "ИЛИ" реализуется через различные номера наборов.

		НомерНабора = 1;

		СтрокаТаблицы = Таблица.Добавить();
		СтрокаТаблицы.НомерНабора     = НомерНабора;
		СтрокаТаблицы.ЗначениеДоступа = Объект.УчетнаяЗапись;

		НомерНабора = НомерНабора + 1;

		СтрокаТаблицы = Таблица.Добавить();
		СтрокаТаблицы.НомерНабора     = НомерНабора;
		СтрокаТаблицы.ЗначениеДоступа = Объект.Ответственный;

	КонецЕсли;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПоискеКонтактов.
// Возвращает текст запроса, отбирающего контакты (участников) предмета взаимодействия.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий.
//
// Параметры:
//  УдалитьПомещатьВоВременнуюТаблицу - Булево - всегда Ложь.
//  ИмяТаблицы                        - Строка - имя таблицы предмета взаимодействий, в котором будет выполнен поиск.
//  УдалитьОбъединить                 - Булево - всегда Истина.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаПоискКонтактовПоПредмету(УдалитьПомещатьВоВременнуюТаблицу, ИмяТаблицы, УдалитьОбъединить = Ложь) Экспорт
	
	Если ИмяТаблицы = "Справочник.ДоговорыКонтрагентов" Тогда
		Возврат Справочники.ДоговорыКонтрагентов.ТекстЗапросаПоКонтактам(УдалитьОбъединить);
	КонецЕсли;
	
	Если ИмяТаблицы = "Документ.АктСверкиВзаиморасчетов" Тогда
		Возврат Документы.АктСверкиВзаиморасчетов.ТекстЗапросаПоКонтактам(УдалитьОбъединить);
	КонецЕсли;
	
	Если ИмяТаблицы = "Документ.ПоступлениеТоваровУслуг" Тогда
		Возврат Документы.ПоступлениеТоваровУслуг.ТекстЗапросаПоКонтактам(УдалитьОбъединить);
	КонецЕсли;
	
	Если ИмяТаблицы = "Документ.РеализацияТоваровУслуг" Тогда
		Возврат Документы.РеализацияТоваровУслуг.ТекстЗапросаПоКонтактам(УдалитьОбъединить);
	КонецЕсли;
	
	Если ИмяТаблицы = "Документ.СчетНаОплатуПокупателю" Тогда
		Возврат Документы.СчетНаОплатуПокупателю.ТекстЗапросаПоКонтактам(УдалитьОбъединить);
	КонецЕсли;
	
	Если ИмяТаблицы = "Документ.СчетНаОплатуПоставщика" Тогда
		Возврат Документы.СчетНаОплатуПоставщика.ТекстЗапросаПоКонтактам(УдалитьОбъединить);
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

// Устарела. Следует использовать ВзаимодействияПереопределяемый.ПриПолученииПрисоединенныхФайлов.
// Возможность переопределить владельца присоединенных файлов для письма.
// Такая необходимость может возникнуть например при массовых рассылках. В этом случае имеет смысл 
// хранить одни и те же присоединенные файлы в одном месте, а не тиражировать их на все письма рассылки.
//
// Параметры:
//  Письмо  - ДокументСсылка
//          - ДокументОбъект - документ электронное письмо, для которого необходимо получить вложения.
//
// Возвращаемое значение:
//  Структура, Неопределено  - Неопределено, если присоединенные файлы хранятся при письме.
//                             Структура, если присоединенные файлы хранятся в другом объекте:
//                              * Владелец - ОпределяемыйТип.ПрисоединенныйФайл - владелец присоединенных файлов.
//                              * ИмяСправочникаПрисоединенныеФайлы - Строка - имя объекта метаданных присоединенных файлов.
//
Функция ДанныеОбъектаМетаданныхПрисоединенныхФайловПисьма(Письмо) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти
