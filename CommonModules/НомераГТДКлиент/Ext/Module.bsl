
#Область ПрограммныйИнтерфейс

Процедура ТоварыНомерГТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ПараметрыВыбора) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Дата", ПараметрыВыбора.Дата);
	ПараметрыФормы.Вставить("Регистратор", ПараметрыВыбора.Ссылка);
	ПараметрыФормы.Вставить("ПоказыватьТолькоОстатки", ПараметрыВыбора.ПоказыватьТолькоОстатки);	
	ПараметрыФормы.Вставить("ТекущаяСтрока", ПараметрыВыбора.НомерГТД);
	
	Если ПараметрыВыбора.ПоказыватьТолькоОстатки Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Организация", ПараметрыВыбора.Организация);
		Отбор.Вставить("Товар", ПараметрыВыбора.Товар);
		Отбор.Вставить("СтруктурноеПодразделение", ПараметрыВыбора.СтруктурноеПодразделение);
		Если ЗначениеЗаполнено(ПараметрыВыбора.Склад) Тогда
			Отбор.Вставить("Склад", ПараметрыВыбора.Склад);
		КонецЕсли;
			       		
		ПараметрыФормы.Вставить("Отбор", Отбор);
		ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаВыбораПоОстаткам", ПараметрыФормы, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	Иначе
		ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаВыбора", ПараметрыФормы, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;

	
	
КонецПроцедуры

Процедура ОткрытьФормуРедактированияНомеровГТД(ПараметрыФормы, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаРедактированияНомеровГТД", ПараметрыФормы, Владелец);
	
КонецПроцедуры

Процедура УдалитьНомераГТДПриИзмененииТовара(Форма, ИмяТаблицы, ТекущаяСтрока) Экспорт
	
	Товары = Форма.Объект[ИмяТаблицы];
	НомераГТД = Форма.Объект.НомераГТД;
	
	ТекущиеДанные = Товары.НайтиПоИдентификатору(ТекущаяСтрока);	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// При изменении номенклатуры удалить все связанные строки из таблицы НомераГТД,
	// если номенклатура в них отличается от новой установленной номенклатуры.
	Пока Истина Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("КлючСвязи", ТекущиеДанные.КлючСвязи);
		МассивСтрокНомераГТД = НомераГТД.НайтиСтроки(ПараметрыОтбора);
		
		Если МассивСтрокНомераГТД.Количество() > 0 Тогда
			
			Если МассивСтрокНомераГТД[0].Номенклатура <> ТекущиеДанные.Номенклатура Тогда
				НомераГТД.Удалить(МассивСтрокНомераГТД[0]);
			Иначе
				Прервать;
			КонецЕсли;
			
		Иначе
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьСтрокиТаблицыНомераГТД(КлючСвязи, ТаблицаНомераГТД) Экспорт
	
	Пока Истина Цикл
		
		СтрокаУдалена = Ложь;
		
		Для Каждого СтрокаТаблицыНомераГТД Из ТаблицаНомераГТД Цикл
			Если СтрокаТаблицыНомераГТД.КлючСвязи = КлючСвязи Тогда
				ТаблицаНомераГТД.Удалить(СтрокаТаблицыНомераГТД);
				СтрокаУдалена = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ СтрокаУдалена Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ИзменитьНомераГТДПриИзмененииКоличествоТовара(Форма, ИмяТаблицы, ТекущаяСтрока) Экспорт
	
	Товары = Форма.Объект[ИмяТаблицы];
	НомераГТД = Форма.Объект.НомераГТД;
	
	ТекущиеДанные = Товары.НайтиПоИдентификатору(ТекущаяСтрока);	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТребуемоеКоличество = ТекущиеДанные.Количество;
	НакопленноеКоличество = 0;
	
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("КлючСвязи", ТекущиеДанные.КлючСвязи);
	МассивСтрокНомераГТД = НомераГТД.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаНомерГТД Из МассивСтрокНомераГТД Цикл
		
		НакопленноеКоличество = НакопленноеКоличество + СтрокаНомерГТД.Количество;
		
		Если ТребуемоеКоличество < НакопленноеКоличество Тогда
			УменьшениеКоличестваНомераГТД = НакопленноеКоличество - ТребуемоеКоличество;
			Если УменьшениеКоличестваНомераГТД < СтрокаНомерГТД.Количество Тогда 
				СтрокаНомерГТД.Количество = СтрокаНомерГТД.Количество - УменьшениеКоличестваНомераГТД;
			Иначе
				СтрокаНомерГТД.Количество = 0;	
			КонецЕсли;
		КонецЕсли;		
		
	КонецЦикла;	
	
	УдалитьНомераГТДСНулевымКоличеством(НомераГТД);		
	
КонецПроцедуры

Процедура УдалитьНомераГТДСНулевымКоличеством(НомераГТД) Экспорт
	
	Пока Истина Цикл
		
		УдаленНомерГТД = Ложь;
		
		Для Каждого СтрокаНомерГТД Из НомераГТД Цикл
			Если СтрокаНомерГТД.Количество = 0 Тогда
				НомераГТД.Удалить(СтрокаНомерГТД);
				УдаленНомерГТД = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ УдаленНомерГТД Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПустыеПараметрыВыбораНомераГТД() Экспорт
	
	ПараметрыВыбора = Новый Структура;
	
	ПараметрыВыбора.Вставить("Ссылка");
	ПараметрыВыбора.Вставить("Дата");	
	ПараметрыВыбора.Вставить("Организация");
	ПараметрыВыбора.Вставить("СтруктурноеПодразделение");
	ПараметрыВыбора.Вставить("ПоказыватьТолькоОстатки");
	ПараметрыВыбора.Вставить("Товар");
	ПараметрыВыбора.Вставить("НомерГТД");
	ПараметрыВыбора.Вставить("Склад");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Функция ПараметрыВыбораНомераГТД(Объект, ТекущиеДанные, ИмяРеквизитаТовары = "Номенклатура", ИмяРеквизитаПодразделения = "СтруктурноеПодразделение") Экспорт
	
	ПараметрыВыбора = НомераГТДКлиент.ПустыеПараметрыВыбораНомераГТД();
	
	ПараметрыВыбора.Ссылка = Объект.Ссылка;
	ПараметрыВыбора.Дата = Объект.Дата;	
	ПараметрыВыбора.Организация = Объект.Организация;
	ПараметрыВыбора.СтруктурноеПодразделение = Объект[ИмяРеквизитаПодразделения];	
	ПараметрыВыбора.ПоказыватьТолькоОстатки = Ложь;
	
	ПараметрыВыбора.Товар = ТекущиеДанные[ИмяРеквизитаТовары]; 
	ПараметрыВыбора.НомерГТД = ТекущиеДанные.НомерГТД;
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Функция ПолучитьТекстВопросаИзмененияКлючевыхПолейИсчтоникаПроисхождения(ИзменятьДанныеТабличнойЧастиПолностью) Экспорт
	
	Если  ИзменятьДанныеТабличнойЧастиПолностью Тогда
		ТекстВопроса = НСтр("ru='Изменилось ключевое поле источника происхождения. Очистить источники происхождения?
						|Да  - при проведении будут созданы новые источники происхождения
						|Нет - при проведении будут обновлены существующие источники происхождения'");

	Иначе
		
		ТекстВопроса = НСтр("ru='Изменилось ключевое поле источника происхождения. Очистить источник происхождения?
						|Да  - при проведении будет создан новый источник происхождения
						|Нет - при проведении будет обновлен существующий источник происхождения'");
	КонецЕсли;
					
	Возврат ТекстВопроса
	
КонецФункции

Процедура КлючевоеПолеИсточникаПроисхожденияПриИзменении(ДанныеДляИзменения, ИзменятьДанныеТабличнойЧастиПолностью = Ложь) Экспорт
	
	Если Не ИзменятьДанныеТабличнойЧастиПолностью И НЕ ЗначениеЗаполнено(ДанныеДляИзменения.НомерГТД) Тогда
		Возврат;
	КонецЕсли;
			
	Режим = РежимДиалогаВопрос.ДаНет;
	ПараметрыДействия = Новый Структура;                        
	ПараметрыДействия.Вставить("ДанныеДляИзменения", ДанныеДляИзменения);
	ПараметрыДействия.Вставить("ИзменятьДанныеТабличнойЧастиПолностью", ИзменятьДанныеТабличнойЧастиПолностью);
	
	ТекстВопроса = ПолучитьТекстВопросаИзмененияКлючевыхПолейИсчтоникаПроисхождения(ИзменятьДанныеТабличнойЧастиПолностью);
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаКлючевоеПолеПриИзменении", ЭтотОбъект, ПараметрыДействия);
	ПоказатьВопрос(Оповещение, ТекстВопроса, Режим); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаКлючевоеПолеПриИзменении(Результат, Параметры) Экспорт
		
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Параметры.ИзменятьДанныеТабличнойЧастиПолностью  Тогда
			Для Каждого Строка ИЗ Параметры.ДанныеДляИзменения Цикл
				Строка.НомерГТД = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");
			КонецЦикла;
		Иначе
			Параметры.ДанныеДляИзменения.НомерГТД = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");	
		КонецЕсли; 		
	КонецЕсли;
	
КонецПроцедуры

	
#КонецОбласти                                            