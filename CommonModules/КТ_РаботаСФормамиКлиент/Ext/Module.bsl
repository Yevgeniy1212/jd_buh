

// Заполняет список пунктов подменю выбора значениями переданной коллекции объектов метаданных,
// соответствующей перечислению видов операций для данного документа, с фильтром по переданному списку.
// Всем кнопкам назначается одно переданное действие.
// Обычно используется для заполнения пунктов подменю "Подменю" командной панели
// формы документа значениями перечисления "Вид операции" для данного вида документа
//
// Параметры:
//  ЭлементМеню                   - кнопка командной панели формы, соответствующая подменю, которое надо заполнить, 
//  ОбъектЗаполнения              - коллекция для заполнения пунктов подменю, 
//  ОбъектОбработкиВыбора         - действие, которое надо выполнить при выборе любого пункта подменю.
//  СписокИсключения              - список значений перечисления, которые не должны добавляться
//
Процедура УстановитьПодменюВыбора(ЭлементМеню, ОбъектЗаполнения, 
													ОбъектОбработкиВыбора, СписокИсключения) Экспорт

	Для каждого ЭлементЗаполнения Из ОбъектЗаполнения Цикл

		Если СписокИсключения.НайтиПоЗначению(ЭлементЗаполнения.Имя) = Неопределено Тогда

		ЭлементМеню.Кнопки.Добавить(ЭлементЗаполнения.Имя, ТипКнопкиКоманднойПанели.Действие, 
		                            ЭлементЗаполнения.Синоним, ОбъектОбработкиВыбора);

		ЭлементМеню.Кнопки[ЭлементЗаполнения.Имя].ИзменяетДанные = Истина;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // РаботаСДиалогами.УстановитьПодменюВыбора()

Функция ПолучитьОсновнуюВерсию() Экспорт
	Возврат КТ_РаботаСФормамиСервер.ПолучитьОсновнуюВерсию();
КонецФункции // ПолучитьОсновнуюВерсию()

Функция ОсновнойРеквизитФормы(Форма)
	Попытка
		Возврат Форма.ДокументСписок;
	Исключение
		Попытка
			Возврат Форма.СправочникСписок;
		Исключение
			Возврат Форма.РегистрСведенийСписок;
		КонецПопытки;
	КонецПопытки;
КонецФункции // ОсновнойРеквизитФормы()

Функция ВернутьКонстанту() Экспорт
	Возврат КТ_РаботаСФормамиСервер.ВернутьКонстанту();
КонецФункции // ВернутьКонстанту()

/////////////////////////////////////
//Адаптация 3.0
////////////////////////////////////

// Динамически подключаемый обработчик команды формы "КомандаОбработкаОтборПоВерсииБюджета"
//
Процедура Подключаемый_КомандаОбработкаОтборПоВерсииБюджета(Элементы, Команда, ТаблицаСоответствияЭлементовУправленияСсылкам, Список) Экспорт
	
	ЗначениеСсылки = ПолучитьСсылкуПоИмениЭлемента(Команда.Имя, ТаблицаСоответствияЭлементовУправленияСсылкам);
	
	Если ЗначениеСсылки <> Неопределено Тогда
		КТ_ОбщегоНазначенияКлиентСервер.УстановитьНедоступныйОтборСписка(Список, "ВерсияБюджета", ЗначениеСсылки);
		Элементы.ГруппаКоманднаяПанельВерсияБюджета.Заголовок = Строка(ЗначениеСсылки);
	Иначе	
		Список.Отбор.Элементы.Очистить();
		Элементы.ГруппаКоманднаяПанельВерсияБюджета.Заголовок = "Все версии";
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_КомандаОбработкаАтрибутаСобытияОбщая()

// Функция возвращает ссылку по имени элемента
//
// Параметры:
//	ИмяЭлемента	- Строка	- Имя элемента
//
// Возвращаемое значение:
//	ЛюбаяСсылка	- Найденная ссылка
//
Функция ПолучитьСсылкуПоИмениЭлемента(ИмяЭлемента, ТаблицаСоответствияЭлементовУправленияСсылкам)
	
	НайденныеСтроки = ТаблицаСоответствияЭлементовУправленияСсылкам.НайтиСтроки(Новый Структура("Имя", ИмяЭлемента));
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат НайденныеСтроки[0].Ссылка;
	КонецЕсли;
	
КонецФункции // ПолучитьСсылкуПоИмениЭлемента()

// Функция возвращает ссылку по имени элемента
//
// Параметры:
//	ИмяЭлемента	- Строка	- Имя элемента
//
// Возвращаемое значение:
//	ЛюбаяСсылка	- Найденная ссылка
//
Функция ПолучитьИмяПоСсылкеЭлемента(Ссылка, ТаблицаСоответствияЭлементовУправленияСсылкам) Экспорт 
	
	НайденныеСтроки = ТаблицаСоответствияЭлементовУправленияСсылкам.НайтиСтроки(Новый Структура("Ссылка", Ссылка));
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат НайденныеСтроки[0].Имя;
	КонецЕсли;
	
КонецФункции // ПолучитьСсылкуПоИмениЭлемента()

// Процедура - Установить отбор по основной версии бюджета
//
// Параметры:
//  Элементы										 - 	 - 
//  ТаблицаСоответствияЭлементовУправленияСсылкам	 - 	 - 
//  Список											 -  - 
//
Процедура УстановитьОтборПоОсновнойВерсииБюджета(Элементы, ТаблицаСоответствияЭлементовУправленияСсылкам, Список) Экспорт
	
	ИмяЭлемента = КТ_РаботаСФормамиКлиент.ПолучитьИмяПоСсылкеЭлемента(КТ_РаботаСФормамиКлиент.ПолучитьОсновнуюВерсию(), ТаблицаСоответствияЭлементовУправленияСсылкам);
	КТ_РаботаСФормамиКлиент.Подключаемый_КомандаОбработкаОтборПоВерсииБюджета(Элементы, Новый Структура("Имя", ИмяЭлемента), ТаблицаСоответствияЭлементовУправленияСсылкам, Список);
	
КонецПроцедуры


// Динамически подключаемый обработчик команды формы "КомандаОбработкаПолноеКопированиеПоВерсииБюджета"
//
Процедура Подключаемый_КомандаОбработкаПолноеКопированиеПоВерсииБюджета(Элементы, Команда, ТаблицаСоответствияЭлементовУправленияСсылкам, Список) Экспорт
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		МассивТекущихВерсий = КТ_РаботаСФормамиСервер.ПолучитьМассивВерсийБюджетаОбъектаПоПолномуИмениФормы(ТекущиеДанные.Ссылка);
		
		ВерсияБюджетаИсточник = ТекущиеДанные.ВерсияБюджета;
		ВерсияБюджетаПриемник = ОткрытьФормуМодально("ОбщаяФорма.КТ_ФормаВыбораВерсииБюджетаДляКопирования", Новый Структура("ВерсииБюджетаИсключение", МассивТекущихВерсий));
		
		Если ВерсияБюджетаПриемник <> Неопределено Тогда
			КТ_РаботаСФормамиСервер.ПолноеКопированиеДанныхПоВерсииБюджета(ТекущиеДанные.Ссылка, ВерсияБюджетаИсточник, ВерсияБюджетаПриемник);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_КомандаОбработкаПолноеКопированиеПоВерсииБюджета()


// Динамически подключаемый обработчик команды формы "КомандаОбработкаИзменитьДоступПоВерсииБюджета"
//
Процедура Подключаемый_КомандаОбработкаИзменитьДоступПоВерсииБюджета(Форма, Элементы, Команда, Список) Экспорт
	
	ЭлементОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(Список.Отбор.Элементы, "ВерсияБюджета");
	Если ЭлементОтбора <> Неопределено Тогда
		ТекущаяВерсияБюджетаВОтборе = ЭлементОтбора.ПравоеЗначение;
	Иначе
		ТекущаяВерсияБюджетаВОтборе = Неопределено;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанныеСсылка = ТекущиеДанные.Ссылка;
	Иначе
		ТекущиеДанныеСсылка = Неопределено;
	КонецЕсли;
	
	КТ_РаботаСФормамиСервер.ИзменениеДоступаКОбъектамПоВерсииБюджета(Форма.ИмяФормы, Команда.Имя, ТекущаяВерсияБюджетаВОтборе, ТекущиеДанныеСсылка);
	
	Форма.Элементы.Список.Обновить();
	
КонецПроцедуры


///////////////

Процедура УстановитьФиксациюСлеваВТаблиеФормы(ЭлементФормы, КоличествоКолонок) Экспорт
	
	ЭлементФормы.ФиксацияСлева = КоличествоКолонок;
	
КонецПроцедуры