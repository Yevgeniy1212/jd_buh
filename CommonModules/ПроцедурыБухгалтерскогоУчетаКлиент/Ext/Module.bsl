////////////////////////////////////////////////////////////////////////////////
// ПроцедурыБухгалтерскогоУчетаКлиент:
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ СО СЧЕТАМИ И СУБКОНТО В ФОРМАХ И ЭЛЕМЕНТАХ УПРАВЛЕНИЯ

// Процедура открывает специализированные формы для субконто специфического типа,
// а так же устанавливает необходимые отборы в стандартных формах выбора
Процедура НачалоВыбораЗначенияСубконто(Форма, Элемент, Индекс, СтандартнаяОбработка, СписокПараметров) Экспорт
	
	ДанныеСчета = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСвойстваСчета(СписокПараметров.СчетУчета);
	ПараметрыВыбора = Новый Структура();
	
	Если ДанныеСчета["ВидСубконто" + Индекс] = ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоТиповые.ДокументыРасчетовСКонтрагентами") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров  = Новый Структура;
		Если ТипЗнч(СписокПараметров) = Тип("Структура") Тогда
			
			Если СписокПараметров.Свойство("Организация") Тогда
				СтруктураПараметров.Вставить("Организация", СписокПараметров.Организация);
			КонецЕсли;
			Если СписокПараметров.Свойство("Контрагент") Тогда
				СтруктураПараметров.Вставить("Контрагент", СписокПараметров.Контрагент);
			КонецЕсли;
			Если СписокПараметров.Свойство("ДоговорКонтрагента") Тогда
				СтруктураПараметров.Вставить("ДоговорКонтрагента", СписокПараметров.ДоговорКонтрагента);
			КонецЕсли;
			Если СписокПараметров.Свойство("Дата") Тогда
				СтруктураПараметров.Вставить("Дата", Форма.Объект.Дата);
			КонецЕсли;
			Если СписокПараметров.Свойство("СчетУчета") Тогда
				СтруктураПараметров.Вставить("СчетУчета", СписокПараметров.СчетУчета);
			КонецЕсли;
			Если СписокПараметров.Свойство("ОстаткиОбороты") Тогда
				СтруктураПараметров.Вставить("ОстаткиОбороты", СписокПараметров.ОстаткиОбороты);
			КонецЕсли;
			СтруктураПараметров.Вставить("ТипыДокументов", ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"]);
		КонецЕсли;
		ПараметрыФормы = Новый Структура("ПараметрыОбъекта", СтруктураПараметров);
		ОткрытьФорму("Документ.ДокументРасчетовСКонтрагентом.ФормаВыбора", ПараметрыФормы, Элемент);
		
	ИначеЕсли ДанныеСчета["ВидСубконто" + Индекс] = ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоТиповые.Партии") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураПараметров  = Новый Структура;
		СтруктураПараметров.Вставить("Организация", СписокПараметров.Организация);
		Если СписокПараметров.Свойство("Номенклатура") Тогда
			СтруктураПараметров.Вставить("Номенклатура", СписокПараметров.Номенклатура);
		КонецЕсли;
		Если СписокПараметров.Свойство("Склад") Тогда
			СтруктураПараметров.Вставить("Склад", СписокПараметров.Склад);
		КонецЕсли;
		Если СписокПараметров.Свойство("Дата") Тогда
			СтруктураПараметров.Вставить("КонецПериода", Форма.Объект.Дата);
		КонецЕсли;
		Если СписокПараметров.Свойство("СчетУчета") Тогда
			СтруктураПараметров.Вставить("СчетУчета", СписокПараметров.СчетУчета);
		КонецЕсли;
		СтруктураПараметров.Вставить("ТипыДокументов", ДанныеСчета["ВидСубконто" + Индекс + "ТипЗначения"]);
		
		ПараметрыФормы = Новый Структура("ПараметрыОбъекта", СтруктураПараметров);
		ОткрытьФорму("Документ.Партия.ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
