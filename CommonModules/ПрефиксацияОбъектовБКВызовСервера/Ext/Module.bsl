////////////////////////////////////////////////////////////////////////////////
// Подсистема "Префиксация объектов"
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Обработчик события "При получении номера на печать".
// Событие возникает перед стандартной обработкой получения номера.
// В обработчике можно переопределить стандартное поведение системы при формировании номера на печать.
//
// Пример реализации кода обработчика:
// 
//	НомерОбъекта = ПрефиксацияОбъектовКлиентСервер.УдалитьПользовательскиеПрефиксыИзНомераОбъекта(НомерОбъекта);
//	СтандартнаяОбработка = Ложь;
// 
// Параметры:
//  НомерОбъекта         - Строка - номер или код объекта, который обрабатывается
//  Источник             - ДокументСсылка, СправочникСсылка, ДокументОбъект, СправочникОбъект - объект информационной базы, либо ссылка на него
//  СтандартнаяОбработка – Булево – флаг стандартной обработки; если установить значение флага в Ложь,
//									то стандартная обработка формирования номера на печать выполняться не будет
//  ПредставлениеНомераОбъекта - ПеречислениеСсылка.ВидыПредставленийНомеровДокументов - представление, к которому будет приведен номер объекта
//                                                Указывается только когда требуется переопределить стандартное поведение.
//  СписокПрефиксовУзлов - Массив - массив префиксов узлов РИБ. Если параметр не указан, 
//                                  то получаются значения по-умолчанию, иначе используются переданные значения.
//                                  Указывается только когда требуется переопределить стандартное поведение.
// 
Процедура ПриПолученииНомераНаПечать(НомерОбъекта, Источник, СтандартнаяОбработка, ПредставлениеНомераОбъекта = Неопределено, СписокПрефиксовУзлов = Неопределено) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Источник = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	// отбросим "пустые" символы
	НомерОбъекта = СокрЛП(НомерОбъекта);
	
	// Обработку префиксов номера документа будем выполнять в привилегированном режиме
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПредставлениеНомераОбъекта = Неопределено Тогда
		ИмяКонстанты = "";
		// для печати счетов-фактур используется отдельная настройка
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.СчетФактураВыданный")
			ИЛИ ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
			ИмяКонстанты = "ПредставлениеНомераСчетаФактуры";
		КонецЕсли;
		
		ПредставлениеНомераОбъекта = ПрефиксацияОбъектовБКВызовСервераПовтИсп.ПредставлениеНомеровОбъектов(ИмяКонстанты);
	КонецЕсли;	
	
	Если (ПредставлениеНомераОбъекта <> Перечисления.ВидыПредставленийНомеровДокументов.ПустаяСсылка()) И (ПредставлениеНомераОбъекта <> 
		 Перечисления.ВидыПредставленийНомеровДокументов.ПрефиксИНули) Тогда
		 
		ПрефиксОрганизации = "";
		Организация = ПрефиксацияОбъектовБКСлужебный.ЗначениеРеквизитаОрганизация(Источник);
		Если НЕ ЗначениеЗаполнено(Организация) И ПрефиксацияОбъектовБКСлужебный.РеквизитДоступен(Источник, "ДокументОснование")
			И ЗначениеЗаполнено(Источник.ДокументОснование) Тогда 
			Организация = ПрефиксацияОбъектовБКСлужебный.ЗначениеРеквизитаОрганизация(Источник.ДокументОснование);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Организация) Тогда 
			ПрефиксОрганизации = СокрЛП(Организация.Префикс);
		КонецЕсли;
		
		СписокПрефиксовУзлов = ?(СписокПрефиксовУзлов = Неопределено, ПрефиксацияОбъектовБКВызовСервераПовтИсп.СписокПрефиксовУзлов(), СписокПрефиксовУзлов);
		ДополнительныйПрефикс = ПолучитьДополнительныйПрефиксНомераОбъекта(Источник);
		
		ПолныйПрефиксНайден = Ложь;
		
		//в номере может быть префикс любого узла
		Для Каждого ЭлементСпискаПрефиксовУзлов Из СписокПрефиксовУзлов Цикл
			ПрефиксУзла = СокрЛП(ЭлементСпискаПрефиксовУзлов);
			ПолныйПрефикс = ПрефиксУзла + ПрефиксОрганизации + ДополнительныйПрефикс;
			ПозицияПолногоПрефикса = Найти(НомерОбъекта, ПолныйПрефикс);
			Если ПозицияПолногоПрефикса = 1 Тогда
				НомерОбъекта = Прав(НомерОбъекта, СтрДлина(НомерОбъекта) - СтрДлина(ПолныйПрефикс));
				ПолныйПрефиксНайден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;	
		
		//так же возможно в номере нет префикса узла
		Если Не ПолныйПрефиксНайден Тогда
			ПолныйПрефикс = ПрефиксОрганизации + ДополнительныйПрефикс;
			Если Не ПустаяСтрока(ПолныйПрефикс) Тогда 
				ПозицияПолногоПрефикса = Найти(НомерОбъекта, ПолныйПрефикс);
				Если ПозицияПолногоПрефикса = 1 Тогда
					НомерОбъекта = Прав(НомерОбъекта, СтрДлина(НомерОбъекта) - СтрДлина(ПолныйПрефикс));
					ПолныйПрефиксНайден = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		//возможно в номере есть только префикс организации
		Если Не ПолныйПрефиксНайден Тогда
			ПолныйПрефикс = ПрефиксОрганизации;
			Если Не ПустаяСтрока(ПолныйПрефикс) Тогда 
				ПозицияПолногоПрефикса = Найти(НомерОбъекта, ПолныйПрефикс);
				Если ПозицияПолногоПрефикса = 1 Тогда
					НомерОбъекта = Прав(НомерОбъекта, СтрДлина(НомерОбъекта) - СтрДлина(ПолныйПрефикс));
					ПолныйПрефиксНайден = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Пока Лев(НомерОбъекта, 1) = "0" Цикл
			НомерОбъекта = Прав(НомерОбъекта, СтрДлина(НомерОбъекта) - 1);
		КонецЦикла;
		
		Если ПредставлениеНомераОбъекта = Перечисления.ВидыПредставленийНомеровДокументов.ПрефиксБезНулей Тогда
			Если ПолныйПрефиксНайден Тогда
				НомерОбъекта = ПолныйПрефикс + НомерОбъекта;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//Удаляет префиксы объектов, полученных при обменах и содержащих дефис
Процедура ПриПолученииНомераНаПечатьСДефисом(НомерОбъекта, Источник, СтандартнаяОбработка, ПредставлениеНомераОбъекта = Неопределено, СписокПрефиксовУзлов = Неопределено, УдалитьПрефиксОрганизации = Истина, УдалитьПрефиксИнформационнойБазы = Истина, УдалитьДефис = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Источник = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	//СписокПрефиксовУзлов = ?(СписокПрефиксовУзлов = Неопределено, ПрефиксацияОбъектовБКВызовСервераПовтИсп.СписокПрефиксовУзлов(), СписокПрефиксовУзлов);

	НомерОбъекта = СокрЛП(НомерОбъекта);
	
	// Обработку префиксов номера документа будем выполнять в привилегированном режиме
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПредставлениеНомераОбъекта = Неопределено Тогда
		ИмяКонстанты = "";
		// для печати счетов-фактур используется отдельная настройка
		Если ТипЗнч(Источник) = Тип("ДокументСсылка.СчетФактураВыданный")
			ИЛИ ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
			ИмяКонстанты = "ПредставлениеНомераСчетаФактуры";
		КонецЕсли;
		ПредставлениеНомераОбъекта = ПрефиксацияОбъектовБКВызовСервераПовтИсп.ПредставлениеНомеровОбъектов(ИмяКонстанты);
	КонецЕсли;	
	
	Если (ПредставлениеНомераОбъекта <> Перечисления.ВидыПредставленийНомеровДокументов.ПустаяСсылка()) И (ПредставлениеНомераОбъекта <> 
		Перечисления.ВидыПредставленийНомеровДокументов.ПрефиксИНули) Тогда
		
		НомерСодержитПятизначныйПрефикс = ПрефиксацияОбъектовКлиентСервер.НомерСодержитПятизначныйПрефикс(НомерОбъекта);
		ПользовательскийПрефикс = ПрефиксацияОбъектовКлиентСервер.ПолучитьПользовательскийПрефикс(НомерОбъекта);

			Если НомерСодержитПятизначныйПрефикс Тогда
				ПрефиксОрганизации        = Лев(НомерОбъекта, 2);
				ПрефиксИнформационнойБазы = Сред(НомерОбъекта, 3, 2);
				Дефис                     = Сред(НомерОбъекта, 5, 1); 
				Номер = Сред(НомерОбъекта, 6 + СтрДлина(ПользовательскийПрефикс));
			Иначе
				ПрефиксОрганизации = "";
				ПрефиксИнформационнойБазы = Лев(НомерОбъекта, 2);
				Дефис                     = Сред(НомерОбъекта, 3, 1);
				Номер = Сред(НомерОбъекта, 4 + СтрДлина(ПользовательскийПрефикс));
			КонецЕсли;
			
			ПрефиксИнформационнойБазыНайден = Ложь;
			
			//Дополнительная проверка на содержание в номере одного из префиксов узлов
			//Для Каждого ЭлементСпискаПрефиксовУзлов Из СписокПрефиксовУзлов Цикл
			//	ПрефиксУзла = СокрЛП(ЭлементСпискаПрефиксовУзлов);
			//	Если ПрефиксИнформационнойБазы = ПрефиксУзла Тогда 
			//		ПрефиксИнформационнойБазыНайден = Истина;
			//		Прервать;
			//	КонецЕсли;
			//КонецЦикла;	
			//
			//Если НЕ ПрефиксИнформационнойБазыНайден Тогда
			//	Возврат;
			//	СтандартнаяОбработка = Истина;
			//КонецЕсли;
		
		НомерБезНулей = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Номер, "0");
		
		НомерОбъекта = ПрефиксОрганизации + ПрефиксИнформационнойБазы + Дефис + НомерБезНулей;
		
		Если ПредставлениеНомераОбъекта = Перечисления.ВидыПредставленийНомеровДокументов.БезПрефиксаБезНулей Тогда
			
			ПрефиксОбъекта = "";
			
			ПрефиксОрганизации        = СтрЗаменить(ПрефиксОрганизации, "0", "");
			ПрефиксИнформационнойБазы = СтрЗаменить(ПрефиксИнформационнойБазы, "0", "");
			
			// добавляем префикс организации
			Если Не УдалитьПрефиксОрганизации Тогда
				ПрефиксОбъекта = ПрефиксОбъекта + ПрефиксОрганизации;
			КонецЕсли;
			
			// добавляем префикс информационной базы и дефис
			Если Не УдалитьПрефиксИнформационнойБазы Тогда
				ПрефиксОбъекта = ПрефиксОбъекта + ПрефиксИнформационнойБазы + Дефис;
			КонецЕсли;
			
			НомерОбъекта = ПрефиксОбъекта + Сред(НомерОбъекта, ?(НомерСодержитПятизначныйПрефикс, 6, 4));
			
		КонецЕсли;	
			
	КонецЕсли;
	
КонецПроцедуры

// Возвращает список префиксов узлов РИБ, зарегистрированных в информационной базе
//
Функция СписокПрефиксовУзлов() Экспорт
	
	СписокПрефиксовУзлов = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПрефиксыИнформационныхБаз.Префикс КАК Префикс
	               |ИЗ
	               |	РегистрСведений.ПрефиксыИнформационныхБаз КАК ПрефиксыИнформационныхБаз";
	
	ВыборкаУзлов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаУзлов.Следующий() Цикл
		Если Не ПустаяСтрока(ВыборкаУзлов.Префикс) Тогда
			СписокПрефиксовУзлов.Добавить(ВыборкаУзлов.Префикс);
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СписокПрефиксовУзлов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает значение дополнительного префикса номера объекта
//
// Параметры:
//  Источник - ДокументОбъект, СправочникОбъект - документ, чей дополнительный префикс надо получить для печати.
//
// Возвращаемое значение.
//  Строка - дополнительный префикс документа для печати
//
Функция ПолучитьДополнительныйПрефиксНомераОбъекта(Источник)
	
	Если ПрефиксацияОбъектовБКВызовСервераПовтИсп.ОбъектВключенВПодпискуНаСобытие(Источник.Ссылка, "ПриУстановкеНовогоНомераДокументаПрефиксКассы") Тогда 
		Касса = ПрефиксацияОбъектовБКСлужебный.ЗначениеРеквизитаКасса(Источник);
		Если ЗначениеЗаполнено(Касса) Тогда 
			Возврат СокрЛП(Касса.Префикс);
		КонецЕсли;
	КонецЕсли;
	
	Если ПрефиксацияОбъектовБКВызовСервераПовтИсп.ОбъектВключенВПодпискуНаСобытие(Источник.Ссылка, "ПриУстановкеНовогоНомераДокументаПрефиксСклады") Тогда 
		Склад = ПрефиксацияОбъектовБКСлужебный.ЗначениеРеквизитаСклад(Источник);
		Если ЗначениеЗаполнено(Склад) Тогда 
			Возврат СокрЛП(Склад.Префикс);
		КонецЕсли;
	КонецЕсли;
	
	Если ПрефиксацияОбъектовБКВызовСервераПовтИсп.ОбъектВключенВПодпискуНаСобытие(Источник.Ссылка, "ПриУстановкеНовогоНомераДокументаПрефиксБанковскиеСчета") Тогда 
		БанковскийСчет = ПрефиксацияОбъектовБКСлужебный.ЗначениеРеквизитаБанковскийСчет(Источник);
		Если ЗначениеЗаполнено(БанковскийСчет) Тогда 
			Возврат СокрЛП(БанковскийСчет.Префикс);
		КонецЕсли;
	КонецЕсли;

	Возврат "";
	
КонецФункции

