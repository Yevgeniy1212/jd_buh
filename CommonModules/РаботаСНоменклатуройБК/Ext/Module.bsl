#Область ПрограммныйИнтерфейс

#Область АвтоподборНоменклатуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьМассивПолейСобытияПриИзменении.
Процедура ЗаполнитьМассивПолейСобытияПриИзменении(МассивПолей) Экспорт
	
	МассивПолей.Добавить("ПолеПоискаШтрихкодНаименование");
	МассивПолей.Добавить("Наименование");
	
КонецПроцедуры

#КонецОбласти

#Область Настройки

// См. РаботаСНоменклатуройПереопределяемый.ПриОпределенииНастроек.
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	Настройки.ИспользоватьВидыНоменклатуры                    = Ложь;
	Настройки.ИспользоватьХарактеристики                      = Ложь;
	Настройки.ИспользоватьПакетноеСозданиеНоменклатуры        = Истина;
	Настройки.ИспользоватьПоискПоШтрихкодуВСервисе            = Истина;
	Настройки.СохранятьИерархиюКатегорийПриЗагрузке           = Ложь;
	Настройки.ИспользоватьДополнительныеРеквизиты             = Ложь;
	Настройки.ИспользоватьВыгрузкуВКаталог1С                  = Ложь;
	Настройки.ИспользоватьВыгрузкуВНациональныйКаталог        = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеОбъектовИнформационнойБазы

// См. РаботаСНоменклатуройПереопределяемый.СоздатьНоменклатуру.
Процедура СоздатьНоменклатуру(ДанныеЗаполнения, НоменклатураСсылка) Экспорт
	
	НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
	
	НоменклатураОбъект.Заполнить(Неопределено);
	
	РеквизитыНоменклатуры = РеквизитыНоменклатурыПоДаннымСервиса(ДанныеЗаполнения, Истина);
	ЗаполнитьЗначенияСвойств(НоменклатураОбъект, РеквизитыНоменклатуры);
	
	НоменклатураОбъект.УстановитьНовыйКод();
	НоменклатураОбъект.ОбменДанными.Загрузка = Истина;
	НоменклатураОбъект.Записать();
	
	НоменклатураСсылка = НоменклатураОбъект.Ссылка;
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаписатьШтрихкоды.
Процедура ЗаписатьШтрихкоды(ДанныеПоШтрихкодам) Экспорт 
	
	НоменклатураПоШтрихкодам = РегистрыСведений.ШтрихкодыНоменклатуры.НоменклатураПоШтрихкодам(
		ДанныеПоШтрихкодам.ВыгрузитьКолонку("Штрихкод"), Истина);
	
	Для каждого ЭлементКоллекции Из ДанныеПоШтрихкодам Цикл
		
		Штрихкод = СокрЛП(ЭлементКоллекции.Штрихкод);
		
		Если НоменклатураПоШтрихкодам.Найти(Штрихкод, "Штрихкод") <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьШтрихкода = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
		ЗаписьШтрихкода.Штрихкод = Штрихкод;
		ЗаписьШтрихкода.Номенклатура = ЭлементКоллекции.Номенклатура;
		ЗаписьШтрихкода.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхИнформационнойБазы

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовНоменклатуры.
Процедура ПолучитьЗначенияРеквизитовНоменклатуры(Знач Номенклатура, Результат) Экспорт
	
	Если ТипЗнч(Номенклатура) <> Тип("Массив") Тогда
		Номенклатура = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Номенклатура);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	&РеквизитыНоменклатуры КАК РеквизитыНоменклатуры,
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Номенклатура)";
	ТекстРеквизиты = Новый Массив;
	РеквизитыНоменклатуры = РеквизитыНоменклатурыЗаполняемыеПоДаннымСервиса();
	Для каждого РеквизитНоменклатуры Из РеквизитыНоменклатуры Цикл
		ТекстРеквизиты.Добавить(СтрШаблон("	Номенклатура.%1 КАК %1,", РеквизитНоменклатуры.Ключ));
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"	&РеквизитыНоменклатуры КАК РеквизитыНоменклатуры,", СтрСоединить(ТекстРеквизиты, Символы.ПС));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовНоменклатурыИзФормы.
Процедура ПолучитьЗначенияРеквизитовНоменклатурыИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	
	ЗначенияРеквизитов = РеквизитыНоменклатурыЗаполняемыеПоДаннымСервиса();
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Форма.Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СопоставлениеДанных

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьОтличияНоменклатуры.
Процедура ПолучитьОтличияНоменклатуры(ДанныеНоменклатурыСервиса, ДанныеНоменклатурыБазы, ТаблицаОтличийРеквизитов) Экспорт
	
	РеквизитыНоменклатуры = РеквизитыНоменклатурыПоДаннымСервиса(ДанныеНоменклатурыСервиса);
	
	Если ТипЗнч(ДанныеНоменклатурыБазы) = Тип("СтрокаТаблицыЗначений") Тогда
		ДанныеНоменклатурыБазы = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ДанныеНоменклатурыБазы);
	КонецЕсли;
	
	ПредставленияРеквизитов = РеквизитыНоменклатурыЗаполняемыеПоДаннымСервиса("Синоним");
	
	Для каждого Реквизит Из РеквизитыНоменклатуры Цикл
		ЗначениеБазы = Неопределено;
		Если ДанныеНоменклатурыБазы.Свойство(Реквизит.Ключ, ЗначениеБазы) 
			И ЗначениеБазы <> Реквизит.Значение Тогда
			РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, Реквизит.Ключ, Реквизит.Значение, 
				ЗначениеБазы, ПредставленияРеквизитов[Реквизит.Ключ]);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеДанных

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьНоменклатуру.
Процедура ЗаполнитьНоменклатуру(НоменклатураСсылка, ТаблицаИзменений) Экспорт
	
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьИсключительнуюБлокировкуПоСсылке(НоменклатураСсылка);
		
		ЗаблокироватьДанныеДляРедактирования(НоменклатураСсылка);
		
		НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
		
		Для каждого ЭлементКоллекции Из ТаблицаИзменений Цикл
			НоменклатураОбъект[ЭлементКоллекции.РеквизитОбъекта] = ЭлементКоллекции.НовоеЗначение;
		КонецЦикла;
		
		НоменклатураОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьНоменклатуруВФорме.
Процедура ЗаполнитьНоменклатуруВФорме(Форма, ТаблицаИзменений = Неопределено, ДанныеИнтерактивногоЗаполнения = Неопределено) Экспорт
	
	Если ТаблицаИзменений <> Неопределено Тогда 
		
		// Заполнение при наличии отличий после работы формы заполнения.
		
		ЗаполнятьВесНоменклатуры = НЕ ДанныеИнтерактивногоЗаполнения = Неопределено И НЕ ДанныеИнтерактивногоЗаполнения.Колонки.Найти("Вес") = Неопределено; 
		
		Форма.Объект["ВесНетто"] = 0;
				
		Для каждого ЭлементКоллекции Из ТаблицаИзменений Цикл
			Форма.Объект[ЭлементКоллекции.РеквизитОбъекта] = ЭлементКоллекции.НовоеЗначение;
		КонецЦикла;
		
		Если ЗаполнятьВесНоменклатуры Тогда
			СтрокаТаблицыДанных = ?(ТипЗнч(ДанныеИнтерактивногоЗаполнения) =  Тип("ТаблицаЗначений") И ДанныеИнтерактивногоЗаполнения.Количество() > 0, ДанныеИнтерактивногоЗаполнения[0], Неопределено);	
			Если НЕ СтрокаТаблицыДанных = Неопределено Тогда
				Если ТипЗнч(СтрокаТаблицыДанных.Вес) = Тип("Структура") Тогда		
					Если СтрокаТаблицыДанных.Вес.ЕдиницаИзмерения.ОКЕИ = "163" Тогда
						Форма.Объект["ВесНетто"] =  СтрокаТаблицыДанных.Вес.ЧислительКратности / 1000;
					ИначеЕсли СтрокаТаблицыДанных.Вес.ЕдиницаИзмерения.ОКЕИ = "166" Тогда
						Форма.Объект["ВесНетто"] =  СтрокаТаблицыДанных.Вес.ЧислительКратности;
					КонецЕсли;			
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ДанныеИнтерактивногоЗаполнения <> Неопределено Тогда 
		
		// Заполнение при интерактивном создании.
		
		РеквизитыНоменклатуры = РеквизитыНоменклатурыПоДаннымСервиса(ДанныеИнтерактивногоЗаполнения, Истина);
		Для каждого ЭлементКоллекции Из РеквизитыНоменклатуры Цикл
			Форма.Объект[ЭлементКоллекции.Ключ] = ЭлементКоллекции.Значение;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Разное

// См. РаботаСНоменклатуройПереопределяемый.ПриСозданииНаСервереФормаПанельАдминистрирования.
Процедура ПриСозданииНаСервереФормаПанельАдминистрирования(Форма) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
		"ГруппаРаботаСНоменклатуройАвтоматическоеОбновление", "Видимость", Ложь);
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьРеквизитыФормыДляРаботыСервиса(Форма) Экспорт
	
	ПараметрыДоступности = РаботаСНоменклатуройКлиентСерверБК.ПараметрыДоступностиСервиса();
	ЗаполнитьПараметрыДоступностиСервиса(ПараметрыДоступности);
	ЗаполнитьЗначенияСвойств(Форма, ПараметрыДоступности);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыДоступностиСервиса(ПараметрыДоступности) Экспорт 
	
	ПараметрыДоступности.СервисДоступен = РаботаСНоменклатурой.ПравоИзмененияДанных();
	ПараметрыДоступности.СервисАктивен = ПолучитьФункциональнуюОпцию("ИспользоватьСервисРаботаСНоменклатурой");
	ПараметрыДоступности.ИнтернетПоддержкаПодключена = 
		ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
КонецПроцедуры

Функция СервисУспешноАктивирован() Экспорт 
	
	Результат = Истина;
	
	Попытка
		Константы.ИспользоватьСервисРаботаСНоменклатурой.Установить(Истина);
	Исключение
		РаботаСНоменклатурой.ЗаписатьИнформациюОбОшибкеВЖурналРегистрации(
			НСтр("ru = 'Активация функциональности.'"), 
			ИнформацияОбОшибке());
		Результат = Ложь;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеНоменклатуры

Функция РеквизитыНоменклатурыПоДаннымСервиса(ДанныеСервиса, ДобавитьЗначенияПоУмолчанию = Ложь)
	
	РеквизитыНоменклатуры = РеквизитыНоменклатурыЗаполняемыеПоДаннымСервиса("ПустоеЗначениеТипа");
	РеквизитыНоменклатуры.Артикул = ДанныеСервиса.Артикул;
	РеквизитыНоменклатуры.НаименованиеПолное = ДанныеСервиса.Наименование;
	РеквизитыНоменклатуры.Наименование = ?(ЗначениеЗаполнено(ДанныеСервиса.НаименованиеДляПечати),
		ДанныеСервиса.НаименованиеДляПечати, ДанныеСервиса.Наименование);
	
	ПредставлениеПроизводителя = ПредставлениеПроизводителяНоменклатуры(ДанныеСервиса);
	Описание = НеформализованноеОписаниеНоменклатуры(ДанныеСервиса, ПредставлениеПроизводителя);
	РеквизитыНоменклатуры.Описание = Описание;
	
	СтавкаНДС = Справочники.СтавкиНДС.НайтиПоНаименованию(ДанныеСервиса.СтавкаНДС);
	Если СтавкаНДС.Пустая() Тогда
		НастройкиПользователя = ПользователиБКВызовСервераПовтИсп.ЗначенияНастроекПользователя(Пользователи.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
		РеквизитыНоменклатуры.СтавкаНДС = НастройкиПользователя.ОсновнаяСтавкаНДС;
	Иначе
		РеквизитыНоменклатуры.СтавкаНДС = СтавкаНДС;
	КонецЕсли;
	
	РеквизитыНоменклатуры.Услуга = (ДанныеСервиса.Тип = "Услуга");
	
	РеквизитыНоменклатуры.БазоваяЕдиницаИзмерения = ЕдиницаИзмеренияПоДаннымСервиса(ДанныеСервиса.ЕдиницаИзмерения, РеквизитыНоменклатуры.Услуга);
	
	РеквизитыНоменклатуры.Вставить("ВесНетто", 0);
	
	Если НЕ ДанныеСервиса.Владелец().Колонки.Найти("Вес") = Неопределено Тогда		
		Если ТипЗнч(ДанныеСервиса.Вес) = Тип("Структура") Тогда		
			Если ДанныеСервиса.Вес.ЕдиницаИзмерения.ОКЕИ = "163" Тогда
				РеквизитыНоменклатуры.Вставить("ВесНетто", ДанныеСервиса.Вес.ЧислительКратности / 1000);
			ИначеЕсли ДанныеСервиса.Вес.ЕдиницаИзмерения.ОКЕИ = "166" Тогда
				РеквизитыНоменклатуры.Вставить("ВесНетто", ДанныеСервиса.Вес.ЧислительКратности);	
			КонецЕсли;			
		КонецЕсли;				
	КонецЕсли;
	
	Возврат РеквизитыНоменклатуры;
	
КонецФункции

// Возвращает неформализованное описание номенклатуры в виде текста.
//
// Параметры:
//  ДанныеСервиса - СтрокаТаблицыЗначений - Данные номенклатуры, полученные из сервиса.
// 
// Возвращаемое значение:
//  Строка - Текстовое описание номенклатуры.
//
Функция НеформализованноеОписаниеНоменклатуры(Знач ДанныеСервиса, Знач ПредставлениеПроизводителя)
	
	СодержимоеОписания = СтрРазделить(ДанныеСервиса.Описание, Символы.ПС);
	СодержимоеОписания.Добавить(ПредставлениеПроизводителя);
	СодержимоеОписания.Добавить(ПредставлениеБренда(ДанныеСервиса));
	ПредставлениеМерныхХарактеристикНоменклатуры(СодержимоеОписания, ДанныеСервиса);
	ПредставлениеДополнительныхРеквизитовНоменклатуры(СодержимоеОписания, ДанныеСервиса);
	
	Всего = СодержимоеОписания.Количество();
	Для ОбратныйИндекс = 1 По Всего Цикл
		Если ПустаяСтрока(СодержимоеОписания[Всего - ОбратныйИндекс]) Тогда
			СодержимоеОписания.Удалить(Всего - ОбратныйИндекс);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрСоединить(СодержимоеОписания, Символы.ПС);
	
КонецФункции

Функция ПредставлениеПроизводителяНоменклатуры(Знач ДанныеСервиса)
	
	Результат = "";
	
	Если ТипЗнч(ДанныеСервиса.Производитель) <> Тип("Структура") Тогда
		Возврат Результат;
	КонецЕсли;
	
	НаименованиеПроизводителя = "";
	ДанныеСервиса.Производитель.Свойство("Наименование", НаименованиеПроизводителя);
	Если ЗначениеЗаполнено(НаименованиеПроизводителя) Тогда
		
		Результат = СтрШаблон(НСтр("ru = 'Производитель: %1'"), НаименованиеПроизводителя);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеБренда(Знач ДанныеСервиса)
	
	Результат = "";
	
	Если ДанныеСервиса.Бренд <> Неопределено
		И Не ПустаяСтрока(ДанныеСервиса.Бренд.Наименование) Тогда 
		Результат = СтрШаблон("Бренд: %1", ДанныеСервиса.Бренд.Наименование);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ПредставлениеМерныхХарактеристикНоменклатуры(СодержимоеОписания, Знач ДанныеСервиса)
	
	МерныеХарактеристики = Новый Соответствие;
	МерныеХарактеристики.Вставить("Вес",                 НСтр("ru = 'Вес'"));
	МерныеХарактеристики.Вставить("Длина",               НСтр("ru = 'Длина'"));
	МерныеХарактеристики.Вставить("Площадь",             НСтр("ru = 'Площадь'"));
	МерныеХарактеристики.Вставить("Объем",               НСтр("ru = 'Объем'"));
	МерныеХарактеристики.Вставить("КоличествоВУпаковке", НСтр("ru = 'Количество в упаковке'"));
	
	Для Каждого МернаяХарактеристика Из МерныеХарактеристики Цикл
		
		ТекущееПредставление = ПредставлениеМернойХарактеристикиНоменклатуры(ДанныеСервиса, МернаяХарактеристика);
		
		Если Не ПустаяСтрока(ТекущееПредставление) Тогда
			СодержимоеОписания.Добавить(ТекущееПредставление);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПредставлениеМернойХарактеристикиНоменклатуры(Знач ДанныеСервиса, Знач МернаяХарактеристика)
	
	ПредставлениеМернойХарактеристики = "";
	
	ИмяМернойХарактеристики       = МернаяХарактеристика.Ключ;
	ЗаголовокМернойХарактеристики = МернаяХарактеристика.Значение;
	
	Если ДанныеСервиса[ИмяМернойХарактеристики].Свойство("ЧислительКратности") Тогда
		ЗначениеМернойХарактеристики = ДанныеСервиса[ИмяМернойХарактеристики].ЧислительКратности;
	ИначеЕсли ДанныеСервиса[ИмяМернойХарактеристики].Свойство("Количество") Тогда
		ЗначениеМернойХарактеристики = ДанныеСервиса[ИмяМернойХарактеристики].Количество;
	Иначе
		ЗначениеМернойХарактеристики = 0;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеМернойХарактеристики) Тогда
		
		НаименованиеЕдиницыИзмерения = ДанныеСервиса[ИмяМернойХарактеристики].ЕдиницаИзмерения.Наименование;
		
		ПредставлениеМернойХарактеристики = СтрШаблон("%1: %2 %3", ЗаголовокМернойХарактеристики,
			Строка(ЗначениеМернойХарактеристики), НаименованиеЕдиницыИзмерения);
		
	КонецЕсли;
	
	Возврат ПредставлениеМернойХарактеристики;
	
КонецФункции

Процедура ПредставлениеДополнительныхРеквизитовНоменклатуры(СодержимоеОписания, Знач ДанныеСервиса)
	
	Для каждого ДополнительныйРеквизит Из ДанныеСервиса.ДополнительныеРеквизиты Цикл
		Если ЗначениеЗаполнено(ДополнительныйРеквизит.СтроковоеЗначение) Тогда
			СодержимоеОписания.Добавить(СтрШаблон("%1: %2", 
				ДополнительныйРеквизит.Наименование, ДополнительныйРеквизит.СтроковоеЗначение));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЕдиницаИзмеренияПоДаннымСервиса(ЕдиницаИзмеренияСервиса, ЭтоУслуга = Ложь)
	
	Перем ОКЕИ, ЕдиницаИзмерения;
	
	Если ЕдиницаИзмеренияСервиса.Свойство("ОКЕИ", ОКЕИ) Тогда
		ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.ЕдиницаИзмеренияПоКоду(ОКЕИ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЕдиницаИзмерения) И Не ЭтоУслуга Тогда
		ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.ПолучитьЕдиницуИзмеренияПоУмолчанию();
	КонецЕсли;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

#КонецОбласти

Процедура УстановитьИсключительнуюБлокировкуПоСсылке(Ссылка)
	
	Блокировка = Новый БлокировкаДанных();
	
	ЭлементБлокировки = Блокировка.Добавить(Ссылка.Метаданные().ПолноеИмя());
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
КонецПроцедуры

Функция РеквизитыНоменклатурыЗаполняемыеПоДаннымСервиса(ВариантЗаполнения = "")
	
	РеквизитыНоменклатуры = Новый Структура;
	РеквизитыНоменклатуры.Вставить("Артикул");
	РеквизитыНоменклатуры.Вставить("Описание");
	РеквизитыНоменклатуры.Вставить("НаименованиеПолное");
	РеквизитыНоменклатуры.Вставить("Услуга");
	
	РеквизитыНоменклатуры.Вставить("БазоваяЕдиницаИзмерения");
	РеквизитыНоменклатуры.Вставить("СтавкаНДС");
	
	Если Не ПустаяСтрока(ВариантЗаполнения) Тогда
		Для каждого РеквизитНоменклатуры Из РеквизитыНоменклатуры Цикл
			МетаданныеРеквизита = Метаданные.Справочники.Номенклатура.Реквизиты[РеквизитНоменклатуры.Ключ];
			ЗначениеЗаполнения = ?(ВариантЗаполнения = "Синоним", 
				МетаданныеРеквизита.Синоним, МетаданныеРеквизита.Тип.ПривестиЗначение());
			РеквизитыНоменклатуры.Вставить(РеквизитНоменклатуры.Ключ, ЗначениеЗаполнения);
		КонецЦикла;
	КонецЕсли;
	
	РеквизитыНоменклатуры.Вставить("Наименование");
	
	Возврат РеквизитыНоменклатуры;
	
КонецФункции

#КонецОбласти
