
#Область ПрограммныйИнтерфейс

// Возвращает структуру данных со сводным описанием контрагента
//
// Параметры:
//  СписокСведений	 - 	 - список значений со значенийми параметров организации
//  	СписокСведений формируется функцией СведенияОЮрФизЛице
//  Список			 - 	 - список запрашиваемых параметров организаиии
//  СПрефиксом		 - 	 - Признак выводить или нет префикс параметра организации
//  Дата			 - Дата	 
//  КодЯзыка		 - Строка 
// 
// Возвращаемое значение:
//  Строка - описатель организации / контрагента / физ.лица.
//
Функция ОписаниеОрганизации(СписокСведений, Список = "", СПрефиксом = Истина, Дата = Неопределено, КодЯзыка = "ru") Экспорт 
	Возврат ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СписокСведений,Список,СПрефиксом,Дата,КодЯзыка);	
КонецФункции

//  Функция формирует сведения об указанном ЮрФизЛице. К сведениям относятся -
// наименование, адрес, номер телефона, банковские реквизиты.
//
// Параметры: 
//  ЮрФизЛицо   - организация, контрагент или физическое лицо, о котором собираются сведения.
//  ДатаПериода - дата, на которую выбираются сведения о ЮрФизЛице.
//  ДляФизЛицаТолькоИнициалы - Для физ. лица выводить только инициалы имени и отчества.
//  БанковскийСчет - Банковский счет, если счет не основной.
//
// Возвращаемое значение:
//  Сведения - собранные сведения.
//
Функция СведенияОЮрФизЛице(ЮрФизЛицо, ДатаПериода = '20200101', ДляФизЛицаТолькоИнициалы = Истина, БанковскийСчет = Неопределено) Экспорт
	Возврат ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(ЮрФизЛицо, ДатаПериода, ДляФизЛицаТолькоИнициалы, БанковскийСчет);
КонецФункции

// Функция возвращает совокупность данных о физическом лице в виде структуры, 
// В совокупность данных входит ФИО, должность в заданной организации, 
// паспортные данные и др.
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, по которой
//                 определяется должность и подразделение работника
//  ФизЛицо      - СправочникСсылка.ФизическиеЛица - физическое лицо,
//                 по которому возвращается совокупность данных
//  ДатаСреза    - Дата - дата, на которую считываются данные
//
// Возвращаемое значение:
//  Структура    - Структура с совокупностью данных о физическом лице:
//                 - Фамилия
//                 - Имя
//                 - Отчетсво
//                 - Представление (Фамилия И.О.)
//                 - Подразделение
//                 - ДокументВид
//                 - ДокументСерия
//                 - ДокументНомер
//                 - ДокументДатаВыдачи
//                 - ДокументКемВыдан
//                 - ДокументКодПодразделения
//
Функция ДанныеФизЛица(Организация, ФизЛицо, ДатаСреза) Экспорт
	Возврат ПроцедурыУправленияПерсоналомСервер.ДанныеФизЛица(Организация, ФизЛицо, ДатаСреза);
КонецФункции

// Функция возвращает информацию об ответственных лицах организации и их должностях
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации 
//  ДатаСреза	 - Дата 
//  Исполнитель	 - Неопределено 
//  Результат	 - Неопределено 
// 
// Возвращаемое значение:
//   Структура - список ответственных лиц организации 
//
Функция ОтветственныеЛицаОрганизаций(Организация, ДатаСреза, Исполнитель = Неопределено, Результат = Неопределено) Экспорт
	
	Возврат ОбщегоНазначенияБКВызовСервера.ОтветственныеЛицаОрганизаций(Организация, ТекущаяДата())
	
КонецФункции

// Определяет в форме документа первую страницу с максимальным
// количеством строк в табличной части.
// Проверяется также видимость элемента.
// Если количество строк в табличных частях одинаково,
// то функция вернет имя первой табличной части из СписокТабличныхПолей. 
//
// Параметры:
//   Форма                - форма документа, который открывается;
//   СписокТабличныхПолей - Список значений - табличных полей, где
//                            Значение - имя элемента формы,
//                            Представление - имя табличной части (в метаданных)
//
Функция ПолучитьТекущуюВидимуюТабличнуюЧасть(Форма, СписокТабличныхПолей) Экспорт
	
	//Возврат фин_ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюВидимуюТабличнуюЧасть(Форма,СписокТабличныхПолей);
	Возврат ОбщегоНазначенияБКВызовСервера.ПолучитьТекущуюВидимуюТабличнуюЧасть(Форма,СписокТабличныхПолей);
	
КонецФункции

// Процедура активизирует элемент формы.
// Если это - табличная часть, то тогда анализируется,
// может табличная часть на закладке и если так,
// то закладка становится текущей, но табличная часть не активизируется
//
// Параметры:
//  Форма            - Управляемая форма
//  ИмяЭлементаФормы - Строка - имя элемента, который необходимо активизировать
//
Процедура АктивизироватьЭлементФормы(Форма, ИмяЭлементаФормы) Экспорт
	
	Если НЕ ПустаяСтрока(ИмяЭлементаФормы) Тогда
		НайденныйЭлементФормы = Форма.Элементы.Найти(ИмяЭлементаФормы);
		Если НайденныйЭлементФормы <> Неопределено Тогда
			Если ТипЗнч(НайденныйЭлементФормы) = Тип("ТаблицаФормы") Тогда
				// Для таблицы определить - если она находится на закладке, то не активизировать элемент,
				// а сделать активной страницу, на которой находится эта табличная часть
				Страница = НайденныйЭлементФормы.Родитель;
				Пока Страница <> Неопределено И ТипЗнч(Страница) = Тип("ГруппаФормы") И Страница.Вид = ВидГруппыФормы.ОбычнаяГруппа Цикл
					// Таблица может быть внутри группы, а группа на странице
					Страница = Страница.Родитель;
				КонецЦикла;
				Если (Страница <> Неопределено) И ТипЗнч(Страница) = Тип("ГруппаФормы") И (Страница.Вид = ВидГруппыФормы.Страница) Тогда
					// Определим владельца этой страницы и активизируем эту страницу
					ПанельСтраниц = Страница.Родитель;
					Если (ПанельСтраниц <> Неопределено) И (ПанельСтраниц.Вид = ВидГруппыФормы.Страницы) Тогда
						ПанельСтраниц.ТекущаяСтраница = Страница;
					Иначе
						Форма.ТекущийЭлемент = НайденныйЭлементФормы;
					КонецЕсли;
				Иначе
					Форма.ТекущийЭлемент = НайденныйЭлементФормы;
				КонецЕсли;
			Иначе
				Форма.ТекущийЭлемент = НайденныйЭлементФормы;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает головную организацию для заданной организации
// Если для организации реквизит ГоловнаяОрганизация не заполнен 
// это значит, что сама организация является головной
// Определение головной организации осуществляется в зависимости от настройки
// учетной политики по персоналу организаций "Вести учет по головной организации"
//
// Параметры
//  Организация – СправочникСсылка.Организации
//
// Возвращаемое значение:
//   СправочникСсылка.Организации
//
Функция ГоловнаяОрганизацияДляУчетаЗарплаты(Организация) Экспорт
	Возврат ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Организация);
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура заполняет Вид оборота в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти     - строка табличной части документа,
//  ДокументОбъект           - объект редактируемого документа.
//
Процедура ЗаполнитьНДСВидОборотаТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти="", МетаданныеДокумента=Неопределено) Экспорт
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидОборотаТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, ИмяТабличнойЧасти, МетаданныеДокумента);
	
КонецПроцедуры

// Процедура заполняет Вид поступления в строке табличной части документа
//
// Параметры:
//  СтрокаТабличнойЧасти	- строка табличной части документа,
//	ТекПользователь			- пользователь
//  Корректировка           - может принимать значения Истина, Ложь или Неопределено.
//                            Используется для проверки реквизита ПризнакКорректировки у полученного Вида поступления.
//                            Если Корректировка=Истина, то Виды поступления с ПризнакКорректировки=Ложь очищаются.
//                            Если Корректировка=Ложь, то Виды поступления с ПризнакКорректировки=Истина очищаются.
//                            Если Корректировка=Неопределено (или не задан), то проверка реквизита ПризнакКорректировки не выполняется.
//
Процедура ЗаполнитьНДСВидПоступленияТабЧасти(СтрокаТабличнойЧасти,Документ, ИмяТабличнойЧасти, МетаданныеДокумента, ТекПользователь, Корректировка = Неопределено) Экспорт
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидПоступленияТабЧасти(СтрокаТабличнойЧасти, ИмяТабличнойЧасти, МетаданныеДокумента, ТекПользователь, Корректировка);
	
КонецПроцедуры

#КонецОбласти

