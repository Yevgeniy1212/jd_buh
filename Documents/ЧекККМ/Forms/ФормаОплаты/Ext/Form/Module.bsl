&НаКлиенте
Перем СуммаПолученоНаличными;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "СуммаДокумента, Организация, ЭтоВозврат, ЗапрашиватьКонтактнуюИнформацию");
	
	Элементы.ФормаВыполнитьОперацию.Заголовок = Параметры.ЗаголовокКнопкиВыполнить;
	Заголовок = ?(ЭтоВозврат, НСтр("ru = 'Возврат'"), НСтр("ru = 'Оплата'"));
	
	Если ПравоДоступа("Чтение", Метаданные.Справочники.ПодключаемоеОборудование) Тогда
		ИспользуютсяСканерыШтрихкода = (МенеджерОборудованияВызовСервера.ОборудованиеПоПараметрам("СканерШтрихкода").Количество() > 0);
	Иначе
		ИспользуютсяСканерыШтрихкода = Ложь;
	КонецЕсли;
	
	УстановитьВидОплаты();
	
	ПолученоНаличными = ?(Параметры.ЭтоВозврат, СуммаДокумента, 0);
	ЦветПомеченнойКнопки = ЦветаСтиля.ВыделеннаяКнопкаФон;
	ЦветОбычнойКнопки = Элементы.ОтправитьSMS.ЦветФона;
	
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИспользуютсяСканерыШтрихкода Тогда
		// Попробуем подключить сканер штрихкода
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьСканерШКЗавершение", ЭтотОбъект); 
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, "СканерШтрихкода");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНаличные Тогда
		Если ПолученоНаличными < СуммаДокумента Тогда
			ТекстСообщения = НСтр("ru = 'Сумма введенной оплаты меньше суммы чека'");

			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "КОРРЕКТНОСТЬ", НСтр("ru = 'Наличными'"),,,ТекстСообщения);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "ПолученоНаличными", , Отказ);
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДругое Тогда
		ИмяСписка = "Оплата";
		
		Если Оплата.Итог("Сумма") > СуммаДокумента  Тогда
			
			ТекстОписаниеОшибки = НСтр("ru = 'Сумма безналичных оплат превышает сумму выручки от реализации!'");
			ТекстСообщения      = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Список", "Корректность",,, НСтр("ru = 'Безналичные оплаты'"), ТекстОписаниеОшибки);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , ИмяСписка, "Объект", Отказ);
			
		КонецЕсли;
		
		НомерСтроки = 0;
		Для каждого СтрокаОплата Из Оплата Цикл
			НомерСтроки = НомерСтроки + 1;
		
			Если НЕ ЗначениеЗаполнено(СтрокаОплата.ВидОплаты) Тогда
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяСписка, НомерСтроки, "ВидОплаты");
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", 
					НСтр("ru = 'Вид оплаты'"), НомерСтроки, ИмяСписка);
					
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , Поле, "Объект", Отказ);

			КонецЕсли; 
			
			Если СтрокаОплата.Сумма = 0 Тогда
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяСписка, НомерСтроки, "Сумма");
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", 
					НСтр("ru = 'Сумма'"), НомерСтроки, ИмяСписка);
					
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , Поле, "Объект", Отказ);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекущийКод = Параметр[0];
			Иначе
				ТекущийКод = Параметр[1][1];
			КонецЕсли;
			
			ДанныеОбъекта = Новый Структура("АдресЭлектроннойПочты, ОтправлятьEmail, НомерТелефона, ОтправлятьSMS");
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтаФорма);
			ЗаполнитьКонтактнуюИнформациюПоШтрихкоду(ДанныеОбъекта, ТекущийКод);
			ЗаполнитьЗначенияСвойств(ЭтаФорма, ДанныеОбъекта);
			
			УправлениеФормой(ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НЕ ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗакрытииЗавершение", ЭтотОбъект);
		
		ТекстПредупреждения = НСтр("ru = 'Вы уверены, что хотите выйти без печати чека?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНет, 60);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	// ПодключаемоеОборудование
	Если СканерШтрихкодаПодключен И НЕ ЗавершениеРаботы Тогда
		ТипыПО = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("СканерШтрихкода");
		ОповещенияПриОтключении = Новый ОписаниеОповещения("ОтключитьСканерШКЗавершение", ЭтотОбъект); 
		МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(ОповещенияПриОтключении, УникальныйИдентификатор, ТипыПО);
	КонецЕсли;
	//Конец  ПодключаемоеОборудование
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОплатыПриИзменении(Элемент)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["Страница"+ВидОплаты];
	
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПолученоНаличнымиИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СуммаПолученоНаличными = Число(Текст);
	РассчитатьСдачу();

КонецПроцедуры

&НаКлиенте
Процедура ОплатаПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОперацию(Команда)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураРезультата = СтруктураРезультата();
	
	Закрыть(СтруктураРезультата);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMS(Команда)
	
	ЛокальнаяСтруктураЗаписи = Новый Структура();
	ЛокальнаяСтруктураЗаписи.Вставить("Представление", НомерТелефона);
	ЛокальнаяСтруктураЗаписи.Вставить("Вид", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонМобильный"));
	ЛокальнаяСтруктураЗаписи.Вставить("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
	ЛокальнаяСтруктураЗаписи.Вставить("Объект", Организация);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Телефон для информирования'"));
	ПараметрыФормы.Вставить("ЛокальнаяСтруктураЗаписи", ЛокальнаяСтруктураЗаписи);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводНомераТелефонаЗавершение", ЭтотОбъект, Новый Структура);
	
	ОткрытьФорму("Обработка.РедактированиеКонтактнойИнформации.Форма.ФормаЗаписиТелефона", ПараметрыФормы,,,,,ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаEmail(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьВопросEmailЗавершение", ЭтотОбъект);
	Если ЗначениеЗаполнено(НомерТелефона) Тогда
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Для чека указан номер телефона покупателя. 
		|Очистить его и отправить чек на электронную почту?'"), РежимДиалогаВопрос.ДаНет,15);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидОплаты()
	
	Элементы.ВидОплаты.СписокВыбора.Очистить();
	Элементы.ВидОплаты.СписокВыбора.Добавить("Наличные");
	
	ИспользоватьОплатуПоПлатежнымКартам = ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПоПлатежнымКартам");
		
	Если ИспользоватьОплатуПоПлатежнымКартам Тогда
		Элементы.ВидОплаты.СписокВыбора.Добавить("Карта");
	КонецЕсли; 
	
	Если ИспользоватьОплатуПоПлатежнымКартам Тогда
		Элементы.ВидОплаты.СписокВыбора.Добавить("Другое");
	КонецЕсли; 
	
	ЗагрузитьТаблицуОплат(Параметры.АдресТаблицаОплата, ИспользоватьОплатуПоПлатежнымКартам, Ложь);
	
	Если ИспользоватьОплатуПоПлатежнымКартам 
			И Оплата.Количество() = 1 
			И Оплата[0].ВидОплаты.ТипОплаты = Перечисления.ТипыОплатыККТ.Электронно 
			И Оплата[0].Сумма = СуммаДокумента Тогда 
			
		ВидОплаты = "Карта";
	ИначеЕсли (ИспользоватьОплатуПоПлатежнымКартам)
		И Оплата.Количество() > 0 Тогда 
		
		ВидОплаты = "Другое";
	Иначе
		
		ВидОплаты = "Наличные";
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["Страница"+ВидОплаты];
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТаблицуОплат(АдресТаблицаОплата, ИспользоватьПлатежныеКарты, ИспользоватьПодарочныеСертификатры)
	Если НЕ ИспользоватьПлатежныеКарты И НЕ ИспользоватьПодарочныеСертификатры Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОплат = ПолучитьИзВременногоХранилища(АдресТаблицаОплата);

	КоличествоСтрок = ТаблицаОплат.Количество();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		СтрокаОплаты = ТаблицаОплат[КоличествоСтрок-НомерСтроки]; 		
	КонецЦикла;
	
	Оплата.Загрузить(ТаблицаОплат);
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПредставлениеТелефона(ТелефонДляИнформирования)
	СтруктураТелефона = КонтактнаяИнформацияКлиентСервер.РазложитьТелефонПоПолям(ТелефонДляИнформирования);
	Возврат СтруктураТелефона.КодСтраны + СтруктураТелефона.КодГорода + СтруктураТелефона.СамТелефон;
КонецФункции

&НаСервере
Функция СтруктураРезультата()
	СтруктураРезультата = Новый Структура("ОплатаНаличные, ОплатаКарта, АдресТаблицыОплаты, ПечататьТоварныйЧек, ПокупательEmail, ПокупательНомер, СсылочныйНомер, НомерПлатежнойКарты, НомерЧекаЭТ", 0, 0, Неопределено, ПечататьТоварныйЧек);
	
	СтруктураРезультата.Вставить("ПокупательEmail", АдресЭлектроннойПочты);
	СтруктураРезультата.Вставить("ПокупательНомер", ПредставлениеТелефона(НомерТелефона));
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНаличные Тогда
		СтруктураРезультата.Вставить("ОплатаНаличные",       ПолученоНаличными);
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаКарта Тогда
		СтруктураРезультата.Вставить("ОплатаКарта",         СуммаДокумента);
		Если Оплата.Количество() = 1 Тогда
			ЗаполнитьЗначенияСвойств(СтруктураРезультата, Оплата[0], "СсылочныйНомер, НомерПлатежнойКарты, НомерЧекаЭТ");
		КонецЕсли; 
	Иначе
		СтруктураРезультата.Вставить("ОплатаНаличные",       Макс(СуммаДокумента - Оплата.Итог("Сумма"), 0));
		СтруктураРезультата.Вставить("АдресТаблицыОплаты",  ПоместитьВоВременноеХранилище(Оплата.Выгрузить(), Новый УникальныйИдентификатор));
	КонецЕсли;
	
	Возврат СтруктураРезультата;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Элементы = Форма.Элементы;
	
	Элементы.ДекорацияРазделитель.Видимость             = НЕ (Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаДругое);
	Элементы.СуммаСдача.Видимость                       = НЕ Форма.ЭтоВозврат;
	Элементы.ПолученоНаличными.Видимость                = НЕ Форма.ЭтоВозврат;
	Элементы.ГруппаИнформированиеПользователя.Видимость = Форма.ЗапрашиватьКонтактнуюИнформацию;
	Элементы.ОтправитьНаEmail.ЦветФона                  = ?(ЗначениеЗаполнено(Форма.АдресЭлектроннойПочты), Форма.ЦветПомеченнойКнопки, Форма.ЦветОбычнойКнопки);
	Элементы.ОтправитьSMS.ЦветФона                      = ?(ЗначениеЗаполнено(Форма.НомерТелефона), Форма.ЦветПомеченнойКнопки, Форма.ЦветОбычнойКнопки);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСдачу()
	СуммаСдача = Макс(СуммаПолученоНаличными - СуммаДокумента, 0);
КонецПроцедуры

&НаКлиенте
Функция ЭтоКорректныйТелефон(НомерТелефона)
	Возврат ТелефонСоответствуетТребованиям(НомерТелефона);
КонецФункции

&НаКлиенте
Процедура ВводНомераТелефонаЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если Значение <> Неопределено Тогда
		Если НЕ ЭтоКорректныйТелефон(Значение) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Неверный формат номера для информирования'"));
		Иначе
			НомерТелефона = Значение.КонтактнаяИнформация;
			АдресЭлектроннойПочты   = "";
		КонецЕсли; 
	КонецЕсли; 
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросEmailЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если Значение = КодВозвратаДиалога.Да  Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВводEmailЗавершение", ЭтотОбъект, Новый Структура);
		
		ПоказатьВводСтроки(ОписаниеОповещения, АдресЭлектроннойПочты, НСтр("ru = 'E-mail для информирования'"));
	КонецЕсли; 
КонецПроцедуры 

&НаКлиенте
Процедура ВводEmailЗавершение(Значение, ДополнительныеПараметры) Экспорт
	Если ПустаяСтрока(Значение) Тогда 
		АдресЭлектроннойПочты = Значение;
	ИначеЕсли ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Значение) Тогда 
		АдресЭлектроннойПочты= Значение;
		НомерТелефона = "";
	Иначе
		ТекстОшибки = НСтр("ru='Указан некорректный адрес электронной почты.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки,,"ОтправитьНаEmail");
	КонецЕсли;
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьСканерШКЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	СканерШтрихкодаПодключен = РезультатВыполнения.Результат;

КонецПроцедуры

&НаКлиенте
Процедура ОтключитьСканерШКЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При отключении оборудования произошла ошибка: ""%1"".'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	Иначе
		СканерШтрихкодаПодключен = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКонтактнуюИнформациюПоШтрихкоду(ДанныеОбъекта, Знач Штрихкод) Экспорт
	Штрихкод = СокрЛП(Штрихкод);

	Если ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Штрихкод) Тогда
		ДанныеОбъекта.АдресЭлектроннойПочты = Штрихкод;
		ДанныеОбъекта.ОтправлятьEmail       = Истина;
	Иначе
		ТелефонБезПрефикса = ?(Лев(Штрихкод, 1) = "+", Сред(Штрихкод, 2), Штрихкод);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТелефонБезПрефикса) 
			И ТелефонСоответствуетТребованиям(ТелефонБезПрефикса) Тогда
			
			ДанныеОбъекта.НомерТелефона = ТелефонБезПрефикса;
			ДанныеОбъекта.ОтправлятьSMS = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ТелефонСоответствуетТребованиям(Знач Телефон) Экспорт
	
	Телефон = ТолькоЦифры(СокрЛП(Телефон));
	
	КодСтраны = Лев(Телефон, 1);
	КодРегиона = Сред(Телефон, 2, 3);
	Номер = Сред(Телефон, 5);
	
	Если ПустаяСтрока(КодСтраны) Или ПустаяСтрока(КодРегиона) Или ПустаяСтрока(Номер) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Если СтрДлина(Телефон) > 15 Тогда
		// Номер телефона слишком длинный
		Возврат Ложь;
	КонецЕсли;
	
	Если КодСтраны = "7" Тогда
		Если СтрДлина(Номер) > 7 Тогда
			// Номер телефона не может быть больше 7 цифр
			Возврат Ложь;
		КонецЕсли;
		Если СтрДлина(КодРегиона) <> 3 Тогда
			// Код номера мобильных телефонов должны содержать 3 цифры
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ТолькоЦифры(Строка) Экспорт
	
	ОбработаннаяСтрока = "";
	
	Для НомерСимвола = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, НомерСимвола, 1);
		Если Символ >= "0" И Символ <= "9" Тогда
			ОбработаннаяСтрока = ОбработаннаяСтрока + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбработаннаяСтрока;
	
КонецФункции

#КонецОбласти
