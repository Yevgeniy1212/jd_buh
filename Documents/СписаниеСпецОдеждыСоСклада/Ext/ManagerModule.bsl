////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Накладная на перемещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписания";
	КомандаПечати.Представление = НСтр("ru = 'Акт списания'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать накладной на перемещение
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписания") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктСписания",
			НСтр("ru = 'Акт списания'"),
			ПечатьАктСписания(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.СписаниеСпецОдеждыПоСрокуСлужбы.Макет");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАктСписания(МассивОбъектов, ОбъектыПечати) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктСписания";
	
	Для Каждого Элемент Из МассивОбъектов Цикл
		Документ = Элемент;
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеСпецОдеждыСоСклада.Макет");
		
		Шапка   = Макет.ПолучитьОбласть("Шапка");
		СтрокаТ = Макет.ПолучитьОбласть("Строка");
		Подвал  = Макет.ПолучитьОбласть("Итоги");
		ШапкаМОЛ = Макет.ПолучитьОбласть("ШапкаМОЛ");
		МОЛы        = Макет.ПолучитьОбласть("МОЛы");
		ЗаголовокСолМОЛ = Макет.ПолучитьОбласть("ЗаголовокСолМОЛ");
		ОбластьСолМОЛ   = Макет.ПолучитьОбласть("СолМОЛ");


		если Документ.Ведомости.Количество()>0 тогда
			Склад = Документ.Ведомости.Получить(0).Документ.Склад;
		иначе
			Склад = Справочники.Склады.ПустаяСсылка();
		Конецесли;
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ТекущийДокумент", Документ.Ссылка);
		Запрос.УстановитьПараметр("ДатаСреза",          Документ.Дата);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Документ.Ведомости[0].Документ.Склад);
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СписаниеСпецОдеждыСоСклада.Номер,
			|	СписаниеСпецОдеждыСоСклада.Дата,
			|	СписаниеСпецОдеждыСоСклада.Организация,
			|	Константы.ВалютаРегламентированногоУчета КАК ВалютаДокумента,
			|	ВЫБОР
			|		КОГДА ФИОФизЛицСрезПоследних.ФизЛицо ЕСТЬ NULL 
			|			ТОГДА ОтветственныеЛица.ФизическоеЛицо.Наименование
			|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
			|					ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
			|				ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|				КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
			|					ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК ПредставлениеОтветственный,
			|	ОтветственныеЛица.ФизическоеЛицо КАК Ответственный,
			|	СписаниеСпецОдеждыСоСклада.ИнвентаризационнаяКомиссия.(
			|		ФизЛицо КАК ФизЛицо,
			|		Председатель КАК Председатель
			|	) КАК ИнвентаризационнаяКомиссия
			|ИЗ
			|	Документ.СписаниеСпецОдеждыСоСклада КАК СписаниеСпецОдеждыСоСклада,
			|	Константы КАК Константы,
			|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ОтветственныеЛица
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаСреза, ) КАК ФИОФизЛицСрезПоследних
			|		ПО (ОтветственныеЛица.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо)
			|ГДЕ
			|	СписаниеСпецОдеждыСоСклада.Ссылка = &ТекущийДокумент";
		ВыбШапка = Запрос.Выполнить().Выбрать();
		ВыбШапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВедомостьВыдачиСпецодеждыТовары.СчетУчета КАК СчетУчета,
		               |	ВедомостьВыдачиСпецодеждыТовары.НовыйСчетУчета КАК НовыйСчетУчета,
		               |	ВедомостьВыдачиСпецодеждыТовары.Номенклатура.Код КАК Код,
		               |	ВедомостьВыдачиСпецодеждыТовары.Номенклатура.Наименование КАК Наименование,
		               |	ВедомостьВыдачиСпецодеждыТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		               |	СУММА(ВедомостьВыдачиСпецодеждыТовары.Количество) КАК Количество,
		               |	СУММА(ВедомостьВыдачиСпецодеждыТовары.Сумма) КАК Сумма,
		               |	ВедомостьВыдачиСпецодеждыТовары.Ссылка.Подразделение КАК Подразделение,
		               |	ВедомостьВыдачиСпецодеждыТовары.Цена КАК Цена
		               |ИЗ
		               |	Документ.ВедомостьВыдачиСпецодежды.Товары КАК ВедомостьВыдачиСпецодеждыТовары
		               |ГДЕ
		               |	ВедомостьВыдачиСпецодеждыТовары.Ссылка В(&Доки)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВедомостьВыдачиСпецодеждыТовары.НовыйСчетУчета,
		               |	ВедомостьВыдачиСпецодеждыТовары.ЕдиницаИзмерения,
		               |	ВедомостьВыдачиСпецодеждыТовары.Номенклатура.Код,
		               |	ВедомостьВыдачиСпецодеждыТовары.Номенклатура.Наименование,
		               |	ВедомостьВыдачиСпецодеждыТовары.СчетУчета,
		               |	ВедомостьВыдачиСпецодеждыТовары.Ссылка.Подразделение,
		               |	ВедомостьВыдачиСпецодеждыТовары.Цена";
		
		Запрос.УстановитьПараметр("Доки", Документ.Ведомости.ВыгрузитьКолонку("Документ"));
		Шапка.параметры.Организация	     = Документ.Организация;
		Шапка.параметры.Номер		     = Документ.Номер;
		Шапка.Параметры.СкладОтправитель = Склад;
		Шапка.Параметры.МОЛОтправитель   = ВыбШапка.ПредставлениеОтветственный;
		Шапка.Параметры.Приказ           = Документ.Приказ;
		Шапка.параметры.Дата		     = формат(Документ.Дата, "ДФ=""дд.ММ.гггг""");
		Шапка.параметры.Комментарий      = Документ.Комментарий;
		
		Выборка = Запрос.Выполнить().Выбрать();
		первыйраз=истина;
		нпп=0;
		Итого=0;
		Пока Выборка.Следующий() цикл
			нпп=нпп+1;
			Если первыйраз тогда
				первыйраз=ложь;
				Шапка.Параметры.Заполнить(выборка);
				ТабДокумент.Вывести(Шапка);
			Конецесли;
			Куда="";
			СтрокаТ.Параметры.Заполнить(выборка);
			Куда=Куда+выборка.Подразделение;
			Куда=Куда+символы.ПС+Справочники.НоменклатурныеГруппы.НайтиПоКоду("А00000001");
			Куда=Куда+символы.ПС+Справочники.СтатьиЗатрат.НайтиПоКоду("АО000405");
			СтрокаТ.Параметры.Куда=Куда;
			СтрокаТ.Параметры.нпп=нпп;
			ТабДокумент.Вывести(СтрокаТ);
			Итого=Итого+выборка.Сумма;
		Конеццикла;
		
		Подвал.Параметры.СуммаИтог=Итого;
		ТабДокумент.Вывести(Подвал);
		
		/// Комиссия	
		ОбластьКомиссия = Макет.ПолучитьОбласть("Комиссия");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СписаниеСпецОдеждыСоСкладаИнвентаризационнаяКомиссия.Председатель КАК Председатель,
		               |	СписаниеСпецОдеждыСоСкладаИнвентаризационнаяКомиссия.ФизЛицо КАК ФизЛицо
		               |ИЗ
		               |	Документ.СписаниеСпецОдеждыСоСклада.ИнвентаризационнаяКомиссия КАК СписаниеСпецОдеждыСоСкладаИнвентаризационнаяКомиссия
		               |ГДЕ
		               |	СписаниеСпецОдеждыСоСкладаИнвентаризационнаяКомиссия.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
		ТаблицаИнвентаризационнаяКомиссия = Запрос.Выполнить().Выгрузить();
		
		ЗаголовокРазделаКомиссии = Новый Структура();
		ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", "Председатель комиссии");
		ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии",        "Члены комиссии:");
		
		// Выведем подпись председателя инвентаризационной комиссии
		ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
		
		Если НЕ (ПредседательКомиссии = Неопределено) Тогда
			
			ДанныеПредседателя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Документ.Организация, ПредседательКомиссии.ФизЛицо, Документ.Дата);
	
			ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ОбластьКомиссия.Параметры.Должность                = ДанныеПредседателя.Должность;
			ОбластьКомиссия.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
		Иначе
			
			ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ОбластьКомиссия.Параметры.Должность                = "";
			ОбластьКомиссия.Параметры.РасшифровкаПодписи       = "";
			
		КонецЕсли;
			
		ТабДокумент.Вывести(ОбластьКомиссия);
		
		// Выведем подписи членов комиссии
		ВыводитьЗаголовок = Истина;
		
		// Сформируем список членов комиссии
		СписокЧленовКомиссии = Новый Массив();
		
		Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
			Если НЕ Строка.Председатель Тогда
				СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛиц(Документ.Организация, СписокЧленовКомиссии, Документ.Дата);
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьКомиссия) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, 
														   		 ЗаголовокРазделаКомиссии.ЧленыКомиссии,
														   		 "");
			ОбластьКомиссия.Параметры.Должность          = ЧленКомиссии.Должность;
			ОбластьКомиссия.Параметры.РасшифровкаПодписи = ЧленКомиссии.Представление;
			
			ТабДокумент.Вывести(ОбластьКомиссия);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьКомиссия) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
				
				ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, 
															   ЗаголовокРазделаКомиссии.ЧленыКомиссии,
															   "");
				ОбластьКомиссия.Параметры.Должность          = "";
				ОбластьКомиссия.Параметры.РасшифровкаПодписи = "";
				
				ТабДокумент.Вывести(ОбластьКомиссия);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла; 
			
		КонецЕсли;
				
		Если Документ.Ведомости.Количество() <> 0 Тогда			
			
			ТабДокумент.Вывести(ШапкаМОЛ);
			
			ДанныеОтв = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Документ.Организация, ВыбШапка.Ответственный, Документ.Дата);
			МОЛы.Параметры.Должность         		 = ДанныеОтв.Должность;
			МОЛы.Параметры.РасшифровкаПодписи = ВыбШапка.ПредставлениеОтветственный;
			ТабДокумент.Вывести(МОЛы);
			
		КонецЕсли; 

		Если Документ.СолидарныеМол.Количество() > 0 Тогда 
			ЗаголовокСолМОЛ = Макет.ПолучитьОбласть("ЗаголовокСолМОЛ");
			ЗаголовокСолМОЛ.Параметры.ДатаСолМОЛ = Документ.СолидарноеМолДата;
			ТабДокумент.Вывести(ЗаголовокСолМОЛ);
			Солидарные = Документ.СолидарныеМол.Выгрузить();
			СолМОЛ = Макет.ПолучитьОбласть("СолМОЛ");
			Для каждого строка из Солидарные Цикл
				ДанныеИсполнителя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Документ.Организация, Строка.ФизЛицо, Документ.Дата);
				СолМОЛ.Параметры.Должность          = ДанныеИсполнителя.Должность;
				СолМОЛ.Параметры.РасшифровкаПодписи = ДанныеИсполнителя.Представление;
				ТабДокумент.Вывести(СолМОЛ);
			КонецЦикла;
		КонецЕсли;
		
		//Печать данных об исполнителе
		ОбластьМакета = Макет.ПолучитьОбласть("Исполнитель");
		Если НЕ Документ.Подписант.Пустая() Тогда
			ДанныеИсполнителя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.Подписант, Документ.Дата);
			
			ОбластьМакета.Параметры.Должность          = ДанныеИсполнителя.Должность;
			ОбластьМакета.Параметры.РасшифровкаПодписи = ДанныеИсполнителя.Представление;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции 

