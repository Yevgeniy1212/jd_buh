
&НаСервере
Процедура ПодписантПриИзмененииНаСервере()
	ДанныеМОЛ = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Объект.Организация, Объект.Подписант, Объект.Дата);
	Объект.ДолжностьПодписанта = ДанныеМОЛ.Должность;
КонецПроцедуры

&НаКлиенте
Процедура ПодписантПриИзменении(Элемент)
	ПодписантПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВедомостиДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыПодбора = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе, Отбор", Истина, Истина, Новый Структура("СписаноСоСклада, Проведен", Ложь, Истина));	
	ФормаВыбора = ПолучитьФорму("Документ.ВедомостьВыдачиСпецодежды.ФормаВыбора", ПараметрыПодбора, ЭтаФорма);
	ФормаВыбора.Открыть();
	ПервыйЭлемент = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СолидарныеМолСтрокаПриИзменении(Элемент)
	Объект.СолидарныеМол.Очистить();
	Для каждого текЗначение из СолидарныеМолСтрока цикл
		новСтрока = Объект.СолидарныеМол.Добавить();
		новСтрока.ФизЛицо = текЗначение.Значение;
	Конеццикла;
КонецПроцедуры

&НаКлиенте
Процедура ИнвентаризационнаяКомиссияФизЛицоПриИзменении(Элемент)
	
	Если Объект.ИнвентаризационнаяКомиссия.Количество() = 1 Тогда
		Объект.ИнвентаризационнаяКомиссия[0].Председатель = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИнвентаризационнаяКомиссияФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ (Элементы.ИнвентаризационнаяКомиссия.ТекущиеДанные.ФизЛицо = ВыбранноеЗначение) Тогда // если выбрано значение, отличное от того, что было
		СтрокаТабличнойЧасти = Объект.ИнвентаризационнаяКомиссия.НайтиСтроки(новый Структура("ФизЛицо", ВыбранноеЗначение));
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти) Тогда
			Предупреждение("Физическое лицо <" + СокрЛП(ВыбранноеЗначение) + "> уже включено в состав комиссии!", 60);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СтрокаТабличнойЧасти = Объект.ИнвентаризационнаяКомиссия.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение));
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти) Тогда
			ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке("Физическое лицо <" + ВыбранноеЗначение + "> уже подобрано!",,, СтатусСообщения.Обычное);
		Иначе
			НоваяСтрока = Объект.ИнвентаризационнаяКомиссия.Добавить();
			НоваяСтрока.ФизЛицо = ВыбранноеЗначение;
			Если Объект.ИнвентаризационнаяКомиссия.Количество() = 1 Тогда
				НоваяСтрока.Председатель = Истина;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
	
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ВедомостьВыдачиСпецодежды") И ПервыйЭлемент Тогда
			СтрокаТабличнойЧасти = Объект.Ведомости.НайтиСтроки(Новый Структура("Документ", ВыбранноеЗначение));
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти) Тогда
				ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке("Документ <" + ВыбранноеЗначение + "> уже подобран!",,, СтатусСообщения.Обычное);
			Иначе
				Элементы.Ведомости.ТекущиеДанные.Документ = ВыбранноеЗначение;
				ПервыйЭлемент = Ложь;
			КонецЕсли;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ВедомостьВыдачиСпецодежды") Тогда
			СтрокаТабличнойЧасти = Объект.Ведомости.НайтиСтроки(Новый Структура("Документ", ВыбранноеЗначение));
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти) Тогда
				ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке("Документ <" + ВыбранноеЗначение + "> уже подобран!",,, СтатусСообщения.Обычное);
			Иначе
				НоваяСтрока = Объект.Ведомости.Добавить();
				НоваяСтрока.Документ = ВыбранноеЗначение;
			КонецЕсли;
	КонецЕсли;
		
	//++Кибернетика Кубасов Е I-22339
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		для каждого ЭлементВыбранноеЗначение из ВыбранноеЗначение цикл	
			Если ТипЗнч(ЭлементВыбранноеЗначение) = Тип("ДокументСсылка.ВедомостьВыдачиСпецодежды") И ПервыйЭлемент Тогда
				СтрокаТабличнойЧасти = Объект.Ведомости.НайтиСтроки(Новый Структура("Документ", ЭлементВыбранноеЗначение));
				Если ЗначениеЗаполнено(СтрокаТабличнойЧасти) Тогда
					ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке("Документ <" + ЭлементВыбранноеЗначение + "> уже подобран!",,, СтатусСообщения.Обычное);
				Иначе
					Элементы.Ведомости.ТекущиеДанные.Документ = ЭлементВыбранноеЗначение;
					ПервыйЭлемент = Ложь;
				КонецЕсли;
			ИначеЕсли ТипЗнч(ЭлементВыбранноеЗначение) = Тип("ДокументСсылка.ВедомостьВыдачиСпецодежды") Тогда
				СтрокаТабличнойЧасти = Объект.Ведомости.НайтиСтроки(Новый Структура("Документ", ЭлементВыбранноеЗначение));
				Если ЗначениеЗаполнено(СтрокаТабличнойЧасти) Тогда
					ОбщегоНазначенияБККлиентСервер.СообщитьОбОшибке("Документ <" + ЭлементВыбранноеЗначение + "> уже подобран!",,, СтатусСообщения.Обычное);
				Иначе
					НоваяСтрока = Объект.Ведомости.Добавить();
					НоваяСтрока.Документ = ЭлементВыбранноеЗначение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//--Кибернетика Кубасов Е I-22339
КонецПроцедуры

&НаКлиенте
Процедура ЧленыКомиссииПодбор(Команда)
	ПараметрыПодбора = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе", Истина, Ложь);	
	Форма = ПолучитьФорму("Справочник.ФизическиеЛица.ФормаВыбора" ,ПараметрыПодбора, ЭтаФорма);
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПодбор(Команда)
//++Кибернетика Кубасов Е I-22339 Добавлен МножественныйВыбор
ПараметрыПодбора = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе, Отбор, МножественныйВыбор", Истина, Ложь, Новый Структура("СписаноСоСклада, Проведен", Ложь, Истина), Истина); 		
//ПараметрыПодбора = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе, Отбор", Истина, Ложь, Новый Структура("СписаноСоСклада, Проведен", Ложь, Истина));		
//--Кибернетика Кубасов Е I-22339 Добавлен МножественныйВыбор

ФормаВыбора = ПолучитьФорму("Документ.ВедомостьВыдачиСпецодежды.ФормаВыбора", ПараметрыПодбора, ЭтаФорма); 
ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьПечать();
	
	Если Объект.Ссылка.Пустая() Тогда 
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнитьШапку();
		Приказ = НайтиПриказПоРеквизиту();
		Если Приказ.Пустая() Тогда
			Приказ = ВставитьПервыйПриказ();
		КонецЕсли;
	Конецесли;
	Если Объект.Проведен тогда
		Элементы.Ведомости.ТолькоПросмотр = истина;
		Элементы.ВедомостиДокументыПодбор.Доступность = Ложь;
	Конецесли;
	
	СолидарныеМолСтрока.Очистить();
	Для каждого текСтрока из Объект.СолидарныеМол цикл
		СолидарныеМолСтрока.Добавить(текстрока.ФизЛицо);	
	Конеццикла;
	
КонецПроцедуры

&НаСервере
Процедура ПодключитьПечать()
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьШапку()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументОбъект, ПользователиКлиентСервер.ТекущийПользователь());
КонецПроцедуры

&НаСервере
Функция ВставитьПервыйПриказ()
	Возврат Справочники.ПриказыОрганизации.НайтиПоКоду("0001");	
КонецФункции

&НаСервере
Функция НайтиПриказПоРеквизиту()
	Возврат Справочники.ПриказыОрганизации.НайтиПоРеквизиту("ОсновнойПриказ", Истина);	
КонецФункции

//&НаКлиенте
//Процедура Подключаемый_ВыполнитьКоманду(Команда)
//	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
//КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь();
КонецПроцедуры

	// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

