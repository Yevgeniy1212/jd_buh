#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область УправлениеДоступом

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ОбщегоНазначенияБК.ЗаполнитьНаборыПоОрганизацииСтурктурномуПодразделению(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделение");
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснования(ДанныеЗаполнения);
		Возврат;
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();

	Если НЕ ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, Дата)
		ИЛИ НЕ УчитыватьКПН Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВидУчетаНУ");
		МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетДоходовНУ");
		МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетРасходовНУ");
						
	КонецЕсли;

	Если НЕ УчитыватьНДС Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ОС.НДСВидОперацииРеализации");
		МассивНепроверяемыхРеквизитов.Добавить("ОС.СтавкаНДС");
		МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетУчетаНДСПоРеализации");
						
	КонецЕсли;

    Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
    
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

	УправлениеВнеоборотнымиАктивамиСервер.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
	
	ПроверкаЗАполненияТабличнойЧастиОС(Отказ, ЭтотОбъект);
	
	//Проверим на виды операций, которые не будут полностью отработаны в данном документе
	Если СобытиеОС.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчету Тогда
		ТекстСообщения = НСтр("ru = 'События с основными средствами с видом <%1>
			|не могут отражаться данным документом!'");
			                                                                                                                                   
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СобытиеОС.ВидСобытияОС),
														,"СобытиеОС", "ЭтотОбъект", Отказ);
		
	КонецЕсли;


КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект, Ложь);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ПередачаОС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	УчетОС.ПроверитьСоответствиеОСОрганизации(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	УчетОС.ПроверитьСоответствиеМестонахожденияОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.Реквизиты, Отказ);

	УчетОС.ПроверитьЗаполнениеСчетаУчетаОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.Реквизиты, Отказ);

	УчетОС.ПроверитьВозможностьИзмененияСостоянияОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УчетОС.ПроверитьЗаполнениеСпособаОтраженияРасходовПоАмортизации(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	ТаблицаАмортизации = УправлениеВнеоборотнымиАктивамиСервер.ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл(ПараметрыПроведения.ТаблицаОСРаспределениеАмортизацииПоНаправлениямРегл, ПараметрыПроведения.Реквизиты, Отказ);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Изменение статуса счетов на оплату 
	
	ГрупповоеПерепроведение = Неопределено;
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ГрупповоеПерепроведение") Тогда	
		ГрупповоеПерепроведение = ЭтотОбъект.ДополнительныеСвойства.ГрупповоеПерепроведение;	
	Иначе 	
		ГрупповоеПерепроведение = Ложь;	
	КонецЕсли;
	
	Если Не ГрупповоеПерепроведение Тогда
		
		ТаблицаСтатусовСчетов = СтатусыДокументов.ПодготовитьТаблицуСтатусовОтгрузкиОСПоСчетам(
			ПараметрыПроведения.ТаблицаСчетовНаОплату,
			ПараметрыПроведения.ПередачаОСПоСчету,
			ПараметрыПроведения.Реквизиты);
		
		СтатусыДокументов.СформироватьДвиженияСтатусовДокументов(
			ТаблицаСтатусовСчетов, ПараметрыПроведения.Реквизиты);
		
		КонецЕсли;
		
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	// Таблица взаиморасчетов с учетом зачета авансов
	ТаблицаВзаиморасчеты = УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента, ПараметрыПроведения.ЗачетАвансовРеквизиты, Отказ);
		
	// Таблицы выручки от реализации: собственных товаров и услуг
	ТаблицыРеализация = УчетДоходовРасходов.ПодготовитьТаблицыВыручкиОтРеализации(
		ПараметрыПроведения.ТаблицаРеализацияОС, ТаблицаВзаиморасчеты,
		ПараметрыПроведения.Реквизиты, Отказ);

	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.Реквизиты, "НомерЖурнала", НСтр("ru = 'ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));   	
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ТаблицыРеализация.СобственныеТоварыУслуги, "НомерЖурнала", НСтр("ru = 'ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));   	
	
	Если ПараметрыПроведения.Реквизиты[0].ВидОперации = Перечисления.ВидыОперацийПередачиОС.ПередачаСтруктурномуПодразделению Тогда 
		Документы.ПередачаОС.ДобавитьКолонкуСодержание(ТаблицыРеализация.СобственныеТоварыУслуги, НСтр("ru='Положит. отклонение ст-ти реал-ции от себест-ти'", ОбщегоНазначения.КодОсновногоЯзыка()));
		УчетДоходовРасходов.ПодготовитьТаблицыОтклоненияСтоимостиРеализацииОтСебестоимости(
			ТаблицыРеализация, ПараметрыПроведения.ТаблицаСписанныеОС, ПараметрыПроведения.ТаблицаРеализацияОС, ПараметрыПроведения.Реквизиты, Отказ);		
	Иначе 
		Документы.ПередачаОС.ДобавитьКолонкуСодержание(ТаблицыРеализация.СобственныеТоварыУслуги);
	КонецЕсли;

	ТаблицаПередачаОС = УчетОС.ПодготовитьТаблицуПередачаОС(ПараметрыПроведения.ТаблицаПередачаОС, ПараметрыПроведения.ТаблицаСтоимостьОСНУ);

	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ТаблицаВзаиморасчеты, "НомерЖурнала", НСтр("ru = 'АВ'", ОбщегоНазначения.КодОсновногоЯзыка()));	
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.РеквизитыСтоимостьОС, "НомерЖурнала", НСтр("ru = 'ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияАмортизацииПоНаправлениямРегл(ТаблицаАмортизации, ПараметрыПроведения.Реквизиты,
		Движения, Отказ);
		
				
	УчетНДСИАкциза.СформироватьДвиженияРеализацияАктивовУслуг(ПараметрыПроведения.ТаблицаНДС, ПараметрыПроведения.ТаблицаУчастникиСовместнойДеятельности,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);  
		
	УчетОС.СформироватьДвиженияИзменениеСостоянияОС(ПараметрыПроведения.ТаблицаСостоянияОС,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияРегистрацияСобытияОС(ПараметрыПроведения.ТаблицаСобытияОС,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОС(ПараметрыПроведения.ТаблицаНачислениеАмортизацииОСБухгалтерскийУчет,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияСоставОС(ПараметрыПроведения.ТаблицаСоставОС, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
				
	УчетОС.СформироватьДвиженияИзменениеЗемельногоНалога(ПараметрыПроведения.ТаблицаОбъектыЗемельногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
				
	УчетОС.СформироватьДвиженияОбъектыИмущественногоНалога(ПараметрыПроведения.ТаблицаОбъектыИмущественногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
								
	УчетОС.СформироватьДвиженияИзменениеТранспортногоНалога(ПараметрыПроведения.ТаблицаОбъектыТранспортногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);            
				
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияОбъектыНалоговогоУчетаФА(ПараметрыПроведения.ТаблицаОбъектыНалоговогоУчетаФА,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияФАУчитываемыхОтдельно(ПараметрыПроведения.ТаблицаФАУчитываемыеОтдельно,ПараметрыПроведения.РеквизитыДляИзмененияСостояний, 
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияПередачаОС(ТаблицаПередачаОС,ПараметрыПроведения.РеквизитыСтоимостьОС,
	    Движения, Отказ);

	УчетОС.СформироватьДвижениеСписанияСтоимостиВыбытияОСНУ(ПараметрыПроведения.ТаблицаСтоимостьОСНУ, ПараметрыПроведения.РеквизитыСтоимостьОС,
		Движения, Отказ);
			
	УчетОС.СформироватьДвижениеЗакрытиеПереоценкиОС(ПараметрыПроведения.ТаблицаПереоценкиВА, ПараметрыПроведения.ТаблицаПереоценкиВАРегистр, ПараметрыПроведения.РеквизитыСтоимостьОС,
	    Движения, Отказ);

	УправлениеВзаиморасчетамиСервер.СформироватьДвиженияЗачетАвансов(ТаблицаВзаиморасчеты,
		ПараметрыПроведения.ЗачетАвансовРеквизиты, Движения, Отказ);	      
		
	УчетДоходовРасходов.СформироватьДвиженияРеализация(
		ТаблицыРеализация.СобственныеТоварыУслуги, ПараметрыПроведения.РеквизитыРеализация, Движения, Отказ);
		
		// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкаВалютныхОстатковПоПроводкамДокумента(
		ПараметрыПроведения.ЗачетАвансовРеквизиты, Движения, Отказ);

	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
		  
	ПроцедурыНалоговогоУчета.ОтразитьПостоянныеРазницыВНУ(ПараметрыПроведения.Реквизиты, Движения, Отказ); 

	УчетНДСИАкциза.СинхронизацияПризнакаПроведенияУСчетаФактуры(Ссылка, Отказ, Истина, "СчетФактураВыданный");

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если НЕ УчитыватьКПН Тогда
		ВидУчетаНУ = Справочники.ВидыУчетаНУ.ПустаяСсылка();
	КонецЕсли;
	
	УчетНДСИАкциза.ОчиститьДанныеПоУчастникамСовместнойДеятельности(ЭтотОбъект, ДоговорКонтрагента);
	
	СуммаДокумента = УчетНДСИАкциза.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	
	УчетНДСИАкциза.СинхронизацияПометкиНаУдалениеУСчетаФактуры(ЭтотОбъект, "СчетФактураВыданный", Отказ);	
	
	РаботаСДоговорамиКонтрагентов.ЗаполнитьДоговорПередЗаписью(ЭтотОбъект);  
	
	Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СчетНаОплатуПокупателю") Тогда
			
		ТаблицаРеквизитов = Новый ТаблицаЗначений;
		
		ТаблицаРеквизитов.Колонки.Добавить("Период");
		ТаблицаРеквизитов.Колонки.Добавить("Регистратор");
		ТаблицаРеквизитов.Колонки.Добавить("Организация");
		ТаблицаРеквизитов.Колонки.Добавить("СчетНаОплатуПокупателю");
		
		СтрокаТабРеквизитов = ТаблицаРеквизитов.Добавить();
		СтрокаТабРеквизитов.Период      = Дата;
		СтрокаТабРеквизитов.Регистратор = Ссылка;
		СтрокаТабРеквизитов.Организация = Организация;
		СтрокаТабРеквизитов.СчетНаОплатуПокупателю = ДокументОснование; 
		
		ТаблицаОС = Документы.СчетНаОплатуПокупателю.ОСПоСчету(ДокументОснование);  
		
		ТаблицаСчетовНаОплату = Новый ТаблицаЗначений;
		
		ТаблицаСчетовНаОплату.Колонки.Добавить("СчетНаОплатуПокупателю");  
		
		СтрокаТабСчетовНаОплату = ТаблицаСчетовНаОплату.Добавить();
		СтрокаТабСчетовНаОплату.СчетНаОплатуПокупателю = ДокументОснование;
				
		ТаблицаСтатусовСчетов = СтатусыДокументов.ПодготовитьТаблицуСтатусовОтменыОтгрузкиОСПоСчетам(
			ТаблицаСчетовНаОплату,
			ТаблицаОС,
			ТаблицаРеквизитов);  
			
		СтатусыДокументов.СформироватьДвиженияСтатусовДокументов(
			ТаблицаСтатусовСчетов, ТаблицаРеквизитов);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//синхронизируем данные счет-фактуры и документа основания
	УчетНДСИАкциза.СинхронизироватьДанныеДокументаИСчетаФактуры(ЭтотОбъект, Отказ, "СчетФактураВыданный"); 		
	Если Отказ Тогда
		ТекстСообщения = НСтр("ru = 'Документ не записан ...'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
		  
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	УчетНДСИАкциза.СинхронизацияПризнакаПроведенияУСчетаФактуры(Ссылка, Отказ, Ложь, "СчетФактураВыданный");

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	УдалитьДоверенность = "";
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПоДокументуОснования(Основание) Экспорт
	Документы.ПередачаОС.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, Основание);	
КонецПроцедуры

Процедура ПроверкаЗАполненияТабличнойЧастиОС(Отказ, ЭтотОбъект)
	
	Для каждого СтрокаТабличнойЧасти Из ЭтотОбъект.ОС Цикл

		Если ЭтотОбъект.УчитыватьНДС 
			И НЕ (УчетНДСиАкцизаВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС) = 0)
    		И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчетаНДСПоРеализации) Тогда
			ТекстСообщения = ОбщегоНазначенияБККлиентСервер.ПолучитьТекстСообщения("Колонка",, НСтр("ru = 'Не заполнено значение реквизита ""Счет учета НДС по реализации""!'"),
			СтрокаТабличнойЧасти.НомерСтроки, НСтр("ru='ОС'"));
			Поле = "ОС" + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].СчетУчетаНДСПоРеализации";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если ЭтотОбъект.УчитыватьНДС 			
    		И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.НДСВидОперацииРеализации) Тогда
			ТекстСообщения = ОбщегоНазначенияБККлиентСервер.ПолучитьТекстСообщения("Колонка",, НСтр("ru = 'Не заполнено значение реквизита ""Вид операции реализации для целей НДС""!'"),
			СтрокаТабличнойЧасти.НомерСтроки, НСтр("ru='ОС'"));
			Поле = "ОС" + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НДСВидОперацииРеализации";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;		
       		
	КонецЦикла;

КонецПроцедуры

#КонецЕсли



