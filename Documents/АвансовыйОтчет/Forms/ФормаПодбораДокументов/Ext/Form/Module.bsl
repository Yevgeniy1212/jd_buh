////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыводимыеДокументы.Добавить("ПоступлениеТоваровУслуг", НСтр("ru = 'Поступление ТМЗ и услуг'"),   Истина);
	ВыводимыеДокументы.Добавить("ПоступлениеДопРасходов",  НСтр("ru = 'Поступление доп. расходов'"), Истина);
	ВыводимыеДокументы.Добавить("ПоступлениеНМА",          НСтр("ru = 'Поступление НМА'"),           Истина);
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "НачалоПериода, КонецПериода");
	
	УстановитьЗначениеПараметраСпискаДокументов("НачалоПериода", НачалоПериода);
	УстановитьЗначениеПараметраСпискаДокументов("КонецПериода",  КонецПериода);
	
	УстановитьЗначениеПараметраСпискаДокументов("ПоступлениеТоваровУслуг", Истина);
	УстановитьЗначениеПараметраСпискаДокументов("ПоступлениеДопРасходов",  Истина);
	УстановитьЗначениеПараметраСпискаДокументов("ПоступлениеНМА",          Истина);
	
	УстановитьЗначениеПараметраСпискаДокументов("ДокументПоступлениеТоваровУслуг", НСтр("ru = 'Поступление ТМЗ и услуг'"));
	УстановитьЗначениеПараметраСпискаДокументов("ДокументПоступлениеДопРасходов",  НСтр("ru = 'Поступление доп. расходов'"));
	УстановитьЗначениеПараметраСпискаДокументов("ДокументПоступлениеНМА",          НСтр("ru = 'Поступление НМА'"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	ЭтаФорма.СписокДокументов, "Организация", Параметры.Организация, ВидСравненияКомпоновкиДанных.Равно,, Истина, 
	РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	ЭтаФорма.СписокДокументов, "ВалютаДокумента", Параметры.ВалютаДокумента, ВидСравненияКомпоновкиДанных.Равно,, Истина, 
	РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	ЭтаФорма.СписокДокументов, "СтруктурноеПодразделение", Параметры.СтруктурноеПодразделение, ВидСравненияКомпоновкиДанных.Равно,, Истина, 
	РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
	ЭтаФорма.ЗакрыватьПриВыбореДокументаОплаты = ЗакрыватьПриВыборе;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если ПеренестиВДокумент Тогда
		
		МассивДокументов = Новый Массив;
		
		Для Каждого НомерДокумента Из Элементы.СписокДокументов.ВыделенныеСтроки Цикл
			ДанныеДокумента = Новый Структура("Дата, Контрагент, ДоговорКонтрагента, ВедениеВзаиморасчетов, Ссылка, 
			                                  |СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам, СуммаДокумента,
											  |КурсВзаиморасчетов, КратностьВзаиморасчетов, ВидВходящегоДокумента, НомерВходящегоДокумента, ДатаВходящегоДокумента");
			ЗаполнитьЗначенияСвойств(ДанныеДокумента, Элементы.СписокДокументов.ДанныеСтроки(НомерДокумента));
			ДанныеДокумента.Вставить("СоздаватьНовыеСтрокиПриПовторномВыбореДокумента", Истина);
			МассивДокументов.Добавить(ДанныеДокумента);
		КонецЦикла;
		
		ОповеститьОВыборе(МассивДокументов);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	УстановитьЗначениеПараметраСпискаДокументов("НачалоПериода", НачалоПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	УстановитьЗначениеПараметраСпискаДокументов("КонецПериода",  КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	МассивДокументов = Новый Массив;

	Если ЗакрыватьПриВыбореДокументаОплаты Тогда
		ПеренестиВДокумент = Истина;
		Закрыть(КодВозвратаДиалога.OK);
	ИначеЕсли ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		ЗакрыватьПриВыборе  = Ложь;
		
		ДанныеДокумента = Новый Структура("Дата, Контрагент, ДоговорКонтрагента, ВедениеВзаиморасчетов, Ссылка, 
		                                  |СчетУчетаРасчетовСКонтрагентом, СчетУчетаРасчетовПоАвансам, СуммаДокумента,
										  |КурсВзаиморасчетов, КратностьВзаиморасчетов, ВидВходящегоДокумента, НомерВходящегоДокумента, ДатаВходящегоДокумента");
		ЗаполнитьЗначенияСвойств(ДанныеДокумента, Элементы.СписокДокументов.ДанныеСтроки(ВыбраннаяСтрока));
		ДанныеДокумента.Вставить("СоздаватьНовыеСтрокиПриПовторномВыбореДокумента", Истина);
		МассивДокументов.Добавить(ДанныеДокумента);
		
		ОповеститьОВыборе(МассивДокументов);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ВыводимыеДокументыПриИзменении(Элемент)

	Для Каждого ВидДокумента Из ВыводимыеДокументы Цикл
		УстановитьЗначениеПараметраСпискаДокументов(ВидДокумента.Значение, ВидДокумента.Пометка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ЗначениеЗаполнено(ИмяСобытия) И СтрНайти(ИмяСобытия, "Запись") <> 0 Тогда
		Элементы.СписокДокументов.Обновить();	
	КонецЕсли;	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)

	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоПериода, КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтаФорма);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеТоваровУслуг(Команда)
	СоздатьНовыйДокумент("ПоступлениеТоваровУслуг")
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеНМА(Команда)
	СоздатьНовыйДокумент("ПоступлениеНМА")
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеДопРасходов(Команда)
	СоздатьНовыйДокумент("ПоступлениеДопРасходов")
КонецПроцедуры

&НаКлиенте
Процедура Скопировать(Команда)
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущийДокумент = ТекущиеДанные.Ссылка;
				
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначениеКопирования", ТекущийДокумент);
		
	ИмяФормыОбъекта = ПолноеИмяФормыОбъекта(ТекущийДокумент);
				
	ОткрытьФорму(ИмяФормыОбъекта, ПараметрыФормы);
		
	
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	ТекущийДокумент = Элементы.СписокДокументов.ТекущиеДанные;
	
	Если ТекущийДокумент = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийДокумент.Ссылка) Тогда 
		ПоказатьЗначение(, ТекущийДокумент.Ссылка);
	КонецЕсли;	
	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачалоПериода = РезультатВыбора.НачалоПериода;
	КонецПериода  = РезультатВыбора.КонецПериода;
	
	УстановитьЗначениеПараметраСпискаДокументов("НачалоПериода", НачалоПериода);
	УстановитьЗначениеПараметраСпискаДокументов("КонецПериода",  КонецПериода);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПараметраСпискаДокументов(ИмяПараметра, ЗначениеПараметра)
	
	СписокДокументов.Параметры.УстановитьЗначениеПараметра(ИмяПараметра, ЗначениеПараметра);
	
КонецПроцедуры

&НаКлиенте 
Процедура СоздатьНовыйДокумент(ИмяДокумента)
	
	ОткрытьФорму("Документ." + ИмяДокумента + ".Форма.ФормаДокумента"
		, 
		, ЭтаФорма
		,
		,
		,
		, ОписаниеОповещенияОЗакрытии
		, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры	

&НаСервере
Функция ПолноеИмяФормыОбъекта(Ссылка) Экспорт
	
	ОбъектМетаданных = Ссылка.Метаданные();
	
	Возврат ОбъектМетаданных.ПолноеИмя() + ".ФормаОбъекта";
	
КонецФункции
