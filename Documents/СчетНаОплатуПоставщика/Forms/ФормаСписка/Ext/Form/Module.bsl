
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
	
	ОбщегоНазначенияБК.ФормаСпискаПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);	
		
	СтатусыДокументов.УстановитьВидимостьКолонокДополнительнойИнформации(ЭтотОбъект); 
	
	ВыводДанныхСписка();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СПИСОК

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБККлиентСервер.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

&НаКлиенте
Процедура ИзменитьСтатус(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	СписокДокументов = Новый СписокЗначений;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущаяСтрока = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока);
		
		Если ТекущаяСтрока <> Неопределено Тогда
			СписокДокументов.Добавить(ТекущаяСтрока.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Если СписокДокументов.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Команда не может быть выполнена для указанного объекта'"));
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.СчетНаОплатуПоставщика.Форма.ИзменитьСтатус",
		Новый Структура("СписокДокументов", СписокДокументов),
		ЭтотОбъект,
		КлючУникальности);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ВыводДанныхСписка()
		
	Если Элементы.Оплата.Видимость ИЛИ Элементы.Поступление.Видимость Тогда 
		
		Список.ТекстЗапроса = "ВЫБРАТЬ
	      |	ДокументСчетНаОплатуПоставщика.Ссылка КАК Ссылка,
	      |	ДокументСчетНаОплатуПоставщика.ПометкаУдаления КАК ПометкаУдаления,
	      |	ДокументСчетНаОплатуПоставщика.Номер КАК Номер,
	      |	ДокументСчетНаОплатуПоставщика.Дата КАК Дата,
	      |	ДокументСчетНаОплатуПоставщика.Проведен КАК Проведен,
	      |	ДокументСчетНаОплатуПоставщика.Автор КАК Автор,
	      |	ДокументСчетНаОплатуПоставщика.ВалютаДокумента КАК ВалютаДокумента,
	      |	ДокументСчетНаОплатуПоставщика.ДоговорКонтрагента КАК ДоговорКонтрагента,
	      |	ДокументСчетНаОплатуПоставщика.КодНазначенияПлатежа КАК КодНазначенияПлатежа,
	      |	ДокументСчетНаОплатуПоставщика.Комментарий КАК Комментарий,
	      |	ДокументСчетНаОплатуПоставщика.Контрагент КАК Контрагент,
	      |	ДокументСчетНаОплатуПоставщика.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	      |	ДокументСчетНаОплатуПоставщика.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	      |	ДокументСчетНаОплатуПоставщика.Организация КАК Организация,
	      |	ДокументСчетНаОплатуПоставщика.Ответственный КАК Ответственный,
	      |	ДокументСчетНаОплатуПоставщика.Склад КАК Склад,
	      |	ДокументСчетНаОплатуПоставщика.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	      |	ДокументСчетНаОплатуПоставщика.СуммаВключаетНДС КАК СуммаВключаетНДС,
	      |	ДокументСчетНаОплатуПоставщика.СуммаДокумента КАК СуммаДокумента,
	      |	ДокументСчетНаОплатуПоставщика.ТипЦен КАК ТипЦен,
	      |	ДокументСчетНаОплатуПоставщика.УчитыватьНДС КАК УчитыватьНДС,
	      |	ДокументСчетНаОплатуПоставщика.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	      |	ДокументСчетНаОплатуПоставщика.МоментВремени КАК МоментВремени,
	      |	ЛОЖЬ КАК Оплата,
	      |	ЛОЖЬ КАК Поступление
	      |ИЗ
	      |	Документ.СчетНаОплатуПоставщика КАК ДокументСчетНаОплатуПоставщика
	      |		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументов КАК СтатусыДокументов
	      |		ПО ДокументСчетНаОплатуПоставщика.Организация = СтатусыДокументов.Организация
	      |			И ДокументСчетНаОплатуПоставщика.Ссылка = СтатусыДокументов.Документ}"; 		
		
		Если Элементы.Оплата.Видимость Тогда 
			
			Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "ЛОЖЬ КАК Оплата", 
				"ВЫРАЗИТЬ(ЕСТЬNULL(СтатусыДокументов.Статус, &СтатусОплатыПоУмолчанию) КАК Перечисление.СтатусОплатыСчета) КАК Оплата");
						
			Список.Параметры.УстановитьЗначениеПараметра(
				"СтатусОплатыПоУмолчанию", Перечисления.СтатусОплатыСчета.СтатусНовогоДокумента());

			
		КонецЕсли;	
		
		Если Элементы.Поступление.Видимость Тогда
			
			Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "ЛОЖЬ КАК Поступление",
				"ВЫРАЗИТЬ(ЕСТЬNULL(СтатусыДокументов.ДополнительныйСтатус, &СтатусПоступленияПоУмолчанию) КАК Перечисление.СтатусыПоступленияПоСчету) КАК Поступление");
			
			Список.Параметры.УстановитьЗначениеПараметра(
				"СтатусПоступленияПоУмолчанию", Перечисления.СтатусыПоступленияПоСчету.СтатусНовогоДокумента());
			
		КонецЕсли;			
		
	КонецЕсли;	
								
КонецПроцедуры

