#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения,ТаблицаДокумента)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.си_ПеремещениеМатериаловВЭксплуатации.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если СнятиеСУчета Тогда
		ТаблицаМатериалыКПеремещению = си_УчетСпецодеждыСервер.ПодготовитьТаблицуПередачиВЭксплуатацию(ПараметрыПроведения.ТаблицаСпецодежда,ПараметрыПроведения,Движения,Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		ТЧНаПроверку = ТаблицаМатериалыКПеремещению.Скопировать();
		ЭтоБСО = си_УчетСпецодеждыСерверПовтИсп.ПроверкаНаБСО();
		//Если ЭтоБСО Тогда
		//	ТаблицаВыработкаСотрудников = ПараметрыПроведения.ТаблицаВыработкаСотрудников;
		//Иначе
			ТаблицаВыработкаСотрудников = Новый ТаблицаЗначений;
		//КонецЕсли;
		
		Если СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
			си_УчетСпецодеждыСервер.СформироватьДвиженияАмортизацияСпецодеждыВЭксплуатации(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению,ТаблицаВыработкаСотрудников,ПараметрыПроведения.ТаблицаВыработкаМатериалов, Движения, Отказ);
		ИначеЕсли СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе Тогда
			си_УчетСпецодеждыСервер.СформироватьДвиженияАмортизацияСпецодеждыБУ(ПараметрыПроведения.Реквизиты,  ТаблицаМатериалыКПеремещению, ТаблицаВыработкаСотрудников,ПараметрыПроведения.ТаблицаВыработкаМатериалов,Движения, Отказ);
			Отказ = ?(Отказ, Отказ, Не си_УчетСпецодеждыСервер.ПроверкаНаОтрицательныйОстаток("си_МатериалыНаСкладе",Организация,Склад,
							ТЧНаПроверку.ВыгрузитьКолонку("Номенклатура"),Дата,СтруктурноеПодразделение,ПодразделениеОрганизации,
							ТЧНаПроверку.ВыгрузитьКолонку("Сотрудник"),ТЧНаПроверку.ВыгрузитьКолонку("ДокументПередачи"),,
							ТЧНаПроверку.ВыгрузитьКолонку("НазначениеИспользования"),ТЧНаПроверку.ВыгрузитьКолонку("Характеристика"),
							ТЧНаПроверку.ВыгрузитьКолонку("ОстаточныйСрокИспользования"),ВидУчетаНУ,Неопределено,
							ТЧНаПроверку.ВыгрузитьКолонку("ДокументВозврата")));

		КонецЕсли;
	Иначе
		ТаблицаМатериалыКПеремещению = си_УчетСпецодеждыСервер.ПодготовитьТаблицуПередачиВЭксплуатацию(ПараметрыПроведения.ТаблицаМатериалы,ПараметрыПроведения,Движения,Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
		// в эксплуатации
		си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияМатериалыВЭксплуатации");
		Если СнятиеСУчета Тогда
			// по регистрам бухгалтерии
			си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияПеремещениеМатериаловПоБухУчету",,);
		КонецЕсли;
		
	Иначе
		// б/у
		си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияМатериалыБывшиеВЭксплуатации");
		
		// новая
		си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияМатериалыНаСкладеНовая");
		
		// по регистрам бухгалтерии
		//си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияПеремещениеМатериаловПоБухУчету",,"Реквизиты.Склад <> Реквизиты.СкладПолучатель");
		си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияПеремещениеМатериаловПоБухУчету",,);
			
		// Отражение ПР в НУ 
		общ_ПереопределяемыеПроцедурыБКСервер.ОтразитьПостоянныеРазницыВНУ(ЭтотОбъект,ПараметрыПроведения.СписаниеТоваровРеквизиты, Движения, Отказ);
		
		Если СнятиеСУчета Тогда
			// по регистрам бухгалтерии
			//си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыКПеремещению, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияПеремещениеМатериаловПоБухУчету",,);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив();
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	НеобходимаПострочнаяПроверка = Истина;
	ПараметрыПострочнойПроверки = Новый Структура;
	Если СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.Сотрудник");
		//МассивНепроверяемыхРеквизитов.Добавить("Материалы.ДокументПередачи");
		//МассивНепроверяемыхРеквизитов.Добавить("Материалы.НазначениеИспользования");
		//МассивНепроверяемыхРеквизитов.Добавить("Материалы.НазначениеИспользованияПолучатель");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.СотрудникПолучатель");
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизацииПолучатель");
		Если Не СнятиеСУчета Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Материалы.СчетУчетаПолучатель");
		КонецЕсли;
	ИначеЕсли СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.Сотрудник");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.ДокументПередачи");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.НазначениеИспользования");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.НазначениеИспользованияПолучатель");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.СотрудникПолучатель");
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизацииПолучатель");
		Если Не СнятиеСУчета Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Материалы.СчетУчетаПолучатель");
		КонецЕсли;
	ИначеЕсли СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
		Если Не СнятиеСУчета Тогда
			МассивНепроверяемыхРеквизитов.Добавить("СкладПолучатель");
			МассивНепроверяемыхРеквизитов.Добавить("Материалы.СчетУчетаПолучатель");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СнятиеСУчета Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.СотрудникПолучатель");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.НазначениеИспользованияПолучатель");
	КонецЕсли;
	
	
	Если НЕ УчитыватьКПН Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидУчетаНУ");
	КонецЕсли;
	си_ОбщегоНазначения.ИсключитьПроверку(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	Если НеобходимаПострочнаяПроверка Тогда 
		Если Материалы.Количество() > 0 Тогда
			ПроверитьЗаполнениеТабличнойЧастиМатериалыПострочно(Материалы, "Материалы", Отказ, ПараметрыПострочнойПроверки);
		КонецЕсли;
	КонецЕсли;
	
	Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам
		И СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации 
		И Не Отказ И Не СнятиеСУчета Тогда
		Документы.си_ПеремещениеМатериаловВЭксплуатации.ПроверитьПоНормамВыдачи(Материалы,ЭтотОбъект,Отказ);
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Материалы Цикл
		Если Не СтрокаТЧ.НазначениеИспользования.СпособПогашенияСтоимости = СтрокаТЧ.НазначениеИспользованияПолучатель.СпособПогашенияСтоимости Тогда
			//Отказ = истина;
			ОбщегоНазначения.СообщитьПользователю("В строке № " + СтрокаТЧ.НомерСтроки + " способ погашения стоимости назначения использования отправителя """+строкатч.НазначениеИспользования+""" не соответствует способу погашения стоимости назначения использования получателя """ + СтрокаТЧ.НазначениеИспользованияПолучатель+"""",,,,Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.си_ПеремещениеМатериаловВЭксплуатации.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	КонецЕсли;
	
	общ_ПереопределяемыеПроцедурыБКСервер.ЗаполнитьШапкуДокумента(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеТабличнойЧастиМатериалыПострочно(ПроверяемаяТабличнаячасть, ИмяТабличнойЧасти, Отказ, ПараметрыПроверки = Неопределено)
	
	ВыборкаПоСтрокамДокумента = Документы.си_ПеремещениеМатериаловВЭксплуатации.СформироватьЗапросПоМатериалыПроверка(ПроверяемаяТабличнаячасть.Выгрузить()).Выбрать();
	
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		Если ВыборкаПоСтрокамДокумента.ЯвляетсяСпецодеждойИнвентарем = Ложь Тогда
				ТекстСообщения = си_УчетСпецодеждыСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Номенклатура'"),
						ВыборкаПоСтрокамДокумента.НомерСтроки, ИмяТабличнойЧасти,"выбранная номенклатурная позиция не является спецодеждой/инвентарем");
				Поле = ИмяТабличнойЧасти + "[" + Формат(ВыборкаПоСтрокамДокумента.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Номенклатура";
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		Если ВыборкаПоСтрокамДокумента.СпособПогашенияСтоимости <> ВыборкаПоСтрокамДокумента.СпособПогашенияСтоимостиПолучатель 
			И (ВыборкаПоСтрокамДокумента.СпособПогашенияСтоимости = Перечисления.си_СпособыПогашенияСтоимости.Производственный ИЛИ ВыборкаПоСтрокамДокумента.СпособПогашенияСтоимостиПолучатель = Перечисления.си_СпособыПогашенияСтоимости.Производственный) Тогда 
			
				ТекстСообщения = си_УчетСпецодеждыСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Назначение использования-получатель'"),
						ВыборкаПоСтрокамДокумента.НомерСтроки, ИмяТабличнойЧасти,"Операции перемещения материалов, в назначении использования которых указан способ погашения стоимости 'Производственный', допустимы только в рамках этого способа погашения");
				Поле = ИмяТабличнойЧасти + "[" + Формат(ВыборкаПоСтрокамДокумента.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НазначениеИспользованияПолучатель";
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
	
		КонецЕсли;
		
		МассивРеквизитов = Новый Массив;
		СтруктураНезаполненныхРеквизитов = Новый Структура("Реквизит, НаименованиеРеквизита, Наименование, ТекстСообщения, Поле", ВыборкаПоСтрокамДокумента.ДокументПередачи, "ДокументПередачи", "документ передачи","","");
		МассивРеквизитов.Добавить(СтруктураНезаполненныхРеквизитов);
		СтруктураНезаполненныхРеквизитов = Новый Структура("Реквизит, НаименованиеРеквизита, Наименование, ТекстСообщения, Поле", ВыборкаПоСтрокамДокумента.НазначениеИспользования, "НазначениеИспользования", "назначение использования","","");
		МассивРеквизитов.Добавить(СтруктураНезаполненныхРеквизитов);
		СтруктураНезаполненныхРеквизитов = Новый Структура("Реквизит, НаименованиеРеквизита, Наименование, ТекстСообщения, Поле", ВыборкаПоСтрокамДокумента.НазначениеИспользованияПолучатель, "НазначениеИспользования", "назначение использования получатель","","");
		МассивРеквизитов.Добавить(СтруктураНезаполненныхРеквизитов);
		
		НовыйНаСкладе = Истина;
		Для Каждого ЭлементМассива Из МассивРеквизитов Цикл
			Если Не ЗначениеЗаполнено(ЭлементМассива.Реквизит) Тогда 
				ЭлементМассива.ТекстСообщения 	= си_УчетСпецодеждыСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = '"+ЭлементМассива.Наименование+"'"),
												  ВыборкаПоСтрокамДокумента.НомерСтроки, ИмяТабличнойЧасти);
				ЭлементМассива.Поле 			= ИмяТабличнойЧасти + "[" + Формат(ВыборкаПоСтрокамДокумента.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]."+ЭлементМассива.НаименованиеРеквизита;
			Иначе
				НовыйНаСкладе = Ложь;								
			КонецЕсли;
		КонецЦикла;
		
		Если Не НовыйНаСкладе Тогда 
			Для Каждого ЭлементМассива Из МассивРеквизитов Цикл
				Если ЗначениеЗаполнено(ЭлементМассива.ТекстСообщения) Тогда
					ОбщегоНазначения.СообщитьПользователю(ЭлементМассива.ТекстСообщения, ЭтотОбъект, ЭлементМассива.Поле, "Объект", Отказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли