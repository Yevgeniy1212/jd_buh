#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Перемещение материалов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьПеремещениеМатериалов";
	КомандаПечати.Представление = НСтр("ru = 'Перемещение материалов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 51;
	
	Возврат;	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьПеремещениеМатериалов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьПеремещениеМатериалов",
			НСтр("ru = 'Перемещение материалов'"),
			ПечатьПеремещениеМатериалов(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_ПеремещениеМатериаловВЭксплуатации.ПФ_MXL_ПеремещениеМатериалов");
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныйПрограммныйИнтерфейс

// Формирует запрос по таблице "Исполнители" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоМатериалыПроверка(ТабличнаяЧасть) Экспорт

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТабличнаяЧасть", 	 			 ТабличнаяЧасть);
    //
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВТ_ТабличнаяЧасть.Номенклатура,
	               |	ВТ_ТабличнаяЧасть.НазначениеИспользования,
	               |	ВТ_ТабличнаяЧасть.НазначениеИспользованияПолучатель,
				   |	ВТ_ТабличнаяЧасть.ДокументПередачи,
	               |	ВТ_ТабличнаяЧасть.НомерСтроки
	               |ПОМЕСТИТЬ Материалы
	               |ИЗ
	               |	&ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Материалы.НомерСтроки,
	               |	Материалы.Номенклатура,
	               |	НоменклатураСправочник.си_ЯвляетсяСпецодеждойИнвентарем КАК ЯвляетсяСпецодеждойИнвентарем,
	               |	Материалы.НазначениеИспользования,
	               |	Материалы.НазначениеИспользованияПолучатель,
				   |	Материалы.ДокументПередачи,
	               |	си_НазначенияИспользования.СпособПогашенияСтоимости,
	               |	си_НазначенияИспользованияПолучатель.СпособПогашенияСтоимости КАК СпособПогашенияСтоимостиПолучатель
	               |ИЗ
	               |	Материалы КАК Материалы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	               |		ПО Материалы.Номенклатура = НоменклатураСправочник.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
	               |		ПО Материалы.НазначениеИспользования = си_НазначенияИспользования.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользованияПолучатель
	               |		ПО Материалы.НазначениеИспользованияПолучатель = си_НазначенияИспользованияПолучатель.Ссылка";

	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоИсполнители()

Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
	
	общ_ПереопределяемыеПроцедурыБКСервер.ЗаполнитьШапкуДокументаПоОснованию(Объект, ДокументОснование);
	
	Объект.ДокументОснование = ДокументОснование;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПеремещениеМатериаловВЭксплуатации") Тогда
		ЗаполнитьПоПеремещению(Объект,"Заполнить", ДокументОснование);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПередачаМатериаловВЭксплуатацию") Тогда
		ЗаполнитьПоПередачеВЭксплуатацию(Объект,"Заполнить", ДокументОснование);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ВозвратМатериаловИзЭксплуатации") Тогда
		ЗаполнитьПоВозвратуИзЭксплуатацию(Объект,"Заполнить", ДокументОснование);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПриемкаСпецодеждыИИнвентаряПоХарактеристикам") Тогда
		ЗаполнитьПоПриемкеСпецодеждыПоХарактеристикам(Объект,"Заполнить", ДокументОснование);
	КонецЕсли;
	
КонецПроцедуры   

Процедура ЗаполнитьПоПеремещению(Объект, Режим, Основание) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличнаяЧасть = Объект.Материалы;
	
	Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	// Заполнение шапки
	Объект.ВидУчетаНУ 							= Основание.ВидУчетаНУ;
	Объект.ПодразделениеОрганизации 			= Основание.ПодразделениеОрганизацииПолучатель;
	Объект.Склад 								= Основание.СкладПолучатель;
	Объект.СкладПолучатель						= Основание.СкладПолучатель;
	Объект.СтруктурноеПодразделение 			= Основание.СтруктурноеПодразделениеПолучатель;
	Объект.СтруктурноеПодразделениеПолучатель 	= Основание.СтруктурноеПодразделениеПолучатель;
	Объект.УчитыватьКПН 						= Основание.УчитыватьКПН;
	Объект.СостояниеМатериалов 					= Основание.СостояниеМатериалов;
	
	Для Каждого ВыборкаПоТоварам Из Основание.Материалы Цикл
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.ЕдиницаИзмерения 		= ВыборкаПоТоварам.ЕдиницаИзмерения;
		НоваяСтрока.Количество 				= ВыборкаПоТоварам.Количество;
		НоваяСтрока.Коэффициент 			= ВыборкаПоТоварам.Коэффициент;
		НоваяСтрока.НазначениеИспользования	= ВыборкаПоТоварам.НазначениеИспользованияПолучатель;
		НоваяСтрока.НазначениеИспользованияПолучатель = ВыборкаПоТоварам.НазначениеИспользованияПолучатель;
		НоваяСтрока.Номенклатура 			= ВыборкаПоТоварам.Номенклатура;
		НоваяСтрока.Сотрудник 				= ВыборкаПоТоварам.СотрудникПолучатель;
		НоваяСтрока.СотрудникПолучатель		= ВыборкаПоТоварам.СотрудникПолучатель;
		НоваяСтрока.ДокументПередачи 		= ВыборкаПоТоварам.ДокументПередачи;
		НоваяСтрока.Характеристика	 		= ВыборкаПоТоварам.Характеристика;
		НоваяСтрока.ДокументВозврата 		= ВыборкаПоТоварам.ДокументВозврата;
	КонецЦикла;


КонецПроцедуры

Процедура ЗаполнитьПоПередачеВЭксплуатацию(Объект, Режим, Основание) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличнаяЧасть = Объект.Материалы;
	
	Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	// Заполнение шапки
	Объект.ВидУчетаНУ 							= Основание.ВидУчетаНУ;
	Объект.ПодразделениеОрганизации 			= Основание.ПодразделениеОрганизации;
	Объект.Склад 								= Основание.Склад;
	Объект.СкладПолучатель						= Основание.Склад;
	Объект.СтруктурноеПодразделение 			= Основание.СтруктурноеПодразделение;
	Объект.СтруктурноеПодразделениеПолучатель 	= Основание.СтруктурноеПодразделение;
	Объект.УчитыватьКПН 						= Основание.УчитыватьКПН;
	
	Для Каждого ВыборкаПоТоварам Из Основание.Материалы Цикл
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.ЕдиницаИзмерения 		= ВыборкаПоТоварам.ЕдиницаИзмерения;
		НоваяСтрока.Количество 				= ВыборкаПоТоварам.Количество;
		НоваяСтрока.Коэффициент 			= ВыборкаПоТоварам.Коэффициент;
		НоваяСтрока.НазначениеИспользования	= ВыборкаПоТоварам.НазначениеИспользования;
		НоваяСтрока.НазначениеИспользованияПолучатель = ВыборкаПоТоварам.НазначениеИспользования;
		НоваяСтрока.Номенклатура 			= ВыборкаПоТоварам.Номенклатура;
		НоваяСтрока.Сотрудник 				= ВыборкаПоТоварам.Сотрудник;
		НоваяСтрока.ДокументПередачи 		= ?(Основание.ВидОперации = ПредопределенноеЗначение("Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача"),Основание.Ссылка,ВыборкаПоТоварам.ДокументПередачи);
		НоваяСтрока.Характеристика			= ВыборкаПоТоварам.Характеристика;
	КонецЦикла;


КонецПроцедуры

Процедура ЗаполнитьПоВозвратуИзЭксплуатацию(Объект, Режим, Основание) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличнаяЧасть = Объект.Материалы;
	
	Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	// Заполнение шапки
	Объект.ВидУчетаНУ 							= Основание.ВидУчетаНУ;
	Объект.ПодразделениеОрганизации 			= Основание.ПодразделениеОрганизации;
	Объект.Склад 								= Основание.Склад;
	Объект.СкладПолучатель						= Основание.Склад;
	Объект.СтруктурноеПодразделение 			= Основание.СтруктурноеПодразделение;
	Объект.СтруктурноеПодразделениеПолучатель 	= Основание.СтруктурноеПодразделение;
	Объект.УчитыватьКПН 						= Основание.УчитыватьКПН;
	Объект.СостояниеМатериалов					= Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе;
	
	Для Каждого ВыборкаПоТоварам Из Основание.Материалы Цикл
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.ЕдиницаИзмерения 		= ВыборкаПоТоварам.ЕдиницаИзмерения;
		НоваяСтрока.Количество 				= ВыборкаПоТоварам.Количество;
		НоваяСтрока.Коэффициент 			= ВыборкаПоТоварам.Коэффициент;
		НоваяСтрока.НазначениеИспользования	= ВыборкаПоТоварам.НазначениеИспользования;
		НоваяСтрока.НазначениеИспользованияПолучатель = ВыборкаПоТоварам.НазначениеИспользования;
		НоваяСтрока.Номенклатура 			= ВыборкаПоТоварам.Номенклатура;
		НоваяСтрока.Сотрудник 				= ВыборкаПоТоварам.Сотрудник;
		//НоваяСтрока.СотрудникПолучатель		= ВыборкаПоТоварам.Сотрудник;
		НоваяСтрока.ДокументПередачи 		= ВыборкаПоТоварам.ДокументПередачи;
		НоваяСтрока.Характеристика			= ВыборкаПоТоварам.Характеристика;
		НоваяСтрока.ДокументВозврата		= Основание.Ссылка;
	КонецЦикла;


КонецПроцедуры

Процедура ЗаполнитьПоПриемкеСпецодеждыПоХарактеристикам(Объект, Режим, Основание) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличнаяЧасть = Объект.Материалы;
	
	Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	// Заполнение шапки
	Объект.ВидУчетаНУ 							= Основание.ВидУчетаНУ;
	Объект.Склад 								= Основание.Склад;
	Объект.СкладПолучатель						= Основание.Склад;
	Объект.СтруктурноеПодразделение 			= Основание.СтруктурноеПодразделение;
	Объект.СтруктурноеПодразделениеПолучатель 	= Основание.СтруктурноеПодразделение;
	Объект.УчитыватьКПН 						= Основание.УчитыватьКПН;
	Объект.СостояниеМатериалов					= Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая;
	Для Каждого ВыборкаПоТоварам Из Основание.Материалы Цикл
		НоваяСтрока = Объект.Материалы.Добавить();
		НоваяСтрока.ЕдиницаИзмерения 		= ВыборкаПоТоварам.ЕдиницаИзмерения;
		НоваяСтрока.Количество 				= ВыборкаПоТоварам.Количество;
		НоваяСтрока.Коэффициент 			= ВыборкаПоТоварам.Коэффициент;
		НоваяСтрока.Номенклатура 			= ВыборкаПоТоварам.Номенклатура;
		НоваяСтрока.Характеристика			= ВыборкаПоТоварам.Характеристика;
	КонецЦикла;

КонецПроцедуры

Процедура АвтозаполнениеСпискомСотрудников(Форма, Адрес) Экспорт
		
	Объект 									= Форма.Объект;
	Элементы 								= Форма.Элементы;
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(Объект.Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;

	ВыбранныеЭлементы = ПолучитьИзВременногоХранилища(Адрес);
	Если ТипЗнч(ВыбранныеЭлементы) = Тип("ТаблицаЗначений") Тогда
		Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
			СпособРасчетаНормВыдачиСпецодежды   = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.СпособРасчетаНормВыдачиСпецодеждыИИнвентаря;
		Иначе
			СпособРасчетаНормВыдачиСпецодежды   = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма;
		КонецЕсли;
		ВыбранныеЭлементы.Свернуть("Сотрудник, Должность");
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период", Объект.Дата);
		Запрос.УстановитьПараметр("Сотрудники", ВыбранныеЭлементы);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);	
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);	
		
		Способ = ?(СпособРасчетаНормВыдачиСпецодежды = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма, "СУММА", "МАКСИМУМ");
		
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Сотрудники.Сотрудник,
		               |	Сотрудники.Должность
		               |ПОМЕСТИТЬ СписокФД
		               |ИЗ
		               |	&Сотрудники КАК Сотрудники
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	си_МатериалыВЭксплуатацииОстатки.Организация,
		               |	си_МатериалыВЭксплуатацииОстатки.СтруктурноеПодразделение,
		               |	си_МатериалыВЭксплуатацииОстатки.ПодразделениеОрганизации,
		               |	си_МатериалыВЭксплуатацииОстатки.Номенклатура,
		               |	си_МатериалыВЭксплуатацииОстатки.ДокументПередачи,
		               |	си_МатериалыВЭксплуатацииОстатки.Сотрудник,
		               |	си_МатериалыВЭксплуатацииОстатки.НазначениеИспользования,
					   |	си_МатериалыВЭксплуатацииОстатки.НазначениеИспользования КАК НазначениеИспользованияПолучатель,
		               |	си_МатериалыВЭксплуатацииОстатки.ВидУчетаНУ,
		               |	си_МатериалыВЭксплуатацииОстатки.ОстаточныйСрокИспользования,
		               |	си_МатериалыВЭксплуатацииОстатки.Характеристика,
		               |	си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток КАК Количество,
		               |	си_МатериалыВЭксплуатацииОстатки.СтоимостьОстаток КАК Стоимость,
		               |	си_МатериалыВЭксплуатацииОстатки.СписаннаяСтоимостьОстаток КАК СписаннаяСтоимость
		               |ИЗ
		               |	РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(
		               |			&Период,
		               |			Организация = &Организация
		               |				И СтруктурноеПодразделение = &СтруктурноеПодразделение
		               |				И Сотрудник В
		               |					(ВЫБРАТЬ
		               |						СписокФД.Сотрудник
		               |					ИЗ
		               |						СписокФД КАК СписокФД)) КАК си_МатериалыВЭксплуатацииОстатки";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Объект.Материалы.Загрузить(РезультатЗапроса.Выгрузить());
		Объект.Материалы.Сортировать("Сотрудник, Номенклатура, НазначениеИспользования");
		
		Для Каждого ТекСтрока Из Объект.Материалы Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Коэффициент) Тогда
				ТекСтрока.Коэффициент = 1;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекСтрока.ЕдиницаИзмерения) Тогда
				ТекСтрока.ЕдиницаИзмерения = ТекСтрока.Номенклатура.БазоваяЕдиницаИзмерения;
			КонецЕсли;
						
			СведенияОНоменклатуре = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСведенияОНоменклатуре(ТекСтрока.Номенклатура, Объект);
			
			//Если Не СведенияОНоменклатуре = Неопределено Тогда
			//	
			//КонецЕсли;
			
		КонецЦикла;
					
		Если Объект.Материалы.Количество() > 0 Тогда
			Элементы.Материалы.ТекущаяСтрока = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ДополнительныеПараметрыЗапросов = Новый Структура();
	ДополнительныеПараметрыЗапросов.Вставить("СодержаниеСписаныТМЗ", 			НСтр("ru='Списаны ТМЗ'"));
	ДополнительныеПараметрыЗапросов.Вставить("Организация", 				ДокументСсылка.Организация);
	ДополнительныеПараметрыЗапросов.Вставить("ВидУчетаНУ", 					ДокументСсылка.ВидУчетаНУ);
	ДополнительныеПараметрыЗапросов.Вставить("Склад", 						ДокументСсылка.Склад);
	ДополнительныеПараметрыЗапросов.Вставить("Ссылка", 						ДокументСсылка);
	ДополнительныеПараметрыЗапросов.Вставить("СтруктурноеПодразделение", 	ДокументСсылка.СтруктурноеПодразделение);
	ДополнительныеПараметрыЗапросов.Вставить("МоментВремени", 				Новый МоментВремени(ДокументСсылка.Дата,ДокументСсылка));
	ДополнительныеПараметрыЗапросов.Вставить("СкладОстатков", 				ДокументСсылка.Склад);
	ДополнительныеПараметрыЗапросов.Вставить("ПодразделениеОстатков", 		ДокументСсылка.ПодразделениеОрганизации);
	
	
	ДополнительныеЗапросы = Новый Массив;
	ДополнительныеЗапросы.Добавить("ОстаткиМатериалов");
	Если ДокументСсылка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
		ИЛИ ДокументСсылка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда	
		ДополнительныеЗапросы.Добавить("СписаниеТоваров");
	КонецЕсли;
	
	Если ДокументСсылка.СнятиеСУчета Тогда
		Если ДокументСсылка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			ДополнительныеЗапросы.Добавить("СпецодеждаВЭксплуатации");
		Иначе
			ДополнительныеЗапросы.Добавить("СпецодеждаБУ");
		КонецЕсли;
		
		
		ДополнительныеПараметрыЗапросов.Вставить("НачалоПериода", 				НачалоМесяца(ДокументСсылка.Дата));
		ДополнительныеПараметрыЗапросов.Вставить("КонецПериода", 				КонецМесяца(ДокументСсылка.Дата));
		ДополнительныеПараметрыЗапросов.Вставить("НачалоПериодаВозврата",		НачалоМесяца(ДокументСсылка.Дата));
		ДополнительныеПараметрыЗапросов.Вставить("КонецПериодаВозврата",		КонецМесяца(ДокументСсылка.Дата));
	КонецЕсли;
	
	ПараметрыПроведения = си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ,Истина,Истина,,,,,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаОстаткиМатериалов(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ОстаткиМатериалов", НомераТаблиц.Количество());
	
	//ТекстЗапроса = ?(Реквизиты.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации,си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловВЭксплуатации(),си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловБУ());	
	
	ТекстЗапроса = ?(Реквизиты.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации,си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловВЭксплуатации(),си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловНаСкладе());
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("СписаниеТоваровРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.СтруктурноеПодразделениеПолучатель КАК КорСтруктурноеПодразделение,
	|	Реквизиты.УчитыватьКПН КАК УчитыватьКПН,
	|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	&СодержаниеСписаныТМЗ КАК Содержание,
	|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
	|	&ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

// Проверяет выдачу спецодежды и инвентаря по нормам выдачи.
//
Процедура ПроверитьПоНормамВыдачи(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ) Экспорт
	
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(СтруктураШапкиДокумента.Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	УчетПоФизЛицам = си_УчетСпецодеждыСервер.ПолучитьВедениеУчетаПоФизЛицам();
	//ВедетсяКонтрольВыдачиСпецодеждыПоНормам = Константы.си_КонтрольВыдачиСпецодеждыИИнвентаряПоНормам.Получить();
	Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
		СпособРасчетаНормВыдачиСпецодежды   = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.СпособРасчетаНормВыдачиСпецодеждыИИнвентаря;
	Иначе
		СпособРасчетаНормВыдачиСпецодежды   = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСпецодежды"  , ТаблицаПоТоварам);
	//Запрос.УстановитьПараметр("ТаблицаСпецодеждыБУ", ТаблицаПоТаварамБывшихВЭксплуатации);
	Запрос.УстановитьПараметр("Период"             , СтруктураШапкиДокумента.Дата);
	Запрос.УстановитьПараметр("Организация"        , СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", общ_ПереопределяемыеПроцедурыБКСервер.ГоловнаяОрганизация(СтруктураШапкиДокумента.Организация));
	Запрос.УстановитьПараметр("ПустаяДолжность"    , Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаДолжностей()].ПустаяСсылка());
	Запрос.УстановитьПараметр("Уволен"			   , Перечисления.ПричиныИзмененияСостояния.Увольнение);
	//Запрос.УстановитьПараметр("Ссылка"             , СтруктураШапкиДокумента.Ссылка);
	
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктураШапкиДокумента.СтруктурноеПодразделение);	
	Запрос.УстановитьПараметр("СтруктурноеПодразделениеПолучатель", СтруктураШапкиДокумента.СтруктурноеПодразделениеПолучатель);
	
	Способ = ?(СпособРасчетаНормВыдачиСпецодежды = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма, "СУММА", "МАКСИМУМ");

	ЕстьСтруктурноеПодразделение = (Метаданные.РегистрыСведений["РаботникиОрганизаций"].Ресурсы.Найти("СтруктурноеПодразделение") <> Неопределено);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|	- ВложенныйЗапрос.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаСпецодежды
	|ИЗ
	|	&ТаблицаСпецодежды КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.СотрудникПолучатель КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользованияПолучатель КАК НазначениеИспользования,
	|	ВложенныйЗапрос.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаСпецодеждыПолучатель
	|ИЗ
	|	&ТаблицаСпецодежды КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|	СУММА(ВложенныйЗапрос.Количество) КАК КоличествоВыдаваемое
	|ПОМЕСТИТЬ ТаблицаКВыдаче
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСпецодежды.Сотрудник КАК Сотрудник,
	|		ТаблицаСпецодежды.Номенклатура КАК Номенклатура,
	|		ТаблицаСпецодежды.НазначениеИспользования КАК НазначениеИспользования,
	|		СУММА(ТаблицаСпецодежды.Количество) КАК Количество
	|	ИЗ
	|		ТаблицаСпецодежды КАК ТаблицаСпецодежды
	|			
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСпецодежды.Номенклатура,
	|		ТаблицаСпецодежды.Сотрудник,
	|		ТаблицаСпецодежды.НазначениеИспользования
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|				
	|	ВЫБРАТЬ
	|		ТаблицаСпецодежды.Сотрудник,
	|		ТаблицаСпецодежды.Номенклатура,
	|		ТаблицаСпецодежды.НазначениеИспользования,
	|		СУММА(ТаблицаСпецодежды.Количество)
	|	ИЗ
	|		ТаблицаСпецодеждыПолучатель КАК ТаблицаСпецодежды
	|				
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСпецодежды.Номенклатура,
	|		ТаблицаСпецодежды.Сотрудник,
	|		ТаблицаСпецодежды.НазначениеИспользования
	|) КАК ВложенныйЗапрос
	|			
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Номенклатура,
	|	НазначениеИспользования
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПоРаботникуПриНазначении.Сотрудник" + ?(УчетПоФизЛицам, ".ФизЛицо","") + " КАК Сотрудник,
	|	ДанныеПоРаботникуПриНазначении.Должность КАК Должность
	|ПОМЕСТИТЬ СписокФД
	|ИЗ
	|	(ВЫБРАТЬ
    |		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,	
	//|		МАКСИМУМ(Работники.Период) КАК Период
	|		Работники.Период КАК Период

	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, 
	|					Организация = &ГоловнаяОрганизация
	|					И Сотрудник"+?(УчетПоФизЛицам,".ФизЛицо","") + " В (ВЫБРАТЬ
	|									Сотрудник 
	|								ИЗ 
	|									ТаблицаКВыдаче)) КАК РаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|				ПО РаботникиОрганизации.Сотрудник = Работники.Сотрудник
	|					И РаботникиОрганизации.Организация = Работники.Организация
	|					" + ?(ЕстьСтруктурноеПодразделение, "И (РаботникиОрганизации.СтруктурноеПодразделение = &СтруктурноеПодразделение)", "") + "
	|					И (Работники.ОбособленноеПодразделение = &Организация)
	|					И (Работники.Период <= РаботникиОрганизации.Период)
	|					И (Работники.ПричинаИзмененияСостояния <> &Уволен)
	//|		СГРУППИРОВАТЬ ПО
	//|			РаботникиОрганизации.Организация,
	//|			РаботникиОрганизации.Сотрудник
	|		) КАК ДатыПоследнихДвиженийРаботников
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
	|		ПО (ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период)
	|			И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуПриНазначении.Сотрудник
	|			И ДатыПоследнихДвиженийРаботников.Организация = ДанныеПоРаботникуПриНазначении.Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КПроверке.Сотрудник,
	|	КПроверке.Номенклатура,
	|	КПроверке.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КПроверке.НазначениеИспользования,
	|	ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) КАК КоличествоВыдано,
	|	КПроверке.КоличествоНорма,
	|	си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток,
	|	ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) - ЕСТЬNULL(КПроверке.КоличествоНорма, 0) КАК Нехватка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|		СУММА(ВложенныйЗапрос.КоличествоВыдаваемое) КАК КоличествоВыдаваемое,
	|		СУММА(ВложенныйЗапрос.КоличествоНорма) КАК КоличествоНорма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ФизЛицГрупКВыдаче.Сотрудник КАК Сотрудник,
	|			ФизЛицГрупКВыдаче.Номенклатура КАК Номенклатура,
	|			ФизЛицГрупКВыдаче.НазначениеИспользования КАК НазначениеИспользования,
	|			ФизЛицГрупКВыдаче.КоличествоВыдаваемое КАК КоличествоВыдаваемое,
	|			0 КАК КоличествоНорма
	|		ИЗ
	|			ТаблицаКВыдаче КАК ФизЛицГрупКВыдаче
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Сотрудники.Сотрудник КАК Сотрудник,
	|			НормыФизЛица.СпецодеждаИнвентарь КАК Номенклатура,
	|			НормыФизЛица.НазначениеИспользования КАК НазначениеИспользования,
	|			0 КАК КоличествоВыдаваемое,
	|			НормыФизЛица.Количество КАК КоличествоНорма
	|		ИЗ
	|			ТаблицаКВыдаче КАК Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&Период,
	|						Организация = &Организация
	|							И Должность = &ПустаяДолжность
	|							И (СпецодеждаИнвентарь, НазначениеИспользования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ ТаблицаКВыдаче.Номенклатура, ТаблицаКВыдаче.НазначениеИспользования ИЗ ТаблицаКВыдаче)) КАК НормыФизЛица
	|				ПО Сотрудники.Сотрудник = НормыФизЛица.Сотрудник
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|			
	|		ВЫБРАТЬ
	|			ВложенныйЗапрос.Сотрудник,
	|			ВложенныйЗапрос.Номенклатура,
	|			ВложенныйЗапрос.НазначениеИспользования,
	|			0 КАК КоличествоВыдаваемое,
	|			ВложенныйЗапрос.Количество КАК КоличествоНорма
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ФизЛицаДолжности.Сотрудник КАК Сотрудник,
	|				НормыДолжности.СпецодеждаИнвентарь КАК Номенклатура,
	|				НормыДолжности.НазначениеИспользования КАК НазначениеИспользования,
	|				" + Способ + "(НормыДолжности.Количество)  КАК Количество
	|			ИЗ
	|				СписокФД КАК ФизЛицаДолжности
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&Период,
	|						Организация = &Организация
	|							И Должность <> &ПустаяДолжность
	|							И (СпецодеждаИнвентарь, НазначениеИспользования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ ТаблицаКВыдаче.Номенклатура, ТаблицаКВыдаче.НазначениеИспользования ИЗ ТаблицаКВыдаче)) КАК НормыДолжности
	|				ПО ФизЛицаДолжности.Должность = НормыДолжности.Должность
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ФизЛицаДолжности.Сотрудник,
	|				НормыДолжности.СпецодеждаИнвентарь,
	|				НормыДолжности.НазначениеИспользования) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Сотрудник,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.НазначениеИспользования) КАК КПроверке
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток
	|						ИЗ
	|							РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(&Период, 
	|								Организация = &Организация
	|								И СтруктурноеПодразделение = &СтруктурноеПодразделение
	|								И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									 Сотрудник
	|								 ИЗ
	|									 ТаблицаКВыдаче)) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|						ГДЕ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток > 0) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|		ПО КПроверке.Сотрудник = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник
	|			И КПроверке.Номенклатура = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура
	|			И КПроверке.НазначениеИспользования = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования
	|ГДЕ
	|	ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) - ЕСТЬNULL(КПроверке.КоличествоНорма, 0) > 0";
	


	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = "Для спецодежды (инвентаря) """ + Выборка.Номенклатура + """, физического лица """
			+ Выборка.Сотрудник + """ и назначению использования """ + Выборка.НазначениеИспользования + """ превышена норма выдачи на "
			+ Выборка.Нехватка + " " + Выборка.ЕдиницаИзмерения;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЦикла;
	
КонецПроцедуры // ПроверитьПоНормамВыдачи()

Функция ТекстЗапросаСпецодеждаВЭксплуатации(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт

	//ЭтоБСО = си_УчетСпецодеждыСерверПовтИсп.ПроверкаНаБСО();
	//Если ЭтоБСО Тогда 
	//	
	//Иначе
		ТекстЗапроса = "";
	
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументПередачи,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ЕдиницаИзмерения,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Количество,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НазначениеИспользования,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Номенклатура,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Сотрудник,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Характеристика,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументВозврата,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.СчетУчетаПолучатель,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.ПодразделениеОрганизации,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Коэффициент,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НомерСтроки
			|ПОМЕСТИТЬ ВТ_ТабДок
			|ИЗ
			|	Документ.си_ПеремещениеМатериаловВЭксплуатации.Материалы КАК си_ПеремещениеМатериаловВЭксплуатацииМатериалы
			|ГДЕ
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	си_МатериалыВЭксплуатацииОстатки.ВидУчетаНУ,
			|	си_МатериалыВЭксплуатацииОстатки.ОстаточныйСрокИспользования,
			|	си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток КАК КоличествоОстаток,
			|	си_МатериалыВЭксплуатацииОстатки.СтоимостьОстаток КАК СтоимостьОстаток,
			|	си_МатериалыВЭксплуатацииОстатки.СписаннаяСтоимостьОстаток КАК СписаннаяСтоимость,
			|	ВТ_ТабДок.ДокументПередачи КАК ДокументПередачи,
			|	ВТ_ТабДок.ЕдиницаИзмерения,
			|	ВТ_ТабДок.Количество КАК Количество,
			|	ВТ_ТабДок.НазначениеИспользования КАК НазначениеИспользования,
			|	ВТ_ТабДок.Номенклатура КАК Номенклатура,
			|	ВТ_ТабДок.Сотрудник КАК Сотрудник,
			|	ВТ_ТабДок.Характеристика КАК Характеристика,
			|	ВТ_ТабДок.ДокументВозврата,
			|	ВТ_ТабДок.СчетУчетаПолучатель,
			|	ВТ_ТабДок.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	ВЫБОР
			|		КОГДА НЕ си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток = 0
			|			ТОГДА си_МатериалыВЭксплуатацииОстатки.СписаннаяСтоимостьОстаток / си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток * ВТ_ТабДок.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Стоимость,
			|	ВТ_ТабДок.Коэффициент,
			|	ВТ_ТабДок.НомерСтроки
			|ПОМЕСТИТЬ ВТ_Материалы
			|ИЗ
			|	ВТ_ТабДок КАК ВТ_ТабДок
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(
			|				&МоментВремени,
			|				Организация = &Организация
			|					И СтруктурноеПодразделение = &СтруктурноеПодразделение
			|					И (Номенклатура, Характеристика, НазначениеИспользования, Сотрудник, ДокументПередачи, ПодразделениеОрганизации) В
			|						(ВЫБРАТЬ
			|							ВТ_ТабДок.Номенклатура,
			|							ВТ_ТабДок.Характеристика,
			|							ВТ_ТабДок.НазначениеИспользования,
			|							ВТ_ТабДок.Сотрудник,
			|							ВТ_ТабДок.ДокументПередачи,
			|							ВТ_ТабДок.ПодразделениеОрганизации
			|						ИЗ
			|							ВТ_ТабДок КАК ВТ_ТабДок)) КАК си_МатериалыВЭксплуатацииОстатки
			|		ПО ВТ_ТабДок.Номенклатура = си_МатериалыВЭксплуатацииОстатки.Номенклатура
			|			И ВТ_ТабДок.Характеристика = си_МатериалыВЭксплуатацииОстатки.Характеристика
			|			И ВТ_ТабДок.ДокументПередачи = си_МатериалыВЭксплуатацииОстатки.ДокументПередачи
			|			И ВТ_ТабДок.НазначениеИспользования = си_МатериалыВЭксплуатацииОстатки.НазначениеИспользования
			|			И ВТ_ТабДок.Сотрудник = си_МатериалыВЭксплуатацииОстатки.Сотрудник
			|			И ВТ_ТабДок.ПодразделениеОрганизации = си_МатериалыВЭксплуатацииОстатки.ПодразделениеОрганизации
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	си_НазначенияИспользования.СпособПогашенияСтоимости,
			|	СпособыОтраженияРасходовПоАмортизации.Способы.(
			|		Ссылка,
			|		НомерСтроки,
			|		СчетЗатрат,
			|		Субконто1,
			|		Субконто2,
			|		Субконто3,
			|		Коэффициент
			|	),
			|	МатериалыВЭксплуатации.ВидУчетаНУ,
			|	МатериалыВЭксплуатации.ЕдиницаИзмерения,
			|	МатериалыВЭксплуатации.Номенклатура,
			|	МатериалыВЭксплуатации.Характеристика,
			|	МатериалыВЭксплуатации.Сотрудник,
			|	МатериалыВЭксплуатации.Количество,
			|	МатериалыВЭксплуатации.НазначениеИспользования,
			|	МатериалыВЭксплуатации.ПодразделениеОрганизации,
			|	МатериалыВЭксплуатации.ДокументПередачи,
			|	МатериалыВЭксплуатации.СчетУчетаПолучатель,
			|	МатериалыВЭксплуатации.Коэффициент,
			|	МатериалыВЭксплуатации.ДокументВозврата,
			//|	МатериалыВЭксплуатации.ОстаточныйСрокИспользования,
			|	МатериалыВЭксплуатации.НомерСтроки
			|ИЗ
			|	ВТ_Материалы КАК МатериалыВЭксплуатации
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
			|			ПО си_НазначенияИспользования.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизации.Ссылка
			|		ПО МатериалыВЭксплуатации.НазначениеИспользования = си_НазначенияИспользования.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Материалы.Сотрудник
			|ПОМЕСТИТЬ ВТ_Сотрудники
			|ИЗ
			|	ВТ_Материалы КАК ВТ_Материалы
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Материалы.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВыработкаМатериалов.ПодразделениеОрганизации,
			|	ВыработкаМатериалов.Номенклатура,
			|	ВыработкаМатериалов.Характеристика КАК Характеристика,
			|	ВыработкаМатериалов.ДокументПередачи,
			|	ВыработкаМатериалов.Сотрудник,
			|	ВыработкаМатериалов.НазначениеИспользования,
			|	ВыработкаМатериалов.ОбъектСтроительства,
			|	ВыработкаМатериалов.КоличествоОборотовОборот * ВыработкаМатериалов.КоличествоОборот КАК Оборотов,
			|	ВыработкаМатериалов.Регистратор
			|ИЗ
			|	РегистрНакопления.си_ВыработкаМатериаловВЭксплуатации.Обороты(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			Авто,
			|			Организация = &Организация
			|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ВыработкаМатериалов"
			+ общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
			
			НомераТаблиц.Вставить("ТаблицаВспомогательнаяТабДок",	НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаВспомогательнаяМатериалы",	НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаСпецодежда", 					НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаВспомогательнаяСотрудники",	НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаВыработкаМатериалов", 		НомераТаблиц.Количество());
	//КонецЕсли;
		
	Возврат ТекстЗапроса;	
КонецФункции 

Функция ТекстЗапросаСпецодеждаБУ(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт

	//ЭтоБСО = си_УчетСпецодеждыСерверПовтИсп.ПроверкаНаБСО();
	//Если ЭтоБСО Тогда 
	//	
	//Иначе
		ТекстЗапроса = "";
	
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументПередачи,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ЕдиницаИзмерения,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Количество,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НазначениеИспользования,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Номенклатура,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Сотрудник,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Характеристика,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументВозврата,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.СчетУчетаПолучатель,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.ПодразделениеОрганизации,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Коэффициент,
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НомерСтроки
			|ПОМЕСТИТЬ ВТ_ТабДок
			|ИЗ
			|	Документ.си_ПеремещениеМатериаловВЭксплуатации.Материалы КАК си_ПеремещениеМатериаловВЭксплуатацииМатериалы
			|ГДЕ
			|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	си_МатериалыНаСкладеОстатки.ВидУчетаНУ,
			|	си_МатериалыНаСкладеОстатки.ОстаточныйСрокИспользования,
			|	си_МатериалыНаСкладеОстатки.КоличествоОстаток КАК КоличествоОстаток,
			|	си_МатериалыНаСкладеОстатки.СтоимостьОстаток КАК СтоимостьОстаток,
			|	си_МатериалыНаСкладеОстатки.СписаннаяСтоимостьОстаток КАК СписаннаяСтоимость,
			|	ВТ_ТабДок.ДокументПередачи КАК ДокументПередачи,
			|	ВТ_ТабДок.ЕдиницаИзмерения,
			|	ВТ_ТабДок.Количество КАК Количество,
			|	ВТ_ТабДок.НазначениеИспользования КАК НазначениеИспользования,
			|	ВТ_ТабДок.Номенклатура КАК Номенклатура,
			|	ВТ_ТабДок.Сотрудник КАК Сотрудник,
			|	ВТ_ТабДок.Характеристика КАК Характеристика,
			|	ВТ_ТабДок.ДокументВозврата,
			|	ВТ_ТабДок.СчетУчетаПолучатель,
			|	ВТ_ТабДок.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	ВЫБОР
			|		КОГДА НЕ си_МатериалыНаСкладеОстатки.КоличествоОстаток = 0
			|			ТОГДА си_МатериалыНаСкладеОстатки.СписаннаяСтоимостьОстаток / си_МатериалыНаСкладеОстатки.КоличествоОстаток * ВТ_ТабДок.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Стоимость,
			|	ВТ_ТабДок.Коэффициент,
			|	ВТ_ТабДок.НомерСтроки
			|ПОМЕСТИТЬ ВТ_Материалы
			|ИЗ
			|	ВТ_ТабДок КАК ВТ_ТабДок
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыНаСкладе.Остатки(, ) КАК си_МатериалыНаСкладеОстатки
			|		ПО ВТ_ТабДок.Номенклатура = си_МатериалыНаСкладеОстатки.Номенклатура
			|			И ВТ_ТабДок.Характеристика = си_МатериалыНаСкладеОстатки.Характеристика
			|			И ВТ_ТабДок.ДокументПередачи = си_МатериалыНаСкладеОстатки.ДокументПередачи
			|			И ВТ_ТабДок.НазначениеИспользования = си_МатериалыНаСкладеОстатки.НазначениеИспользования
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	си_НазначенияИспользования.СпособПогашенияСтоимости,
			|	СпособыОтраженияРасходовПоАмортизации.Способы.(
			|		Ссылка,
			|		НомерСтроки,
			|		СчетЗатрат,
			|		Субконто1,
			|		Субконто2,
			|		Субконто3,
			|		Коэффициент
			|	),
			|	МатериалыВЭксплуатации.ВидУчетаНУ,
			|	МатериалыВЭксплуатации.ЕдиницаИзмерения,
			|	МатериалыВЭксплуатации.Номенклатура,
			|	МатериалыВЭксплуатации.Характеристика,
			|	МатериалыВЭксплуатации.Сотрудник,
			|	МатериалыВЭксплуатации.Количество,
			|	МатериалыВЭксплуатации.НазначениеИспользования,
			|	МатериалыВЭксплуатации.ПодразделениеОрганизации,
			|	МатериалыВЭксплуатации.ДокументПередачи,
			|	МатериалыВЭксплуатации.СчетУчетаПолучатель,
			|	МатериалыВЭксплуатации.Коэффициент,
			|	МатериалыВЭксплуатации.ДокументВозврата,
			//|	МатериалыВЭксплуатации.ОстаточныйСрокИспользования,
			|	МатериалыВЭксплуатации.НомерСтроки
			|ИЗ
			|	ВТ_Материалы КАК МатериалыВЭксплуатации
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
			|			ПО си_НазначенияИспользования.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизации.Ссылка
			|		ПО МатериалыВЭксплуатации.НазначениеИспользования = си_НазначенияИспользования.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Материалы.Сотрудник
			|ПОМЕСТИТЬ ВТ_Сотрудники
			|ИЗ
			|	ВТ_Материалы КАК ВТ_Материалы
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Материалы.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВыработкаМатериалов.ПодразделениеОрганизации,
			|	ВыработкаМатериалов.Номенклатура,
			|	ВыработкаМатериалов.Характеристика КАК Характеристика,
			|	ВыработкаМатериалов.ДокументПередачи,
			|	ВыработкаМатериалов.Сотрудник,
			|	ВыработкаМатериалов.НазначениеИспользования,
			|	ВыработкаМатериалов.ОбъектСтроительства,
			|	ВыработкаМатериалов.КоличествоОборотовОборот * ВыработкаМатериалов.КоличествоОборот КАК Оборотов,
			|	ВыработкаМатериалов.Регистратор
			|ИЗ
			|	РегистрНакопления.си_ВыработкаМатериаловВЭксплуатации.Обороты(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			Авто,
			|			Организация = &Организация
			|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ВыработкаМатериалов"
			+ общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
			
			НомераТаблиц.Вставить("ТаблицаВспомогательнаяТабДок",	НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаВспомогательнаяМатериалы",	НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаСпецодежда", 					НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаВспомогательнаяСотрудники",	НомераТаблиц.Количество());
			НомераТаблиц.Вставить("ТаблицаВыработкаМатериалов", 		НомераТаблиц.Количество());
	//КонецЕсли;
		
	Возврат ТекстЗапроса;	
КонецФункции 

// Процедура формирования печатной формы ПеремещенияМатериалов
//
Функция ПечатьПеремещениеМатериалов1(МассивОбъектов, ОбъектыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_ПеремещениеМатериаловВЭксплуатации.ПФ_MXL_ПеремещениеМатериалов");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_си_ПеремещениеМатериаловВЭксплуатации_ПеремещениеМатериалов";
	
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПеремещениеМатериаловВЭксплуатации.Автор,
		               |	ПеремещениеМатериаловВЭксплуатации.Ответственный,
		               |	ПеремещениеМатериаловВЭксплуатации.Комментарий,
		               |	ПеремещениеМатериаловВЭксплуатации.ВидУчетаНУ,
		               |	ПеремещениеМатериаловВЭксплуатации.УчитыватьКПН,
		               |	ПеремещениеМатериаловВЭксплуатации.ДокументОснование,
		               |	ПеремещениеМатериаловВЭксплуатации.Организация,
		               |	ПеремещениеМатериаловВЭксплуатации.Организация.Представление КАК ПечОрганизация,
		               |	ПеремещениеМатериаловВЭксплуатации.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		               |	ПеремещениеМатериаловВЭксплуатации.СостояниеМатериалов,
		               |	ПеремещениеМатериаловВЭксплуатации.ПодразделениеОрганизации КАК Подразделение,
		               |	ПеремещениеМатериаловВЭксплуатации.ПодразделениеОрганизации.Представление КАК ПечПодразделение,
		               |	ПеремещениеМатериаловВЭксплуатации.ПодразделениеОрганизацииПолучатель,
		               |	ПеремещениеМатериаловВЭксплуатации.Склад,
		               |	ПеремещениеМатериаловВЭксплуатации.СкладПолучатель,
		               |	ПеремещениеМатериаловВЭксплуатации.Дата,
		               |	ПеремещениеМатериаловВЭксплуатации.Номер
		               |ИЗ
		               |	Документ.си_ПеремещениеМатериаловВЭксплуатации КАК ПеремещениеМатериаловВЭксплуатации
		               |ГДЕ
		               |	ПеремещениеМатериаловВЭксплуатации.Ссылка = &Ссылка";
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр( "Ссылка",   ДокументСсылка);
		РезультатЗапроса = Запрос.Выполнить();
		Шапка = РезультатЗапроса.Выбрать();
		Шапка.Следующий();
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		               |	Материалы.Ссылка,
		               |	Материалы.Номенклатура,
		               |	Материалы.Номенклатура.Код КАК Код,
		               |	Материалы.Номенклатура.Артикул КАК Артикул,
		               |	Материалы.Номенклатура.Представление КАК ПечНоменклатура,
		               |	Материалы.ЕдиницаИзмерения,
		               |	Материалы.ЕдиницаИзмерения.Представление КАК ПечЕдиницаИзмерения,
		               |	Материалы.Коэффициент,
		               |	Материалы.Количество,
		               |	Материалы.НазначениеИспользования,
		               |	Материалы.НазначениеИспользованияПолучатель,
		               |	Материалы.Сотрудник КАК ФизЛицо,
		               |	Материалы.Сотрудник.Представление КАК ПечФизЛицо,
		               |	Материалы.СотрудникПолучатель КАК ФизЛицоПолучатель,
		               |	Материалы.СотрудникПолучатель.Представление КАК ПечФизЛицоПолучатель,
		               |	Материалы.ДокументПередачи,
		               |	Материалы.НомерСтроки,
		               |	си_МатериалыВЭксплуатации.Стоимость КАК Стоимость
		               |ИЗ
		               |	Документ.си_ПеремещениеМатериаловВЭксплуатации.Материалы КАК Материалы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыВЭксплуатации КАК си_МатериалыВЭксплуатации
		               |		ПО Материалы.Номенклатура = си_МатериалыВЭксплуатации.Номенклатура
		               |			И Материалы.Ссылка = си_МатериалыВЭксплуатации.Регистратор
		               |			И Материалы.Сотрудник = си_МатериалыВЭксплуатации.Сотрудник
		               |ГДЕ
		               |	Материалы.Ссылка = &Ссылка
		               |	И Материалы.Сотрудник <> ЗНАЧЕНИЕ(Справочник."+си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()+".ПустаяСсылка)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Материалы.Ссылка,
		               |	Материалы.Номенклатура,
		               |	Материалы.Номенклатура.Код,
		               |	Материалы.Номенклатура.Артикул,
		               |	Материалы.Номенклатура.Представление,
		               |	Материалы.ЕдиницаИзмерения,
		               |	Материалы.ЕдиницаИзмерения.Представление,
		               |	Материалы.Коэффициент,
		               |	Материалы.Количество,
		               |	Материалы.НазначениеИспользования,
		               |	Материалы.НазначениеИспользованияПолучатель,
		               |	Материалы.Сотрудник,
		               |	Материалы.Сотрудник.Представление,
		               |	Материалы.СотрудникПолучатель,
		               |	Материалы.СотрудникПолучатель.Представление,
		               |	Материалы.ДокументПередачи,
		               |	Материалы.НомерСтроки,
		               |	си_МатериалыНаСкладе.Стоимость
		               |ИЗ
		               |	Документ.си_ПеремещениеМатериаловВЭксплуатации.Материалы КАК Материалы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыНаСкладе КАК си_МатериалыНаСкладе
		               |		ПО Материалы.Ссылка = си_МатериалыНаСкладе.Регистратор
		               |			И Материалы.Номенклатура = си_МатериалыНаСкладе.Номенклатура
		               |			И Материалы.Ссылка.Склад = си_МатериалыНаСкладе.Склад
		               |ГДЕ
		               |	Материалы.Ссылка = &Ссылка
		               |	И Материалы.Ссылка.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)";
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр( "Ссылка",   ДокументСсылка);
		ТабЧасть = Запрос.Выполнить().Выбрать();	
		Область = Макет.ПолучитьОбласть("Заголовок");
		НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(ДокументСсылка.Номер, ДокументСсылка.Ссылка);
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
			Область.Параметры.Заголовок = "Перемещение возвращенных из эксплуатации материалов № "+НомерДокумента+" от "+Шапка.Дата+"";
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			Область.Параметры.Заголовок = "Перемещение материалов в эксплуатации № "+НомерДокумента+" от "+Шапка.Дата+"";
		КонецЕсли;
		
		СведенияОбОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		Область.Параметры.ПечОрганизация = СведенияОбОрганизации.ПолноеНаименование;	
		Область.Параметры.Подразделение    = Шапка.Подразделение;
		Область.Параметры.ПечПодразделение = Шапка.ПечПодразделение;
		
		ТабДок.Вывести(Область);
		
		
		
		ДопКолонка    = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		ФлагВыводКода = (НЕ ПустаяСтрока(ДопКолонка) И НЕ ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить);
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВозвращеныИзЭксплуатации|Материал");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВЭксплуатации|Материал");
		КонецЕсли;
		ТабДок.Вывести(Область);
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВозвращеныИзЭксплуатации|Данные");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВЭксплуатации|Данные");
		КонецЕсли;
		
		ТабДок.Присоединить(Область);
		
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
			ОбластьМат = Макет.ПолучитьОбласть("ТабСтрокаВозвращеныИзЭксплуатации|Материал");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			ОбластьМат = Макет.ПолучитьОбласть("ТабСтрокаВЭксплуатации|Материал");
		КонецЕсли;
		
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
			ОбластьДанные = Макет.ПолучитьОбласть("ТабСтрокаВозвращеныИзЭксплуатации|Данные");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			ОбластьДанные = Макет.ПолучитьОбласть("ТабСтрокаВЭксплуатации|Данные");
		КонецЕсли;

		Пока ТабЧасть.Следующий() Цикл
			ОбластьМат.Параметры.ПечНом               = ТабЧасть.НомерСтроки;
			ОбластьМат.Параметры.Номенклатура         = ТабЧасть.Номенклатура;
			ОбластьМат.Параметры.ПечНоменклатура      = ТабЧасть.ПечНоменклатура;
			//Если ФлагВыводКода Тогда
			//	ОбластьМат.Параметры.ПечКод = ТабЧасть[ДопКолонка];
			//КонецЕсли;
			ТабДок.Вывести(ОбластьМат);
			Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
				ОбластьДанные.Параметры.Склад              = Шапка.Склад;
				ОбластьДанные.Параметры.ПечСклад           = Шапка.Склад;
				ОбластьДанные.Параметры.СкладПолучатель    = Шапка.СкладПолучатель;
				ОбластьДанные.Параметры.ПечСкладПолучатель = Шапка.СкладПолучатель;
				ОбластьДанные.Параметры.Подразделение        = Шапка.Подразделение;
				ОбластьДанные.Параметры.ПечПодразделение     = Шапка.ПечПодразделение;
			ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
				ОбластьДанные.Параметры.ФизЛицо              = ТабЧасть.ФизЛицо;
				ОбластьДанные.Параметры.ПечФизЛицо           = ТабЧасть.ПечФизЛицо;
				ОбластьДанные.Параметры.ФизЛицоПолучатель    = ТабЧасть.ФизЛицоПолучатель;
				ОбластьДанные.Параметры.ПечФизЛицоПолучатель = ТабЧасть.ПечФизЛицоПолучатель;
				ОбластьДанные.Параметры.Подразделение        = Шапка.Подразделение;
				ОбластьДанные.Параметры.ПечПодразделение     = Шапка.ПечПодразделение;
			КонецЕсли;

			ОбластьДанные.Параметры.ПечКол            = ТабЧасть.Количество;
			ОбластьДанные.Параметры.ПечЕд             = ТабЧасть.ПечЕдиницаИзмерения;
			ОбластьДанные.Параметры.ЕдИзм             = ТабЧасть.ЕдиницаИзмерения;
			ОбластьДанные.Параметры.ПечСумма          = ТабЧасть.Стоимость;
			ТабДок.Присоединить(ОбластьДанные);
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ТабПодвал");
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.СтрокаИтог = "Всего наименований: " + ТабЧасть.Количество();
		ТабДок.Вывести( Область);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
	КонецЦикла;
	Возврат ТабДок;
КонецФункции // ПечатьПеремещениеМатериалов()

// Процедура формирования печатной формы ПеремещенияМатериалов
//
Функция ПечатьПеремещениеМатериалов(МассивОбъектов, ОбъектыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_ПеремещениеМатериаловВЭксплуатации.ПФ_MXL_ПеремещениеМатериалов");
	УчетПоХарактеристикам = Константы.си_УчетСпецодеждыПоХарактеристикам.Получить();
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_си_ПеремещениеМатериаловВЭксплуатации_ПеремещениеМатериалов";
	
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПеремещениеМатериаловВЭксплуатации.Автор,
		               |	ПеремещениеМатериаловВЭксплуатации.Ответственный,
		               |	ПеремещениеМатериаловВЭксплуатации.Комментарий,
		               |	ПеремещениеМатериаловВЭксплуатации.ВидУчетаНУ,
		               |	ПеремещениеМатериаловВЭксплуатации.УчитыватьКПН,
		               |	ПеремещениеМатериаловВЭксплуатации.ДокументОснование,
		               |	ПеремещениеМатериаловВЭксплуатации.Организация,
		               |	ПеремещениеМатериаловВЭксплуатации.Организация.Представление КАК ПечОрганизация,
		               |	ПеремещениеМатериаловВЭксплуатации.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		               |	ПеремещениеМатериаловВЭксплуатации.СостояниеМатериалов,
		               |	ПеремещениеМатериаловВЭксплуатации.ПодразделениеОрганизации КАК Подразделение,
		               |	ПеремещениеМатериаловВЭксплуатации.ПодразделениеОрганизации.Представление КАК ПечПодразделение,
		               |	ПеремещениеМатериаловВЭксплуатации.ПодразделениеОрганизацииПолучатель,
		               |	ПеремещениеМатериаловВЭксплуатации.Склад,
		               |	ПеремещениеМатериаловВЭксплуатации.СкладПолучатель,
		               |	ПеремещениеМатериаловВЭксплуатации.Дата,
		               |	ПеремещениеМатериаловВЭксплуатации.Номер
		               |ИЗ
		               |	Документ.си_ПеремещениеМатериаловВЭксплуатации КАК ПеремещениеМатериаловВЭксплуатации
		               |ГДЕ
		               |	ПеремещениеМатериаловВЭксплуатации.Ссылка = &Ссылка";
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр( "Ссылка",   ДокументСсылка);
		РезультатЗапроса = Запрос.Выполнить();
		Шапка = РезультатЗапроса.Выбрать();
		Шапка.Следующий();
		Если Шапка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
			РегистрМатериалов = "си_МатериалыВЭксплуатации";
		Иначе
			РегистрМатериалов = "си_МатериалыНаСкладе";
		КонецЕсли;
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Материалы.Ссылка,
		               |	Материалы.Номенклатура,
		               |	Материалы.Номенклатура.Код КАК Код,
		               |	Материалы.Номенклатура.Артикул КАК Артикул,
		               |	Материалы.Номенклатура.Представление КАК ПечНоменклатура,
					   |	Материалы.Характеристика,
		               |	Материалы.ЕдиницаИзмерения,
		               |	Материалы.ЕдиницаИзмерения.Представление КАК ПечЕдиницаИзмерения,
		               |	Материалы.Коэффициент,
		               |	Материалы.Количество,
		               |	Материалы.НазначениеИспользования,
		               |	Материалы.НазначениеИспользованияПолучатель,
		               |	Материалы.Сотрудник КАК ФизЛицо,
		               |	Материалы.Сотрудник.Представление КАК ПечФизЛицо,
		               |	Материалы.СотрудникПолучатель КАК ФизЛицоПолучатель,
		               |	Материалы.СотрудникПолучатель.Представление КАК ПечФизЛицоПолучатель,
		               |	Материалы.ДокументПередачи,
		               |	Материалы.НомерСтроки,
		               |	си_МатериалыВЭксплуатации.Стоимость КАК Стоимость
		               |ИЗ
		               |	Документ.си_ПеремещениеМатериаловВЭксплуатации.Материалы КАК Материалы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления." + РегистрМатериалов+ " КАК си_МатериалыВЭксплуатации
		               |		ПО Материалы.Номенклатура = си_МатериалыВЭксплуатации.Номенклатура
		               |			И Материалы.Ссылка = си_МатериалыВЭксплуатации.Регистратор
					   |			И Материалы.Характеристика = си_МатериалыВЭксплуатации.Характеристика
					   |			%УсловиеСотрудник%
					   |ГДЕ
		               |	Материалы.Ссылка = &Ссылка
		               |	И Материалы.Сотрудник <> ЗНАЧЕНИЕ(Справочник."+си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()+".ПустаяСсылка)
		               |";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%УсловиеСотрудник%",?(РегистрМатериалов = "си_МатериалыВЭксплуатации","И Материалы.Сотрудник = си_МатериалыВЭксплуатации.Сотрудник",""));
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
	
		Запрос.УстановитьПараметр( "Ссылка",   ДокументСсылка);
		ТабЧасть = Запрос.Выполнить().Выбрать();	
		Область = Макет.ПолучитьОбласть("Заголовок");
		НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(ДокументСсылка.Номер, ДокументСсылка.Ссылка);
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
			Область.Параметры.Заголовок = "Перемещение возвращенных из эксплуатации материалов № "+НомерДокумента+" от "+Шапка.Дата+"";
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			Область.Параметры.Заголовок = "Перемещение материалов в эксплуатации № "+НомерДокумента+" от "+Шапка.Дата+"";
		КонецЕсли;
		
		СведенияОбОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		Область.Параметры.ПечОрганизация = СведенияОбОрганизации.ПолноеНаименование;	
		Область.Параметры.Подразделение    = Шапка.Подразделение;
		Область.Параметры.ПечПодразделение = Шапка.ПечПодразделение;
		
		ТабДок.Вывести(Область);
		
		
		
		ДопКолонка    = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		ФлагВыводКода = (НЕ ПустаяСтрока(ДопКолонка) И НЕ ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить);
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
			Или Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВозвращеныИзЭксплуатации|Материал");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВЭксплуатации|Материал");
		КонецЕсли;
		ТабДок.Вывести(Область);
		
		//Характеристики
		Если УчетПоХарактеристикам Тогда 
			Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
				Или Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда 
				Область = Макет.ПолучитьОбласть("ТабШапкаВозвращеныИзЭксплуатации|Характеристика");
			ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
				Область = Макет.ПолучитьОбласть("ТабШапкаВЭксплуатации|Характеристика");
			КонецЕсли;
			ТабДок.Присоединить(Область);
		КонецЕсли;
		
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
			ИЛИ Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВозвращеныИзЭксплуатации|Данные");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			Область = Макет.ПолучитьОбласть("ТабШапкаВЭксплуатации|Данные");
		КонецЕсли;
		
		ТабДок.Присоединить(Область);
		
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
			ИЛИ Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда
			ОбластьМат = Макет.ПолучитьОбласть("ТабСтрокаВозвращеныИзЭксплуатации|Материал");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			ОбластьМат = Макет.ПолучитьОбласть("ТабСтрокаВЭксплуатации|Материал");
		КонецЕсли;
		
		//Характеристики
		Если УчетПоХарактеристикам Тогда 
			Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
				ИЛИ Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда
				ОбластьХарактеристика = Макет.ПолучитьОбласть("ТабСтрокаВозвращеныИзЭксплуатации|Характеристика");
			ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
				ОбластьХарактеристика = Макет.ПолучитьОбласть("ТабСтрокаВЭксплуатации|Характеристика");
			КонецЕсли;
		КонецЕсли;
		
		Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе")
			ИЛИ Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая") Тогда
			ОбластьДанные = Макет.ПолучитьОбласть("ТабСтрокаВозвращеныИзЭксплуатации|Данные");
		ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
			ОбластьДанные = Макет.ПолучитьОбласть("ТабСтрокаВЭксплуатации|Данные");
		КонецЕсли;

		Пока ТабЧасть.Следующий() Цикл
			ОбластьМат.Параметры.ПечНом               = ТабЧасть.НомерСтроки;
			ОбластьМат.Параметры.Номенклатура         = ТабЧасть.Номенклатура;
			ОбластьМат.Параметры.ПечНоменклатура      = ТабЧасть.ПечНоменклатура;
			ТабДок.Вывести(ОбластьМат);
			Если УчетПоХарактеристикам Тогда 
				ОбластьХарактеристика.параметры.Характеристика = ТабЧасть.Характеристика;
				ТабДок.Присоединить(ОбластьХарактеристика);
			КонецЕсли;
			
			Если Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяНаСкладе") Тогда
				ОбластьДанные.Параметры.Склад              = Шапка.Склад;
				ОбластьДанные.Параметры.ПечСклад           = Шапка.Склад;
				ОбластьДанные.Параметры.СкладПолучатель    = Шапка.СкладПолучатель;
				ОбластьДанные.Параметры.ПечСкладПолучатель = Шапка.СкладПолучатель;
				ОбластьДанные.Параметры.Подразделение        = Шапка.ПодразделениеОрганизацииПолучатель;
				ОбластьДанные.Параметры.ПечПодразделение     = Шапка.ПодразделениеОрганизацииПолучатель;
			ИначеЕсли Шапка.СостояниеМатериалов = ПредопределенноеЗначение("Перечисление.си_СостоянияМатериалов.НаходящиесяВЭксплуатации") Тогда
				ОбластьДанные.Параметры.ФизЛицо              = ТабЧасть.ФизЛицо;
				ОбластьДанные.Параметры.ПечФизЛицо           = ТабЧасть.ПечФизЛицо;
				ОбластьДанные.Параметры.ФизЛицоПолучатель    = ТабЧасть.ФизЛицоПолучатель;
				ОбластьДанные.Параметры.ПечФизЛицоПолучатель = ТабЧасть.ПечФизЛицоПолучатель;
				ОбластьДанные.Параметры.Подразделение        = Шапка.ПодразделениеОрганизацииПолучатель;
				ОбластьДанные.Параметры.ПечПодразделение     = Шапка.ПодразделениеОрганизацииПолучатель;
			КонецЕсли;

			ОбластьДанные.Параметры.ПечКол            = ТабЧасть.Количество;
			ОбластьДанные.Параметры.ПечЕд             = ТабЧасть.ПечЕдиницаИзмерения;
			ОбластьДанные.Параметры.ЕдИзм             = ТабЧасть.ЕдиницаИзмерения;
			ОбластьДанные.Параметры.ПечСумма          = ТабЧасть.Стоимость;
			ТабДок.Присоединить(ОбластьДанные);
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ТабПодвал|Материал");
		ТабДок.Вывести(Область);
		Если УчетПоХарактеристикам Тогда
			Область = Макет.ПолучитьОбласть("ТабПодвал|Характеристика");
			ТабДок.Присоединить(Область);
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("ТабПодвал|Данные");
		ТабДок.Присоединить(Область);
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.СтрокаИтог = "Всего наименований: " + ТабЧасть.Количество();
		ТабДок.Вывести( Область);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
	КонецЦикла;
	Возврат ТабДок;
КонецФункции // ПечатьПеремещениеМатериалов()

#КонецОбласти

#КонецЕсли
