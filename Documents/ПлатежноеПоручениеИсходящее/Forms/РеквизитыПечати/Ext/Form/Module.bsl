////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе, ЗакрыватьПриЗакрытииВладельца");
	
	СтруктураПараметров = ИзменяемыеРеквизиты(Параметры);
	
	ЗначенияПриОткрытии = СтруктураПараметров;
	
	МассивЭлементов = Новый Массив();
	
	Для Каждого ЭлементСтруктуры из СтруктураПараметров Цикл
		МассивЭлементов.Добавить(ЭлементСтруктуры.Ключ);
	КонецЦикла;
	
	Если ТолькоПросмотр Тогда 	
		
		ОбщегоНазначенияБККлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Истина);
		
	КонецЕсли;
	
	УстановитьЗаголовокНадписиРНН(ЭтаФорма);
	
	ПодготовитьФормуНаСервере();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ПеренестиВДокумент И Модифицированность Тогда
		СтруктураРезультат = Новый Структура();
		
		СтруктураРезультат.Вставить("РННПлательщика", 		ЭтаФорма.РННПлательщика);
		СтруктураРезультат.Вставить("РННПолучателя", 		ЭтаФорма.РННПолучателя);
		СтруктураРезультат.Вставить("ТекстПлательщика", 	ЭтаФорма.ТекстПлательщика);
		СтруктураРезультат.Вставить("ТекстПолучателя",		ЭтаФорма.ТекстПолучателя);
		СтруктураРезультат.Вставить("ДатаПолученияТовара",	ЭтаФорма.ДатаПолученияТовара);
		СтруктураРезультат.Вставить("ДатаВалютирования",	ЭтаФорма.ДатаВалютирования);
		//СтруктураРезультат.Вставить("КодБК",				ЭтаФорма.КодБК);
		СтруктураРезультат.Вставить("БанкПосредник",		ЭтаФорма.БанкПосредник);
		СтруктураРезультат.Вставить("СчетБанкаПосредника",	ЭтаФорма.СчетБанкаПосредника);
		СтруктураРезультат.Вставить("ФактическийПлательщик", ЭтаФорма.ФактическийПлательщик);
		
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли  Модифицированность И НЕ ПеренестиВДокумент Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;

КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
		
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("РННПлательщика", 			 Источник.РННПлательщика);
	СтруктураПараметров.Вставить("РННПолучателя", 			 Источник.РННПолучателя);
	СтруктураПараметров.Вставить("ТекстПлательщика", 		 Источник.ТекстПлательщика);
	СтруктураПараметров.Вставить("ТекстПолучателя",			 Источник.ТекстПолучателя);
	СтруктураПараметров.Вставить("ДатаПолученияТовара",		 Источник.ДатаПолученияТовара);
	СтруктураПараметров.Вставить("ДатаВалютирования",		 Источник.ДатаВалютирования);
	//СтруктураПараметров.Вставить("КодБК",					 Источник.КодБК);
	СтруктураПараметров.Вставить("БанкПосредник",			 Источник.БанкПосредник);
	СтруктураПараметров.Вставить("СчетБанкаПосредника",		 Источник.СчетБанкаПосредника);
	СтруктураПараметров.Вставить("ФактическийПлательщик", Источник.ФактическийПлательщик);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.ЭтотОбъект;
	
	Элементы.БанкПосредник.ВыбиратьТип 	 = Истина;
	Элементы.БанкПосредник.ОграничениеТипа = Новый ОписаниеТипов();	
		
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ПеречислениеСоциальныхОтчислений") Тогда
		
		Элементы.БанкПосредник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
		
		Если ТипЗнч(Объект.БанкПосредник) <> Тип("СправочникСсылка.Контрагенты") Тогда
			Объект.БанкПосредник = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		КонецЕсли;
					
	КонецЕсли;   
	
	Элементы.ФактическийПлательщик.Видимость = Форма.ИспользоватьПечатныеФормыПП2024;
		
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
				
	УстановитьСвязиПараметровВыбораСчетБанкаПосредника();
	УстановитьПараметрыВыбораБанкаПосредника(ЭтаФорма);
	ИспользоватьПечатныеФормыПП2024 = УправлениеДенежнымиСредствамиСервер.ИспользоватьПечатныеФормыПП2024();
	УправлениеФормой(ЭтаФорма);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокНадписиРНН(Форма)
	
	Объект   = Форма.ЭтотОбъект;
	Элементы = Форма.Элементы;
	
	ВыводитьРНН = НЕ ЗначениеЗаполнено(Форма.ДатаПрекращенияВыводаРНН) ИЛИ Объект.ДатаВыписки < Форма.ДатаПрекращенияВыводаРНН;
	
	Если ВыводитьРНН Тогда 
		Элементы.НадписьРННПлательщика.Заголовок = НСтр("ru='РНН:'");
		Элементы.НадписьРННПолучателя.Заголовок  = НСтр("ru='РНН:'");
	Иначе 
		Элементы.НадписьРННПлательщика.Заголовок = НСтр("ru='БИН / ИИН:'");
		Элементы.НадписьРННПолучателя.Заголовок  = НСтр("ru='БИН / ИИН:'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ТекстПлательщикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДополнительныеПараметры = Новый Структура("ФормаВладелец, ИмяРеквизита", ЭтаФорма, "ТекстПлательщика");
	Оповещение = Новый ОписаниеОповещения("ТекстПлательщикаЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
		Оповещение,
		ТекстПлательщика,
		НСтр("ru='Текст плательщика'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПлательщикаЗавершениеВвода(Строка, Параметры) Экспорт

	Если Строка <> Неопределено Тогда
		
		ЭтотОбъект.ТекстПлательщика = Строка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПолучателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДополнительныеПараметры = Новый Структура("ФормаВладелец, ИмяРеквизита", ЭтаФорма, "ТекстПолучателя");
	Оповещение = Новый ОписаниеОповещения("ТекстПолучателяЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
		Оповещение,
		ТекстПолучателя,
		НСтр("ru='Текст получателя'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПолучателяЗавершениеВвода(Строка, Параметры) Экспорт

	Если Строка <> Неопределено Тогда
		
		ЭтотОбъект.ТекстПолучателя = Строка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПосредникПриИзменении(Элемент)

	БанкПосредникПриИзмененииНаКлиенте(Истина);

КонецПроцедуры

&НаКлиенте
Процедура БанкПосредникПриИзмененииНаКлиенте(ИзменилсяБанкПосредник = Ложь)

	Если (ТипЗнч(БанкПосредник) = Тип("СправочникСсылка.Контрагенты")) И (ЗначениеЗаполнено(БанкПосредник)) Тогда
		СчетБанкаПосредника = ПолучитьЗначениеРеквизита(БанкПосредник, "ОсновнойБанковскийСчет");
	Иначе
		СчетБанкаПосредника = Неопределено;
	КонецЕсли;
	
	Если ИзменилсяБанкПосредник И 
		НЕ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ПеречислениеСоциальныхОтчислений") Тогда
		// при изменении типа также надо вызвать
		УстановитьСвязиПараметровВыбораСчетБанкаПосредника();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизита(Ссылка, ЗначениеРеквизита)
											
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ЗначениеРеквизита);										
											
КонецФункции

&НаСервере
Процедура УстановитьСвязиПараметровВыбораСчетБанкаПосредника()
	
	МассивСвязей = Новый Массив();
	
	Если (ТипЗнч(ЭтотОбъект.БанкПосредник) = Тип("СправочникСсылка.Контрагенты")) 
		ИЛИ ЭтотОбъект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ПеречислениеСоциальныхОтчислений") Тогда
		СвязьВладелец = Новый СвязьПараметраВыбора("Отбор.Владелец", "ЭтотОбъект.БанкПосредник");
	Иначе
		СвязьВладелец = Новый СвязьПараметраВыбора("Отбор.Владелец", "ЭтотоОбъект.Организация");
	КонецЕсли;

	МассивСвязей.Добавить(СвязьВладелец);
	
	//Элементы.СчетБанкаПосредника.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрыВыбораБанкаПосредника(Форма)
	
	Объект = Форма.ЭтотОбъект;
	
	МассивСвязей = Новый Массив();
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийППИсходящее.ПеречислениеСоциальныхОтчислений") Тогда
		СвязьВладелец  = Новый СвязьПараметраВыбора("Отбор.Владелец", "ЭтотОбъект.БанкПосредник");
	Иначе
		СвязьВладелец  = Новый СвязьПараметраВыбора("Отбор.Владелец", "ЭтотОбъект.Организация");
	КонецЕсли;
	
	МассивСвязей.Добавить(СвязьВладелец);
	
	//Объект.Элементы.СчетБанкаПосредника.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ЗаполнитьРННПолучателя

&НаКлиенте
Процедура ЗаполнитьРННПлательщика(Команда)
	
	ЗаполнитьТекстОтправителя();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстОтправителя(ЗаполнитьРНН = Истина, ЗаполнитьТекстОтправителя = Истина)
	
	// Определяем  реквизиты СП или самой организации нужно использовать
	ОрганизацияДляПечати = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(ЭтотОбъект.Организация, ЭтотОбъект.СтруктурноеПодразделениеОтправитель);		
	СведенияОбОрганизацииДляПечати = ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(ОрганизацияДляПечати, ЭтотОбъект.Дата);
	
	// Заполнение РНН
	Если ЗаполнитьРНН Тогда
		
		ВыводитьРНН = НЕ ЗначениеЗаполнено(ДатаПрекращенияВыводаРНН) ИЛИ ЭтотОбъект.ДатаВыписки < ДатаПрекращенияВыводаРНН;
		
		Если ЗначениеЗаполнено(ОрганизацияДляПечати) Тогда
			Если ВыводитьРНН Тогда 
				ЭтотОбъект.РННПлательщика = СведенияОбОрганизацииДляПечати.РНН;
			Иначе 
				ЭтотОбъект.РННПлательщика = СведенияОбОрганизацииДляПечати.БИН_ИИН;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполнение текста отправителя
	Если ЗаполнитьТекстОтправителя Тогда
		Если ЗначениеЗаполнено(ЭтотОбъект.СчетОрганизации.ТекстКорреспондента) Тогда
			ЭтотОбъект.ТекстПлательщика = ЭтотОбъект.СчетОрганизации.ТекстКорреспондента;
		Иначе
			ЭтотОбъект.ТекстПлательщика = СведенияОбОрганизацииДляПечати.ПолноеНаименование;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнитьРННПолучателя 

&НаКлиенте
Процедура ЗаполнитьРННПолучателя(Команда)
	
	ЗаполнитьТекстПолучателя();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстПолучателя(ЗаполнитьРНН = Истина, ЗаполнитьТекстПолучателя = Истина)
	
	// Определяем контрагента, реквизиты которого нужно заполнить
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийППИсходящее.ПереводНаДругойСчет Тогда
		// реквизиты СП или самой организации
		КонтрагентДляПечати = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(ЭтотОбъект.Организация, ЭтотОбъект.СтруктурноеПодразделениеПолучатель);		
	Иначе
		КонтрагентДляПечати = ЭтотОбъект.Контрагент;
	КонецЕсли;
	
	СведенияОКонтрагентДляПечати = ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(КонтрагентДляПечати, ЭтотОбъект.Дата);
	
	// Заполнение РНН
	Если ЗаполнитьРНН Тогда
		
		ВыводитьРНН = НЕ ЗначениеЗаполнено(ДатаПрекращенияВыводаРНН) ИЛИ ЭтотОбъект.ДатаВыписки < ДатаПрекращенияВыводаРНН;
		
		Если ЗначениеЗаполнено(КонтрагентДляПечати) Тогда
			Если ВыводитьРНН Тогда 
				ЭтотОбъект.РННПолучателя = СведенияОКонтрагентДляПечати.РНН;
			Иначе 
				ЭтотОбъект.РННПолучателя = СведенияОКонтрагентДляПечати.БИН_ИИН;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполнение текста получателя
	Если ЗаполнитьТекстПолучателя Тогда                                           
		
		Если ЗначениеЗаполнено(ЭтотОбъект.СчетКонтрагента.ТекстКорреспондента) Тогда
			ЭтотОбъект.ТекстПолучателя = ЭтотОбъект.СчетКонтрагента.ТекстКорреспондента;
		Иначе
			ЭтотОбъект.ТекстПолучателя = СведенияОКонтрагентДляПечати.ПолноеНаименование;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОК(Команда)
		
	ПеренестиВДокумент = Истина;
	
	ЗначенияИзменились = ПроверитьЗначения();
	
	Если ЗначенияИзменились Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗначения()
	
	Для Каждого Реквизит Из ЗначенияПриОткрытии Цикл
		ИмяРеквизита = Реквизит.Ключ;
		Если ЭтаФорма[ИмяРеквизита] <> Реквизит.Значение Тогда
			Возврат Истина
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
				
КонецФункции

&НаСервере
Функция ПолучитьВладельца(Ссылка)
	Возврат Ссылка.Владелец
КонецФункции

&НаКлиенте
Процедура ФактическийПлательщикНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация"                 , Неопределено);
	ПараметрыФормы.Вставить("СтруктурноеПодразделение"    , Неопределено);
	ПараметрыФормы.Вставить("ДоступноИзменениеОрганизации", Истина);
	
	НачальноеЗначениеВыбора = ФактическийПлательщик;
	Если Не ЗначениеЗаполнено(НачальноеЗначениеВыбора) Тогда
		НачальноеЗначениеВыбора = СтруктурноеПодразделениеОрганизация;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НачальноеЗначениеВыбора) Тогда
		Если ТипЗнч(НачальноеЗначениеВыбора) = Тип("СправочникСсылка.Организации") Тогда
			ПараметрыФормы.Вставить("Организация"             , НачальноеЗначениеВыбора);
		Иначе
			ПараметрыФормы.Вставить("Организация"             , ПолучитьВладельца(НачальноеЗначениеВыбора));
			ПараметрыФормы.Вставить("СтруктурноеПодразделение", НачальноеЗначениеВыбора);
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	
	ОбработкаВыбора = Новый ОписаниеОповещения("ФактическийПлательщикОбработкаВыбора", ЭтаФорма, ДополнительныеПараметры);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСтруктурногоПодразделения", ПараметрыФормы, Элемент, Ложь, , , ОбработкаВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ФактическийПлательщикОбработкаВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <>  Неопределено Тогда
		Если ЗначениеЗаполнено(Результат.СтруктурноеПодразделение) Тогда
			ФактическийПлательщик = Результат.СтруктурноеПодразделение;
		Иначе
			ФактическийПлательщик = Результат.Организация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

