////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, Объект.Ссылка, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект);
	//Объект.ВидБазовогоПоказателя = Перечисления.ВидБазовогоПоказателя[0];	
	
	ОбщегоНазначенияБК.УстановитьТекстАвтора(НадписьАвтор, Объект.Автор);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗапросПоСтатьям(Команда)
	
	ОбновитьДанныеПоПС();
	Если НЕ ЕстьКПС и НЕ ЕстьПС Тогда
		Сообщить ("Нет данных по порогам существенности!");
		Возврат;
	КонецЕсли;

	ОбновитьСЗ();
	ОбновитьСД();

	Если ЕстьПС и ЕстьКПС Тогда
		Если КОПС < ОПС Тогда
			Сообщить("КОПС ниже ОПС, расчет будет выполнен по КОПС");
			РасчетЗапроса("КОПС");
		Иначе
			Сообщить("КОПС превышает ОПС, расчет будет выполнен по ОПС");
			РасчетЗапроса("ОПС");
		КонецЕсли;
	ИначеЕсли ЕстьПС и НЕ ЕстьКПС Тогда
		Сообщить("Нет данных по КОПС, расчет будет выполнен по ОПС");
		РасчетЗапроса("ОПС");
	ИначеЕсли НЕ ЕстьПС и ЕстьКПС Тогда
		Сообщить("Нет данных по ОПС, расчет будет выполнен по КОПС");
		РасчетЗапроса("КОПС");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УстановитьРеквизитыИзНастроекМетодаНачисления()
	
	Отбор = Новый Структура("Организация", Объект.Организация);
	НастройкиМетодаНачисления = РегистрыСведений.НастройкиМетодаНачисления.ПолучитьПоследнее(Объект.Дата, Отбор);
	Объект.ПериодРасчетаПорогаСущественности = НастройкиМетодаНачисления.ПериодРасчетаПорогаСущественности;
	Объект.ВидБазовогоПоказателя = НастройкиМетодаНачисления.ВидБазовогоПоказателя;
	Объект.ИспользоватьДанныеПредыдущегоПериода = НастройкиМетодаНачисления.ИспользоватьДанныеПредыдущегоПериода;
	Если НЕ ЗначениеЗаполнено(Объект.ПериодРасчетаПорогаСущественности) ИЛИ НЕ ЗначениеЗаполнено(Объект.ВидБазовогоПоказателя) Тогда
		Возврат Ложь;		
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Объект.Ссылка.Пустая() Тогда // проверить объект на то, что он еще не внесен в ИБ
		Объект.ПериодРегистрации = НачалоМесяца(Объект.Дата);
		Объект.ДатаСозданияДокумента = ТекущаяДата(); // установим дату создания документа
	Иначе
		ОбновитьДанныеПоПС();
		Если ЕстьПС и ЕстьКПС Тогда
			Если КОПС < ОПС Тогда
				ОбновитьИтогиПоСтатьям("КОПС");
			Иначе
				ОбновитьИтогиПоСтатьям("ОПС");
			КонецЕсли;
		ИначеЕсли ЕстьПС и НЕ ЕстьКПС Тогда
			ОбновитьИтогиПоСтатьям("ОПС");
		ИначеЕсли НЕ ЕстьПС и ЕстьКПС Тогда
			ОбновитьИтогиПоСтатьям("КОПС");
		КонецЕсли;
	КонецЕсли;
	
	// Заполним реквизит формы                                                        .
	МесяцСтрока = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	ОбновитьСЗ();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ЧАСТЕЙ

&НаСервере
Процедура ОбновитьДанныеПоПС()
	
	Отбор = Новый Структура("Организация", Объект.Организация);
	НастройкиМетодаНачисления = РегистрыСведений.НастройкиМетодаНачисления.ПолучитьПоследнее(Объект.Дата, Отбор);
	ПериодРасчетаПорогаСущественности = НастройкиМетодаНачисления.ПериодРасчетаПорогаСущественности;
	
	Если НЕ Объект.Ссылка.Пустая() и НЕ ЗначениеЗаполнено(Объект.ИсходныеДанные) Тогда 
		//Сообщить("Не заполнены исходные данные для расчета!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос ("ВЫБРАТЬ
	                       |	ДанныеПорогаСущественности.СуммаИсходныхДанных,
	                       |	ДанныеПорогаСущественности.СреднемесячныйПоказатель,
	                       |	ДанныеПорогаСущественности.ОПСДляОпераций,
	                       |	ДанныеПорогаСущественности.ОПСДляСверокВГО,
	                       |	ДанныеПорогаСущественности.ИПСДляОпераций,
	                       |	ДанныеПорогаСущественности.ИПСДляСверокВГО
	                       |ИЗ
	                       |	РегистрСведений.ДанныеПорогаСущественности КАК ДанныеПорогаСущественности
	                       |ГДЕ
	                       |	ДанныеПорогаСущественности.ВидБазовогоПоказателя = &ИсходныеДанные
	                       |	И ДанныеПорогаСущественности.ПериодРегистрации = &ПериодРегистрации
	                       |	И ДанныеПорогаСущественности.ВидОперации = &ВидОперации");
	Запрос.УстановитьПараметр("ИсходныеДанные", Объект.ИсходныеДанные);
	
	Если ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Квартал Тогда
		Запрос.УстановитьПараметр("ПериодРегистрации", НачалоКвартала(Объект.ПериодРегистрации));
	ИначеЕсли ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Месяц Тогда
		Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийРасчетПорогаСущественности.РасчетПорогаСущественности);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОПС = Выборка.ОПСДляОпераций;
		ИПС = Выборка.ИПСДляОпераций;
		НадписьПС = "Данные по ПС - ОПС: "+Строка(Выборка.ОПСДляОпераций)+"     ИПС: "+Строка(Выборка.ИПСДляОпераций);
		ЕстьПС = Истина;
	Иначе
		ОПС = 0;
		ИПС = 0;		
		НадписьПС = "Данные по ПС: порог существенности для выбранного периода не рассчитан!";	
		ЕстьПС = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИсходныеДанные",    Объект.ИсходныеДанные);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("ВидОперации",       Перечисления.ВидыОперацийРасчетПорогаСущественности.РасчетКонтрольногоПорогаСущественности);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		КОПС = Выборка.ОПСДляОпераций;
		КИПС = Выборка.ИПСДляОпераций;		
		НадписьКПС = "Данные по контрольному ПС - КОПС: "+Строка(Выборка.ОПСДляОпераций)+"     КИПС: "+Строка(Выборка.ИПСДляОпераций);
		ЕстьКПС = Истина;
	Иначе
		КОПС = 0;
		КИПС = 0;		
		НадписьКПС = "Данные по контрольному ПС: контрольный порог существенности для выбранного периода не рассчитан!";	
		ЕстьКПС = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИтогиПоСтатьям(Параметр)
	
	ИтогВключенных = 0;
	ИтогНеВключенных = 0;
	ИтогВключенныхПред = 0;
	ИтогНеВключенныхПред = 0;
	
	ИтогВключенныхСД = 0;
	ИтогНеВключенныхСД = 0;
	ИтогВключенныхПредСД = 0;
	ИтогНеВключенныхПредСД = 0;	
	
	Для Каждого Стр из Объект.ЗапросРасходов Цикл
		Если Стр.ВключатьВЗапрос Тогда
			ИтогВключенных = ИтогВключенных + Стр.СЗ_ДляТекущегоПериода;
		Иначе
			ИтогНеВключенных = ИтогНеВключенных + Стр.СЗ_ДляТекущегоПериода;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр из Объект.ЗапросДоходов Цикл
		Если Стр.ВключатьВЗапрос Тогда
			ИтогВключенныхСД = ИтогВключенныхСД + Стр.СД_ДляТекущегоПериода;
		Иначе
			ИтогНеВключенныхСД = ИтогНеВключенныхСД + Стр.СД_ДляТекущегоПериода;
		КонецЕсли;
	КонецЦикла;	
	
	Если Параметр = "КОПС" Тогда
		Если ИтогНеВключенных > КОПС Тогда
			НадписьИтоги = "Сумма не вкл. в запрос статей затрат ("+Строка(ИтогНеВключенных)+") превышает КОПС ("+Строка(КОПС)+"), скорректируйте статьи!";
		Иначе
			НадписьИтоги = "Сумма не включенных в запрос статей затрат не превышает КОПС";
		КонецЕсли;
		// Статьи доходов
		Если ИтогНеВключенныхСД > КОПС Тогда
			НадписьИтогиСД = "Сумма не вкл. в запрос статей доходов ("+Строка(ИтогНеВключенныхСД)+") превышает КОПС ("+Строка(КОПС)+"), скорректируйте статьи!";
		Иначе
			НадписьИтогиСД = "Сумма не включенных в запрос статей доходов не превышает КОПС";
		КонецЕсли;		
		
		НадписьОбщиеИтоги = "Сумма вкл. cт. затрат: "+ИтогВключенных+" | Сумма не вкл. ст. затрат: "+ИтогНеВключенных+" | Сумма вкл. cт. доходов: "+ИтогВключенныхСД+" | Сумма не вкл. ст. доходов: "+ИтогНеВключенныхСД;
	ИначеЕсли Параметр = "ОПС" Тогда
		Если ИтогНеВключенных > ОПС Тогда
			НадписьИтоги = "Сумма не включенных в запрос статей затрат ("+Строка(ИтогНеВключенных)+") превышает ОПС ("+Строка(ОПС)+"), скорректируйте статьи!";
		Иначе
			НадписьИтоги = "Сумма не включенных в запрос статей затрат не превышает ОПС";
		КонецЕсли;	
		// Статьи доходов
		Если ИтогНеВключенныхСД > ОПС Тогда
			НадписьИтогиСД = "Сумма не включенных в запрос статей доходов ("+Строка(ИтогНеВключенныхСД)+") превышает ОПС ("+Строка(ОПС)+"), скорректируйте статьи!";
		Иначе
			НадписьИтогиСД = "Сумма не включенных в запрос статей доходов не превышает ОПС";
		КонецЕсли;
		
		НадписьОбщиеИтоги = "Сумма вкл. cт. затрат: "+ИтогВключенных+" | Сумма не вкл. ст. затрат: "+ИтогНеВключенных+" | Сумма вкл. cт. доходов: "+ИтогВключенныхСД+" | Сумма не вкл. ст. доходов: "+ИтогНеВключенныхСД;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура РасчетЗапроса (Параметр)
	
	Если Параметр = "КОПС" Тогда
		Для Каждого Стр из Объект.ЗапросРасходов Цикл
			Если Стр.СЗ_ДляТекущегоПериода >= КИПС Тогда
				 Стр.ВключатьВЗапрос = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Стр из Объект.ЗапросДоходов Цикл
			Если Стр.СД_ДляТекущегоПериода >= КИПС Тогда
				 Стр.ВключатьВЗапрос = Истина;
			КонецЕсли;
		КонецЦикла;

		ОбновитьИтогиПоСтатьям("КОПС");
	ИначеЕсли Параметр = "ОПС" Тогда
		Для Каждого Стр из Объект.ЗапросРасходов Цикл
			Если Стр.СЗ_ДляТекущегоПериода >= ИПС Тогда
				 Стр.ВключатьВЗапрос = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Стр из Объект.ЗапросДоходов Цикл
			Если Стр.СД_ДляТекущегоПериода >= ИПС Тогда
				 Стр.ВключатьВЗапрос = Истина;
			КонецЕсли;
		КонецЦикла;

		ОбновитьИтогиПоСтатьям("ОПС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСЗ () Экспорт
		
	Отбор = Новый Структура("Организация", Объект.Организация);
	НастройкиМетодаНачисления = РегистрыСведений.НастройкиМетодаНачисления.ПолучитьПоследнее(Объект.Дата, Отбор);
	ПериодРасчетаПорогаСущественности = НастройкиМетодаНачисления.ПериодРасчетаПорогаСущественности;
	
	Если ЗначениеЗаполнено(Объект.ПериодРегистрации) и ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.ЗапросРасходов.Очистить();
		
		ЗапросАналитикиПредПериод = Новый Запрос("ВЫБРАТЬ
												 |	СУММА(ТиповойОбороты.СуммаОборотДт) КАК СуммаОборотДт,
												 |	ТиповойОбороты.Субконто1
												 |ИЗ
												 |	РегистрБухгалтерии.Типовой.Обороты(&НачПериода, &КонПериода, Период, , , , , ) КАК ТиповойОбороты
												 |ГДЕ
												 |	ПОДСТРОКА(ТиповойОбороты.Счет.Код, 1, 1) = &Счет
												 |
												 |СГРУППИРОВАТЬ ПО
												 |	ТиповойОбороты.Субконто1");
									   
		Если ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Квартал Тогда
			ЗапросАналитикиПредПериод.УстановитьПараметр("НачПериода", НачалоКвартала(ДобавитьМесяц(Объект.ПериодРегистрации,-3)));
			ЗапросАналитикиПредПериод.УстановитьПараметр("КонПериода", КонецКвартала(ДобавитьМесяц(Объект.ПериодРегистрации,-3)));
		Иначе
			ЗапросАналитикиПредПериод.УстановитьПараметр("НачПериода", НачалоМесяца(ДобавитьМесяц(Объект.ПериодРегистрации,-1)));
			ЗапросАналитикиПредПериод.УстановитьПараметр("КонПериода", КонецМесяца(ДобавитьМесяц(Объект.ПериодРегистрации,-1)));
		КонецЕсли;
		
		ЗапросАналитикиПредПериод.УстановитьПараметр("Счет","7");
		ВыборкаАналитикиТекПериод = ЗапросАналитикиПредПериод.Выполнить().Выбрать();				
		
		Пока ВыборкаАналитикиТекПериод.Следующий() Цикл
			СтрокаТЧ = Объект.ЗапросРасходов.Найти(ВыборкаАналитикиТекПериод.Субконто1,"СтатьяРасхода");
			Если ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Квартал Тогда
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.СЗ_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотДт/3;
				Иначе
					Стр = Объект.ЗапросРасходов.Добавить();
					Стр.СтатьяРасхода = ВыборкаАналитикиТекПериод.Субконто1;		
					Стр.СЗ_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотДт/3;
				КонецЕсли;
			ИначеЕсли ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Месяц Тогда
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.СЗ_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотДт;
				Иначе
					Стр = Объект.ЗапросРасходов.Добавить();
					Стр.СтатьяРасхода = ВыборкаАналитикиТекПериод.Субконто1;		
					Стр.СЗ_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотДт;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Объект.ЗапросРасходов.Сортировать("СтатьяРасхода");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСД () Экспорт
	
	Отбор = Новый Структура("Организация", Объект.Организация);
	НастройкиМетодаНачисления = РегистрыСведений.НастройкиМетодаНачисления.ПолучитьПоследнее(Объект.Дата, Отбор);
	ПериодРасчетаПорогаСущественности = НастройкиМетодаНачисления.ПериодРасчетаПорогаСущественности;
	
	Если ЗначениеЗаполнено(Объект.ПериодРегистрации) и ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.ЗапросДоходов.Очистить();
		
		ЗапросАналитикиПредПериод = Новый Запрос("ВЫБРАТЬ
		                                         |	СУММА(ТиповойОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		                                         |	ТиповойОбороты.Субконто1
		                                         |ИЗ
		                                         |	РегистрБухгалтерии.Типовой.Обороты(&НачПериода, &КонПериода, Период, , , , , ) КАК ТиповойОбороты
		                                         |ГДЕ
		                                         |	ПОДСТРОКА(ТиповойОбороты.Счет.Код, 1, 1) = &Счет
		                                         |
		                                         |СГРУППИРОВАТЬ ПО
		                                         |	ТиповойОбороты.Субконто1");
									   
		Если Объект.ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Квартал Тогда
			ЗапросАналитикиПредПериод.УстановитьПараметр("НачПериода", НачалоКвартала(ДобавитьМесяц(Объект.ПериодРегистрации,-3)));
			ЗапросАналитикиПредПериод.УстановитьПараметр("КонПериода", КонецКвартала(ДобавитьМесяц(Объект.ПериодРегистрации,-3)));
		Иначе
			ЗапросАналитикиПредПериод.УстановитьПараметр("НачПериода", НачалоМесяца(ДобавитьМесяц(Объект.ПериодРегистрации,-1)));
			ЗапросАналитикиПредПериод.УстановитьПараметр("КонПериода", КонецМесяца(ДобавитьМесяц(Объект.ПериодРегистрации,-1)));
		КонецЕсли;
		
		ЗапросАналитикиПредПериод.УстановитьПараметр("Счет","6");
		ВыборкаАналитикиТекПериод = ЗапросАналитикиПредПериод.Выполнить().Выбрать();				
		
		Пока ВыборкаАналитикиТекПериод.Следующий() Цикл
			СтрокаТЧ = Объект.ЗапросДоходов.Найти(ВыборкаАналитикиТекПериод.Субконто1,"СтатьяДохода");
			Если Объект.ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Квартал Тогда
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.СД_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотКт/3;
				Иначе
					Стр = Объект.ЗапросДоходов.Добавить();
					Стр.СтатьяДохода = ВыборкаАналитикиТекПериод.Субконто1;		
					Стр.СД_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотКт/3;
				КонецЕсли;
			ИначеЕсли Объект.ПериодРасчетаПорогаСущественности = Перечисления.ПериодРасчетаПорогаСущественности.Месяц Тогда
				Если СтрокаТЧ <> Неопределено Тогда
					СтрокаТЧ.СД_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотКт;
				Иначе
					Стр = Объект.ЗапросДоходов.Добавить();
					Стр.СтатьяДохода = ВыборкаАналитикиТекПериод.Субконто1;		
					Стр.СД_ДляТекущегоПериода = ВыборкаАналитикиТекПериод.СуммаОборотКт;
				КонецЕсли;				
			КонецЕсли;
		КонецЦикла;
		
		Объект.ЗапросДоходов.Сортировать("СтатьяДохода");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцПодобратьДатуПоТексту(МесяцСтрока, Объект.ПериодРегистрации);
	МесяцСтрока = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцСтрока = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		Ожидание = 0;
		РаботаСДиалогамиКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, Объект.ПериодРегистрации, ЭтаФорма);
	Иначе
		РаботаСДиалогамиКлиент.ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры
