
&НаКлиенте
Перем СведенияОСотрудниках;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
		
	Если Параметры.Ключ.Пустая() Тогда
		Если Параметры.Свойство("УвольнениеИП") И Параметры.УвольнениеИП Тогда
			
			Объект.Организация   				= Параметры.Организация;
			Объект.Ответственный 				= Параметры.Ответственный;
			СтруктурноеПодразделениеОрганизация = Параметры.СтруктурноеПодразделение;
			НоваяСтрока 						= Объект.РаботникиОрганизации.Добавить();
			НоваяСтрока.Сотрудник 				= Параметры.Сотрудник;
			НоваяСтрока.ДатаУвольнения 			= Параметры.ДатаУвольнения;
			УвольнениеИП 						= Параметры.УвольнениеИП;
			
		Иначе		
			ПодготовитьФормуНаСервере();
			РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// РедактированиеДокументовПользователей
	ПраваДоступаКОбъектам.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец РедактированиеДокументовПользователей
	
	ПодготовитьФормуНаСервере();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СведенияОСотрудниках = Новый Соответствие;
	 		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	  
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.СотрудникиОрганизаций.Форма.ФормаСписка" Тогда
		
		Для Каждого СтрокаМассива Из ВыбранноеЗначение Цикл
			Если Объект.РаботникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", СтрокаМассива)).Количество() = 0 Тогда
				СтрокаРаботники = Объект.РаботникиОрганизации.Добавить();	
				СтрокаРаботники.Сотрудник = СтрокаМассива;
			Иначе
				ПоказатьПредупреждение(, НСтр("ru = 'В данном документе по одному сотруднику можно вводить только одну строку!'"));
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		
	ОбщегоНазначенияБККлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	Если УвольнениеИП Тогда
		Оповестить("УвольнениеИП", Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе 
		Результат = РаботаСДиалогамиКлиент.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
			СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ РаботникиОрганизации

&НаКлиенте
Процедура РаботникиОрганизацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'В данном документе по одному сотруднику можно вводить только одну строку!'"));
		Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник = Неопределено; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Истина);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("СписокСотрудниковСписокЗавершениеВыбора", ЭтотОбъект);

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.РаботникиОрганизации.ТекущиеДанные;
	ДанныеСтрокиТаблицы = Новый Структура("Сотрудник, Физлицо, ДатаУвольнения, РеквизитыДокументаОснования, ПрекращатьСтандартныеВычеты, СтатьяЗаконаОТрудеРК");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, Элементы.РаботникиОрганизации.ТекущиеДанные);
	
	ПараметрыОбъекта = Новый Структура("Организация, СтруктурноеПодразделение, Дата, Ссылка, РаботникиОрганизации");
	ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, Объект);
	
	
	Если ПолучитьСведенияОСотруднике(СведенияОСотрудниках, ТекущиеДанные.Сотрудник).ЭтоВнутреннееСовместительство Тогда
		ТекущиеДанные.ПрекращатьСтандартныеВычеты = Ложь
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		
		РаботникиОрганизацииСотрудникПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ПараметрыОбъекта);
		
	КонецЕсли;
	
	ТекущийСотрудник = ТекущиеДанные.Сотрудник;
	
	ЗаполнитьЗначенияСвойств(Элементы.РаботникиОрганизации.ТекущиеДанные, ДанныеСтрокиТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииСотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокиРаботников = Объект.РаботникиОрганизации.НайтиСтроки(Новый Структура("Сотрудник", ВыбранноеЗначение));
	Если СтрокиРаботников.Количество() > 0 И Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник <> ВыбранноеЗначение Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'В данном документе по одному сотруднику можно вводить только одну строку!'"));
		Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник = Неопределено; 
		Возврат;
	КонецЕсли;
	
	Элементы.РаботникиОрганизации.ТекущиеДанные.Сотрудник = ВыбранноеЗначение;
	
	Элементы.РаботникиОрганизации.ТекущиеДанные.Физлицо = ПолучитьФизЛицоСотрудника(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииДатаУвольненияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РаботникиОрганизации.ТекущиеДанные;
	ДанныеСтрокиТаблицы = Новый Структура("Сотрудник, Физлицо, ДатаУвольнения, РеквизитыДокументаОснования, ПрекращатьСтандартныеВычеты, СтатьяЗаконаОТрудеРК");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, Элементы.РаботникиОрганизации.ТекущиеДанные);
	
	ПараметрыОбъекта = Новый Структура("Организация, СтруктурноеПодразделение, Дата, Ссылка, РаботникиОрганизации");
	ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, Объект);
	
	Если НЕ ПолучитьСведенияОСотруднике(СведенияОСотрудниках, ТекущиеДанные.Сотрудник).ЭтоВнутреннееСовместительство И ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		
		РаботникиОрганизацииСотрудникПриИзмененииНаСервере(ДанныеСтрокиТаблицы, ПараметрыОбъекта);
		
	КонецЕсли;
	
	ТекущийСотрудник = ТекущиеДанные.Сотрудник;
	
	ЗаполнитьЗначенияСвойств(Элементы.РаботникиОрганизации.ТекущиеДанные, ДанныеСтрокиТаблицы);
		
КонецПроцедуры

&НаКлиенте
Процедура РаботникиОрганизацииРеквизитыДокументаОснованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Индекс = Элементы.РаботникиОрганизации.ТекущиеДанные.НомерСтроки - 1;
	ДополнительныеПараметры = Новый Структура("ФормаВладелец, ИмяТЧ, Индекс, ИмяКолонки", ЭтаФорма, "РаботникиОрганизации", Индекс, "РеквизитыДокументаОснования");
    Оповещение = Новый ОписаниеОповещения("ЗавершениеВводаТекста", ЭтотОбъект, ДополнительныеПараметры);
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
             Оповещение,
             Элементы.РаботникиОрганизации.ТекущиеДанные.РеквизитыДокументаОснования,
             НСтр("ru='Реквизиты документа-основания'"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьПоСпискуСотрудников(Команда)
	
	Если Объект.РаботникиОрганизации.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Табличная часть будет полностью перезаполнена. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнитьПоСпискуСотрудников", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, ЭтаФорма, , , ,,Режим)

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УстановитьФункциональныеОпцииФормы();

	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	РаботаСДиалогамиКлиентСервер.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизация, Объект.СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
		
	ОбщегоНазначенияБК.УстановитьТекстАвтора(НадписьАвтор, Объект.Автор);
		
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБККлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
	
КонецПроцедуры 

&НаСервере
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(СтруктураПараметров = Неопределено)
	
	Если СтруктураПараметров = Неопределено 
		ИЛИ (СтруктураПараметров.Свойство("НеобходимоИзменитьЗначенияРеквизитовОбъекта") 
				И СтруктураПараметров.НеобходимоИзменитьЗначенияРеквизитовОбъекта) Тогда 
		РаботаСДиалогами.СтруктурноеПодразделениеПриИзменении(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктураПараметров);
	КонецЕсли;
	
	ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	РаботаСДиалогамиКлиент.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
		Модифицированность = Истина;
		ПриИзмененииЗначенияОрганизацииСервер(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ИзмененаОрганизация И НЕ СтруктураПараметров.ИзмененоСтруктурноеПодразделение Тогда
		Возврат;
	КонецЕсли;

	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОСотруднике(СведенияОСотрудниках, Сотрудник)
	
	СведенияОСотруднике = СведенияОСотрудниках[Сотрудник];
	Если СведенияОСотруднике = Неопределено Тогда
		СведенияОСотруднике = Новый Структура("ЭтоВнутреннееСовместительство",Ложь);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	СотрудникиОрганизаций.ВидЗанятости
		               |ИЗ
		               |	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		               |ГДЕ
		               |	СотрудникиОрганизаций.Ссылка = &Сотрудник";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			СведенияОСотруднике.ЭтоВнутреннееСовместительство = (Выборка.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		КонецЕсли;
		
		СведенияОСотрудниках[Сотрудник] = СведенияОСотруднике;
	КонецЕсли;
	
	Возврат СведенияОСотруднике;
	
КонецФункции

&НаСервере
Процедура РаботникиОрганизацииСотрудникПриИзмененииНаСервере(СтрокаТабличнойЧасти, ПараметрыОбъекта)
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ПараметрыОбъекта.СтруктурноеПодразделение,
																							ПараметрыОбъекта.Организация,
																							Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = ПараметрыОбъекта.Организация;
	КонецЕсли;
	СтрокаТабличнойЧасти.ПрекращатьСтандартныеВычеты = Документы.УвольнениеИзОрганизаций.ПолучитьНалогоплательщикаДляПримененияВычетовПоИПН(СтрокаТабличнойЧасти.ФизЛицо, СтрокаТабличнойЧасти.ДатаУвольнения, Объект.Дата) = Налогоплательщик;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнитьПоСпискуСотрудников(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;
	
	Объект.РаботникиОрганизации.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВводаТекста(Результат, Параметры) Экспорт
	
	Если Не Результат = Неопределено Тогда
		Если Параметры.Свойство("ИмяРеквизита") Тогда
			Объект[Параметры.ИмяРеквизита] = Результат;
		ИначеЕсли Параметры.Свойство("ИмяТЧ") Тогда
			Объект[Параметры.ИмяТЧ][Параметры.Индекс][Параметры.ИмяКолонки] = Результат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковСписокЗавершениеВыбора(ВыбранноеЗначение, Параметры) Экспорт

	ТекущаяСтрока = Элементы.РаботникиОрганизации.ТекущиеДанные;
	Если  ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекущаяСтрока.Сотрудник = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьФизЛицоСотрудника(Сотрудник) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиОрганизаций.Физлицо,
	|	СотрудникиОрганизаций.Ссылка КАК Сотрудник
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Физлицо;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции 


