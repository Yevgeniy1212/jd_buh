#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Организация КАК Налогоплательщик,
	|	Реквизиты.Организация КАК НалогоплательщикАкциза,
	|	НАЧАЛОПЕРИОДА(Реквизиты.Дата, МЕСЯЦ) КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(Реквизиты.Дата, МЕСЯЦ) КАК КонецПериода,
	|	НЕОПРЕДЕЛЕНО КАК НачГраница,
	|	НЕОПРЕДЕЛЕНО КАК КонГраница,
	|	Реквизиты.Ответственный
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.Закрытие8000 КАК Реквизиты    
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО Реквизиты.Организация = Организации.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Организация КАК Налогоплательщик,
	|	Реквизиты.НачалоПериода,
	|	Реквизиты.КонецПериода,
	|	Реквизиты.НачГраница,
	|	Реквизиты.КонГраница,
	|	Реквизиты.Ответственный
	|ИЗ
	|	Реквизиты КАК Реквизиты";


	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументОбъект, Отказ) Экспорт 
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
		
	Запрос.УстановитьПараметр("Организация",				ДокументСсылка.Организация);
	//Запрос.УстановитьПараметр("СтруктурноеПодразделение",	ДокументСсылка.СтруктурноеПодразделение);

	Запрос.УстановитьПараметр("ГраницаОстатков",			Новый Граница(КонецМесяца(ДокументСсылка.Дата), ВидГраницы.Включая));
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	
	// Добавить колонку "Объект" и заполнить ее объектом текущего документа.
	// Объект текущего документа может потребоваться, например, для сохранения ошибок и комментариев.
	ТаблицаРеквизиты.Колонки.Добавить("Объект", Новый ОписаниеТипов("ДокументОбъект.Закрытие8000"));
	Для Каждого СтрокаТаблицаРеквизиты Из ТаблицаРеквизиты Цикл
		СтрокаТаблицаРеквизиты.Объект = ДокументОбъект;
	КонецЦикла;
	
	ТаблицаРеквизиты.Колонки.Добавить("ДопПараметры");
	
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НачГраница =  Новый Граница(Реквизиты.НачалоПериода, ВидГраницы.Включая) ;
	КонГраница =  Новый Граница(Реквизиты.КонецПериода, ВидГраницы.Включая);
	
	Реквизиты.Вставить("НачГраница", НачГраница);
	Реквизиты.Вставить("КонГраница", КонГраница);
	
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(НачГраница, "НачГраница");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(КонГраница, "КонГраница");

	
	НомераТаблиц = Новый Структура;
	//Запрос.Текст = ТекстЗапросаВалюнаяПереоценка(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	//			  + ТекстЗапросаРеквизитыАмортизацияНМА (НомераТаблиц, ПараметрыПроведения, Реквизиты)
	//			  + ТекстЗапросаРеквизитыАмортизацияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты);

	Запрос.УстановитьПараметр("Ссылка",     	Реквизиты.Регистратор);
	
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
	КонецЕсли;  

	Возврат ПараметрыПроведения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗакрытиеГруппыСчетов8000";
	КомандаПечати.Представление = НСтр("ru = 'Закрытие счетов группы 8000'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗакрытиеГруппыСчетов8000") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗакрытиеГруппыСчетов8000",
			НСтр("ru = 'Закрытие счетов группы 8000'"),                                    
			ПечатьЗакрытия8000(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.Закрытие8000.ЗакрытиеГруппыСчетов8000");                     
	КонецЕсли;
	
КонецПроцедуры
	
// Функция формирует табличный документ с печатной формой накладной,
// 
//
// Возвращаемое значение:
//  Табличный документ - Табличный документ - печатная форма накладной
//
Функция ПечатьЗакрытия8000(МассивОбъектов, ОбъектыПечати)

	ТабДокумент = Новый ТабличныйДокумент;
	//ТабДокумент.КлючПараметровПечати = "Закрытие8000_Закрытие";
	Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.Закрытие8000.ЗакрытиеГруппыСчетов8000");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", МассивОбъектов[0].Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	              |	Закрытие8000тбДанные.СчетДт КАК СчетДт,
	              |	Закрытие8000тбДанные.СубконтоДт1,
	              |	Закрытие8000тбДанные.СубконтоДт2,
	              |	Закрытие8000тбДанные.СубконтоДт3,
	              |	Закрытие8000тбДанные.СчетКт КАК СчетКт,
	              |	Закрытие8000тбДанные.СубконтоКт1,
	              |	Закрытие8000тбДанные.СубконтоКт2,
	              |	Закрытие8000тбДанные.СубконтоКт3,
	              |	Закрытие8000тбДанные.Сумма КАК Сумма,
	              |	Закрытие8000тбДанные.СчетДт.Код + ""      /      "" + Закрытие8000тбДанные.СчетКт.Код КАК Дт_Кт,
	              |	Закрытие8000тбДанные.Содержание
	              |ИЗ
	              |	Документ.Закрытие8000.Данные КАК Закрытие8000тбДанные
	              |ГДЕ
	              |	Закрытие8000тбДанные.Ссылка = &ТекущийДокумент
	              |ИТОГИ
	              |	СУММА(Сумма)
	              |ПО
	              |	Дт_Кт";
	ВыборкаСчет = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбластьМакетаШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСчет      = Макет.ПолучитьОбласть("Счет");
	ОбластьМакетаСубконто  = Макет.ПолучитьОбласть("Субконто");
	
	ОбластьМакетаШапка.Параметры.Организация = МассивОбъектов[0].Организация;
	ОбластьМакетаШапка.Параметры.ДатаН       = Формат(МассивОбъектов[0].ДатаНач, "ДФ=dd.MM.yyyy");
	ОбластьМакетаШапка.Параметры.ДатаК       = Формат(МассивОбъектов[0].Дата   , "ДФ=dd.MM.yyyy");
	ОбластьМакетаШапка.Параметры.Номер       = МассивОбъектов[0].Номер;
	ОбластьМакетаШапка.Параметры.текВремя    = ТекущаяДата();
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	
	Пока ВыборкаСчет.Следующий() Цикл
		ОбластьМакетаСчет.Параметры.Заполнить(ВыборкаСчет);
		ОбластьМакетаСчет.Параметры.счДт = Лев(ВыборкаСчет.Дт_Кт,6);
		ОбластьМакетаСчет.Параметры.счКт = Прав(ВыборкаСчет.Дт_Кт,6);
		
		ТабДокумент.Вывести(ОбластьМакетаСчет, 1);
		ВыборкаСубконто = ВыборкаСчет.Выбрать();
		Пока ВыборкаСубконто.Следующий() Цикл
			ОбластьМакетаСубконто.Параметры.Заполнить(ВыборкаСубконто);
			
			ТабДокумент.Вывести(ОбластьМакетаСубконто, 2);
		КонецЦикла;
	КонецЦикла;
	
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.ТолькоПросмотр      = Истина;
	ТабДокумент.ОтображатьСетку     = Ложь;

	Возврат ТабДокумент;

КонецФункции 

#КонецЕсли
