#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура Рассчитать(Объект, ФизЛицо = Неопределено, КомментироватьРасчет = Ложь) Экспорт
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	
	Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеРасчетовСервер.РассчитатьДокумент("УдержанияОрганизаций", 
												"РегистрацияРазовыхУдержанийРаботниковОрганизаций",
												"Удержания", 
												Объект, 
												ФизЛицо,
												КомментироватьРасчет);
												
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", КонецМесяца(Ссылка.ПериодРегистрации));
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Реквизиты.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаРаботыСоСтруктурнымиПодразделениями	 , "ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Запрос.УстановитьПараметр("Организация", 			   	Реквизиты.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", 	Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение",  	Реквизиты.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", 	Реквизиты.МесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("ПериодВзаиморасчетов", 		Реквизиты.ПериодВзаиморасчетов);
	Запрос.УстановитьПараметр("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																							Реквизиты.Организация,
																							ПредопределенноеЗначение("Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты"));
	Иначе
		Налогоплательщик = Реквизиты.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("Налогоплательщик",  Налогоплательщик);
	
	ПодготовитьТаблицыДокумента(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаУдержания(НомераТаблиц, Реквизиты);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
			
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВременнаяТаблица_ДанныеДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблица_Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрацияРазовыхУдержанийРаботниковОрганизаций.Дата,
	|	РегистрацияРазовыхУдержанийРаботниковОрганизаций.Организация,
	|	РегистрацияРазовыхУдержанийРаботниковОрганизаций.СтруктурноеПодразделение,
	|	РегистрацияРазовыхУдержанийРаботниковОрганизаций.ПериодРегистрации КАК ПериодРегистрации,
	|	РегистрацияРазовыхУдержанийРаботниковОрганизаций.Ссылка
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций КАК РегистрацияРазовыхУдержанийРаботниковОрганизаций
	|ГДЕ
	|	РегистрацияРазовыхУдержанийРаботниковОрганизаций.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрацияРазовыхУдержаний.Дата,
	|	РегистрацияРазовыхУдержаний.Организация,
	|	РегистрацияРазовыхУдержаний.СтруктурноеПодразделение,
	|	КОНЕЦПЕРИОДА(РегистрацияРазовыхУдержаний.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	РегистрацияРазовыхУдержаний.ПериодРегистрации КАК МесяцНалоговогоПериода,
	|	РегистрацияРазовыхУдержаний.ПериодРегистрации КАК ПериодВзаиморасчетов,
	|	РегистрацияРазовыхУдержаний.ПериодРегистрации КАК ПериодРегистрации,
	|	РегистрацияРазовыхУдержаний.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
	|			ТОГДА ВЫБОР
	|					КОГДА РегистрацияРазовыхУдержаний.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|						ТОГДА РегистрацияРазовыхУдержаний.Организация
	|					ИНАЧЕ РегистрацияРазовыхУдержаний.Организация.ГоловнаяОрганизация
	|				КОНЕЦ
	|		ИНАЧЕ РегистрацияРазовыхУдержаний.Организация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
	|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
	|	ЛОЖЬ КАК ПоддержкаРаботыСоСтруктурнымиПодразделениями 
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	ВТ_ДанныеДокумента КАК РегистрацияРазовыхУдержаний
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
	|		ПО РегистрацияРазовыхУдержаний.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&Период, ) КАК УчетнаяПолитикаНУ
	|		ПО РегистрацияРазовыхУдержаний.Организация = УчетнаяПолитикаНУ.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.Период,
	|	Реквизиты.МесяцНалоговогоПериода,
	|	Реквизиты.ПериодВзаиморасчетов,
	|	Реквизиты.ПериодРегистрации,
	|	Реквизиты.Ссылка,
	|	Реквизиты.ГоловнаяОрганизация,
	|	Реквизиты.ОтражениеПоПериодуРегистрации,
	|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
	|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций,
	|	Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
	|ИЗ
	|	ВТ_Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокумента(Запрос, Реквизиты)
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Удержания.НомерСтроки,
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	ВЫБОР
		|		КОГДА Удержания.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА Удержания.СпособОтраженияВБухучете
		|		ИНАЧЕ Удержания.Ссылка.СпособОтраженияВБухучете
		|	КОНЕЦ КАК СпособОтраженияВБухучете,
		|	Удержания.Размер,
		|	Удержания.Результат
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.Удержания КАК Удержания
		|ГДЕ
		|	Удержания.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	Удержания.ФизЛицо,
		|	Реквизиты.МесяцНалоговогоПериода  КАК Период
		|ПОМЕСТИТЬ ВТ_ПериодыСотрудников
		|ИЗ 
		|	ВТ_Удержания КАК Удержания
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|";
			
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
					 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина, Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам);
					 
		Результат = Запрос.Выполнить();
	                                                 
КонецПроцедуры

Функция ТекстЗапросаУдержания(НомераТаблиц, Реквизиты) 
	
	НомераТаблиц.Вставить("Удержания", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	&Период КАК Период,
		|	&ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	СтрокаУдержания.ФизЛицо,
		|	СтрокаУдержания.ВидРасчета,
		|	СтрокаУдержания.Размер,
		|	СтрокаУдержания.Результат КАК СуммаДохода,
		|	(-СтрокаУдержания.Результат) КАК СуммаВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание)КАК ВидСтроки,
		|	СтрокаУдержания.СпособОтраженияВБухучете,
		|	СтрокаУдержания.НомерСтроки,
		|
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ 
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ 
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		|	// ПодразделениеОрганизации
		|	ВЫБОР 
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|							И МестоРаботы.ПодразделениеОрганизации.Владелец = &ОбособленноеПодразделение
		|						ТОГДА МестоРаботы.ПодразделениеОрганизации
		|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) 
		|	КОНЕЦ КАК ПодразделениеОрганизации
		|				
		|ИЗ
		|	ВТ_Удержания КАК СтрокаУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаУдержания.ФизЛицо = МестоРаботы.ФизЛицо
		|			И Реквизиты.МесяцНалоговогоПериода = МестоРаботы.Период
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаУдержания.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ВедомостьУдержанийФИО
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РазовыеУдержания_ВедомостьУдержанийФИО";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость удержаний (по ФИО сотрудников)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
	//ВедомостьУдержанийТаб
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РазовыеУдержания_ВедомостьУдержанийТаб";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость удержаний (по табельным номерам)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 51;
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РазовыеУдержания_ВедомостьУдержанийФИО,РазовыеУдержания_ВедомостьУдержанийТаб";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ФиксированныйКомплект = Истина;
	КомандаПечати.ПереопределитьПользовательскиеНастройкиКоличества = Истина;
	КомандаПечати.Порядок = 75;
	
	// Комплект документов (на принтер)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РазовыеУдержания_ВедомостьУдержанийФИО,РазовыеУдержания_ВедомостьУдержанийТаб";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов (на принтер)'");
	КомандаПечати.Картинка = БиблиотекаКартинок.ПечатьСразу;
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ФиксированныйКомплект = Истина;
	КомандаПечати.ПереопределитьПользовательскиеНастройкиКоличества = Истина;
	КомандаПечати.СразуНаПринтер = Истина;
	КомандаПечати.Порядок = 76;
	
	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РазовыеУдержания_ВедомостьУдержанийФИО,РазовыеУдержания_ВедомостьУдержанийТаб";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 79;
	     
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать Приказ на каждого сотрудника
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РазовыеУдержания_ВедомостьУдержанийФИО") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РазовыеУдержания_ВедомостьУдержанийФИО",
			НСтр("ru = 'Ведомость удержаний (по ФИО сотрудников)'"),
			ПечатьВедомость(МассивОбъектов, ОбъектыПечати, Истина, ПараметрыВывода.КодЯзыка),
			,
			"Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.ПФ_MXL_ВедомостьУдержаний"); 
			
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("РазовыеУдержания_ВедомостьУдержанийФИО"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
	КонецЕсли;

	// Печать Приказ на список сотрудников
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РазовыеУдержания_ВедомостьУдержанийТаб") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РазовыеУдержания_ВедомостьУдержанийТаб",
			НСтр("ru = 'Ведомость удержаний (по табельным номерам)'"),
			ПечатьВедомость(МассивОбъектов, ОбъектыПечати, Ложь, ПараметрыВывода.КодЯзыка),
			,
			"Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.ПФ_MXL_ВедомостьУдержаний");
			
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("РазовыеУдержания_ВедомостьУдержанийТаб"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой накладной,
// 
//
// Возвращаемое значение:
//  Табличный документ - Табличный документ - печатная форма накладной
//
Функция ПечатьВедомость(МассивОбъектов, ОбъектыПечати, УпорядочиватьПоФИО, КодЯзыка=Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	УдержанияДок.Номер,
	               |	УдержанияДок.Дата КАК ДатаДокумента,
	               |	УдержанияДок.Организация,
	               |	УдержанияДок.СтруктурноеПодразделение,
	               |	УдержанияДок.Ответственный,
	               |	УдержанияДок.Ссылка,
	               |	УдержанияДок.Автор.ФизЛицо
	               |ИЗ
	               |	Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций КАК УдержанияДок
	               |ГДЕ
	               |	УдержанияДок.Ссылка В(&МассивОбъектов)";
	Шапка = Запрос.Выполнить().Выбрать();
	
	ЗапросПоУдержаниям = Новый Запрос();
	
	ЗапросПоУдержаниям.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ЗапросПоУдержаниям.Текст = 
	"ВЫБРАТЬ
	|	РазовыеУдержания.Физлицо КАК Физлицо,
	|	РазовыеУдержания.Ссылка.Дата КАК Период,
	|	РазовыеУдержания.Ссылка КАК Ссылка,
	|	РазовыеУдержания.Ссылка.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_ФизЛица
	|ИЗ
	|	Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.Удержания КАК РазовыеУдержания
	|ГДЕ
	|	РазовыеУдержания.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФИОФИзЛиц.ФизЛицо КАК ФизЛицо,
	|	ПериодыФИОФИзЛиц.Период КАК Период,
	|	ФИОФизЛиц.Фамилия КАК Фамилия,
	|	ФИОФизЛиц.Имя КАК Имя,
	|	ФИОФизЛиц.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТ_ФИОФизЛиц
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ФИОФизЛиц.ФизЛицо КАК ФизЛицо,
	|			МАКСИМУМ(ФИОФизЛиц.Период) КАК Период
	|		ИЗ
	|			РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛица КАК ВТ_ФизЛица
	|				ПО ФИОФизЛиц.Период <= ВТ_ФизЛица.Период
	|					И ФИОФизЛиц.ФизЛицо = ВТ_ФизЛица.Физлицо
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ФИОФизЛиц.ФизЛицо) КАК ПериодыФИОФИзЛиц
	|		ПО ФИОФизЛиц.Период = ПериодыФИОФИзЛиц.Период
	|			И ФИОФизЛиц.ФизЛицо = ПериодыФИОФИзЛиц.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|	МАКСИМУМ(ПериодыРаботникиОрганизации.Период) КАК Период,
	|	МАКСИМУМ(ПериодыРаботникиОрганизации.Организация) КАК Организация,
	|	МАКСИМУМ(РаботникиОрганизации.Сотрудник.Код) КАК СотрудникКод
	|ПОМЕСТИТЬ ВТ_РаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|			РаботникиОрганизаций.Сотрудник.Физлицо КАК СотрудникФизлицо,
	|			РаботникиОрганизаций.Организация КАК Организация
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФизЛица КАК ВТ_ФизЛица
	|				ПО РаботникиОрганизаций.Период <= ВТ_ФизЛица.Период
	|					И РаботникиОрганизаций.Сотрудник.Физлицо = ВТ_ФизЛица.Физлицо
	|					И РаботникиОрганизаций.Организация = ВТ_ФизЛица.Организация
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РаботникиОрганизаций.Сотрудник.Физлицо,
	|			РаботникиОрганизаций.Организация) КАК ПериодыРаботникиОрганизации
	|		ПО РаботникиОрганизации.Период = ПериодыРаботникиОрганизации.Период
	|			И РаботникиОрганизации.Сотрудник.Физлицо = ПериодыРаботникиОрганизации.СотрудникФизлицо
	|			И РаботникиОрганизации.Организация = ПериодыРаботникиОрганизации.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизации.Сотрудник.Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РазовыеУдержания.ВидРасчета КАК ВидРасчета,
	|	РазовыеУдержания.Размер КАК Размер,
	|	СУММА(РазовыеУдержания.Результат) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВТ_ФИОФизЛиц.Фамилия ЕСТЬ NULL
	|			ТОГДА РазовыеУдержания.Физлицо.Наименование
	|		ИНАЧЕ ВТ_ФИОФизЛиц.Фамилия + "" "" + ВТ_ФИОФизЛиц.Имя + "" "" + ВТ_ФИОФизЛиц.Отчество
	|	КОНЕЦ КАК Сотрудник,
	|	РаботникиОрганизации.Сотрудник.Код КАК Код,
	|	РазовыеУдержания.Ссылка КАК Ссылка,
	|	РаботникиОрганизацииСрезПоследних.СотрудникКод КАК СотрудникКод
	|ИЗ
	|	Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.Удержания КАК РазовыеУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаботникиОрганизации КАК РаботникиОрганизацииСрезПоследних
	|		ПО РазовыеУдержания.Физлицо = РаботникиОрганизацииСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизацииСрезПоследних.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо)
	|			И (РаботникиОрганизацииСрезПоследних.Организация = РаботникиОрганизации.Организация)
	|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (РаботникиОрганизацииСрезПоследних.Период = РаботникиОрганизации.Период)
	|			И (РаботникиОрганизацииСрезПоследних.СотрудникКод = РаботникиОрганизации.Сотрудник.Код)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФИОФизЛиц КАК ВТ_ФИОФизЛиц
	|		ПО РазовыеУдержания.Физлицо = ВТ_ФИОФизЛиц.ФизЛицо
	|ГДЕ
	|	РазовыеУдержания.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РазовыеУдержания.Физлицо,
	|	РаботникиОрганизации.Сотрудник.Код,
	|	РазовыеУдержания.ВидРасчета,
	|	РазовыеУдержания.Размер,
	|	ВЫБОР
	|		КОГДА ВТ_ФИОФизЛиц.Фамилия ЕСТЬ NULL
	|			ТОГДА РазовыеУдержания.Физлицо.Наименование
	|		ИНАЧЕ ВТ_ФИОФизЛиц.Фамилия + "" "" + ВТ_ФИОФизЛиц.Имя + "" "" + ВТ_ФИОФизЛиц.Отчество
	|	КОНЕЦ,
	|	РазовыеУдержания.Ссылка,
	|	РаботникиОрганизацииСрезПоследних.СотрудникКод";
							   
	Если УпорядочиватьПоФИО Тогда 
		ЗапросПоУдержаниям.Текст = ЗапросПоУдержаниям.Текст + "
	                           |УПОРЯДОЧИТЬ ПО
	                           |	Сотрудник
							   |";
	Иначе 
	 	ЗапросПоУдержаниям.Текст = ЗапросПоУдержаниям.Текст + "
	                           |УПОРЯДОЧИТЬ ПО
	                           |	Код
							   |";
	КонецЕсли;							   
	
	ЗапросПоУдержаниям.Текст = ЗапросПоУдержаниям.Текст + "
							   |ИТОГИ 
							   |	СУММА(Сумма)
							   |ПО
							   |	Ссылка
							   |";

	ВыборкаСтрок = ЗапросПоУдержаниям.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	// подсчитываем количество страниц документа - для корректного разбиения на страницы
	ВсегоСтрокДокумента = ВыборкаСтрок.Количество();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "РазовыеУдержания_Ведомость";
	Макет       = УправлениеПечатью.МакетПечатнойФормы("Документ.РегистрацияРазовыхУдержанийРаботниковОрганизаций.ПФ_MXL_ВедомостьУдержаний", КодЯзыка);
	
	ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтогПоСтранице	= Макет.ПолучитьОбласть("ИтогПоЛисту");
	ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подписи");
	ОбластьМакетаШапка			= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьМакетаЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");

	Пока Шапка.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
		// Выводим шапку накладной
		ОбластьМакетаЗаголовок.Параметры.Заполнить(Шапка);
		
		СтруктурнаяЕдиницаОрганизация = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(Шапка.Организация, Шапка.СтруктурноеПодразделение);
		ОбластьМакетаЗаголовок.Параметры.ТекстЗаголовок = РаботаСДиалогами.СформироватьЗаголовокДокумента(Шапка.Ссылка, НСтр("ru='Регистрация разовых удержаний сотрудников'", КодЯзыка),,,,КодЯзыка);
		ПредставлениеОрганизации = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Шапка.ДатаДокумента), "ПолноеНаименование,");
		ОбластьМакетаЗаголовок.Параметры.Организация = ПредставлениеОрганизации;
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
		
		// Вывести табличную часть
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; ИтогоПоВедомости = 0;
		
		ВыборкаСтрок.Сбросить();
		
		Если ВыборкаСтрок.НайтиСледующий(Шапка.Ссылка) Тогда
			ВыборкаСтрокРаб = ВыборкаСтрок.Выбрать();
		Иначе
			ВыборкаСтрокРаб = Неопределено;
		КонецЕсли;
		
		Если ВыборкаСтрокРаб <> Неопределено Тогда
			
			Пока ВыборкаСтрокРаб.Следующий() Цикл
				
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокРаб);
				
				// разбиение на страницы
				ВыведеноСтрок = ВыведеноСтрок + 1;
				ОбластьМакетаСтрока.Параметры.НомерСтроки = ВыведеноСтрок;
				
				// Проверим, уместится ли строка на странице или надо открывать новую страницу
				ВывестиПодвалЛиста = НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
				Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
					ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
					ВывестиПодвалЛиста = НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
				КонецЕсли;
				
				Если ВывестиПодвалЛиста Тогда
					
					ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
					ТабДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ОбластьМакетаШапка);
					ВыведеноСтраниц = ВыведеноСтраниц + 1;
					ИтогоНаСтранице = 0;
					
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
				
				ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрокРаб.Сумма;
				ИтогоПоВедомости = ИтогоПоВедомости + ВыборкаСтрокРаб.Сумма;		
				
			КонецЦикла;
		КонецЕсли;
		
		Руководители = ОбщегоНазначенияБКВызовСервера.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация, Шапка.ДатаДокумента, Шапка.Ответственный);
		
		ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		ТабДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаСтрок.Сумма);
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывести подписи
		ОбластьМакетаПодвал.Параметры.Руководитель 		= Руководители.Руководитель;
		ОбластьМакетаПодвал.Параметры.ГлавныйБухгалтер	= Руководители.ГлавныйБухгалтер;
		ОбластьМакетаПодвал.Параметры.ВедомостьСоставил	= ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.Ответственный.ФизЛицо, Шапка.ДатаДокумента).Представление;
		
		ТабДокумент.Вывести(ОбластьМакетаПодвал); 
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;
	
	Возврат ТабДокумент;	
	
КонецФункции 

#КонецЕсли