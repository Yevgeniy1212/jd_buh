#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснования(ДанныеЗаполнения);
		Возврат;
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация,Дата);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Организация, Дата);
	ВедениеУчетаВременныхразницБалансовымМетодом    = УчетнаяПолитикаСервер.ВедетсяУчетВременныхРазницБалансовымМетодом(Организация, Дата);
	
	НеобходимостьОтраженияВНУ 						= ОрганизацияПлательщикНалогаНаПрибыль И УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	
	Если НЕ НеобходимостьОтраженияВНУ Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВидУчетаНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаНоменклатурыНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаОбъектаСтроительстваНУ");
		МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетУчетаНУ");	
				
	КонецЕсли;
	
	Если НЕ ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.ПоРезультатамИнвентаризации Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КорСчетОприходованияБУ");
	КонецЕсли;
	
	Если НЕ ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
		МассивНепроверяемыхРеквизитов.Добавить("Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаНоменклатурыБУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаНоменклатурыНУ");		
	КонецЕсли;
	
	Если НЕ ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.ОбъектыСтроительства Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОбъектСтроительства");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаОбъектаСтроительстваБУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаОбъектаСтроительстваНУ");
	КонецЕсли;	
	
	Если ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование Тогда 		
		МассивНепроверяемыхРеквизитов.Добавить("ОС.ПервоначальнаяСтоимостьБУ");
	КонецЕсли;
	             
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

	УправлениеВнеоборотнымиАктивамиСервер.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
	
	ПроверитьЗаполнениеТабличнойЧастиПострочно(Отказ);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект, Ложь);
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ПринятиеКУчетуОС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Если вдруг не удалось получить параметры проведения и не установлен флаг Отказ, то просто выйдем из проведения
	Если ПараметрыПроведения = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	УчетОС.ПроверитьВозможностьИзмененияСостоянияОС(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.Реквизиты, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Таблица списанных товаров
	ТаблицаСписанныеТовары = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(ПараметрыПроведения.ТаблицаТовары,
			ПараметрыПроведения.РеквизитыТовары, Отказ);

	
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.РеквизитыПринятиеКУчетуОС, "НомерЖурнала", НСтр("ru = 'ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.РеквизитыОтраженияЗатратНУ, "НомерЖурнала", НСтр("ru = 'ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	
	//заполним первоначальную стоимость и стоимость для вычисления амортизации, если она заполняется из списанных товаров.
	ТаблицаПервоначальныеСведенияОС = УчетОС.ПодготовитьТаблицуПервоначальныеСведенияОС(ПараметрыПроведения.ТаблицаПервоначальныеСведенияОС,ТаблицаСписанныеТовары);
	ТаблицаОтраженияЗатратНУ 		= УчетОС.ПодготовитьТаблицуОтраженияЗатратОСНУ(ПараметрыПроведения.ТаблицаОтраженияЗатратНУ,ТаблицаСписанныеТовары);
	ТаблицаПараметрыАмортизацииОС   = УчетОС.ПодготовитьТаблицуПараметрыАмортизацииОС(ПараметрыПроведения.ТаблицаПараметрыАмортизацииОС,ТаблицаСписанныеТовары);
				
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(ТаблицаСписанныеТовары,
		ПараметрыПроведения.РеквизитыТовары, Движения, Отказ);
	
			
	//КОНТРОЛЬ ПО РЕГИСТРУ "ТОВАРЫ ОРГАНИЗАЦИЙ
	НомераГТДСервер.ВыполнитьКонтрольТоварыОрганизаций(ПараметрыПроведения.ТаблицаСписанияТоварыОрганизаций,
			ПараметрыПроведения.Реквизиты, , Отказ);
	
	УчетОС.СформироватьДвиженияПервоначальныеСведенияОСБух(ТаблицаПервоначальныеСведенияОС, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);		
	
	УчетОС.СформироватьДвиженияИзменениеСостоянияОС(ПараметрыПроведения.ТаблицаСостоянияОС,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);

	УчетОС.СформироватьДвиженияМестонахождениеОСБух(ПараметрыПроведения.ТаблицаМестонахождениеОС, Движения, Отказ);
	
	УчетОС.СформироватьДвиженияИзменениеГрафиковАмортизацииОС(ПараметрыПроведения.ТаблицаГрафикиАмортизацииОС, Движения, Отказ);
	
	УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОС(ПараметрыПроведения.ТаблицаНачислениеАмортизацииОС, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		Движения, Отказ);
		
	УчетОС.СформироватьДвиженияПараметрыАмортизацииОСБухгалтерскийУчет(ТаблицаПараметрыАмортизацииОС,Движения, Отказ);
	
	УчетОС.СформироватьДвиженияСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ПараметрыПроведения.ТаблицаСпособыОтраженияРасходовПоАмортизацииОС, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		Движения, Отказ);
		
	УчетОС.СформироватьДвиженияРегистрацияСобытияОС(ПараметрыПроведения.ТаблицаСобытияОС,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		Движения, Отказ);
		
	УчетОС.СформироватьДвиженияСчетовУчетаОСБух(ПараметрыПроведения.ТаблицаСчетаУчетаОС, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		Движения, Отказ);	
		
	УчетОС.СформироватьДвиженияИзменениеЗемельногоНалога(ПараметрыПроведения.ТаблицаОбъектыЗемельногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
				
	УчетОС.СформироватьДвиженияОбъектыИмущественногоНалога(ПараметрыПроведения.ТаблицаОбъектыИмущественногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
								
	УчетОС.СформироватьДвиженияИзменениеТранспортногоНалога(ПараметрыПроведения.ТаблицаОбъектыТранспортногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);            
				
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияОбъектыНалоговогоУчетаФА(ПараметрыПроведения.ТаблицаОбъектыНалоговогоУчетаФА,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияФАУчитываемыхОтдельно(ПараметрыПроведения.ТаблицаФАУчитываемыеОтдельно,ПараметрыПроведения.РеквизитыДляИзмененияСостояний, 
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияПринятиеКУчетуОС(ПараметрыПроведения.ТаблицаПринятиеКУчетуОС, ПараметрыПроведения.РеквизитыПринятиеКУчетуОС,
		Движения, Отказ);
		
	УчетОС.СформироватьДвиженияПоОтражениюЗатратНУОС(ТаблицаОтраженияЗатратНУ, ПараметрыПроведения.РеквизитыОтраженияЗатратНУ, Движения, Отказ);
	
	// Товары организаций
	НомераГТДСервер.СформироватьДвиженияТоварыОрганизаций(ПараметрыПроведения.ТаблицаСписанияТоварыОрганизаций,
			ПараметрыПроведения.Реквизиты, Движения, Отказ);  	


	ПроцедурыНалоговогоУчета.ОтразитьПостоянныеРазницыВНУ(ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	ДоЗаполнитьРеквизитыТабличнойЧастиОС(ПараметрыПроведения.ТаблицаПервоначальныеСведенияОС, Отказ);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КраткийСоставМОЛ 		   = УправлениеВнеоборотнымиАктивамиСервер.ЗаполнитьКраткийСоставДокументаОСМОЛПодразделения(ОС, "МОЛ", Истина);
	КраткийСоставПодразделений = УправлениеВнеоборотнымиАктивамиСервер.ЗаполнитьКраткийСоставДокументаОСМОЛПодразделения(ОС, "ПодразделениеОрганизации", Ложь);

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ УчитыватьКПН Тогда
		ВидУчетаНУ = Справочники.ВидыУчетаНУ.ПустаяСсылка();
	КонецЕсли;
	
		Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнить табличную часть НомераГТД.
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И НомераГТДСервер.ВедетсяУчетПоТоварамОрганизаций(Дата) 
		И ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование Тогда
		
		
		ТаблицаДокумента = Новый ТаблицаЗначений;
		ТаблицаДокумента.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаДокумента.Колонки.Добавить("Количество",  Новый ОписаниеТипов("Число"));
		ТаблицаДокумента.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
		ТаблицаДокумента.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число"));
		ТаблицаДокумента.Колонки.Добавить("КлючСвязи",	 Новый ОписаниеТипов("Число"));
		ТаблицаДокумента.Колонки.Добавить("Склад",		 Новый ОписаниеТипов("СправочникСсылка.Склады"));
		
		НоваяСтрока = ТаблицаДокумента.Добавить();
		
		НоваяСтрока.КлючСвязи    = 1;
		НоваяСтрока.Количество   = ЭтотОбъект.ОС.Количество();
		НоваяСтрока.Коэффициент  = 1;
		НоваяСтрока.НомерСтроки  = 1;
		НоваяСтрока.Номенклатура = ЭтотОбъект.Номенклатура;

		ТаблицаНомераГТД = НомераГТДСервер.ПодготовитьТаблицуНомеровГТД(ТаблицаДокумента, НомераГТД.Выгрузить());
		НомераГТДСервер.ЗаполнитьТаблицуНомераГТД(ЭтотОбъект,ТаблицаДокумента, ТаблицаНомераГТД);				
		
	КонецЕсли;                                                                                       
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	
	Если ОбъектКопирования.НомераГТД.Количество() <> 0 Тогда
		НомераГТД.Очистить();
	КонецЕсли;  	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПоДокументуОснования(Основание) Экспорт
	Документы.ПринятиеКУчетуОС.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, Основание);	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧастиПострочно(Отказ, ПараметрыПроверки = Неопределено)
	
	Для Каждого СтрокаТабличнойЧасти ИЗ ОС Цикл
		
		РеквизитыДляПроверки = Новый Структура;
		
		Если СтрокаТабличнойЧасти.НачислятьАмортизациюБУ Тогда
			
			РеквизитыДляПроверки.Вставить("СпособНачисленияАмортизацииБУ" ,СтатусСообщения.Важное);
			
			Если ВидОперации <> Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование Тогда 
				РеквизитыДляПроверки.Вставить("СтоимостьДляВычисленияАмортизацииБУ", СтатусСообщения.Важное);
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.Линейный 
				Или СтрокаТабличнойЧасти.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования 
				Или СтрокаТабличнойЧасти.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
				РеквизитыДляПроверки.Вставить("СрокПолезногоИспользованияБУ" ,СтатусСообщения.Важное);
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.Производственный Тогда
				РеквизитыДляПроверки.Вставить("ПараметрВыработкиБУ"	  ,СтатусСообщения.Важное);
				РеквизитыДляПроверки.Вставить("ОбъемПродукцииРаботБУ" ,СтатусСообщения.Важное);
				РеквизитыДляПроверки.Вставить("ОбъемПродукцииРаботДляВычисленияАмортизацииБУ" ,СтатусСообщения.Важное);
			ИначеЕсли СтрокаТабличнойЧасти.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка тогда
				РеквизитыДляПроверки.Вставить("КоэффициентУскоренияБУ" ,СтатусСообщения.Важное);
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.СпособНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ЛинейныйПроцентом Тогда
				РеквизитыДляПроверки.Вставить("КоэффициентАмортизацииБУ" ,СтатусСообщения.Важное);
			КонецЕсли;	
			РеквизитыДляПроверки.Вставить("СпособОтраженияРасходовПоАмортизацииБУ"	,СтатусСообщения.Важное);			
		КонецЕсли;

		Для Каждого КлючЗначение Из РеквизитыДляПроверки Цикл
			Значение = СтрокаТабличнойЧасти[КлючЗначение.Ключ];  			
			Если НЕ ЗначениеЗаполнено(Значение) Тогда // надо ругаться
				
				МетаданныеРеквизиты    =    Метаданные().ТабличныеЧасти.ОС.Реквизиты;
				ПредставлениеРеквизита = МетаданныеРеквизиты[КлючЗначение.Ключ].Представление();
				
				ВидУчета = ""; 
				Если Прав(КлючЗначение.Ключ,2) = "БУ" тогда
					ВидУчета = НСтр("ru='(БУ) '");
				КонецЕсли;
				
				ТекстСообщение = НСтр("ru = '- строка № %1, инв.номер ОС <%2>: %3 не заполнено значение реквизита %4 !'");
				
							
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщение, СтрокаТабличнойЧасти.НомерСтроки, 
											СтрокаТабличнойЧасти.ИнвентарныйНомер, ВидУчета, ПредставлениеРеквизита),
											ЭтотОбъект, "ОС[" + Формат(СтрокаТабличнойЧасти.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]." + КлючЗначение.Ключ, "Объект", Отказ);
				
			КонецЕсли;   			
		КонецЦикла;	
	КонецЦикла;
		
КонецПроцедуры

Процедура ДоЗаполнитьРеквизитыТабличнойЧастиОС(ТаблицаОС, Отказ)
	
	Если ТаблицаОС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененыДанныеОбъекта = Ложь;
	Для Каждого СтрокаСписания ИЗ ТаблицаОС Цикл	
		
		СтрокаОС = ЭтотОбъект.ОС.Найти(СтрокаСписания.НомерСтроки,"НомерСтроки");		
		
		Если СтрокаОС <> Неопределено Тогда
			СтрокаОС.ПервоначальнаяСтоимостьБУ = СтрокаСписания.ПервоначальнаяСтоимость;			
			ИзмененыДанныеОбъекта = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИзмененыДанныеОбъекта И Не Отказ Тогда
		Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли

