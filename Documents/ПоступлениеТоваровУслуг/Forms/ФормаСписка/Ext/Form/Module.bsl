
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
	
	ВосстановленныеНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ВыборПоступленияТоваровУслуг", "ВыборТаблицы");
	
	Если ВосстановленныеНастройки <> Неопределено Тогда
		Если ВосстановленныеНастройки.Свойство("ОС") Тогда
			ОС = ВосстановленныеНастройки.ОС;
		КонецЕсли;
		Если ВосстановленныеНастройки.Свойство("Товары") Тогда
			Товары = ВосстановленныеНастройки.Товары;
		КонецЕсли;
		Если ВосстановленныеНастройки.Свойство("Услуги") Тогда
			Услуги = ВосстановленныеНастройки.Услуги;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
	ОбщегоНазначенияБК.ФормаСпискаПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	//ИнтеграцияИСМПТК
    //Скроем меню ввода Акта приёмки маркированной продукции
    ОбщегоНазначенияБККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаИСМПТК", "Видимость", Ложь);
	ОбщегоНазначенияБККлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаИСЦЭДМ", "Видимость", Ложь);
    //Конец ИнтеграцияИСМПТК
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;	
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СПИСОК

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБККлиентСервер.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОтобратьПоВиду(Команда)

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОС"    , ОС);
	ПараметрыФормы.Вставить("Товары", Товары);
	ПараметрыФормы.Вставить("Услуги", Услуги);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьОтборПоТабЧастям", ЭтаФорма);
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ОтборПоВиду", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидОперации(Команда)
	
	СтрокаТаблицы = Элементы.Список.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", СтрокаТаблицы.Ссылка);
	ПараметрыФормы.Вставить("ВидОперации", СтрокаТаблицы.ВидОперации);
	ПараметрыФормы.Вставить("ИзменитьВидОперации", Истина);
	
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента", ПараметрыФормы, ЭтотОбъект);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды


&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ОС"    , ОС);
	ПараметрыЗакрытия.Вставить("Товары", Товары);
	ПараметрыЗакрытия.Вставить("Услуги", Услуги);
	
	НаименованиеНастроек = "ВыборПоступленияТоваровУслуг";
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(НаименованиеНастроек, "ВыборТаблицы" , ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборПоТабЧастям(ПараметрыНоменклатуры, ДополнительныеПараметры) Экспорт

	Если ПараметрыНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыНоменклатуры.Свойство("ОС") Тогда
		ОС = ПараметрыНоменклатуры.ОС;
	КонецЕсли;

	Если ПараметрыНоменклатуры.Свойство("Товары") Тогда
		Товары = ПараметрыНоменклатуры.Товары;
	КонецЕсли;
	
	Если ПараметрыНоменклатуры.Свойство("Услуги") Тогда
		Услуги = ПараметрыНоменклатуры.Услуги;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ГруппаОтбора = ОтборыСписковКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Форма.Список.Отбор.Элементы, "ОтборПоТабЧастям",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора, "КоличествоОС", 0,
		Форма.ОС, ВидСравненияКомпоновкиДанных.Больше);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора, "КоличествоТовары", 0,
		Форма.Товары, ВидСравненияКомпоновкиДанных.Больше);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора, "КоличествоУслуги", 0,
		Форма.Услуги, ВидСравненияКомпоновкиДанных.Больше);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеТовары(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Товары"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеУслуги(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Услуги"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеОсновныеСредства(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеПокупкаКомиссия(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПараметровФормы(ВидОперации)

	СтруктураПараметров = Новый Структура;
	
	Для Каждого ЭлементОтбора Из Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных")
			И ЭлементОтбора.Представление = "ОтборПоТабЧастям" Тогда
			Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
	ЗначенияЗаполнения = ОбщегоНазначенияБКВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		ЗначенияЗаполнения.Вставить("ВидОперации", ВидОперации);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиенте
Процедура СоздатьВПереработку(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИмпорт(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Импорт"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьотСтруктурногоПодразделения(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ОтСтруктурногоПодразделения"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтНерезидента(Команда)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровФормы(
		ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПоступлениеОтНерезидента"));
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры


