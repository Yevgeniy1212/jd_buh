#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Заполняет документ по остаткам на складе
// 
Процедура ЗаполнитьПоОстаткамВКассе(Объект) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Касса",        Объект.Касса);
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетКассы", 	  ПланыСчетов.Типовой.ДенежныеСредстваВКассе);
	
	ТекстЗапросаИнвентаризация = "ВЫБРАТЬ
	                             |	ТиповойОстатки.СуммаОстаток КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В Иерархии(&СчетКассы), , Субконто1 В ИЕРАРХИИ (&Касса)) КАК ТиповойОстатки";
	
	Запрос.Текст = ТекстЗапросаИнвентаризация;

	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
		
	Для Каждого СтрокаТаблицы Из ТаблицаОстатков Цикл
		
		СтрокаТабличнойЧасти = Объект.ДенежныеСредства.Добавить();

		СтрокаТабличнойЧасти.Валюта      = СтрокаТаблицы.Валюта;
		СтрокаТабличнойЧасти.Сумма       = СтрокаТаблицы.Сумма;
		СтрокаТабличнойЧасти.СуммаУчет   = СтрокаТаблицы.Сумма;
		СтрокаТабличнойЧасти.СчетУчетаБУ = СтрокаТаблицы.Счет;
			
	КонецЦикла; 

КонецПроцедуры

// Заполняет документ по остаткам на складе
// 
Процедура ЗаполнитьПоОстаткамОрганизации(Объект) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетКассы",	  ПланыСчетов.Типовой.ДенежныеСредстваВКассе);
	Запрос.УстановитьПараметр("Организация",  Объект.Организация);  
	
	Если ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями") Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
		УсловиеСтруктурноеПодразделение = " И СтруктурноеПодразделение = &СтруктурноеПодразделение ";
	Иначе
		УсловиеСтруктурноеПодразделение = "";
	КонецЕсли;
	
	ТекстЗапросаИнвентаризация = "ВЫБРАТЬ
	                             |	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,								 
								 |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта КАК Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В Иерархии(&СчетКассы), , Организация = &Организация" + УсловиеСтруктурноеПодразделение + ") КАК ТиповойОстатки
	                             |СГРУППИРОВАТЬ ПО
	                             |	ТиповойОстатки.Счет, ТиповойОстатки.Валюта";
	
	Запрос.Текст = ТекстЗапросаИнвентаризация;

	Результат    = Запрос.Выполнить().Выбрать();
		
	Пока Результат.Следующий() Цикл
		
		СтрокаТабличнойЧасти = Объект.ДенежныеСредства.Добавить();

		СтрокаТабличнойЧасти.Валюта     	= Результат.Валюта;
		СтрокаТабличнойЧасти.Сумма      	= Результат.Сумма;
		СтрокаТабличнойЧасти.СуммаУчет      = Результат.Сумма;
		СтрокаТабличнойЧасти.СчетУчетаБУ    = Результат.Счет;
			
	КонецЦикла;

КонецПроцедуры

// Процедура перезаполняет учетные количества в документе
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Процедура ПерезаполнитьУчетныеСуммы(Объект) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Касса", 		  Объект.Касса);
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетКассы", 	  ПланыСчетов.Типовой.ДенежныеСредстваВКассе);
	Запрос.УстановитьПараметр("Организация",  Объект.Организация);  

	
	Если ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями") Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
		УсловиеСтруктурноеПодразделение = " И СтруктурноеПодразделение = &СтруктурноеПодразделение ";
	Иначе
		УсловиеСтруктурноеПодразделение = "";
	КонецЕсли;

	
	ТекстЗапросаИнвентаризация = "ВЫБРАТЬ
	                             |	ТиповойОстатки.СуммаОстаток КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В Иерархии(&СчетКассы), , Субконто1 В ИЕРАРХИИ (&Касса)) КАК ТиповойОстатки";
								 
	ТекстЗапросаИнвентаризацияПоОрганизации = "ВЫБРАТЬ
	                             |	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта КАК Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В ИЕРАРХИИ (&СчетКассы), , Организация = &Организация" + УсловиеСтруктурноеПодразделение + ") КАК ТиповойОстатки
	                             |СГРУППИРОВАТЬ ПО
	                             |	ТиповойОстатки.Счет,
	                             |	ТиповойОстатки.Валюта";
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийИнвентаризацияДенежныхСредств.ПоКассе Тогда
		Запрос.Текст = ТекстЗапросаИнвентаризация;
		Результат    = Запрос.Выполнить().Выбрать();
	Иначе
		Запрос.Текст = ТекстЗапросаИнвентаризацияПоОрганизации;
		Результат    = Запрос.Выполнить().Выбрать();
	КонецЕсли; 
	
	Для Каждого СтрокаТЧ Из Объект.ДенежныеСредства Цикл
		СтрокаТЧ.СуммаУчет = 0;
	КонецЦикла;
	    
	Пока Результат.Следующий() Цикл

		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Валюта", Результат.Валюта);
		СтруктураПоиска.Вставить("СчетУчетаБУ", Результат.Счет);
		
		ТаблицаСтрок = Объект.ДенежныеСредства.НайтиСтроки(СтруктураПоиска);
		
		Если (ТаблицаСтрок.Количество() > 0) Тогда		
			ТаблицаСтрок[0].СуммаУчет = Результат.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расходный кассовый ордер
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ6";
	КомандаПечати.Представление = НСтр("ru = 'ИНВ-6 (Акт инвентаризации денежных средств)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ИНВ6";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать расходной накладной
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ6");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ИНВ6",
			НСтр("ru = 'ИНВ-6 (Акт инвентаризации денежных средств)'"),
			ПечатьИНВ6(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ИнвентаризацияДенежныхСредств.ПФ_MXL_Инв6");
	КонецЕсли;

КонецПроцедуры

Функция ПечатьИНВ6(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

    ТабДокумент = Новый ТабличныйДокумент;
	
	ИтогиФактическоеНаличие = Новый Соответствие;
	ИтогиПоДаннымУчета 		= Новый Соответствие;
	ИтогиИзлишки 			= Новый Соответствие;
	ИтогиНедостача 			= Новый Соответствие;
	
	КодЯзыка 			    = Метаданные.Языки.Русский.КодЯзыка;
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаКомиссии = Новый Структура();
	ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", НСтр("ru = 'Председатель комиссии'", КодЯзыка));
	ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии"		, НСтр("ru = 'Члены комиссии'", КодЯзыка));
    
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИнвентаризацияДенежныхСредств.Ссылка КАК Ссылка,
				   |	ИнвентаризацияДенежныхСредств.ВидОперации,
	               |	ИнвентаризацияДенежныхСредств.Номер КАК НомерДокумента,
	               |	ИнвентаризацияДенежныхСредств.Дата КАК ДатаДокумента,
	               |	ИнвентаризацияДенежныхСредств.Организация,
	               |	ИнвентаризацияДенежныхСредств.СтруктурноеПодразделение,
	               |	ИнвентаризацияДенежныхСредств.Касса,
	               |	ИнвентаризацияДенежныхСредств.Ответственный.ФизЛицо КАК МОЛ,
	               |	ИнвентаризацияДенежныхСредств.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	               |	ИнвентаризацияДенежныхСредств.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеВид КАК ДокументОснованиеВид,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеДата КАК ДокументОснованиеДата,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	               |ПОМЕСТИТЬ ВТ_ДокументыИнвентаризацияДенежныхСредств
	               |ИЗ
	               |	Документ.ИнвентаризацияДенежныхСредств КАК ИнвентаризацияДенежныхСредств
	               |ГДЕ
	               |	ИнвентаризацияДенежныхСредств.Ссылка В(&МассивОбъектов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументыИнвентаризацияДенежныхСредств.Ссылка,
	               |	ОтветственныеЛицаПоДокументам.ФизическоеЛицо КАК ОтветственноеЛицо
	               |ПОМЕСТИТЬ ВТ_ОтветственныеЛица
	               |ИЗ
	               |	ВТ_ДокументыИнвентаризацияДенежныхСредств КАК ДокументыИнвентаризацияДенежныхСредств
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ПериодыОтвественныеЛица.Ссылка КАК Ссылка,
	               |			ОтветственныеЛица.ФизическоеЛицо КАК ФизическоеЛицо
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				МАКСИМУМ(ОтветственныеЛица.Период) КАК Период,
	               |				ОтветственныеЛица.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |				ДокументыИнвентаризацияДенежныхСредств.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ВТ_ДокументыИнвентаризацияДенежныхСредств КАК ДокументыИнвентаризацияДенежныхСредств
	               |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛица
	               |					ПО ДокументыИнвентаризацияДенежныхСредств.Касса = ОтветственныеЛица.СтруктурнаяЕдиница
	               |						И ДокументыИнвентаризацияДенежныхСредств.ДатаДокумента >= ОтветственныеЛица.Период
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ОтветственныеЛица.СтруктурнаяЕдиница,
	               |				ДокументыИнвентаризацияДенежныхСредств.Ссылка) КАК ПериодыОтвественныеЛица
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛица
	               |				ПО ПериодыОтвественныеЛица.Период = ОтветственныеЛица.Период
	               |					И ПериодыОтвественныеЛица.СтруктурнаяЕдиница = ОтветственныеЛица.СтруктурнаяЕдиница
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПериодыОтвественныеЛица.Ссылка,
	               |			ОтветственныеЛица.ФизическоеЛицо) КАК ОтветственныеЛицаПоДокументам
	               |		ПО ДокументыИнвентаризацияДенежныхСредств.Ссылка = ОтветственныеЛицаПоДокументам.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИнвентаризацияДенежныхСредств.Ссылка,
				   |	ИнвентаризацияДенежныхСредств.ВидОперации,
	               |	ИнвентаризацияДенежныхСредств.НомерДокумента,
	               |	ИнвентаризацияДенежныхСредств.ДатаДокумента,
	               |	ИнвентаризацияДенежныхСредств.Организация,
	               |	ИнвентаризацияДенежныхСредств.СтруктурноеПодразделение,
	               |	ИнвентаризацияДенежныхСредств.Касса,
	               |	ИнвентаризацияДенежныхСредств.МОЛ,
	               |	ИнвентаризацияДенежныхСредств.ДатаНачалаИнвентаризации,
	               |	ИнвентаризацияДенежныхСредств.ДатаОкончанияИнвентаризации,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеВид,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеДата,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеНомер,
	               |	ОтветственныеЛица.ОтветственноеЛицо
	               |ИЗ
	               |	ВТ_ДокументыИнвентаризацияДенежныхСредств КАК ИнвентаризацияДенежныхСредств
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтветственныеЛица КАК ОтветственныеЛица
	               |		ПО ИнвентаризацияДенежныхСредств.Ссылка = ОтветственныеЛица.Ссылка
	               |ГДЕ
	               |	ИнвентаризацияДенежныхСредств.Ссылка В(&МассивОбъектов)";
	
 	РегистраторыШапка = Запрос.Выполнить().Выбрать();
	
	//запрос по табличной части Инвентаризационная комиссия
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияДенежныхСредств.Ссылка
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.ИнвентаризацияДенежныхСредств КАК ИнвентаризацияДенежныхСредств
	|ГДЕ
	|	ИнвентаризацияДенежныхСредств.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыДляПечати.Ссылка КАК Ссылка,
	|	ИнвентаризацияДенежныхСредств.ФизЛицо КАК ФизЛицо,
	|	ЕСТЬNULL(ИнвентаризацияДенежныхСредств.Председатель, ЛОЖЬ) КАК Председатель
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияДенежныхСредств.ИнвентаризационнаяКомиссия КАК ИнвентаризацияДенежныхСредств
	|		ПО ДокументыДляПечати.Ссылка = ИнвентаризацияДенежныхСредств.Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	РегистраторыИнвентаризационнаяКомиссия = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	//запрос по табличной части  ДС
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст  = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ИнвентаризацияДенежныхСредств.Ссылка
	                |ПОМЕСТИТЬ ДокументыДляПечати
	                |ИЗ
	                |	Документ.ИнвентаризацияДенежныхСредств КАК ИнвентаризацияДенежныхСредств
	                |ГДЕ
	                |	ИнвентаризацияДенежныхСредств.Ссылка В(&МассивОбъектов)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ДокументыДляПечати.Ссылка КАК Ссылка,
	                |	МИНИМУМ(ИнвентаризацияДенежныхСредств.НомерСтроки) КАК Номер,
	                |	СУММА(ЕСТЬNULL(ИнвентаризацияДенежныхСредств.СуммаУчет, 0)) КАК СуммаУчет,
	                |	СУММА(ЕСТЬNULL(ИнвентаризацияДенежныхСредств.Сумма, 0)) КАК СуммаФакт,
	                |	ИнвентаризацияДенежныхСредств.Валюта КАК Валюта,
	                |	ИнвентаризацияДенежныхСредств.СчетУчетаБУ КАК СчетУчетаБУ,
	                |	СУММА(ВЫБОР
	                |			КОГДА ИнвентаризацияДенежныхСредств.Сумма - ИнвентаризацияДенежныхСредств.СуммаУчет > 0
	                |				ТОГДА ИнвентаризацияДенежныхСредств.Сумма - ИнвентаризацияДенежныхСредств.СуммаУчет
	                |			ИНАЧЕ 0
	                |		КОНЕЦ) КАК Излишек,
	                |	СУММА(ВЫБОР
	                |			КОГДА ИнвентаризацияДенежныхСредств.Сумма - ИнвентаризацияДенежныхСредств.СуммаУчет < 0
	                |				ТОГДА ИнвентаризацияДенежныхСредств.СуммаУчет - ИнвентаризацияДенежныхСредств.Сумма
	                |			ИНАЧЕ 0
	                |		КОНЕЦ) КАК Недостача
	                |ИЗ
	                |	ДокументыДляПечати КАК ДокументыДляПечати
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияДенежныхСредств.ДенежныеСредства КАК ИнвентаризацияДенежныхСредств
	                |		ПО ДокументыДляПечати.Ссылка = ИнвентаризацияДенежныхСредств.Ссылка
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ИнвентаризацияДенежныхСредств.Ссылка,
	                |	ИнвентаризацияДенежныхСредств.Валюта,
	                |	ИнвентаризацияДенежныхСредств.СчетУчетаБУ,
	                |	ДокументыДляПечати.Ссылка
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Номер
	                |ИТОГИ
	                |	СУММА(СуммаУчет),
	                |	СУММА(СуммаФакт),
	                |	СУММА(Излишек),
	                |	СУММА(Недостача)
	                |ПО
	                |	Ссылка,
	                |	Валюта";
				 
	РегистраторыДенежныеСредства = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ТабДокумент = Новый ТабличныйДокумент;

    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияДенежныхСредств_ИНВ10";
	Макет      					  = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияДенежныхСредств.ПФ_MXL_Инв6");
	Макет.КодЯзыка 				  = КодЯзыка;
	ОбластьМакетаШапка 			  = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовок 		  = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаСтрокаВТенге  	  = Макет.ПолучитьОбласть("СтрокаТенге");
	ОбластьМакетаСтрокаВВалюте 	  = Макет.ПолучитьОбласть("СтрокаВВалюте");
	//ОбластьИтоговПоСтранице    = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакетаИтоги 			  = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакетаПустаяСтрока 	  = Макет.ПолучитьОбласть("СтрокаПустые");
	ОбластьМакетаКоммисия 		  = Макет.ПолучитьОбласть("Комиссия");
	ОбластьМакетаПодвалОписи 	  = Макет.ПолучитьОбласть("ПодвалОписи");
	ОбластьМакетаОборотнаясторона = Макет.ПолучитьОбласть("Оборотнаясторона");
	ОбластьМакетаКоммисия 		  = Макет.ПолучитьОбласть("Комиссия1");
	
	Пока РегистраторыШапка.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктурнаяЕдиницаОрганизация = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(РегистраторыШапка.Организация, РегистраторыШапка.СтруктурноеПодразделение);
		
		// Зададим параметры макета по умолчанию
		ТабДокумент.ПолеСверху		   = 0;
		ТабДокумент.ПолеСлева		   = 0;
		ТабДокумент.ПолеСнизу  		   = 0;
		ТабДокумент.ПолеСправа 		   = 0;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

		// Выводим шапку накладной
		ОбластьМакетаШапка.Параметры.Заполнить(РегистраторыШапка);
		СведенияОбОрганизации = ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, РегистраторыШапка.ДатаДокумента);
		
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакетаШапка.Параметры.ОрганизацияРНН_БИН		  = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "БИН_ИИН,", Ложь, РегистраторыШапка.ДатаДокумента, "ru");
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = РегистраторыШапка.ДатаДокумента;
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РегистраторыШапка.НомерДокумента, РегистраторыШапка.Ссылка);
		// выведем  данные приказа об инвентаризации
		ДокОснованиеДата 										 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 года'", КодЯзыка), Формат(РегистраторыШапка.ДокументОснованиеДата, "Л=" + КодЯзыка + "; ДФ=дд ММММ гггг"));
		ОбластьМакетаШапка.Параметры.ДокументОснованиеДата       = ?(ЗначениеЗаполнено(ДокОснованиеДата), ДокОснованиеДата, НСтр("ru = '«____»_______________20____года'", КодЯзыка));
		ОбластьМакетаШапка.Параметры.ДокументОснованиеНомер		 = ?(ЗначениеЗаполнено(РегистраторыШапка.ДокументОснованиеНомер), РегистраторыШапка.ДокументОснованиеНомер, "________");
		ОбластьМакетаШапка.Параметры.ДатаОкончанияИнвентаризации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 года'", КодЯзыка), Формат(РегистраторыШапка.ДатаОкончанияИнвентаризации, "Л=" + КодЯзыка + "; ДФ=дд ММММ гггг"));

		
		Если РегистраторыШапка.ВидОперации = Перечисления.ВидыОперацийИнвентаризацияДенежныхСредств.ПоКассе Тогда
			ТекстСообщения = НСтр("ru = 'в кассе: ""%1""'", КодЯзыка);
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, РегистраторыШапка.Касса);
			
			ОбластьМакетаШапка.Параметры.МестоНохождения = ТекстСообщения;
		КонецЕсли;
		
		// заполним МОЛ
		ОтветственноеЛицо					 	  = ?(ЗначениеЗаполнено(РегистраторыШапка.Касса), РегистраторыШапка.ОтветственноеЛицо, РегистраторыШапка.МОЛ);
		ДанныМОЛ 							 	  = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(РегистраторыШапка.Организация, ОтветственноеЛицо, РегистраторыШапка.ДатаДокумента);
		ОбластьМакетаШапка.Параметры.МОЛ		  = ДанныМОЛ.Представление;
		ОбластьМакетаШапка.Параметры.ДолжностьМОЛ = ДанныМОЛ.Должность;
				
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		// Выводим заголовок таблицы
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

		ПолеВИностраннойВалюте = Ложь;
		
		Если НЕ РегистраторыДенежныеСредства.НайтиСледующий(Новый Структура("Ссылка", РегистраторыШапка.Ссылка)) Тогда 
		
			ТабДокумент.Вывести(ОбластьМакетаСтрокаВТенге);
			
		Иначе
			
			ВыборкаСтрокДенежныеСредстваСсылка = РегистраторыДенежныеСредства.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Если НЕ ВыборкаСтрокДенежныеСредстваСсылка.НайтиСледующий(Новый Структура("Валюта", ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета())) Тогда
				
				ТабДокумент.Вывести(ОбластьМакетаСтрокаВТенге);
				
			Иначе 
				
				// Посчитаем общую сумму в тенге и выведем в строку счета учета
				СтрокаСчетовУчета = "";
				ИтогоСуммаФакт 	  = 0;
				ИтогоСуммаУчет	  = 0;
				
				ВыборкаСтрокВТенге = ВыборкаСтрокДенежныеСредстваСсылка.Выбрать();
				Пока ВыборкаСтрокВТенге.Следующий() Цикл 
					СтрокаСчетовУчета = СтрокаСчетовУчета + СокрЛП(ВыборкаСтрокВТенге.СчетУчетаБУ) + ", ";
					ИтогоСуммаФакт    = ИтогоСуммаФакт 	  + ВыборкаСтрокВТенге.СуммаФакт;
					ИтогоСуммаУчет 	  = ИтогоСуммаУчет    + ВыборкаСтрокВТенге.СуммаУчет;
				КонецЦикла;
				
				// обрежем последние 2 символа (", ")
				СтрокаСчетовУчета = Лев(СтрокаСчетовУчета, СтрДлина(СтрокаСчетовУчета) - 2);
				
				ОбластьМакетаСтрокаВТенге.Параметры.СубСчетТенге = СтрокаСчетовУчета;
				ОбластьМакетаСтрокаВТенге.Параметры.ПоФактуТенге = ИтогоСуммаФакт;
				ОбластьМакетаСтрокаВТенге.Параметры.ПоУчетуТенге = ИтогоСуммаУчет;
					
				Разница = ИтогоСуммаФакт - ИтогоСуммаУчет;
					
				Если Разница < 0 Тогда 
					
					ОбластьМакетаСтрокаВТенге.Параметры.Недостача = Разница * -1;
						
				ИначеЕсли Разница > 0 Тогда 
						
					ОбластьМакетаСтрокаВТенге.Параметры.Излишки = Разница;
						
				КонецЕсли;
					
				ТабДокумент.Вывести(ОбластьМакетаСтрокаВТенге);
				
			КонецЕсли; 	
			
			НомерПП = 2;
			ВыборкаСтрокДенежныеСредстваСсылка.Сбросить();
			Пока ВыборкаСтрокДенежныеСредстваСсылка.Следующий() Цикл
				
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрокДенежныеСредстваСсылка.Валюта) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВыборкаСтрокДенежныеСредстваСсылка.Валюта <> ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета() Тогда 
											
					ПолеВИностраннойВалюте = Истина;
					
					// Посчитаем общую сумму в валюте и выведем в строку счета учета
					СтрокаСчетовУчета = "";
					ИтогоСуммаФакт 	  = 0;
					ИтогоСуммаУчет	  = 0;
					
					ВыборкаСтрокВВалюте = ВыборкаСтрокДенежныеСредстваСсылка.Выбрать();
					Пока ВыборкаСтрокВВалюте.Следующий() Цикл 
						СтрокаСчетовУчета = СтрокаСчетовУчета + СокрЛП(ВыборкаСтрокВВалюте.СчетУчетаБУ) + ", ";
						ИтогоСуммаФакт 	  = ИтогоСуммаФакт 	  + ВыборкаСтрокВВалюте.СуммаФакт;
						ИтогоСуммаУчет 	  = ИтогоСуммаУчет 	  + ВыборкаСтрокВВалюте.СуммаУчет;
					КонецЦикла;
					
					// обрежем последние 2 символа (", ")
					СтрокаСчетовУчета = Лев(СтрокаСчетовУчета, СтрДлина(СтрокаСчетовУчета) - 2);

					ОбластьМакетаСтрокаВВалюте.Параметры.СубСчетВалюта = СтрокаСчетовУчета;
					ОбластьМакетаСтрокаВВалюте.Параметры.ПоФактуВалюта = ИтогоСуммаФакт;
					ОбластьМакетаСтрокаВВалюте.Параметры.ПоУчетуВалюта = ИтогоСуммаУчет;
					ОбластьМакетаСтрокаВВалюте.Параметры.Валюта 	   = ВыборкаСтрокДенежныеСредстваСсылка.Валюта.НаименованиеПолное;
					ОбластьМакетаСтрокаВВалюте.Параметры.НомерПП 	   = НомерПП;
					
					Разница = ИтогоСуммаФакт - ИтогоСуммаУчет;
					
					Если Разница < 0 Тогда 
						
						ОбластьМакетаСтрокаВВалюте.Параметры.Недостача = Разница * -1;
						ОбластьМакетаСтрокаВВалюте.Параметры.Излишки   = 0;
						
					ИначеЕсли Разница > 0 Тогда 
						
						ОбластьМакетаСтрокаВВалюте.Параметры.Излишки   = Разница;
						ОбластьМакетаСтрокаВВалюте.Параметры.Недостача = 0;
						
					КонецЕсли;
					
					Если НомерПП = 2 Тогда
						ОбластьМакетаСтрокаВВалюте.Параметры.Описание = НСтр("ru = 'Наличные денежные средства и эквиваленты денежных средств в иностранной валюте'", КодЯзыка);
					Иначе
						ОбластьМакетаСтрокаВВалюте.Параметры.Описание = "";
					КонецЕсли;
					
					ТабДокумент.Вывести(ОбластьМакетаСтрокаВВалюте);
					НомерПП = НомерПП + 1;
					
				КонецЕсли;
							
			КонецЦикла; 
			
			Если НЕ ПолеВИностраннойВалюте Тогда
				ОбластьМакетаСтрокаВВалюте.Параметры.НомерПП  = НомерПП;
				ОбластьМакетаСтрокаВВалюте.Параметры.Описание = НСтр("ru = 'Наличные денежные средства и эквиваленты денежных средств в иностранной валюте'", КодЯзыка);
				ТабДокумент.Вывести(ОбластьМакетаСтрокаВВалюте);
				
				НомерПП = НомерПП + 1;
			КонецЕсли;
			
			Для Счетчик = 1 По 6 Цикл
				ОбластьМакетаПустаяСтрока.Параметры["НомерПП" + Счетчик] = НомерПП;
				НомерПП = НомерПП + 1;
			КонецЦикла;		
			
			ТабДокумент.Вывести(ОбластьМакетаПустаяСтрока);                               
			
			ИтогоПоФакту   = "";
			ИтогоПоУчету   = "";
			ИтогоИзлишки   = "";
			ИтогоНедостача = "";

			ВыборкаСтрокДенежныеСредстваСсылка.Сбросить();
			Пока ВыборкаСтрокДенежныеСредстваСсылка.Следующий() Цикл 
				
				Если НЕ ИтогоПоФакту = "" Тогда
					ИтогоПоФакту   = ИтогоПоФакту + Символы.ПС;
					ИтогоПоУчету   = ИтогоПоУчету + Символы.ПС;
					ИтогоИзлишки   = ИтогоИзлишки + Символы.ПС;
					ИтогоНедостача = ИтогоНедостача + Символы.ПС;
				КонецЕсли;
				
				ИтогоПоФакту = ИтогоПоФакту + ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаСтрокДенежныеСредстваСсылка.СуммаФакт, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
				ИтогоПоУчету = ИтогоПоУчету + ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаСтрокДенежныеСредстваСсылка.СуммаУчет, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
				
				Разница = ВыборкаСтрокДенежныеСредстваСсылка.СуммаФакт - ВыборкаСтрокДенежныеСредстваСсылка.СуммаУчет;
				
				Если Разница < 0 Тогда 
					
					ИтогоИзлишки   = ИтогоИзлишки 	+ ОбщегоНазначенияБКВызовСервера.ФорматСумм(0, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
					ИтогоНедостача = ИтогоНедостача + ОбщегоНазначенияБКВызовСервера.ФорматСумм(Разница * -1, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
					
				ИначеЕсли Разница > 0 Тогда 
					
					ИтогоИзлишки   = ИтогоИзлишки 	+ ОбщегоНазначенияБКВызовСервера.ФорматСумм(Разница, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
					ИтогоНедостача = ИтогоНедостача + ОбщегоНазначенияБКВызовСервера.ФорматСумм(0, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
					
				Иначе 
					
					ИтогоИзлишки   = ИтогоИзлишки 	+ ОбщегоНазначенияБКВызовСервера.ФорматСумм(0, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
					ИтогоНедостача = ИтогоНедостача + ОбщегоНазначенияБКВызовСервера.ФорматСумм(0, ВыборкаСтрокДенежныеСредстваСсылка.Валюта, "0,00");
					
				КонецЕсли;

			КонецЦикла;	
			
			ОбластьМакетаИтоги.Параметры.ИтогоПоФакту   = ИтогоПоФакту;
			ОбластьМакетаИтоги.Параметры.ИтогоПоУчету   = ИтогоПоУчету;
			ОбластьМакетаИтоги.Параметры.ИтогоИзлишки   = ИтогоИзлишки;
			ОбластьМакетаИтоги.Параметры.ИтогоНедостача = ИтогоНедостача;
			
			ТабДокумент.Вывести(ОбластьМакетаИтоги);
			
		КонецЕсли;
		
		РегистраторыИнвентаризационнаяКомиссия.Сбросить();
		
		Если РегистраторыИнвентаризационнаяКомиссия.НайтиСледующий(Новый Структура("Ссылка", РегистраторыШапка.Ссылка)) Тогда
			
			ТаблицаИнвентаризационнаяКомиссия = РегистраторыИнвентаризационнаяКомиссия.Выбрать();
			
			Если ТаблицаИнвентаризационнаяКомиссия.НайтиСледующий(Новый Структура("Председатель", Истина)) Тогда
				
				ДанныеПредседателя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(РегистраторыШапка.Организация, ТаблицаИнвентаризационнаяКомиссия.ФизЛицо, РегистраторыШапка.ДатаДокумента);
					
				ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
				ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ДанныеПредседателя.Должность;
				ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ДанныеПредседателя.Представление;
				
			Иначе
				
				ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
				ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
				ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = "";
				
			КонецЕсли;
				
			ТабДокумент.Вывести(ОбластьМакетаКоммисия);
			
			// Выведем подписи членов комиссии
			ВыводитьЗаголовок = Истина;
			
			// Сформируем список членов комиссии
			СписокЧленовКомиссии = Новый Массив();
			
			ТаблицаИнвентаризационнаяКомиссия.Сбросить();
			
			Пока ТаблицаИнвентаризационнаяКомиссия.Следующий() Цикл
				Если НЕ ТаблицаИнвентаризационнаяКомиссия.Председатель Тогда
					СписокЧленовКомиссии.Добавить(ТаблицаИнвентаризационнаяКомиссия.ФизЛицо);
				КонецЕсли;
			КонецЦикла;
			
			ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛиц(РегистраторыШапка.Организация, СписокЧленовКомиссии, РегистраторыШапка.ДатаДокумента);
			
			// Сначала выведем членов комиссии из выборки
			Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
				
				ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.ЧленыКомиссии + ":", "");
				ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ЧленКомиссии.Должность;
				ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ЧленКомиссии.Представление;
				
				ТабДокумент.Вывести(ОбластьМакетаКоммисия);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
			
			// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
			Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
				
				Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
					
					ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.ЧленыКомиссии, "");
					ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
					ОбластьМакетаКоммисия.Параметры.ФИОКомиссии		  = "";
					
					ТабДокумент.Вывести(ОбластьМакетаКоммисия);
					
					ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
					
				КонецЦикла;
			
			КонецЕсли;
			
			//выводим подвал	
			ТабДокумент.Вывести(ОбластьМакетаПодвалОписи);
			
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			//Оборотная сторона
			ТабДокумент.Вывести(ОбластьМакетаОборотнаяСторона);
			
			ТаблицаИнвентаризационнаяКомиссия.Сбросить();
			
			Если ТаблицаИнвентаризационнаяКомиссия.НайтиСледующий(Новый Структура("Председатель", Истина)) Тогда
				
				ДанныеПредседателя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(РегистраторыШапка.Организация, ТаблицаИнвентаризационнаяКомиссия.ФизЛицо, РегистраторыШапка.ДатаДокумента);
					
				ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
				ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ДанныеПредседателя.Должность;
				ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ДанныеПредседателя.Представление;
				
			Иначе
				
				ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
				ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
				ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = "";
				
			КонецЕсли;
				
			ТабДокумент.Вывести(ОбластьМакетаКоммисия);
			
			// Выведем подписи членов комиссии
			ВыводитьЗаголовок = Истина;
			
			ТаблицаИнвентаризационнаяКомиссия.Сбросить();
			
			// Сформируем список членов комиссии
			СписокЧленовКомиссии = Новый Массив();
			
			Пока ТаблицаИнвентаризационнаяКомиссия.Следующий() Цикл
				Если НЕ ТаблицаИнвентаризационнаяКомиссия.Председатель Тогда
					СписокЧленовКомиссии.Добавить(ТаблицаИнвентаризационнаяКомиссия.ФизЛицо);
				КонецЕсли;
			КонецЦикла;
			
			ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛиц(РегистраторыШапка.Организация, СписокЧленовКомиссии, РегистраторыШапка.ДатаДокумента);
			
			// Сначала выведем членов комиссии из выборки
			Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
				
				ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.ЧленыКомиссии, "");
				ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ЧленКомиссии.Должность;
				ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ЧленКомиссии.Представление;
				
				ТабДокумент.Вывести(ОбластьМакетаКоммисия);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла;
			
			// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
			Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
						
				Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
					
					ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.ЧленыКомиссии, "");
					ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
					ОбластьМакетаКоммисия.Параметры.ФИОКомиссии 	  = "";
					
					ТабДокумент.Вывести(ОбластьМакетаКоммисия);
					
					ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
					
				КонецЦикла;
			
			КонецЕсли;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, РегистраторыШапка.Ссылка);
	
	КонецЦикла;
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецЕсли
