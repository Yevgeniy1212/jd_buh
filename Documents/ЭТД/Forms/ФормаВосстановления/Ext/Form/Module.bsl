
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнениеФормыПриСозданииНаСервере();
	
	УстановитьВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КодГосударственногоОрганаПриИзменении(Элемент)
	
	Если КодГосударственногоОргана = "1" Тогда
		КомментарийОшибочногоРасторжения = "";
	ИначеЕсли КодГосударственногоОргана = "2" Тогда
		КодСуда = "";
		НаименованиеСуда = "";
		КомментарийОшибочногоРасторжения = "";
	ИначеЕсли КодГосударственногоОргана = "3" Тогда
		НомерПриказа = "";
		КодСуда = "";
		НаименованиеСуда = "";
	КонецЕсли;
	
	УстановитьВидимостьИДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура КодСудаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидКлассификатора",  "Судов");
	ПараметрыФормы.Вставить("Заголовок",   НСтр("ru = 'Классификатор судов'"));
	ПараметрыФормы.Вставить("Уровень",     1);
	ПараметрыФормы.Вставить("ВыборГруппы", Ложь);
	ПараметрыФормы.Вставить("ЗначениеВыбора", КодСуда);
	
	ОткрытьФорму("Обработка.ОбменЭТД.Форма.ФормаПодбораКлассификатора",
	ПараметрыФормы,
	,
	,
	,
	,
	Новый ОписаниеОповещения("ПослеВыбораСуда",
	ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КодСудаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	КодСуда = Текст;
	НаименованиеСуда = ЭТДВызовСервера.ПолучитьНаименованиеСуда(Текст);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИПодписать(Команда)
	
	Если НЕ ПроверитьЗаполнениеРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	ВызовФормыПодписи();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнениеФормыПриСозданииНаСервере()
	
	ВидОперации = Параметры.ВидОперации;
	ИИНРаботника = Параметры.ИИНРаботника;
	ФИОРаботника = Параметры.ФИОРаботника;
	НомерДоговора = Параметры.НомерДоговора;
	ДатаЗаключения = Формат(Параметры.ДатаЗаключения, "ДЛФ=D");
	БИНОрганизации = Параметры.БИНОрганизации;
	Идентификатор = Параметры.Идентификатор;
	КодРегиона = Параметры.КодРегиона;
	Организация = Параметры.Организация;
	ДатаДоговора = Параметры.ДатаЗаключения;
	ДатаРасторжения = Параметры.ДатаРасторжения;
	КодПричиныРасторжения = Параметры.КодПричиныРасторжения;
	ТипРаботодателя = Параметры.ТипРаботодателя;
	Если Параметры.Свойство("ДатаВосстановления") Тогда
		ДатаВосстановления = Параметры.ДатаВосстановления;
	КонецЕсли;
	Если Параметры.Свойство("НомерПриказа") Тогда
		НомерПриказа = Параметры.НомерПриказа;
	КонецЕсли;
	Если Параметры.Свойство("КодГосударственногоОргана") Тогда
		КодГосударственногоОргана = Параметры.КодГосударственногоОргана;
	КонецЕсли;
	Если Параметры.Свойство("КомментарийОшибочногоРасторжения") Тогда
		КомментарийОшибочногоРасторжения = Параметры.КомментарийОшибочногоРасторжения;
	КонецЕсли;
	Если Параметры.Свойство("КодСуда") Тогда
		КодСуда = Параметры.КодСуда;
	КонецЕсли;
	Если Параметры.Свойство("НаименованиеСуда") Тогда
		НаименованиеСуда = Параметры.НаименованиеСуда;
	КонецЕсли;
	
	ШаблонЗаголовка = НСтр("ru = 'Восстановить трудовой договор № %1 от %2'");
	ЭтаФорма.Заголовок = СтрШаблон(ШаблонЗаголовка, НомерДоговора, ДатаЗаключения);
	
	СписокТиповГосударственногоОргана = ЭТДСервер.СписокВыборкаТипыГосударственногоОргана();
	ЗаполняемыйСписокВыбора = Элементы.КодГосударственногоОргана.СписокВыбора;
	Для Каждого ЭлементСписка Из СписокТиповГосударственногоОргана Цикл
		ЗаполняемыйСписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступностьЭлементов()
	
	Если ВидОперации = "ТолькоПросмотр" Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ФормаОтмена.Заголовок = НСтр("ru = 'Закрыть'");
		Элементы.ФормаСохранитьИПодписать.Видимость = Ложь;
	КонецЕсли;
	
	Если КодГосударственногоОргана = "1" Тогда
		Элементы.НомерПриказа.Видимость = Истина;
		Элементы.ГруппаКодСуда.Видимость = Истина;
		Элементы.КомментарийОшибочногоРасторжения.Видимость = Ложь;
	ИначеЕсли КодГосударственногоОргана = "2" Тогда
		Элементы.НомерПриказа.Видимость = Истина;
		Элементы.ГруппаКодСуда.Видимость = Ложь;
		Элементы.КомментарийОшибочногоРасторжения.Видимость = Ложь;
	ИначеЕсли КодГосударственногоОргана = "3" Тогда
		Элементы.НомерПриказа.Видимость = Ложь;
		Элементы.ГруппаКодСуда.Видимость = Ложь;
		Элементы.КомментарийОшибочногоРасторжения.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеФормы()
	
	ДанныеФормы = Новый Структура("ДатаРасторжения,
	|КодПричиныРасторжения,
	|ДатаВосстановления,
	|НомерПриказа,
	|КодГосударственногоОргана,
	|КомментарийОшибочногоРасторжения,
	|КодСуда,
	|НаименованиеСуда");
	
	ЗаполнитьЗначенияСвойств(ДанныеФормы, ЭтаФорма);
	
	Возврат ДанныеФормы;
	
КонецФункции

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	ЕстьОшибки = Ложь;
	
	ДатаСеанса = ОбщегоНазначенияКлиент.ДатаСеанса();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если КодГосударственногоОргана = "1" Тогда
		Если НомерПриказа = "" Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = НСтр("ru='Поле ""Номер приказа о восстановлении"" не заполнено'");
			СообщитьОбОшибкеЗаполнения(ТекстОшибки, Элементы.НомерПриказа);
		КонецЕсли;
		Если КодСуда = "" Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = НСтр("ru='Поле ""Код суда, вынесшего решение о восстановлении"" не заполнено'");
			СообщитьОбОшибкеЗаполнения(ТекстОшибки, Элементы.КодСуда);
		КонецЕсли;
	ИначеЕсли КодГосударственногоОргана = "2" Тогда
		Если НомерПриказа = "" Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = НСтр("ru='Поле ""Номер приказа о восстановлении"" не заполнено'");
			СообщитьОбОшибкеЗаполнения(ТекстОшибки, Элементы.НомерПриказа);
		КонецЕсли;
	ИначеЕсли КодГосударственногоОргана = "3" Тогда
		Если КомментарийОшибочногоРасторжения = "" Тогда
			ЕстьОшибки = Истина;
			ТекстОшибки = НСтр("ru='Поле ""Комментарий ошибочного расторжения"" не заполнено'");
			СообщитьОбОшибкеЗаполнения(ТекстОшибки, Элементы.КомментарийОшибочногоРасторжения);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ ЕстьОшибки;
	
КонецФункции

&НаКлиенте
Процедура СообщитьОбОшибкеЗаполнения(ТекстОшибки, ЭлементФормы)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстОшибки;
	Сообщение.Поле = ЭлементФормы.Имя;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВызовФормыПодписи()
	
	ПараметрыВосстановления = ПараметрыРегистрацииВосстановления();
	СтруктураДанныхДляПодписи = ПолучитьДанныеДляРегистрацииВосстановления(ПараметрыВосстановления);
	
	ДанныеДляПодписи = СтруктураДанныхДляПодписи.ТелоОтвета;
	
	Если СтруктураДанныхДляПодписи.КодОтвета <> 200 Тогда
		ВызватьИсключение ДанныеДляПодписи;
	КонецЕсли;
	
	ПараметрыИмпорта = Новый Структура("bin, dateFrom, dateTo",
		БИНОрганизации,
		Формат(ДатаДоговора, "ДФ=yyyy-MM-dd"),
		Формат(ДатаДоговора, "ДФ=yyyy-MM-dd"));
	
	СтруктураДанныхДляПодписи = ПолучитьДанныеДляЗагрузкиДоговора(ПараметрыИмпорта);
	ДанныеДляПодписиЗапросДоговора = СтруктураДанныхДляПодписи.ТелоОтвета;
	
	Если СтруктураДанныхДляПодписи.КодОтвета <> 200 Тогда
		ВызватьИсключение ДанныеДляПодписиЗапросДоговора;
	КонецЕсли;
	
	ДанныеДляПодписиМассив = Новый Массив;
	ДанныеДляПодписиМассив.Добавить(ДанныеДляПодписи);
	ДанныеДляПодписиМассив.Добавить(ДанныеДляПодписиЗапросДоговора);
	
	ЗапросСертификатаТребуется = ЭТДВызовСервера.ИспользоватьВнешнююКриптографиюДляКомпоненты();
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ДанныеДляПодписи", ДанныеДляПодписиМассив);
	Если ЗапросСертификатаТребуется Тогда
		ПродолжитьОтправкуПослеВводаДанныхЭЦП = Новый ОписаниеОповещения("ПродолжитьОтправкуПослеВводаДанныхЭЦП", ЭтаФорма, ПараметрыЗаписи);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("СтруктурнаяЕдиница", Организация);
		ЭТДКлиент.ОткрытьФормуВводаДанныхЭЦП(ПродолжитьОтправкуПослеВводаДанныхЭЦП, ДополнительныеПараметры);
	Иначе
		ПодписанныеДанные = ЭТДКлиентСервер.СоздатьЭЦП_XML_КриптопровайдерДляСписка(ДанныеДляПодписиМассив, БИНОрганизации);
		
		ОбработкаРезультатаЗапроса(ПодписанныеДанные, ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыРегистрацииВосстановления()
	
	ПараметрыВосстановления = Новый Структура();
	ПараметрыВосстановления.Вставить("employerData", Новый Структура("bin,kato,employerType", БИНОрганизации, КодРегиона, ТипРаботодателя));
	ПараметрыВосстановления.Вставить("contractId", Идентификатор);
	ПараметрыВосстановления.Вставить("terminationDate", ДатаРасторжения);
	ПараметрыВосстановления.Вставить("restoreDate", ДатаВосстановления);
	ПараметрыВосстановления.Вставить("orderNumber", НомерПриказа);
	ПараметрыВосстановления.Вставить("restoreNote", КомментарийОшибочногоРасторжения);
	ПараметрыВосстановления.Вставить("restoreOrganizationType", КодГосударственногоОргана);
	Если КодГосударственногоОргана = "1" Тогда
		ПараметрыВосстановления.Вставить("court", КодСуда);
	КонецЕсли;
	
	Возврат ПараметрыВосстановления;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеДляРегистрацииВосстановления(ПараметрыВосстановления)
	
	Возврат ЭлектронноеВзаимодействиеССервисами.ПодготовитьДанныеДляРегистрацииВосстановленияЭТД(ПараметрыВосстановления);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеДляЗагрузкиДоговора(ПараметрыДоговора)
	
	Возврат ЭлектронноеВзаимодействиеССервисами.ПодготовитьДанныеДляИмпортаЭТД(ПараметрыДоговора);
	
КонецФункции

&НаКлиенте
Процедура ПродолжитьОтправкуПослеВводаДанныхЭЦП(Результат, ПараметрыЗаписи) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Соответствие") Тогда
		ПараметрыКлюча = ЭТДКлиентСервер.ПодготовитьПараметрыКлючаДляПодписи(Результат.Получить(Организация));
		
		Если ЭТДВызовСервера.ВыполнятьКриптографическиеОперацииНаКлиенте() Тогда
			ПодписанныеДанные = ЭТДКлиентСервер.СоздатьЭЦП_XML_КриптопровайдерДляСписка(ПараметрыЗаписи.ДанныеДляПодписи, БИНОрганизации, ПараметрыКлюча);
		Иначе
			ПодписанныеДанные = ЭТДВызовСервера.СоздатьЭЦП_XML_КриптопровайдерДляСписка(ПараметрыЗаписи.ДанныеДляПодписи, БИНОрганизации, ПараметрыКлюча);
		КонецЕсли;
		
		ОбработкаРезультатаЗапроса(ПодписанныеДанные, ПараметрыЗаписи);
	ИначеЕсли Результат = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Выбор сертификата отменен пользователем.'");
		Результат = Новый Массив;
		Результат.Добавить(ТекстСообщения);
		
		ОбработкаРезультатаЗапроса(Результат, ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаЗапроса(Результат, ПараметрыЗаписи) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ТекстСообщения = НСтр("ru = 'Ошибка подписи восстановления договора: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Результат);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	ИначеЕсли Результат[0] = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Ошибка подписи восстановления договора.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	ИначеЕсли Лев(Результат[0], 1) <> "<" Тогда
		ТекстСообщения = НСтр("ru = 'Ошибка подписи восстановления договора: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Результат[0]);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	ОбработкаРезультатаЗапросаНаСервере(Результат, ПараметрыЗаписи);
	
	ОбработкаРезультатаЗапросаЗавершение();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРезультатаЗапросаНаСервере(Результат, ПараметрыЗаписи)
	
	ДанныеАутентификации = ЭТДСервер.ПолучитьДанныеАутентификации(БИНОрганизации);
	
	Если ВидОперации = "Добавление" Тогда
		МетодЭТД = "create";
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Результат.Количество() = 2 Тогда
		ДанныеОперации = Результат[0];
		ЗапросДоговора = Результат[1];
	Иначе
		ДанныеОперации = Результат[0];
		ЗапросДоговора = "";
	КонецЕсли;
	
	ЭлектронноеВзаимодействиеССервисами.ОтправитьПодписаннуюОперациюЭТД(
		ДанныеАутентификации,
		ЗапросДоговора,
		ДанныеОперации,
		Идентификатор,
		"restore",
		МетодЭТД);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРезультатаЗапросаЗавершение()
	
	ДанныеФормы = ПолучитьДанныеФормы();
	
	ЭтаФорма.Закрыть(ДанныеФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСуда(ДанныеСуда, Параметры) Экспорт
	
	Если ДанныеСуда = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСуда.Код <> КодСуда Тогда
		КодСуда = ДанныеСуда.Код;
		НаименованиеСуда = ДанныеСуда.Наименование;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
