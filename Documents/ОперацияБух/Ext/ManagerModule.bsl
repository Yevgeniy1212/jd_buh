#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	Если ОбщегоНазначенияБККлиентСервер.ЭтоПростаяВерсияКонфигурации() Тогда
		БлокируемыеРеквизиты.Добавить("Дата");
		БлокируемыеРеквизиты.Добавить("Номер");
		БлокируемыеРеквизиты.Добавить("СторнируемыйДокумент");
		БлокируемыеРеквизиты.Добавить("СуммаОперации");
		БлокируемыеРеквизиты.Добавить("Организация; СтруктурноеПодразделениеОрганизация");
		БлокируемыеРеквизиты.Добавить("СтруктурноеПодразделение");
		БлокируемыеРеквизиты.Добавить("СпособЗаполнения");

							
	КонецЕсли;
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Бухгалтерская справка
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БухгалтерскаяСправка";
	КомандаПечати.Представление = НСтр("ru = 'С-1 (Бухгалтерская справка)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БухгалтерскаяСправка";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать бух. справки
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БухгалтерскаяСправка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"БухгалтерскаяСправка",
			НСтр("ru = 'Бухгалтерская справка'"),
			ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати),
			,
			"ОбщийМакет.ПФ_MXL_БухгалтерскаяСправка");
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

Функция ПечатьБухгалтерскаяСправка(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб				= Истина;
	ТабДокумент.ПолеСверху				= 10;
	ТабДокумент.ПолеСлева				= 0;
	ТабДокумент.ПолеСнизу				= 0;
	ТабДокумент.ПолеСправа				= 0;
	ТабДокумент.РазмерКолонтитулаСверху	= 10;
	ТабДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати		= "ПАРАМЕТРЫ_ПЕЧАТИ_ОперацияБух_БухгалтерскаяСправка";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОперацияБух.Ссылка КАК Ссылка,
	               |	ОперацияБух.Организация КАК Организация,
	               |	ОперацияБух.Номер КАК Номер,
	               |	ОперацияБух.Ответственный,
	               |	ОперацияБух.Дата КАК Дата,
	               |	ВЫБОР
	               |		КОГДА ОперацияБух.ПометкаУдаления ТОГДА """"
	               |		ИНАЧЕ ОперацияБух.Содержание
	               |	КОНЕЦ КАК СодержаниеОперации,
	               |	ОперацияБух.СтруктурноеПодразделение
	               |ИЗ
	               |	Документ.ОперацияБух КАК ОперацияБух
	               |ГДЕ
	               |	ОперацияБух.Ссылка В(&МассивОбъектов)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Номер
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	               |	ТиповойДвиженияССубконто.СчетДт,
	               |	ТиповойДвиженияССубконто.СтруктурноеПодразделениеДт,
	               |	ТиповойДвиженияССубконто.СубконтоДт1,
	               |	ТиповойДвиженияССубконто.СубконтоДт2,
	               |	ТиповойДвиженияССубконто.СубконтоДт3,
	               |	ТиповойДвиженияССубконто.СчетКт,
	               |	ТиповойДвиженияССубконто.СтруктурноеПодразделениеКт,
	               |	ТиповойДвиженияССубконто.СубконтоКт1,
	               |	ТиповойДвиженияССубконто.СубконтоКт2,
	               |	ТиповойДвиженияССубконто.СубконтоКт3,
	               |	ТиповойДвиженияССубконто.Организация,
	               |	ТиповойДвиженияССубконто.ВалютаДт,
	               |	ТиповойДвиженияССубконто.ВалютаКт,
	               |	ЕСТЬNULL(ТиповойДвиженияССубконто.Сумма, 0) КАК Сумма,
	               |	ТиповойДвиженияССубконто.ВалютнаяСуммаДт,
	               |	ТиповойДвиженияССубконто.ВалютнаяСуммаКт,
	               |	ТиповойДвиженияССубконто.КоличествоДт,
	               |	ТиповойДвиженияССубконто.КоличествоКт,
	               |	ТиповойДвиженияССубконто.Содержание,
	               |	ТиповойДвиженияССубконто.Регистратор КАК Регистратор,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ТиповойДвиженияССубконто.СубконтоДт1) = ЗНАЧЕНИЕ(Справочник.Номенклатура)
	               |			ТОГДА ТиповойДвиженияССубконто.СубконтоДт1.БазоваяЕдиницаИзмерения
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ТИПЗНАЧЕНИЯ(ТиповойДвиженияССубконто.СубконтоДт2) = ЗНАЧЕНИЕ(Справочник.Номенклатура)
	               |					ТОГДА ТиповойДвиженияССубконто.СубконтоДт2.БазоваяЕдиницаИзмерения
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ТИПЗНАЧЕНИЯ(ТиповойДвиженияССубконто.СубконтоДт3) = ЗНАЧЕНИЕ(Справочник.Номенклатура)
	               |							ТОГДА ТиповойДвиженияССубконто.СубконтоДт3.БазоваяЕдиницаИзмерения
	               |						ИНАЧЕ """"
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК БазоваяЕдиницаИзмеренияДт,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(ТиповойДвиженияССубконто.СубконтоКт1) = ЗНАЧЕНИЕ(Справочник.Номенклатура)
	               |			ТОГДА ТиповойДвиженияССубконто.СубконтоКт1.БазоваяЕдиницаИзмерения
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ТИПЗНАЧЕНИЯ(ТиповойДвиженияССубконто.СубконтоКт2) = ЗНАЧЕНИЕ(Справочник.Номенклатура)
	               |					ТОГДА ТиповойДвиженияССубконто.СубконтоКт2.БазоваяЕдиницаИзмерения
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ТИПЗНАЧЕНИЯ(ТиповойДвиженияССубконто.СубконтоКт3) = ЗНАЧЕНИЕ(Справочник.Номенклатура)
	               |							ТОГДА ТиповойДвиженияССубконто.СубконтоКт3.БазоваяЕдиницаИзмерения
	               |						ИНАЧЕ """"
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК БазоваяЕдиницаИзмеренияКт
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.ДвиженияССубконто(
	               |			,
	               |			,
	               |			Активность
	               |				И Регистратор В (&МассивОбъектов),
	               |			,
	               |			) КАК ТиповойДвиженияССубконто
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(НомерСтроки)
	               |ПО
	               |	Регистратор"	               ;
				
	Выборка = Запрос.ВыполнитьПакет();
	ВыборкаШапка = Выборка[0].Выбрать();
	
	Пока ВыборкаШапка.Следующий() Цикл 

		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Зададим параметры макета по умолчанию
		ТабДокумент.РазмерКолонтитулаСверху = 0;
		ТабДокумент.РазмерКолонтитулаСнизу  = 0;
		ТабДокумент.АвтоМасштаб             = Истина;
		//ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_С1");
		
		КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
		Макет.КодЯзыка =  КодЯзыка;
		
		// Получаем области макета для вывода в табличный документ.
		ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
		
		// Выведем шапку документа.
		СтруктурнаяЕдиницаОрганизация = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(ВыборкаШапка.Организация, ВыборкаШапка.СтруктурноеПодразделение);
		СведенияОбОрганизации 		  = ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, ВыборкаШапка.Дата);
		
		ШапкаДокумента.Параметры.ПредставлениеОрганизации  = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,"ПолноеНаименование,");
		ШапкаДокумента.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапка.Номер, ВыборкаШапка.Ссылка);
		ШапкаДокумента.Параметры.ДатаСоставления  = Формат(ВыборкаШапка.Дата, "Л=" + КодЯзыка + "; ДЛФ=D");
		ШапкаДокумента.Параметры.СодержаниеОперации       = ВыборкаШапка.СодержаниеОперации;
		ШапкаДокумента.Параметры.ОрганизацияРНН_БИН       = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "БИН_ИИН,", Ложь, ВыборкаШапка.Дата, "ru");
		
		ТабДокумент.Вывести(ШапкаДокумента);
		
		// Выведем заголовок таблицы.
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		СуммаПоДокументу  = 0;
		КоличествоСтрокВОперации = 0;
		
		ВыборкаДвиженийПоРегистраторам = Выборка[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		Если ВыборкаДвиженийПоРегистраторам.НайтиСледующий(ВыборкаШапка.Ссылка) Тогда
			ВыборкаДвижений = ВыборкаДвиженийПоРегистраторам.Выбрать();
		Иначе
			ВыборкаДвижений = Неопределено;
		КонецЕсли;
		
		Если  ВыборкаДвижений <> Неопределено Тогда
			// Выведем строки документа.
			Пока ВыборкаДвижений.Следующий() Цикл
				
				СтрокаТаблицы.Параметры.Заполнить(ВыборкаДвижений);
				
				АналитикаДт = Строка(ВыборкаДвижений.СубконтоДт1) + Символы.ПС
				+ Строка(ВыборкаДвижений.СубконтоДт2) + Символы.ПС
				+ Строка(ВыборкаДвижений.СубконтоДт3);
				
				АналитикаКт = Строка(ВыборкаДвижений.СубконтоКт1) + Символы.ПС
				+ Строка(ВыборкаДвижений.СубконтоКт2) + Символы.ПС
				+ Строка(ВыборкаДвижений.СубконтоКт3);
				
				СтрокаТаблицы.Параметры.АналитикаДт = АналитикаДт;
				СтрокаТаблицы.Параметры.АналитикаКт = АналитикаКт;
				
				СуммаПоДокументу = СуммаПоДокументу + ВыборкаДвижений.Сумма;
				КоличествоСтрокВОперации = КоличествоСтрокВОперации + 1;			
				
				// Проверим, помещается ли строка с подвалом.
				СтрокаСПодвалом = Новый Массив;
				СтрокаСПодвалом.Добавить(СтрокаТаблицы);
				СтрокаСПодвалом.Добавить(ПодвалДокумента);
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;	
				
				ТабДокумент.Вывести(СтрокаТаблицы);
				
			КонецЦикла;
		КонецЕсли;
		
		Руководители = ОбщегоНазначенияБКВызовСервера.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация,ВыборкаШапка.Дата);
		
		ПодвалДокумента.Параметры.РасшифровкаПодписиРуководитель	= Руководители.Руководитель;
		ПодвалДокумента.Параметры.РасшифровкаПодписиГлавБух			= Руководители.ГлавныйБухгалтер;
		
		Если КоличествоСтрокВОперации <> 0 Тогда
			ПодвалДокумента.Параметры.ВсегоКорреспонденцийПрописью = ОбщегоНазначенияБКВызовСервера.КоличествоПрописью(КоличествоСтрокВОперации);
		КонецЕсли;
		
		ПодвалДокумента.Параметры.СуммаПрописью = ?(СуммаПоДокументу <> 0, ОбщегоНазначенияБКВызовСервера.СформироватьСуммуПрописью(СуммаПоДокументу, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета()),"");		
		
		// Выведем подвал таблицы.			
		ТабДокумент.Вывести(ПодвалДокумента);
		
	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

#КонецЕсли