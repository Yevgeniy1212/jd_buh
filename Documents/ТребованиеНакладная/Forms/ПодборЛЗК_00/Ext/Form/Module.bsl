
&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("Команда"   , "ПодборВ_ТбЛЗК");
	СтруктураПодбора.Вставить("тбВсе"     , тбЛЗК);
	СтруктураПодбора.Вставить("Количество", 0);
	
	ОповеститьОВыборе(СтруктураПодбора);
	
КонецПроцедуры

Функция ПолучитьЗначениеПринята()
	
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственнаяСправкаОбороты.Продукция,
	|	ПроизводственнаяСправкаОбороты.Принята
	|ИЗ
	|	РегистрНакопления.ПроизводственнаяСправка.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			,
	|			Продукция = &Скважина
	|				И (Подразделение = &Подразделение
	|					ИЛИ Подразделение.Родитель = &Подразделение)) КАК ПроизводственнаяСправкаОбороты";
	Запрос.УстановитьПараметр("Дата1"        , НачалоМесяца(ВыбДата));
	Запрос.УстановитьПараметр("Дата2"        , КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("ВидСкважины"  , ВыбНоменклатура.ВидСкважины);
	Запрос.УстановитьПараметр("Участок"      , ВыбНоменклатура.УчастокБурения);
	Запрос.УстановитьПараметр("Скважина"     , ВыбНоменклатура);
	Запрос.УстановитьПараметр("Подразделение", ВыбПодразделение); 
	//++Кибернетика Беляев Е.И. 12.07.2024
	Запрос.УстановитьПараметр("ВидБурения",ВыбВидБурения);
	//--Кибернетика Беляев Е.И. 12.07.2024
   	Выб = Запрос.Выполнить().Выбрать();
	
	Принята = Ложь;
	Пока Выб.Следующий() Цикл
		Если Выб.Принята = 0 Тогда
			Принята = Ложь;
		Иначе	
			Принята = Истина;
		КонецЕсли;
	КонецЦикла;

КонецФункции


Функция ПолучитьЗначениеПринятаНов()
	
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственнаяСправкаПоОбъемамОбороты.АктированоПМРасход КАК Принята
	|ИЗ
	|	РегистрНакопления.ПроизводственнаяСправкаПоОбъемам.Обороты(
	|			&Дата1,
	|			&Дата2,
	|			,
	|			УчастокПодразделение = &УчастокПодразделение
	|				И ВидСкважины = &ВидСкважины
	//++Кибернетика Беляев Е.И. 12.07.2024
	|				И ВидыБурения = &ВидБурения 
	//--Кибернетика Беляев Е.И. 12.07.2024
	|				И Агрегат = &Агрегат) КАК ПроизводственнаяСправкаПоОбъемамОбороты";
	Запрос.УстановитьПараметр("Дата1"        , НачалоМесяца(ВыбДата));
	Запрос.УстановитьПараметр("Дата2"        , КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("ВидСкважины"  , ВидСкважины);
	Запрос.УстановитьПараметр("УчастокПодразделение"      , ВыбУчастокБурения);
	Запрос.УстановитьПараметр("Агрегат", ВыбПодразделение);
	//Б
	Запрос.УстановитьПараметр("ВидБурения",ВыбВидБурения);
	//-
	Выб = Запрос.Выполнить().Выбрать();
	
	Принята = Ложь;
	Пока Выб.Следующий() Цикл
		Если Выб.Принята <= 0 Тогда
			Принята = Ложь;
		Иначе	
			Принята = Истина;
		КонецЕсли;
	КонецЦикла;

КонецФункции


Функция ПолучитьОстатки()
	
	зпОстатки = Новый Запрос;
	зпОстатки.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиТМЦ.Номенклатура,
	|	ОстаткиТМЦ.КоличествоКонОстатокДт КАК ОстатокНаСкладе,
	|	ОстаткиТМЦ.НоменклатурнаяГруппа,
	|	НормыРасхода.ВидНормы,
	|	НормыРасхода.Норма,
	|	ОстаткиТМЦ.СуммаКонОстатокДт,
	|	ОстаткиНормы.ОстатокНормы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТОИОб.Субконто1 КАК Номенклатура,
	|		СУММА(ТОИОб.СуммаКонечныйОстатокДт) КАК СуммаКонОстатокДт,
	|		ТОИОб.Субконто1.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|		СУММА(ТОИОб.КоличествоКонечныйОстатокДт) КАК КоличествоКонОстатокДт
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&Дата1, &Дата2, Период, , ПОДСТРОКА(Счет.Код, 1, 2) = ""13"", , Субконто2 = &ВыбСклад) КАК ТОИОб
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТОИОб.Субконто1,
	|		ТОИОб.Субконто1.НоменклатурнаяГруппа) КАК ОстаткиТМЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидНормы КАК ВидНормы,
	|			КТ_НормыРасходаТМЦСрезПоследних.Норма КАК Норма,
	|			КТ_НормыРасходаТМЦСрезПоследних.Участок КАК Участок,
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидСкважины КАК ВидСкважины,
	|			КТ_НормыРасходаТМЦСрезПоследних.Номенклатура КАК Номенклатура
	|		ИЗ
	|			РегистрСведений.КТ_НормыРасходаТМЦ.СрезПоследних(
	|					&Дата2,
	|					Участок = &Участок
	|						И ВидСкважины = &ВидСкважины) КАК КТ_НормыРасходаТМЦСрезПоследних
	|		ГДЕ
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидРасхода = ЗНАЧЕНИЕ(Перечисление.КТ_ВариантПланФакт.Факт)) КАК НормыРасхода
	|		ПО ОстаткиТМЦ.Номенклатура = НормыРасхода.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИспользованиеНормЛЗКОИОб.Участок КАК Участок,
	|			ИспользованиеНормЛЗКОИОб.ВидСкважины КАК ВидСкважины,
	|			ИспользованиеНормЛЗКОИОб.БуровойАгрегат КАК БуровойАгрегат,
	|			ИспользованиеНормЛЗКОИОб.НормаКонечныйОстаток КАК ОстатокНормы,
	|			ИспользованиеНормЛЗКОИОб.Номенклатура КАК Номенклатура
	|		ИЗ
	|			РегистрНакопления.ИспользованиеНормЛЗК.ОстаткиИОбороты(
	|					&Дата1,
	|					&Дата2,
	|					Период,
	|					,
	|					Участок = &Участок
	|						И ВидСкважины = &ВидСкважины
	|						И Принята = &Принята
	|						И БуровойАгрегат = &БуровойАгрегат) КАК ИспользованиеНормЛЗКОИОб) КАК ОстаткиНормы
	|		ПО ОстаткиТМЦ.Номенклатура = ОстаткиНормы.Номенклатура
	|ГДЕ
	|	НормыРасхода.Норма > 0";
	зпОстатки.УстановитьПараметр("Дата1"         , КонецДня(ВыбДата)-1);
	зпОстатки.УстановитьПараметр("Дата2"         , КонецДня(ВыбДата));
	зпОстатки.УстановитьПараметр("ВыбСклад"      , ВыбСклад);
	зпОстатки.УстановитьПараметр("ВидСкважины"   , ВыбНоменклатура.ВидСкважины);
	зпОстатки.УстановитьПараметр("Участок"       , ВыбНоменклатура.УчастокБурения);
	зпОстатки.УстановитьПараметр("Принята"       , Принята);
	зпОстатки.УстановитьПараметр("БуровойАгрегат", ВыбПодразделение);
	
	тбЛЗК.Загрузить(зпОстатки.Выполнить().Выгрузить());

КонецФункции


Функция ПолучитьОстаткиНов()
	
	зпОстатки = Новый Запрос;
	зпОстатки.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиТМЦ.Номенклатура КАК Номенклатура,
	|	ОстаткиТМЦ.КоличествоКонОстатокДт КАК ОстатокНаСкладе,
	|	ОстаткиТМЦ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	НормыРасхода.ВидНормы КАК ВидНормы,
	|	НормыРасхода.Норма КАК Норма,
	|	ОстаткиТМЦ.СуммаКонОстатокДт КАК СуммаКонОстатокДт,
	|	ОстаткиНормы.ОстатокНормы КАК ОстатокНормы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТОИОб.Субконто1 КАК Номенклатура,
	|		СУММА(ТОИОб.СуммаКонечныйОстатокДт) КАК СуммаКонОстатокДт,
	|		ТОИОб.Субконто1.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|		СУММА(ТОИОб.КоличествоКонечныйОстатокДт) КАК КоличествоКонОстатокДт
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&Дата1, &Дата2, Период, , ПОДСТРОКА(Счет.Код, 1, 2) = ""13"", , Субконто2 = &ВыбСклад) КАК ТОИОб
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТОИОб.Субконто1,
	|		ТОИОб.Субконто1.НоменклатурнаяГруппа) КАК ОстаткиТМЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидНормы КАК ВидНормы,
	|			КТ_НормыРасходаТМЦСрезПоследних.Норма КАК Норма,
	|			КТ_НормыРасходаТМЦСрезПоследних.Участок КАК Участок,
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидСкважины КАК ВидСкважины,
	|			КТ_НормыРасходаТМЦСрезПоследних.Номенклатура КАК Номенклатура,
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидыБурения КАК ВидыБурения
	|		ИЗ
	|			РегистрСведений.КТ_НормыРасходаТМЦ.СрезПоследних(
	|					&Дата2,
	|					Участок = &Участок
	|						И ВидСкважины = &ВидСкважины
	|						И ВидыБурения = &ВидБурения) КАК КТ_НормыРасходаТМЦСрезПоследних
	|		ГДЕ
	|			КТ_НормыРасходаТМЦСрезПоследних.ВидРасхода = ЗНАЧЕНИЕ(Перечисление.КТ_ВариантПланФакт.Факт)) КАК НормыРасхода
	|		ПО ОстаткиТМЦ.Номенклатура = НормыРасхода.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ИспользованиеНормЛЗКОИОб.Участок КАК Участок,
	|			ИспользованиеНормЛЗКОИОб.ВидСкважины КАК ВидСкважины,
	|			ИспользованиеНормЛЗКОИОб.БуровойАгрегат КАК БуровойАгрегат,
	|			ИспользованиеНормЛЗКОИОб.НормаКонечныйОстаток КАК ОстатокНормы,
	|			ИспользованиеНормЛЗКОИОб.Номенклатура КАК Номенклатура
	|		ИЗ
	|			РегистрНакопления.ИспользованиеНормЛЗК.ОстаткиИОбороты(
	|					&Дата1,
	|					&Дата2,
	|					Период,
	|					,
	|					Участок = &Участок
	|						И ВидСкважины = &ВидСкважины
	|						И Принята = &Принята
	|						И БуровойАгрегат = &БуровойАгрегат) КАК ИспользованиеНормЛЗКОИОб) КАК ОстаткиНормы
	|		ПО ОстаткиТМЦ.Номенклатура = ОстаткиНормы.Номенклатура
	|ГДЕ
	|	НормыРасхода.Норма > 0";
	зпОстатки.УстановитьПараметр("Дата1"         , КонецДня(ВыбДата)-1);
	зпОстатки.УстановитьПараметр("Дата2"         , КонецДня(ВыбДата));
	зпОстатки.УстановитьПараметр("ВыбСклад"      , ВыбСклад);
	зпОстатки.УстановитьПараметр("ВидСкважины"   , ВидСкважины);
	зпОстатки.УстановитьПараметр("Участок"       , ВыбУчастокБурения);
	зпОстатки.УстановитьПараметр("Принята"       , Принята);     //??????????????
	зпОстатки.УстановитьПараметр("БуровойАгрегат", ВыбПодразделение); 
	//++Кибернетика Беляев Е.И. 12.07.2024
	зпОстатки.УстановитьПараметр("ВидБурения"    ,ВыбВидБурения);
	//++Кибернетика Беляев Е.И. 12.07.2024
	тбЛЗК.Загрузить(зпОстатки.Выполнить().Выгрузить());

КонецФункции


&НаСервере
Функция ЗначениеРеквизитаОбъекта(Элемент, Реквизит)
    ПолученныйРеквизит = ПоместитьВоВременноеХранилище(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Элемент, Реквизит));
	ПР = ПолучитьИзВременногоХранилища(ПолученныйРеквизит);
    Возврат ПР; 
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВыбДата <= Дата("20191231235959") Тогда
		НадписьЗаголовка = "Вид скв. = " + ЗначениеРеквизитаОбъекта(ВыбНоменклатура, "ВидСкважины") 
										+ Символы.ПС + "Участок = " + ЗначениеРеквизитаОбъекта(ВыбНоменклатура, "УчастокБурения")
										+ Символы.ПС + "Склад = "   + ВыбСклад 
										+ Символы.ПС + "Подразделение = " + ВыбПодразделение
		                                //++Кибернетика Беляев Е.И. 12.07.2024
									    + Символы.ПС + "Вид бурения = " + ВыбВидБурения;
										//++Кибернетика Беляев Е.И. 12.07.2024

		ПолучитьЗначениеПринята();
		ПолучитьОстатки();
	Иначе
		НадписьЗаголовка = "Вид скв. = " + ВидСкважины
										 + Символы.ПС + "Участок = " + ВыбУчастокБурения
										 + Символы.ПС + "Склад = "   + ВыбСклад 
										 + Символы.ПС + "Подразделение = " + ВыбПодразделение 
										 //++Кибернетика Беляев Е.И. 12.07.2024
									     + Символы.ПС + "Вид бурения = " + ВыбВидБурения;
										 //++Кибернетика Беляев Е.И. 12.07.2024

		
		ПолучитьЗначениеПринятаНов();
		ПолучитьОстаткиНов();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВыбСклад"         , ВыбСклад);
	Параметры.Свойство("ВыбДата"          , ВыбДата);
	Параметры.Свойство("ВидСкважины"      , ВидСкважины);
	Параметры.Свойство("ВыбНоменклатура"  , ВыбНоменклатура);
	Параметры.Свойство("ВыбПодразделение" , ВыбПодразделение);
	Параметры.Свойство("ВыбУчастокБурения", ВыбУчастокБурения);
	//++Кибернетика Беляев Е.И. 12.07.2024
	Параметры.Свойство("ВыбВидБурения",     ВыбВидБурения);    
	//++Кибернетика Беляев Е.И. 12.07.2024
КонецПроцедуры

&НаКлиенте
Процедура тбЛЗКВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	 
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("Команда", "ПодборВ_ТбЛЗК");
	
	Количество   = ТбЛЗК[ВыбраннаяСтрока].ОстатокНаСкладе;
	ВыбраноКолич = ВвестиЧисло(Количество, "введите количество для списания...", 15, 3); 	
	
	СтруктураПодбора.Вставить("Количество"          , Количество);
	СтруктураПодбора.Вставить("Номенклатура"        , ТбЛЗК[ВыбраннаяСтрока].Номенклатура);
	СтруктураПодбора.Вставить("НоменклатурнаяГруппа", ТбЛЗК[ВыбраннаяСтрока].НоменклатурнаяГруппа);
	СтруктураПодбора.Вставить("ВидНормы"            , ТбЛЗК[ВыбраннаяСтрока].ВидНормы);
	СтруктураПодбора.Вставить("ОстатокНаСкладе"     , ТбЛЗК[ВыбраннаяСтрока].ОстатокНаСкладе);
	
	ЭтаФорма.ЗакрыватьПриВыборе = Ложь;
	ОповеститьОВыборе(СтруктураПодбора);
	
КонецПроцедуры

