#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, Константы.ВалютаРегламентированногоУчета.Получить());
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьЗаполнениеТабличнойЧастиПострочно(РаботникиОрганизации, Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналомСервер.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Сотрудник");

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПроверитьЗаполнениеТабличнойЧастиПострочно(ПроверяемаяТабличнаячасть, Отказ)
	
	Запрос = Новый Запрос;

	// Заполним список обособленных подразделений организации 
	ГоловнаяОрганизация = ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Организация);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",      Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ТаблицаДокумента", ПроверяемаяТабличнаячасть);
			   
	// Описание текста запроса:
	// Первая часть запроса  - вид строки запроса "ДанныеДляДвиженийКадров": 
	// 1. Выборка "ТЧРаботникиОрганизации": 
	//		Выбираются строки документа.  
	// 2. Выборка "ДанныеПоРаботникуДоНазначения": 
	//		Для каждой строки ТЧРаботникиОрганизации выполняем срез по регистру РаботникиОрганизации на дату ДатаНачала
	//		для выполнения движений и проверки "Работает ли работник на дату перемещения"
	//		(Использует данные выборки "ДатыПоследнегоДвиженияРаботника")
	// 3. Выборка "ПересекающиесяСтроки": 
	//		Среди остальных строк документа ищем строки, имеющие пересекающийся период действия
	//
	// Вторая часть запроса - вид строки запроса "КонфликтныйДокумент" - поиск конфликтных документов: 
	// 1. Выборка "ТЧРаботникиОрганизации":
	//		Выбираются строки документа 
	// 2. Выборка "Работники":
	//		Для каждой строки ТЧРаботникиОрганизации ищем движения по регистру РаботникиОрганизации за период [ДатаНачала, ДатаОкончания]
		
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	               |	ТаблицаДокумента.Сотрудник,
	               |	ТаблицаДокумента.ДатаНачала,
	               |	ТаблицаДокумента.ДатаОкончания,
	               |	&ДокументСсылка КАК Ссылка
	               |ПОМЕСТИТЬ ВТДанныеДокумента
	               |ИЗ
	               |	&ТаблицаДокумента КАК ТаблицаДокумента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	               |	МИНИМУМ(ТЧРаботникиОрганизации2.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	               |ПОМЕСТИТЬ ВТ_ПересекающиесяСтроки
	               |ИЗ
	               |	ВТДанныеДокумента КАК ТЧРаботникиОрганизации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДанныеДокумента КАК ТЧРаботникиОрганизации2
	               |		ПО ТЧРаботникиОрганизации.Сотрудник = ТЧРаботникиОрганизации2.Сотрудник
	               |			И ТЧРаботникиОрганизации.НомерСтроки <> ТЧРаботникиОрганизации2.НомерСтроки
	               |			И ТЧРаботникиОрганизации.ДатаНачала <= ТЧРаботникиОрганизации2.ДатаНачала
	               |			И (ВЫБОР
	               |				КОГДА ТЧРаботникиОрганизации.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ТЧРаботникиОрганизации.ДатаОкончания >= ТЧРаботникиОрганизации2.ДатаНачала

	               |			КОНЕЦ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЧРаботникиОрганизации.НомерСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	               |	МАКСИМУМ(Работники.Период) КАК ДатаДвижения
	               |ПОМЕСТИТЬ ВТ_ДатыПоследнегоДвиженияРаботника
	               |ИЗ
	               |	ВТДанныеДокумента КАК ТЧРаботникиОрганизации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	               |		ПО (Работники.Сотрудник = ТЧРаботникиОрганизации.Сотрудник)
	               |			И (Работники.Организация = &ГоловнаяОрганизация)
	               |			И (Работники.Период <= ТЧРаботникиОрганизации.ДатаНачала)
	               |			И (Работники.Активность)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТЧРаботникиОрганизации.НомерСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	""ДанныеДляДвиженийКадров"" КАК ВидСтрокиЗапроса,
	               |	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	               |	ТЧРаботникиОрганизации.Сотрудник,
	               |	ТЧРаботникиОрганизации.ДатаНачала,
	               |	ВЫБОР
	               |		КОГДА ТЧРаботникиОрганизации.Сотрудник.Организация = &ГоловнаяОрганизация
	               |				ИЛИ ТЧРаботникиОрганизации.Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	               |	ПересекающиесяСтроки.КонфликтнаяСтрокаНомер,
	               |	NULL КАК КонфликтныйДокумент
	               |ИЗ
	               |	ВТДанныеДокумента КАК ТЧРаботникиОрганизации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыПоследнегоДвиженияРаботника КАК ДатыПоследнегоДвиженияРаботника
	               |		ПО (ДатыПоследнегоДвиженияРаботника.НомерСтроки = ТЧРаботникиОрганизации.НомерСтроки)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуДоНазначения
	               |		ПО (ДанныеПоРаботникуДоНазначения.Сотрудник = ТЧРаботникиОрганизации.Сотрудник)
	               |			И (ДанныеПоРаботникуДоНазначения.Организация = &ГоловнаяОрганизация)
	               |			И (ДанныеПоРаботникуДоНазначения.Период = ДатыПоследнегоДвиженияРаботника.ДатаДвижения)
	               |			И (ДанныеПоРаботникуДоНазначения.Активность)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПересекающиесяСтроки КАК ПересекающиесяСтроки
	               |		ПО ТЧРаботникиОрганизации.НомерСтроки = ПересекающиесяСтроки.НомерСтроки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	""КонфликтныйДокумент"",
	               |	ТЧРаботникиОрганизации.НомерСтроки,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	ТЧРаботникиОрганизации2.Ссылка
	               |ИЗ
	               |	ВТДанныеДокумента КАК ТЧРаботникиОрганизации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КомандировкиОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации2
	               |		ПО (ТЧРаботникиОрганизации2.Ссылка <> ТЧРаботникиОрганизации.Ссылка)
	               |			И (ТЧРаботникиОрганизации2.Сотрудник = ТЧРаботникиОрганизации.Сотрудник)
	               |			И (ТЧРаботникиОрганизации2.Ссылка.Проведен)
	               |			И (ТЧРаботникиОрганизации.ДатаНачала <= ТЧРаботникиОрганизации2.ДатаНачала
	               |					И ВЫБОР
	               |						КОГДА ТЧРаботникиОрганизации.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	               |							ТОГДА ИСТИНА
	               |						ИНАЧЕ ТЧРаботникиОрганизации.ДатаОкончания >= ТЧРаботникиОрганизации2.ДатаНачала
	               |					КОНЕЦ
	               |				ИЛИ ТЧРаботникиОрганизации2.ДатаНачала <= ТЧРаботникиОрганизации.ДатаНачала
	               |					И ВЫБОР
	               |						КОГДА ТЧРаботникиОрганизации2.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	               |							ТОГДА ИСТИНА
	               |						ИНАЧЕ ТЧРаботникиОрганизации2.ДатаОкончания >= ТЧРаботникиОрганизации.ДатаНачала
	               |					КОНЕЦ)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапросаПоРаботники  = Запрос.Выполнить();
	ВыборкаПоСтрокамДокумента    = РезультатЗапросаПоРаботники.Выбрать();
	
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл		
		
		ЕстьСотрудник = ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
		ЕстьДатаНачала = ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачала);
		СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В строке номер %1 табл. части ""Сотрудники"": '"), СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки));
		
		Если  ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ДанныеДляДвиженийКадров"
			И ЕстьСотрудник 
			И ЕстьДатаНачала Тогда
			// Проверка: противоречие другой строке документа
			Если ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер <> NULL Тогда
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='период командировки пересекается с периодом строки %1!'"), ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер);
				Поле = "РаботникиОрганизации" + "[" + Формат(ВыборкаПоСтрокамДокумента.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Сотрудник";
				ОбщегоНазначения.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
				
			КонецЕсли;
		ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "КонфликтныйДокумент" Тогда
			// противоречие другим кадровым приказам
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='возникает противоречие кадровому приказу
			|	%1!'"), ВыборкаПоСтрокамДокумента.КонфликтныйДокумент);
			Поле = "РаботникиОрганизации" + "[" + Формат(ВыборкаПоСтрокамДокумента.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Сотрудник";
			ОбщегоНазначения.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли  