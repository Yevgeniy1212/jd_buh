#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС
                                       
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());

	Если НЕ ЗначениеЗаполнено(СобытиеОС) Тогда
		СобытиеОС = УправлениеВнеоборотнымиАктивамиСервер.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.Модернизация);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеВнеоборотнымиАктивамиСервер.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);

	//Проверим на виды операций, которые не будут полностью отработаны в данном документе
	ВидСобытияОС = ЭтотОбъект.СобытиеОС.ВидСобытияОС;
	Если ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчету
	ИЛИ ВидСобытияОС  = Перечисления.ВидыСобытийОС.ВнутреннееПеремещение
	ИЛИ ВидСобытияОС  = Перечисления.ВидыСобытийОС.Передача
	ИЛИ ВидСобытияОС  = Перечисления.ВидыСобытийОС.Списание
	ИЛИ ВидСобытияОС  = Перечисления.ВидыСобытийОС.ЧастичнаяЛиквидация
	Тогда
    	ТекстСообщения = НСтр("ru = 'События с основными средствами с видом <%1>
							|не будут полноценно отражены данным документом (учетное состояние ОС не изменится)!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
					Строка(ВидСобытияОС));
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект);
	КонецЕсли;

	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если НЕ ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, Дата)
		ИЛИ НЕ УчитыватьКПН Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВидУчетаНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетУчетаОбъектаМодернизацииНУ");
		МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетНУ");
				
	КонецЕсли;
	
	ПроверкаЗаполненныхОС(ЭтотОбъект, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.МодернизацияОС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Если вдруг не удалось получить параметры проведения и не установлен флаг Отказ, то просто выйдем из проведения
	Если ПараметрыПроведения = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
			
	Если ПараметрыПроведения.СобытияОСОрганизацийТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияРегистрацияСобытияОС(ПараметрыПроведения.СобытияОСОрганизацийТаблицаОС, 
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
	КонецЕсли;
			
	Если ПараметрыПроведения.ПараметрыАмортизацииОСБухгалтерскийУчетТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияПараметрыАмортизацииОСБухгалтерскийУчет(ПараметрыПроведения.ПараметрыАмортизацииОСБухгалтерскийУчетТаблицаОС, 
														Движения, Отказ);
	КонецЕсли;

	Если ПараметрыПроведения.ПроводкиБУТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияБУДокументаМодернизацияОС(ПараметрыПроведения.ПроводкиБУТаблицаОС, 
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
	КонецЕсли;
	
	Если ПараметрыПроведения.ПроводкиНУТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияНУДокументаМодернизацияОС(ПараметрыПроведения.ПроводкиНУТаблицаОС,
		                                                ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
	КонецЕсли;

	// Отражение ПР в НУ 
	ПроцедурыНалоговогоУчета.ОтразитьПостоянныеРазницыВНУ(ПараметрыПроведения.Реквизиты, Движения, Отказ);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если НЕ УчитыватьКПН Тогда
		ВидУчетаНУ = Справочники.ВидыУчетаНУ.ПустаяСсылка();
	КонецЕсли;	              	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПроверкаЗаполненныхОС(ЭтотОбъект, Отказ)
	
	МассивОС = ЭтотОбъект.ОС.ВыгрузитьКолонку("ОсновноеСредство");
	
	Если МассивОС.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	// Создание описателя типов для таблицы значений
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ОсновныеСредства"));
	ОписаниеТиповТЗ = Новый ОписаниеТипов(Массив);
	
	// ТаблицаЗначенийОС таблицы значений 
	ТаблицаЗначенийОС = Новый ТаблицаЗначений;
	ТаблицаЗначенийОС.Колонки.Добавить("ОсновноеСредство",ОписаниеТиповТЗ,"ОсновноеСредство");
	
	Для Каждого СтрокаОС Из МассивОС Цикл
		
		СтрокаТЗ = ТаблицаЗначенийОС.Добавить();
		СтрокаТЗ.ОсновноеСредство = СтрокаОС;
		
	КонецЦикла;

	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Организация"  	 , Организация);
	Запрос.УстановитьПараметр("ДатаДокумента"	 , Дата);
	Запрос.УстановитьПараметр("Ссылка"		 	 , Ссылка);
	Запрос.УстановитьПараметр("СнятоСУчета"	 	 , Перечисления.ВидыСостоянийОС.СнятоСУчета);
	Запрос.УстановитьПараметр("ТаблицаЗначенийОС", ТаблицаЗначенийОС);
	Запрос.УстановитьПараметр("МассивОС"     	 , МассивОС);
	
	СостоянияФА = Новый СписокЗначений();	
	СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
	СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);
	
	Запрос.УстановитьПараметр("СостоянияФА", 	СостоянияФА);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗначенийОС.ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_ОС
	|ИЗ
	|	&ТаблицаЗначенийОС КАК ТаблицаЗначенийОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МодернизацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаУчетаОССрезПоследних.СчетУчетаБУ КАК СчетУчетаБУ,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражалосьВБухгалтерскомУчете,
	|	ВЫБОР
	|		КОГДА ОбъектыНалоговогоУчетаФА.СостояниеФиксированногоАктива В (&СостоянияФА)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПризнакФисированногоАктива,
	|	ВЫБОР
	|		КОГДА ОС_СнятыеСУчета.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СнятоСУчета
	|ИЗ
	|	ВТ_ОС КАК МодернизацияОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|				&ДатаДокумента,
	|				Организация = &Организация
	|					И ОсновноеСредство В (&МассивОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО МодернизацияОСОС.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаОС.СрезПоследних(
	|				&ДатаДокумента,
	|				Организация = &Организация
	|					И ОсновноеСредство В (&МассивОС)) КАК СчетаУчетаОССрезПоследних
	|		ПО МодернизацияОСОС.ОсновноеСредство = СчетаУчетаОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
	|				&ДатаДокумента,
	|				Организация = &Организация
	|					И ФиксированныйАктив В (&МассивОС)) КАК ОбъектыНалоговогоУчетаФА
	|		ПО МодернизацияОСОС.ОсновноеСредство = ОбъектыНалоговогоУчетаФА.ФиксированныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			СостоянияОСОрганизацииСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
	|		ИЗ
	|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизацииСрезПоследних
	|		ГДЕ
	|			СостоянияОСОрганизацииСрезПоследних.ДатаСостояния < &ДатаДокумента
	|			И СостоянияОСОрганизацииСрезПоследних.Организация = &Организация
	|			И СостоянияОСОрганизацииСрезПоследних.ОсновноеСредство В(&МассивОС)
	|			И СостоянияОСОрганизацииСрезПоследних.Состояние = &СнятоСУчета) КАК ОС_СнятыеСУчета
	|		ПО МодернизацияОСОС.ОсновноеСредство = ОС_СнятыеСУчета.ОсновноеСредство";
	
	ТаблицаПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ТаблицаПоОС Цикл
		
		Если НЕ СтрокаОС.ОтражалосьВБухгалтерскомУчете Тогда
			ТекстСообщения = НСтр("ru = 'Основное средство <%1> не отражалось в учете по указанной организации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
				СтрокаОС.ОсновноеСредство);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если СтрокаОС.СнятоСУчета Тогда
			ТекстСообщения = НСтр("ru = 'Основное средство <%1> снято с учета в указанной организации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
				СтрокаОС.ОсновноеСредство);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаОС.СчетУчетаБУ) Тогда
			ТекстСообщения = НСтр("ru = 'Для основного средства <%1> не указан счет учета (БУ).'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
				СтрокаОС.ОсновноеСредство);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
						
	КонецЦикла;
	
КонецПроцедуры


#КонецЕсли
