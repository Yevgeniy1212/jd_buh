#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти   

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПодготовитьДанныеДляЗаполнения(Параметры, АдресХранилища) Экспорт
	
	ДанныеРеглУчетаТекст = "";

	УсловиеСтруктурноеПодразделение = " И СтруктурнаяЕдиница = &СтруктурнаяЕдиница ";
	
	ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыПоПрочимВыплатамОстатки.Физлицо КАК ФизЛицо,
	|   НАЧАЛОПЕРИОДА(ВзаиморасчетыПоПрочимВыплатамОстатки.ПериодВзаиморасчетов, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	|	СУММА(ВзаиморасчетыПоПрочимВыплатамОстатки.СуммаВзаиморасчетовОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоПрочимВыплатам.Остатки(
	|				&парамГраницаОстатков,
	|				Организация = &парамОрганизация" + УсловиеСтруктурноеПодразделение + "
	|				И ВидПрочихВыплат = &парамВидПрочихВыплат
	|				И " + ?(Параметры.ПоОстаткам, "
	|					ПериодВзаиморасчетов <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
	|					ПериодВзаиморасчетов МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + ") КАК ВзаиморасчетыПоПрочимВыплатамОстатки
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыПоПрочимВыплатамОстатки.Физлицо,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыПоПрочимВыплатамОстатки.ПериодВзаиморасчетов, МЕСЯЦ)
	|УПОРЯДОЧИТЬ ПО
	|	ВзаиморасчетыПоПрочимВыплатамОстатки.Физлицо.Наименование,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыПоПрочимВыплатамОстатки.ПериодВзаиморасчетов, МЕСЯЦ)
	|";
	
	Запрос = Новый Запрос(ДанныеРеглУчетаТекст);
	
	Для Каждого Параметр Из Параметры Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Параметры.парамСтруктурноеПодразделение) Тогда
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Параметры.парамСтруктурноеПодразделение);
	Иначе
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Параметры.парамОрганизация);
	КонецЕсли;
			
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Сумма) И Выборка.Сумма > 0 Тогда
			НоваяСтрока = Параметры.ТаблицаПрочиеВыплаты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураДанных = Новый Структура();
	СтруктураДанных.Вставить("ТаблицаПрочиеВыплаты", Параметры.ТаблицаПрочиеВыплаты); 
	 
	ПоместитьВоВременноеХранилище(СтруктураДанных, АдресХранилища); 
	
КонецПроцедуры 

Процедура НайтиДокументПлатежногоПорученияВходящегоИЗаполнитьСсылку(ВедомостьСсылка, ЭлементСсылкаНаПлатежноеПоручение, СписокПлатежныхПорученийВходящих) Экспорт
	
	СписокПлатежныхПорученийВходящих.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВедомостьСсылка", ВедомостьСсылка);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлатежноеПоручениеВходящее.Ссылка КАК Ссылка,
	|	ПлатежноеПоручениеВходящее.ВидОперации КАК ВидОперации,
	|	ПлатежноеПоручениеВходящее.Проведен КАК Проведен
	|ПОМЕСТИТЬ ВТ_ППВ
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее КАК ПлатежноеПоручениеВходящее
	|ГДЕ
	|	ПлатежноеПоручениеВходящее.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ВозвратПрочихВыплат)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_ППВ.Ссылка КАК ПлатежноеПоручение,
	|	ВТ_ППВ.Проведен КАК Проведен,
	|	ПлатежноеПоручениеВходящееВозвратПрочихВыплат.Документ КАК Ведомость
	|ПОМЕСТИТЬ ВТ_ППВ_Ведомости
	|ИЗ
	|	Документ.ПлатежноеПоручениеВходящее.ВозвратПрочихВыплат КАК ПлатежноеПоручениеВходящееВозвратПрочихВыплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ППВ КАК ВТ_ППВ
	|		ПО ПлатежноеПоручениеВходящееВозвратПрочихВыплат.Ссылка = ВТ_ППВ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВедомостьНаВозвратПрочихВыплат.Ссылка КАК Ведомость,
	|	ВТ_ППВ_Ведомости.ПлатежноеПоручение КАК ПлатежноеПоручение,
	|	ПРЕДСТАВЛЕНИЕ(ВТ_ППВ_Ведомости.ПлатежноеПоручение) КАК ПлатежноеПоручениеПредставление,
	|	ВТ_ППВ_Ведомости.Проведен КАК Проведен
	|ИЗ
	|	Документ.ВедомостьНаВозвратПрочихВыплат КАК ВедомостьНаВозвратПрочихВыплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ППВ_Ведомости КАК ВТ_ППВ_Ведомости
	|		ПО ВедомостьНаВозвратПрочихВыплат.Ссылка = ВТ_ППВ_Ведомости.Ведомость
	|ГДЕ
	|	ВедомостьНаВозвратПрочихВыплат.Ссылка = &ВедомостьСсылка";
					   
	РезультатЗапроса = Запрос.Выполнить().Выбрать(); 
	
	Пока РезультатЗапроса.Следующий() Цикл  	
		СтрокаСпискаППВ = СписокПлатежныхПорученийВходящих.Добавить();
		СтрокаСпискаППВ.Значение = РезультатЗапроса.ПлатежноеПоручение; 
		СтрокаСпискаППВ.Представление = РезультатЗапроса.ПлатежноеПоручениеПредставление;		
	КонецЦикла;  
	
	Если СписокПлатежныхПорученийВходящих.Количество() = 0 Тогда
		ЭлементСсылкаНаПлатежноеПоручение.Заголовок = НСтр("ru = 'Создать документ'");
		Возврат;
	ИначеЕсли СписокПлатежныхПорученийВходящих.Количество() > 1 Тогда 
		НадписьКоличествоПлатежныхПорученийВходящих = НСтр("ru='Всего документов платежных поручений (входящих): (%КоличествоДокументов%)'");
		ЭлементСсылкаНаПлатежноеПоручение.Заголовок = СтрЗаменить(НадписьКоличествоПлатежныхПорученийВходящих, "%КоличествоДокументов%", СписокПлатежныхПорученийВходящих.Количество());	
	Иначе
		ЭлементСсылкаНаПлатежноеПоручение.Заголовок = СписокПлатежныхПорученийВходящих[0].Представление;
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьПоВедомостьНаПеречислениеПрочихВыплат(Объект, Основание) Экспорт
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВедомостьНаПеречислениеПрочихВыплат.Контрагент КАК Контрагент,
	|	ВедомостьНаПеречислениеПрочихВыплат.ПрочиеВыплаты КАК ПрочиеВыплаты
	|ИЗ
	|	Документ.ВедомостьНаПеречислениеПрочихВыплат КАК ВедомостьНаПеречислениеПрочихВыплат
	|
	|ГДЕ
	|	ВедомостьНаПеречислениеПрочихВыплат.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВедомостьНаПеречислениеПрочихВыплат.ПрочиеВыплаты.НомерСтроки";

	Запрос.УстановитьПараметр("Ссылка", Основание);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		
		Объект.Контрагент		  = РезультатЗапроса.Контрагент;
		
		Объект.ПрочиеВыплаты.Загрузить(РезультатЗапроса.ПрочиеВыплаты.Выгрузить());
		
	КонецЕсли;
	
	Объект.ДокументОснование = Основание;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли