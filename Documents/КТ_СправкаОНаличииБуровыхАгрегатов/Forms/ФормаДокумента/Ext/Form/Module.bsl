
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере();
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// РедактированиеДокументовПользователей
	ПраваДоступаКОбъектам.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец РедактированиеДокументовПользователей
	
	ПодготовитьФормуНаСервере();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);	
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	Если Параметры.Ключ.Пустая() Тогда
		
		КТ_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект);
		
	КонецЕсли;
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
	УправлениеФормой(ЭтаФорма);
	
	ОбщегоНазначенияБК.УстановитьТекстАвтора(НадписьАвтор, Объект.Автор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект		= Форма.Объект;
	Элементы	= Форма.Элементы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцПодобратьДатуПоТексту(МесяцНачисленияСтрокой, Объект.ПериодРегистрации);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		Ожидание = 0;
		РаботаСДиалогамиКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, Объект.ПериодРегистрации, ЭтаФорма);
	Иначе
		РаботаСДиалогамиКлиент.ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Агрегаты.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КТ_СоответствиеАгрегатовПодразделенияЦФО.Ссылка КАК СоответствиеАгрегатов,
	               |	КТ_СоответствиеАгрегатовПодразделенияЦФО.Участок КАК Участок,
	               |	КТ_СоответствиеАгрегатовПодразделенияЦФО.Агрегат КАК Агрегат,
	               |	КТ_СоответствиеАгрегатовПодразделенияЦФО.Ссылка.Код КАК Код
	               |ИЗ
	               |	Справочник.КТ_СоответствиеАгрегатов.ПодразделенияЦФО КАК КТ_СоответствиеАгрегатовПодразделенияЦФО
	               |ГДЕ
	               |	НЕ КТ_СоответствиеАгрегатовПодразделенияЦФО.Ссылка.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Участок,
	               |	Код";
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Агрегаты.Загрузить(ТЗ);
	
	ТЗ.Свернуть("СоответствиеАгрегатов");
	Объект.КоличествоАгрегатов = ТЗ.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура АгрегатыНаличиеПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Агрегаты.ТекущиеДанные;
	НайденСтроки = Объект.Агрегаты.НайтиСтроки(Новый Структура("СоответствиеАгрегатов", ТекСтрока.СоответствиеАгрегатов));
	ОбКолАгрег = 0;
	
	ТекстСообщения = "";
	Для Каждого Стр из НайденСтроки Цикл
		Если Стр.Агрегат <> ТекСтрока.Агрегат Тогда
			Если Стр.Наличие = 1 Тогда  
				Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить наличие, т.к. для агрегата - "+Стр.СоответствиеАгрегатов+" в строке "+Стр.НомерСтроки+" уже установлено наличие!");
				ТекСтрока.Наличие = 0;
			ИначеЕсли Стр.Наличие < 1 И Стр.Наличие > 0 Тогда
				ОбКолАгрег = ОбКолАгрег + Стр.Наличие;
				ТекстСообщения = ТекстСообщения + "для агрегата - "+Стр.СоответствиеАгрегатов+" в строке "+Стр.НомерСтроки+" уже установлено наличие - "+Стр.Наличие+Символы.ПС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекСтрока.Наличие = 1 И ОбКолАгрег > 0 Тогда
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить наличие = 1!");
		Сообщить(ТекстСообщения);
		ТекСтрока.Наличие = ТекСтрока.Наличие - ОбКолАгрег;
	ИначеЕсли ТекСтрока.Наличие < 1 И ОбКолАгрег = 1 Тогда
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить наличие - "+ТекСтрока.Наличие);
		Сообщить(ТекстСообщения);
		ТекСтрока.Наличие = 0;
	ИначеЕсли ТекСтрока.Наличие < 1 И ОбКолАгрег < 1 И (ТекСтрока.Наличие + ОбКолАгрег > 1) Тогда
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить наличие - "+ТекСтрока.Наличие);
		Сообщить(ТекстСообщения);
		ТекСтрока.Наличие = 1 - ОбКолАгрег;
	КонецЕсли;
						
	Если Объект.Агрегаты.Итог("Наличие") > Объект.КоличествоАгрегатов Тогда	
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить наличие, общее число агрегатов превышает - "+Объект.КоличествоАгрегатов);
		ТекСтрока.Наличие = 0;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура АгрегатыИспользованиеПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Агрегаты.ТекущиеДанные;
	НайденСтроки = Объект.Агрегаты.НайтиСтроки(Новый Структура("СоответствиеАгрегатов", ТекСтрока.СоответствиеАгрегатов));
	ОбКолАгрег = 0;
	
	ТекстСообщения = "";
	Для Каждого Стр из НайденСтроки Цикл
		Если Стр.Агрегат <> ТекСтрока.Агрегат Тогда
			Если Стр.Использование = 1 Тогда  
				Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить Использование, т.к. для агрегата - "+Стр.СоответствиеАгрегатов+" в строке "+Стр.НомерСтроки+" уже установлено Использование!");
				ТекСтрока.Использование = 0;
			ИначеЕсли Стр.Использование < 1 И Стр.Использование > 0 Тогда
				ОбКолАгрег = ОбКолАгрег + Стр.Использование;
				ТекстСообщения = ТекстСообщения + "для агрегата - "+Стр.СоответствиеАгрегатов+" в строке "+Стр.НомерСтроки+" уже установлено Использование - "+Стр.Наличие+Символы.ПС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекСтрока.Использование = 1 И ОбКолАгрег > 0 Тогда
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить Использование = 1!");
		Сообщить(ТекстСообщения);
		ТекСтрока.Использование = ТекСтрока.Использование - ОбКолАгрег;
	ИначеЕсли ТекСтрока.Использование < 1 И ОбКолАгрег = 1 Тогда
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить Использование - "+ТекСтрока.Использование);
		Сообщить(ТекстСообщения);
		ТекСтрока.Использование = 0;
	ИначеЕсли ТекСтрока.Использование < 1 И ОбКолАгрег < 1 И (ТекСтрока.Использование + ОбКолАгрег > 1) Тогда
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить Использование - "+ТекСтрока.Использование);
		Сообщить(ТекстСообщения);
		ТекСтрока.Использование = 1 - ОбКолАгрег;
	КонецЕсли;

	Если Объект.Агрегаты.Итог("Использование") > Объект.КоличествоАгрегатов Тогда	
		Сообщить("В строке - "+ТекСтрока.НомерСтроки+" нельзя установить использование, общее число агрегатов превышает - "+Объект.КоличествоАгрегатов);
		ТекСтрока.Использование = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = ПроверитьЗаЭтотМесяц();
	
	Если Отказ Тогда
		Сообщить("За данный период - "+МесяцНачисленияСтрокой+" уже есть документ!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаЭтотМесяц()
	
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КТ_СправкаОНаличииБуровыхАгрегатов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.КТ_СправкаОНаличииБуровыхАгрегатов КАК КТ_СправкаОНаличииБуровыхАгрегатов
	               |ГДЕ
	               |	КТ_СправкаОНаличииБуровыхАгрегатов.ПериодРегистрации = &ПериодРегистрации
	               |	И КТ_СправкаОНаличииБуровыхАгрегатов.Проведен
	               |	И КТ_СправкаОНаличииБуровыхАгрегатов.Ссылка <> &Ссылка";
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка"           , Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции




