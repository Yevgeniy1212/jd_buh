#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();
	Результат = Запрос.Выполнить();
	ПараметрыПроведения.Вставить("ТаблицаРеквизитов", Результат.Выгрузить());
	
	Реквизиты = ПараметрыПроведения.ТаблицаРеквизитов[0];
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаГрафикПлатежей(НомераТаблиц);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.ФизЛицо,
	|	Реквизиты.ВычетИПН,
	|	Реквизиты.ДатаНачала,
	|	Реквизиты.ДатаОкончания,
	|	Реквизиты.ДокументОснование,
	|	Реквизиты.ДокументОснование.Организация КАК ОрганизацияОснования,
	|	Реквизиты.ДокументОснование.ФизЛицо КАК ФизЛицоОснования,
	|	Реквизиты.ДокументОснование.ВычетИПН КАК ВычетИПНОснования,
	|	Реквизиты.Ссылка
	|ИЗ
	|	Документ.ИПНЗаявлениеНаПредоставлениеВычета КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса; 
	
КонецФункции

Функция ТекстЗапросаТаблицаГрафикПлатежей(НомераТаблиц)

	НомераТаблиц.Вставить("ГрафикПлатежей", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГрафикПлатежей.НомерСтроки КАК НомерСтроки,
	|	НАЧАЛОПЕРИОДА(ГрафикПлатежей.ДатаПлатежа, МЕСЯЦ) КАК ДатаПлатежа,
	|	ГрафикПлатежей.СуммаВычета
	|ИЗ
	|	Документ.ИПНЗаявлениеНаПредоставлениеВычета.ГрафикПлатежей КАК ГрафикПлатежей
	|ГДЕ
	|	ГрафикПлатежей.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры формирования движений

Процедура СформироватьДвиженияИПНЗаявлениеНаПредоставлениеВычета(Таблица, ТаблицаРеквизитов, Движения, Отказ) Экспорт
	
	Если Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Реквизиты = ТаблицаРеквизитов[0];
	
	Период   	= Реквизиты.Дата;
	Организация = Реквизиты.Организация;
	ВычетИПН    = Реквизиты.ВычетИПН;
	ФизЛицо     = Реквизиты.ФизЛицо;
	ДокументОснование = Реквизиты.ДокументОснование;
	
	Для каждого СтрокаГрафикПлатежей Из Таблица Цикл
		
		Движение = Движения.ИПНПлановыеНалоговыеВычетыФизлиц.Добавить();
		
		Движение.Период 	  = Период;
		Движение.ФизЛицо      = ФизЛицо;
		Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик 	= ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Организация,
																														Организация,
																														Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
		Иначе
			Движение.Налогоплательщик 	=	Организация;
		КонецЕсли;
		
		Движение.ВычетИПН	  = ВычетИПН;
		
		// Если указан документ-основание, то используем его
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			Движение.ДокументОснование 	= ДокументОснование;
		Иначе
			Движение.ДокументОснование 	= Реквизиты.Ссылка;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаВычета 			= СтрокаГрафикПлатежей.СуммаВычета;
		Движение.МесяцНалоговогоПериода = СтрокаГрафикПлатежей.ДатаПлатежа;
		
	КонецЦикла;
	
	Движения.ИПНПлановыеНалоговыеВычетыФизлиц.Записывать = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли
