#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ИмяТабличнойЧасти);
	КонецЦикла;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти, ИмяТабличнойЧасти) Экспорт

	СтрокаТабличнойЧасти.СчетУчетаБУ = ПланыСчетов.Типовой.СписанныеПокупныеМатериалыКомплектующиеИзделия;			
	СтрокаТабличнойЧасти.СчетУчетаНУ = ПланыСчетов.Типовой.СписанныеПокупныеМатериалыКомплектующиеИзделия.СчетНУ;
	СтрокаТабличнойЧасти.НовыйСчетУчетаБУ = ПланыСчетов.Типовой.СписанныеПокупныеМатериалыКомплектующиеИзделия;
	СтрокаТабличнойЧасти.НовыйСчетУчетаНУ = ПланыСчетов.Типовой.СписанныеПокупныеМатериалыКомплектующиеИзделия.СчетНУ;
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("СодержаниеСписаныТМЗ", НСтр("ru='Перемещены ТМЗ'"));
	Запрос.УстановитьПараметр("ДатаСреза", ДокументСсылка.Дата);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "БУ", Истина, ДокументСсылка) 
		ИЛИ НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "НУ", Истина, ДокументСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;

	ОрганизацияПлательщикНалогаНаПрибыль 		   = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль = ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	НеобходимостьОтраженияВНУ 					   = ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль И Реквизиты.УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ Реквизиты.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	
	Запрос.УстановитьПараметр("СинонимТовары"				  , НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимТоварыНДС"			  , НСтр("ru = 'Товары НДС'"));
	Запрос.УстановитьПараметр("НеобходимостьОтраженияВНУ"	  , НеобходимостьОтраженияВНУ);
	Запрос.УстановитьПараметр("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(Реквизиты, НомераТаблиц)
					+ ТекстЗапросаСписаниеТоваров(Реквизиты, НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	УправлениеВзаиморасчетамиСервер.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ПараметрыПроведения.СписаниеТоваровТаблицаТовары, ПараметрыПроведения.СписаниеТоваровРеквизиты, Истина);
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Реквизиты.Ссылка КАК Ссылка,
	               |	Реквизиты.Дата КАК Дата,
	               |	Реквизиты.Организация КАК Организация,
	               |	Реквизиты.СтруктурноеПодразделениеОтправитель КАК СтруктурноеПодразделениеОтправитель,
	               |	Реквизиты.СтруктурноеПодразделениеПолучатель КАК СтруктурноеПодразделениеПолучатель,
	               |	Реквизиты.УчитыватьКПН КАК УчитыватьКПН,
	               |	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
	               |	Реквизиты.СкладОтправитель КАК СкладОтправитель,
	               |	Реквизиты.СкладПолучатель КАК СкладПолучатель,
	               |	Реквизиты.СкладОтправитель КАК Склад,
	               |	&СодержаниеСписаныТМЗ КАК Содержание,
	               |	&ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	               |	Реквизиты.МОЛОтправитель КАК МОЛОтправитель,
	               |	Реквизиты.МОЛПолучатель КАК МОЛПолучатель
	               |ПОМЕСТИТЬ Реквизиты
	               |ИЗ
	               |	Документ.ПеремещениеСпецодежды КАК Реквизиты
	               |ГДЕ
	               |	Реквизиты.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Реквизиты.Ссылка КАК Регистратор,
	               |	Реквизиты.Дата КАК Период,
	               |	Реквизиты.Организация КАК Организация,
	               |	Реквизиты.СтруктурноеПодразделениеОтправитель КАК СтруктурноеПодразделение,
	               |	Реквизиты.СтруктурноеПодразделениеПолучатель КАК КорСтруктурноеПодразделение,
	               |	Реквизиты.УчитыватьКПН КАК УчитыватьКПН,
	               |	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
	               |	Реквизиты.СкладОтправитель КАК СкладОтправитель,
	               |	Реквизиты.СкладПолучатель КАК СкладПолучатель,
	               |	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	               |	Реквизиты.Содержание КАК Содержание,
	               |	Реквизиты.МОЛПолучатель КАК МОЛПолучатель,
	               |	Реквизиты.МОЛОтправитель КАК МОЛОтправитель
	               |ИЗ
	               |	Реквизиты КАК Реквизиты";	
		
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(Реквизиты, НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Количество,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.НовыйСчетУчетаБУ,
		|	ТаблицаТовары.НовыйСчетУчетаНУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.Коэффициент,
		|	ТаблицаТовары.КлючСвязи
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.ПеремещениеСпецодежды.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСписаниеТоваров(Реквизиты, НомераТаблиц)
	
	ТекстЗапроса = "";
	НомераТаблиц.Вставить("СписаниеТоваровРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровТаблицаТовары", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	""Списание"" КАК ТипСписания,
		|	Реквизиты.Ссылка КАК ДокументРеализации,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.СтруктурноеПодразделениеОтправитель КАК СтруктурноеПодразделение,
		|	Реквизиты.СтруктурноеПодразделениеПолучатель КАК КорСтруктурноеПодразделение,
		|	Реквизиты.УчитыватьКПН КАК УчитыватьКПН,
		|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
		|	Реквизиты.Содержание КАК Содержание,
		|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
		|	Реквизиты.МОЛПолучатель КАК МОЛПолучатель,
		|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		|	&ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
		|	Реквизиты.МОЛОтправитель КАК МОЛОтправитель
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	Реквизиты.Дата КАК Период,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	Реквизиты.СкладОтправитель КАК Склад,
		|	Реквизиты.СкладПолучатель КАК КорСклад,
		//++Кубасов Е замена Задача I-20275
		//|	ВЫРАЗИТЬ(ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент КАК ЧИСЛО(19, 3)) КАК Количество,
		|	ВЫРАЗИТЬ (ТаблицаТовары.Количество КАК ЧИСЛО(19, 3)) КАК Количество,
		//--Кубасов Е замена Задача I-20275 
		|	Реквизиты.СтруктурноеПодразделениеОтправитель КАК СтруктурноеПодразделение,
		|	Реквизиты.СтруктурноеПодразделениеПолучатель КАК КорСтруктурноеПодразделение,
		|	0 КАК Себестоимость,
		|	0 КАК Сумма,
		|	0 КАК СуммаВал,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
		|	ТаблицаТовары.НовыйСчетУчетаБУ КАК КорСчетСписанияБУ,
		|	ТаблицаТовары.Номенклатура КАК КорСубконтоБУ1,
		|	Реквизиты.СкладПолучатель КАК КорСубконтоБУ2,
		|	Реквизиты.МОЛПолучатель КАК КорСубконтоБУ3,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура) КАК ВидКорСубконтоБУ1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Склады) КАК ВидКорСубконтоБУ2,
		|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ3,
		|	ТаблицаТовары.НовыйСчетУчетаНУ КАК КорСчетСписанияНУ,
		|	ТаблицаТовары.Номенклатура КАК КорСубконтоНУ1,
		|	Реквизиты.СкладПолучатель КАК КорСубконтоНУ2,
		|	Реквизиты.МОЛПолучатель КАК КорСубконтоНУ3,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура) КАК ВидКорСубконтоНУ1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Склады) КАК ВидКорСубконтоНУ2,
		|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ3,
		|	Реквизиты.МОЛОтправитель КАК МОЛОтправитель
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
		|		ПО Реквизиты.Ссылка = ТаблицаТовары.Ссылка
		//|ГДЕ
		//|	(Реквизиты.СтруктурноеПодразделениеОтправитель <> Реквизиты.СтруктурноеПодразделениеПолучатель
		//|			ИЛИ Реквизиты.СкладПолучатель <> Реквизиты.СкладОтправитель
		//|			ИЛИ ТаблицаТовары.СчетУчетаБУ <> ТаблицаТовары.НовыйСчетУчетаБУ
		//|			ИЛИ ТаблицаТовары.СчетУчетаНУ <> ТаблицаТовары.НовыйСчетУчетаНУ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.НомерСтроки"; 
		
	Возврат ТекстЗапроса ;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//// Накладная на перемещение товаров
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "НакладнаяНаПеремещение";
	//КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение товаров'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	//КомандаПечати.Порядок = 50;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//// Печать накладной на перемещение
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
	//		КоллекцияПечатныхФорм,
	//		"НакладнаяНаПеремещение",
	//		НСтр("ru = 'Накладная на перемещение товаров'"),
	//		ПечатьПеремещениеТоваров(МассивОбъектов, ОбъектыПечати),
	//		,
	//		"Документ.ПеремещениеСпецодежды.ПФ_MXL_Накладная");
	//КонецЕсли;

КонецПроцедуры



#КонецЕсли