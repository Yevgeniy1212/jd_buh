
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере();
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// РедактированиеДокументовПользователей
    ПраваДоступаКОбъектам.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец РедактированиеДокументовПользователей
	
	ПодготовитьФормуНаСервере();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);	
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	Если Параметры.Ключ.Пустая() Тогда
		
		КТ_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект);
		
	КонецЕсли;
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
	УправлениеФормой(ЭтаФорма);
	
	ОбщегоНазначенияБК.УстановитьТекстАвтора(НадписьАвтор, Объект.Автор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект		= Форма.Объект;
	Элементы	= Форма.Элементы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцПодобратьДатуПоТексту(МесяцНачисленияСтрокой, Объект.ПериодРегистрации);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		Ожидание = 0;
		РаботаСДиалогамиКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, Объект.ПериодРегистрации, ЭтаФорма);
	Иначе
		РаботаСДиалогамиКлиент.ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Справка.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.СоответствиеАгрегатов КАК СоответствиеАгрегатов,
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Участок КАК Участок,
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Агрегат КАК Агрегат,
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.СоответствиеАгрегатов.Код КАК СоответствиеАгрегатовКод
	               |ИЗ
	               |	Документ.КТ_СправкаОНаличииБуровыхАгрегатов.Агрегаты КАК КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты
	               |ГДЕ
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.Проведен
	               |	И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.ПериодРегистрации = &ПериодРегистрации
	               |	И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Использование <> 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Участок,
	               |	СоответствиеАгрегатовКод";
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Справка.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	//Если КТ_РаботаСДиалогамиКлиент.ПроверитьСправкуНаСервере(Объект.ПериодРегистрации) Тогда
	Если ПроверитьСправкуНаСервере(Объект.ПериодРегистрации) Тогда
	    ЗаполнитьНаСервере();
	Иначе
		Сообщить("Не заполнена Справка о наличии буровых агрегатов за "+Формат(Объект.ПериодРегистрации, "ДФ=""ММММ гггг 'г.'"""));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = ПроверитьЗаЭтотМесяц();
	
	Если Отказ Тогда
		Сообщить("За данный период - "+МесяцНачисленияСтрокой+" уже есть документ!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаЭтотМесяц()
	
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КТ_ПроизводственнаяСправкаПоОбъемам.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.КТ_ПроизводственнаяСправкаПоОбъемам КАК КТ_ПроизводственнаяСправкаПоОбъемам
	               |ГДЕ
	               |	КТ_ПроизводственнаяСправкаПоОбъемам.ПериодРегистрации = &ПериодРегистрации
	               |	И КТ_ПроизводственнаяСправкаПоОбъемам.Проведен
	               |	И КТ_ПроизводственнаяСправкаПоОбъемам.Ссылка <> &Ссылка";
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка"           , Объект.ПериодРегистрации);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура СправкаПробуреноСквПриИзменении(Элемент)
	ТекСтрока = Элементы.Справка.ТекущиеДанные;
	ТекСтрока.АктированоСкв = ?(ТекСтрока.ПробуреноСкв>0, ТекСтрока.ПробуреноСкв, ТекСтрока.АктированоСкв);  
	ТекСтрока.АктированоПМ  = ?(ТекСтрока.ПробуреноПМ>0 , ТекСтрока.ПробуреноПМ , ТекСтрока.АктированоПМ);
КонецПроцедуры                                                       

&НаКлиенте
Процедура СправкаПередУдалением(Элемент, Отказ)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос(НСтр("ru ='Вы действительно хотите удалить строку?'"), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;
    		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПС(Команда)
	
	ОтказС = Ложь;
	ОтказП = Ложь;
	Если Не ПроверитьСправкуНаСервере(Объект.ПериодРегистрации) Тогда
		ОтказС = Истина;
		Сообщить("Не заполнена Справка о наличии буровых агрегатов за "+Формат(Объект.ПериодРегистрации, "ДФ=""ММММ гггг 'г.'"""));
	КонецЕсли;
	Если Не ПроверитьПСНаСервере(Объект.ПериодРегистрации) Тогда
		ОтказП = Истина;
		Сообщить("Не заполнены Производственные справки за "+Формат(Объект.ПериодРегистрации, "ДФ=""ММММ гггг 'г.'"""));
	КонецЕсли;
	
	Если Не (ОтказС И ОтказП) Тогда
		ЗаполнитьПоПСНаСервере();
	КОнецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПСНаСервере()
	
	Объект.Справка.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.СоответствиеАгрегатов КАК СоответствиеАгрегатов,
	               |	ВложенныйЗапрос.СоответствиеАгрегатов.Код КАК СоответствиеАгрегатовКод,
	               |	ВложенныйЗапрос.Участок КАК Участок,
	               |	ВложенныйЗапрос.Агрегат КАК Агрегат,
	               |	ВложенныйЗапрос.ВидСкважины КАК ВидСкважины,
	               |	СУММА(ВложенныйЗапрос.ПробуреноПМ) КАК ПробуреноПМ,
	               |	СУММА(ВложенныйЗапрос.ПробуреноСкв) КАК ПробуреноСкв,
	               |	СУММА(ВложенныйЗапрос.АктированоСкв) КАК АктированоСкв,
	               |	СУММА(ВложенныйЗапрос.АктированоПМ) КАК АктированоПМ
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.Участок КАК Участок,
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.ВидСкважины КАК ВидСкважины,
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.Подразделение КАК Агрегат,
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.ПризнакЗавершонности КАК ПризнакЗавершонности,
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.ГлубинаЗавершоннойСкважены КАК ПробуреноПМ,
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.Принята КАК Принята,
	               |		КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.СоответствиеАгрегатов КАК СоответствиеАгрегатов,
	               |		1 КАК ПробуреноСкв,
	               |		ВЫБОР
	               |			КОГДА ПроизводственнаяСправкаИнформацияПоПродукции.Принята
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК АктированоСкв,
	               |		ВЫБОР
	               |			КОГДА ПроизводственнаяСправкаИнформацияПоПродукции.Принята
	               |				ТОГДА ПроизводственнаяСправкаИнформацияПоПродукции.ГлубинаЗавершоннойСкважены
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК АктированоПМ
	               |	ИЗ
	               |		Документ.ПроизводственнаяСправка.ИнформацияПоПродукции КАК ПроизводственнаяСправкаИнформацияПоПродукции
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.КТ_СправкаОНаличииБуровыхАгрегатов.Агрегаты КАК КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты
	               |			ПО ПроизводственнаяСправкаИнформацияПоПродукции.Участок = КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Участок
	               |				И ПроизводственнаяСправкаИнформацияПоПродукции.Подразделение = КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Агрегат
	               |	ГДЕ
	               |		ПроизводственнаяСправкаИнформацияПоПродукции.Ссылка.Проведен
	               |		И ПроизводственнаяСправкаИнформацияПоПродукции.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |		И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.Проведен
	               |		И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.ПериодРегистрации = &ПериодРегистрации) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Участок,
	               |	ВложенныйЗапрос.ВидСкважины,
	               |	ВложенныйЗапрос.Агрегат,
	               |	ВложенныйЗапрос.СоответствиеАгрегатов,
	               |	ВложенныйЗапрос.СоответствиеАгрегатов.Код
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Участок,
	               |	СоответствиеАгрегатовКод";
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Справка.Загрузить(ТЗ);
	
КонецПроцедуры

///ПроизводственныеПроверки

&НаСервере
Функция ПроверитьСправкуНаСервере(ДатаН) 
	
	ЕстьСправка = Ложь;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.КТ_СправкаОНаличииБуровыхАгрегатов.Агрегаты КАК КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты
	               |ГДЕ
	               |	КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.Проведен
	               |	И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.ПериодРегистрации = &ПериодРегистрации";
	Запрос.УстановитьПараметр("ПериодРегистрации", ДатаН);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество()>0 Тогда
		ЕстьСправка = Истина;
	КонецЕсли;
	
	Возврат ЕстьСправка;		
	
КонецФункции

&НаСервере
Функция ПроверитьПСНаСервере(ДатаН) 
	
	ЕстьСправка = Ложь;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.Участок КАК Участок,
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.ВидСкважины КАК ВидСкважины,
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.Подразделение КАК Агрегат,
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.ПризнакЗавершонности КАК ПризнакЗавершонности,
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.ГлубинаЗавершоннойСкважены КАК ПробуреноПМ,
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.Принята КАК Принята,
	               |	1 КАК ПробуреноСкв,
	               |	ВЫБОР
	               |		КОГДА ПроизводственнаяСправкаИнформацияПоПродукции.Принята
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК АктированоСкв,
	               |	ВЫБОР
	               |		КОГДА ПроизводственнаяСправкаИнформацияПоПродукции.Принята
	               |			ТОГДА ПроизводственнаяСправкаИнформацияПоПродукции.ГлубинаЗавершоннойСкважены
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК АктированоПМ
	               |ИЗ
	               |	Документ.ПроизводственнаяСправка.ИнформацияПоПродукции КАК ПроизводственнаяСправкаИнформацияПоПродукции
	               |ГДЕ
	               |	ПроизводственнаяСправкаИнформацияПоПродукции.Ссылка.Проведен
	               |	И ПроизводственнаяСправкаИнформацияПоПродукции.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ДатаН));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДатаН));
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество()>0 Тогда
		ЕстьСправка = Истина;
	КонецЕсли;
	
	Возврат ЕстьСправка;		
	
КонецФункции

&НаКлиенте
Процедура СправкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Справка.ТекущиеДанные;

КонецПроцедуры
   
&НаКлиенте
Процедура ЗагрузитьСправкаИзФайла(Команда)
    ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
    ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "КТ_ПроизводственнаяСправкаПоОбъемам.Справка";
    ПараметрыЗагрузки.Заголовок = НСтр("ru = 'Загрузка данных из файла'");
    ДополнительныеПараметры = Новый Структура();
	//ДополнительныеПараметры.Вставить("Контрагент", Объект.Контрагент);
	ДополнительныеПараметры.Вставить("Организация", Объект.Организация);
    ПараметрыЗагрузки.ДополнительныеПараметры = ДополнительныеПараметры;
    Оповещение = Новый ОписаниеОповещения("ЗагрузитьСправкаИзФайлаЗавершение", ЭтотОбъект);
    ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки, Оповещение);
КонецПроцедуры
&НаКлиенте
Процедура ЗагрузитьСправкаИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнительныеПараметры) Экспорт
    Если АдресЗагруженныхДанных = Неопределено Тогда 
        Возврат;
    КонецЕсли;
    ЗагрузитьСправкаИзФайлаНаСервере(АдресЗагруженныхДанных);
КонецПроцедуры
&НаСервере
Процедура ЗагрузитьСправкаИзФайлаНаСервере(АдресЗагруженныхДанных)
    ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагруженныхДанных);
    ТоварыДобавлены = Ложь;
    Для каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
    
        НоваяСтрокаСправка = Объект.Справка.Добавить();   
		НоваяСтрокаСправка.СоответствиеАгрегатов = СтрокаТаблицы.СоответствиеАгрегатов;
		НоваяСтрокаСправка.Агрегат = СтрокаТаблицы.Агрегат;
		//++Кибернетика Беляев Е.И. 16.07.2024 Добавили вид бурения для загрузчика
		НоваяСтрокаСправка.ВидБурения = СтрокаТаблицы.ВидБурения;
		//--Кибернетика Беляев Е.И. 16.07.2024 Добавили вид бурения для загрузчика
		НоваяСтрокаСправка.Участок = СтрокаТаблицы.Участок;
        НоваяСтрокаСправка.ВидСкважины = СтрокаТаблицы.ВидСкважины;
        НоваяСтрокаСправка.ПробуреноСкв = СтрокаТаблицы.ПробуреноСкв;
        НоваяСтрокаСправка.ПробуреноПМ = СтрокаТаблицы.ПробуреноПМ;
        НоваяСтрокаСправка.АктированоСкв = СтрокаТаблицы.АктированоСкв;
		НоваяСтрокаСправка.АктированоПМ = СтрокаТаблицы.АктированоПМ;
        НоваяСтрокаСправка.УчастокПодразделение = СтрокаТаблицы.УчастокПодразделение;
		НоваяСтрокаСправка.НомерСкважины = СтрокаТаблицы.НомерСкважины;
        НоваяСтрокаСправка.Заказчик = СтрокаТаблицы.Заказчик; 
		//++Кибернетика Беляев Е.И. 17.07.2024 Добавили вид бурения для загрузчика
		НоваяСтрокаСправка.Примечание = СтрокаТаблицы.Примечание;
		НоваяСтрокаСправка.КоличествоЧасовРаботы = СтрокаТаблицы.КоличествоЧасовРаботы;
		НоваяСтрокаСправка.КоличествоЧасовПростоя = СтрокаТаблицы.КоличествоЧасовПростоя;
		НоваяСтрокаСправка.ПричиныПростоя = СтрокаТаблицы.ПричиныПростоя;
		//--Кибернетика Беляев Е.И. 17.07.2024 Добавили вид бурения для загрузчика
		СтрокиДобавлены = Истина;
    КонецЦикла;
    Если СтрокиДобавлены Тогда
        Модифицированность = Истина;
    КонецЕсли;
КонецПроцедуры
