
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.ОтчетОРозничныхПродажах);
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	Элементы.ФормаИзменитьВыделенные.Видимость = МожноРедактировать;
	
	ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
	
	ОбщегоНазначенияБК.ФормаСпискаПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
			
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
	ОбщегоНазначенияБККлиентСервер.ВосстановитьОтборСписка(Список, Настройки, "Организация");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

&НаКлиенте
Процедура РазбитьДокумент(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 1 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Выберите только один документ для обработки!'"));
	ИначеЕсли Элементы.Список.ВыделенныеСтроки.Количество() = 1 Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеВводаКоличестваСтрок", ЭтотОбъект);
		ПоказатьВводЧисла(Оповещение, 200, НСтр("ru = 'Количество строк'"), 3);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКоличестваСтрок(ЧислоСтрок, Параметры) Экспорт
	
    Если НЕ ЧислоСтрок = Неопределено Тогда
		Если ЧислоСтрок = 0 Тогда
		КонецЕсли;
		РазбитьДокументНаСервере(ЧислоСтрок);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазбитьДокументНаСервере(ЧислоСтрок)
	
	ДокументДляОбработки = Элементы.Список.ВыделенныеСтроки[0].Ссылка;
	РезультатОбработки   = "";
	
	СчетФактура = ОбщегоНазначенияБК.НайтиПодчиненныйДокумент(ДокументДляОбработки, "СчетФактураВыданный");
	Если ЗначениеЗаполнено(СчетФактура) Тогда
		РезультатОбработки = "СуществуетСчетФактура";
	Иначе
		Документы.ОтчетОРозничныхПродажах.РазбитьДокумент(ДокументДляОбработки, ЧислоСтрок, РезультатОбработки);
	КонецЕсли;
	
	Если РезультатОбработки = "СуществуетСчетФактура" Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Операция не выполнена! Для документа введен счет-фактура <%1>.'"), СчетФактура);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли РезультатОбработки = "ДокументОшибкиЗаписи" Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Операция не выполнена! Ошибки при записи документов.'"));
	ИначеЕсли РезультатОбработки = "ДокументНеТребуетОбработки" Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Документ не требует обработки.'"));
	ИначеЕсли РезультатОбработки = "ДокументРазбит" Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Операция выполнена.'"));
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#Область СНТ

&НаКлиенте
Процедура ОбработкаКомандыСозданияСНТ(Команда)
	
	СНТКлиент.СоздатьСНТ(Элементы.Список.ВыделенныеСтроки); 

КонецПроцедуры

#КонецОбласти

