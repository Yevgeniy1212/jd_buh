
Процедура ОбработкаПроведения(Отказ, Режим)
   // Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	
	// Сформируем проверку обязательных реквизитов 
    СтруктураОбязательныхПолейДокумента = Новый Структура("Организация, Участок");
	//ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолейДокумента, Отказ, Заголовок);

	Если НормыРасхода.Количество()=0 Тогда
		Отказ = Истина;
		//Сообщить (Заголовок);
		Сообщить ("Таблица не заполнена!!!", СтатусСообщения.Важное);
	КонецЕсли;
	// убрал единицу измерения   СтруктураОбязательныхПолейТЧ = Новый Структура("ВидСкважины, ТМЦ, ЕдиницаИзмерения, НормаРасхода");

	СтруктураОбязательныхПолейТЧ = Новый Структура("ВидСкважины, ТМЦ,  НормаРасхода");
	//ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "НормыРасхода", СтруктураОбязательныхПолейТЧ, Отказ, Заголовок);
	
	Если Отказ = Истина тогда
		Возврат;
	КонецЕсли;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	НомГруппа="";
	Для Каждого ТекСтрока из НормыРасхода цикл
		НомГруппа1=НомГруппа;
		НомГруппа=ТекСтрока.НоменклатурнаяГруппа;
		Если НомГруппа=НомГруппа1 тогда
			Сообщить("В таблице не должно быть строк с одинаковым значением Номенклатурной группы!",СтатусСообщения.Важное);
		     Отказ=истина;
			 Возврат;
		 КонецЕсли;
	 КонецЦикла;
	 
			 
		
	Для Каждого ТекСтрокаНормыРасхода Из НормыРасхода Цикл
		// регистр TS_НормыРасходаМатериаловСкважин 
		Движение 				= Движения.НормыРасходаМатериаловСкважин.Добавить();
		Движение.Период 		= Дата;
		Движение.Организация 	= Организация;
		Движение.Участок 		= Участок;
		Движение.ВидСкважины    = ТекСтрокаНормыРасхода.ВидСкважины;
		Движение.ТМЦ 			= ТекСтрокаНормыРасхода.НоменклатурнаяГруппа;
		Движение.НормаТМЦ 		= ТекСтрокаНормыРасхода.НормаРасхода;
	КонецЦикла;
	// записываем движения регистров
	Движения.НормыРасходаМатериаловСкважин.Записать();
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
		
	// TS START 
	// Если вдуг элемент будет создан программным образом то при записи реквизит 
	// TS_Узел не заполнится и мы это проверяем
	////////Если ПараметрыСеанса.ИспользованиеРИБ Тогда //только если база использует УРИБ и это не загрузка данных при обмене
	////////	Если Не ЗначениеЗаполнено(TS_Узел) Тогда  //Если узел заполнен то ничего не делаем, счастье уже наступило
	////////		Если  ПланыОбмена.Полный.ЭтотУзел().TS_ИнформационнаяБаза.Наименование = "Центральная база" тогда
	////////			TS_Узел = Организация.TS_ИнформационнаяБазаОрганизации;
	////////		Иначе
	////////			TS_Узел = ПланыОбмена.Полный.ЭтотУзел().TS_ИнформационнаяБаза;
	////////		КонецЕсли;		
	////////	КонецЕсли;
	////////	ВключитьРегистрациюДляОбъекта(ЭтотОбъект);  
	////////КонецЕсли;
	////////Если ОбменДанными.Загрузка Тогда
	////////	Возврат;
	////////КонецЕсли;
	// TS FINISH
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры