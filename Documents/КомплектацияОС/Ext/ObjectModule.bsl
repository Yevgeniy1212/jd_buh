#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда 
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеВнеоборотнымиАктивамиСервер.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);

	ПроверитьПострочноТаблицуОС(Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.КомплектацияОС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Если вдруг не удалось получить параметры проведения и не установлен флаг Отказ, то просто выйдем из проведения
	Если ПараметрыПроведения = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроведения.СобытияОСОрганизацийТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияРегистрацияСобытияОС(ПараметрыПроведения.СобытияОСОрганизацийТаблицаОС, 
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
	КонецЕсли;

	Если ПараметрыПроведения.СоставОСТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияСоставОС(ПараметрыПроведения.СоставОСТаблицаОС,
				ПараметрыПроведения.Реквизиты,
				Движения, Отказ);
	КонецЕсли;


КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	              	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПроверитьПострочноТаблицуОС(Отказ)
	
	ТаблицаОС = ОС.Выгрузить();
	ТаблицаОС.Свернуть("ОсновноеСредство");
	СписокОС = ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство");
	
	//сначала найдем тек. информацию по комплектации для всех ОС
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокОС"	  , СписокОС);
	Запрос.УстановитьПараметр("ДатаДок"		  , Дата);
	Запрос.УстановитьПараметр("РодительскоеОС", РодительскоеОсновноеСредство);
	Запрос.УстановитьПараметр("Регистратор"	  , Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставОССрезПоследних.ВСоставеОС,
	|	СоставОССрезПоследних.СостояниеВСоставеОС,
	|	СоставОССрезПоследних.ОсновноеСредство,
	|	СоставОССрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.СоставОС.СрезПоследних(
	|			&ДатаДок,
	|			ОсновноеСредство В (&СписокОС)
	|				И Регистратор <> &Регистратор) КАК СоставОССрезПоследних";		
	
	ТаблицаСоставОС = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаОС Из ОС Цикл
		
		ПутьКСтрокеТЧ = "ОС" + "[" + Формат(СтрокаОС.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]";
		
		СтрокаСоставОС = Неопределено;
		Если ТаблицаСоставОС.Количество() <> 0 Тогда
			СтрокаСоставОС = ТаблицаСоставОС.Найти(СтрокаОС.ОсновноеСредство, "ОсновноеСредство");
		КонецЕсли;
		
		Если СтрокаСоставОС <> Неопределено Тогда
			
			Если СтрокаОС.СостояниеВСоставеОС = Перечисления.ВидыСостоянийВСоставеОС.ВключеноВСостав Тогда
				// пытаются включить основное средство, которое уже содержится в комплекте другого ОС.
				Если (СтрокаСоставОС.СостояниеВСоставеОС = Перечисления.ВидыСостоянийВСоставеОС.ВключеноВСостав) Тогда	
					
					ТекстСообщения = НСтр("ru='<%1> код <%2> уже содержится  в составе ОС: <%3> .'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																	СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.ОсновноеСредство.Код),
																	СтрокаСоставОС.ВСоставеОС);
				
					Поле = ПутьКСтрокеТЧ + ".СостояниеВСоставеОС";
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
					
					Отказ = Истина;
					Возврат;
				КонецЕсли;	
				
			ИначеЕсли СтрокаОС.СостояниеВСоставеОС = Перечисления.ВидыСостоянийВСоставеОС.ИсключеноИзСостава Тогда	
				
				Если (СтрокаСоставОС.СостояниеВСоставеОС = Перечисления.ВидыСостоянийВСоставеОС.ИсключеноИзСостава) Тогда
					
					// пытаются исключить ОС, которое уже было исключено из состава данного родительского ОС	   
					Если (СтрокаСоставОС.ВСоставеОС = РодительскоеОсновноеСредство) Тогда
													
						ТекстСообщения = НСтр("ru='<%1> код <%2> уже было исключено из состава ОС: <%3> .'");
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																	СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.ОсновноеСредство.Код),
																	РодительскоеОсновноеСредство);
				
						Поле = ПутьКСтрокеТЧ + ".СостояниеВСоставеОС";
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
				
						Отказ = Истина;
						Возврат;
					// пытаются исключить основное средство, которое уже было исключено из состава какого-либо основного средства 	
					// но не включено в состав текущего родительского ОС.
					Иначе
						
						ТекстСообщения = НСтр("ru='<%1> код <%2> не содержится в составе ОС: <%3> . Чтобы исключить из комплекта, необходимо сначала включить его в состав комплекта.'");
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																	СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.ОсновноеСредство.Код),
																	РодительскоеОсновноеСредство);
				
						Поле = ПутьКСтрокеТЧ + ".СостояниеВСоставеОС";
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
						
						Отказ = Истина;
						Возврат;
					КонецЕсли;
				
				ИначеЕсли  (СтрокаСоставОС.СостояниеВСоставеОС = Перечисления.ВидыСостоянийВСоставеОС.ВключеноВСостав) Тогда
				
					Если (СтрокаСоставОС.ВСоставеОС <> РодительскоеОсновноеСредство) Тогда
						// пытаются исключить ОС, которое не содержится в комплекте данного ОС.	
						
						ТекстСообщения = НСтр("ru='<%1> код <%2> не содержится в составе ОС: <%3> . Чтобы исключить из комплекта, необходимо сначала включить его в состав комплекта.'");
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																	СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.ОсновноеСредство.Код),
																	РодительскоеОсновноеСредство);
				
						Поле = ПутьКСтрокеТЧ + ".СостояниеВСоставеОС";
						ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
						
						Отказ = Истина;
						Возврат;
					КонецЕсли;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		ИначеЕсли СтрокаОС.СостояниеВСоставеОС = Перечисления.ВидыСостоянийВСоставеОС.ИсключеноИзСостава Тогда
			
				
			ТекстСообщения = НСтр("ru='<%1> код <%2> не содержится в составе ОС: <%3> . Чтобы исключить из комплекта, необходимо сначала включить его в состав комплекта.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																	СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.ОсновноеСредство.Код),
																	РодительскоеОсновноеСредство);
				
			Поле = ПутьКСтрокеТЧ + ".СостояниеВСоставеОС";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
			Отказ = Истина;
			Возврат;
						
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры


#КонецЕсли