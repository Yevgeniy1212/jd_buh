#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьТаблицуОС(Объект) Экспорт 
		
	//заполняем табличную часть документа "текущим" состоянием комплекта Родительского ОС
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РодительскоеОС", Объект.РодительскоеОсновноеСредство);
	Запрос.УстановитьПараметр("ДатаДок",        Объект.Дата);
	
	Запрос.Текст ="ВЫБРАТЬ
	              |	СоставОССрезПоследних.ОсновноеСредство,
	              |	СоставОССрезПоследних.СостояниеВСоставеОС
	              |ИЗ
	              |	РегистрСведений.СоставОС.СрезПоследних(&ДатаДок, ВСоставеОС = &РодительскоеОС) КАК СоставОССрезПоследних";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Пока Выборка.Следующий() Цикл
			
			СтрокаТабличнойЧасти = Объект.ОС.Добавить();
			СтрокаТабличнойЧасти.ОсновноеСредство    = Выборка.ОсновноеСредство;
			СтрокаТабличнойЧасти.СостояниеВСоставеОС = Выборка.СостояниеВСоставеОС;
			
		КонецЦикла;
	Иначе
		ТекстСообщения = НСтр("ru = 'Данные по комплектации указанного родительского ОС отсутствуют'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , "Объект");
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Приходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьКомплектацияОС";
	КомандаПечати.Представление = НСтр("ru = 'Комплектация ОС'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;

	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьКомплектацияОС";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Комплектация ОС
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьКомплектацияОС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьКомплектацияОС",
			НСтр("ru = 'Комплектация ОС'"),
			ПечатьКомплектацияОС(МассивОбъектов, ОбъектыПечати, ПараметрыВывода.КодЯзыка),
			,
			"Документ.КомплектацияОС.ПФ_MXL_КомплектацияОС");
		
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("ПечатьКомплектацияОС"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьКомплектацияОС(МассивОбъектов, ОбъектыПечати, КодЯзыка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.Текст ="ВЫБРАТЬ
	              |	КомплектацияОС.Номер,
	              |	КомплектацияОС.Дата,
	              |	ВЫРАЗИТЬ(КомплектацияОС.РодительскоеОсновноеСредство.НаименованиеПолное КАК СТРОКА(1000)) КАК Комплект,
	              |	КомплектацияОС.Ответственный,
	              |	КомплектацияОС.Ссылка
	              |ИЗ
	              |	Документ.КомплектацияОС КАК КомплектацияОС
	              |ГДЕ
	              |	КомплектацияОС.Ссылка В(&Ссылка)
	              |АВТОУПОРЯДОЧИВАНИЕ";
				  
	ШапкаДокумента = Запрос.Выполнить().Выбрать();

	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.Текст ="ВЫБРАТЬ
	              |	КомплектацияОС.ОсновноеСредство КАК ОС,
	              |	КомплектацияОС.СостояниеВСоставеОС КАК СостояниеВСоставеОС,
	              |	КомплектацияОС.НомерСтроки КАК НомерСтроки,
	              |	КомплектацияОС.Ссылка КАК Ссылка
	              |ИЗ
	              |	Документ.КомплектацияОС.ОС КАК КомплектацияОС
	              |ГДЕ
	              |	КомплектацияОС.Ссылка В(&Ссылка)
	              |
	              |УПОРЯДОЧИТЬ ПО
	              |	НомерСтроки,
	              |	КомплектацияОС.ОсновноеСредство
	              |ИТОГИ ПО
	              |	Ссылка
	              |АВТОУПОРЯДОЧИВАНИЕ";

	
	ВыборкаСтрок = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);

	ТабДокумент = Новый ТабличныйДокумент;
	
	// Загрузим настройки пользователя
	ТабДокумент.КлючПараметровПечати = "КомплектацияОС";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КомплектацияОС.ПФ_MXL_КомплектацияОС", КодЯзыка);
	
	Пока ШапкаДокумента.Следующий() Цикл

		ОбластьМакетаЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакетаКомплект     = Макет.ПолучитьОбласть("Комплект");
		ОбластьМакетаШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьМакетаСтрока		  = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаПодписи	  = Макет.ПолучитьОбласть("Подписи");
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		ВыборкаСтрок.Сбросить();
		
		Если ВыборкаСтрок.НайтиСледующий(ШапкаДокумента.Ссылка) Тогда
			ВыборкаСтрокОС = ВыборкаСтрок.Выбрать();
		Иначе
			ВыборкаСтрокОС = Неопределено;
		КонецЕсли;

		// Выводим шапку накладной
		ТекстКомплектацияОсновныхСредств 				= НСтр("ru = 'Комплектация основных средств'", КодЯзыка);
		ОбластьМакетаЗаголовок.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ШапкаДокумента.Ссылка, ТекстКомплектацияОсновныхСредств);
		ТабДокумент.Вывести(ОбластьМакетаЗаголовок);

		ОбластьМакетаКомплект.Параметры.Заполнить(ШапкаДокумента);
		ТабДокумент.Вывести(ОбластьМакетаКомплект);

		// Вывести табличную часть
		ТабДокумент.Вывести(ОбластьМакетаШапкаТаблицы);

		Если ВыборкаСтрокОС <> Неопределено Тогда
		
			Пока ВыборкаСтрокОС.Следующий() Цикл
				
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрокОС.ОС) Тогда
					ТекстСообщения = НСтр("ru = 'В одной из строк не заполнено значение основного средства - строка при печати пропущена.'", КодЯзыка);
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
					Продолжить;
				КонецЕсли;
				
				ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокОС);
				ТабДокумент.Вывести(ОбластьМакетаСтрока);
				
			КонецЦикла;
			
		КонецЕсли;
				
		// Вывести подписи
		ОбластьМакетаПодписи.Параметры.ОтветственныйПредставление = "/"+ ШапкаДокумента.Ответственный + "/";
		ТабДокумент.Вывести(ОбластьМакетаПодписи);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ШапкаДокумента.Ссылка);

	КонецЦикла;
	
	Возврат ТабДокумент;	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Запрос.УстановитьПараметр("СинонимОС", НСтр("ru = 'ОС'"));
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
					+ ТекстЗапросаКомплектацияОС(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты"				 , НомераТаблиц.Количество());
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.РодительскоеОсновноеСредство КАК РодительскоеОсновноеСредство,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.СобытиеОС КАК СобытиеОС
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.КомплектацияОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.РодительскоеОсновноеСредство КАК ВСоставеОС,
	|	Реквизиты.Номер,
	|	Реквизиты.СобытиеОС
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаОС", НомераТаблиц.Количество());
 	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СостояниеВСоставеОС
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.КомплектацияОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаКомплектацияОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("СобытияОСОрганизацийТаблицаОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СоставОСТаблицаОС"			 , НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.СобытиеОС,
	|	ТаблицаОС.ОсновноеСредство,
	|	0 КАК СуммаЗатратБУ
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Регистратор КАК Регистратор,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СостояниеВСоставеОС,
	|	Реквизиты.РодительскоеОсновноеСредство КАК ВСоставеОС
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
КонецФункции

#КонецЕсли
