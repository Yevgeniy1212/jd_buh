#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.ПериодРегистрации);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Реквизиты.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаРаботыСоСтруктурнымиПодразделениями, "ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Запрос.УстановитьПараметр("Организация", 			   Реквизиты.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение",  Реквизиты.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",  Реквизиты.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("ПериодВзаиморасчетов", 	   НачалоМесяца(Реквизиты.ПериодРегистрации));
	Запрос.УстановитьПараметр("ПоддержкаРаботыСоСтруктурнымиПодразделениями", 	   ПоддержкаРаботыСоСтруктурнымиПодразделениями);

	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																							Реквизиты.Организация,
																							ПредопределенноеЗначение("Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты"));
	Иначе
		Налогоплательщик = Реквизиты.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("Налогоплательщик",  Налогоплательщик);
	
	ПодготовитьТаблицыДокумента(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВыплаченныеДоходыРаботникамОрганизацийНУ(НомераТаблиц, Реквизиты, ПараметрыПроведения)
					+ ТекстЗапросаСведенияОДоходах(НомераТаблиц, Реквизиты)
					+ ТекстЗапросаВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами(НомераТаблиц, Реквизиты, ПараметрыПроведения);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
			
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВременнаяТаблица_ДанныеДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблица_Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.Дата,
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.Организация,
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.ПодразделениеОрганизации,
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.СтруктурноеПодразделение,
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.ПериодРегистрации,
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.Ссылка,
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.ВидОперации
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения КАК РегистрацияПрочихДоходовВЦеляхНалогообложения
		|ГДЕ
		|	РегистрацияПрочихДоходовВЦеляхНалогообложения.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияПрочихДоходов.Дата,
		|	РегистрацияПрочихДоходов.Организация,
		|	РегистрацияПрочихДоходов.ПодразделениеОрганизации,
		|	РегистрацияПрочихДоходов.СтруктурноеПодразделение,
		|	РегистрацияПрочихДоходов.ПериодРегистрации,
		|	РегистрацияПрочихДоходов.Ссылка,
		|	РегистрацияПрочихДоходов.ВидОперации,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА РегистрацияПрочихДоходов.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА РегистрацияПрочихДоходов.Организация
		|					ИНАЧЕ РегистрацияПрочихДоходов.Организация.ГоловнаяОрганизация
		|				КОНЕЦ
		|		ИНАЧЕ РегистрацияПрочихДоходов.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ОрганизацияЯвляетсяВкладчикомОППВ, ЛОЖЬ) КАК ОрганизацияЯвляетсяВкладчикомОППВ,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ПорядокОбложенияДоходовРаботников, ЗНАЧЕНИЕ(Перечисление.ПорядокОбложенияДоходовРаботников.Общеустановленный)) КАК ПорядокОбложенияДоходовРаботников,
		|	ЛОЖЬ КАК ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|ПОМЕСТИТЬ ВТ_Реквизиты
		|ИЗ
		|	ВТ_ДанныеДокумента КАК РегистрацияПрочихДоходов
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|		ПО РегистрацияПрочихДоходов.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&Период, ) КАК УчетнаяПолитикаНУ
		|		ПО РегистрацияПрочихДоходов.Организация = УчетнаяПолитикаНУ.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Организация,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ВидОперации,
		|	Реквизиты.ГоловнаяОрганизация,
		|	Реквизиты.ОтражениеПоПериодуРегистрации,
		|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций,
		|	Реквизиты.ОрганизацияЯвляетсяВкладчикомОППВ,
		|	Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокумента(Запрос, Реквизиты)
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОДоходах.НомерСтроки,
		|	СведенияОДоходах.ФизЛицо,
		|	ВЫБОР
		|		КОГДА СведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяКонтрагентом,
		|	ВЫБОР
		|		КОГДА СведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
		|			ТОГДА СведенияОДоходах.ФизЛицо.ФизЛицо
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	КОНЕЦ КАК ФизЛицоКонтрагента,
		|	СведенияОДоходах.МесяцНалоговогоПериода,
		|	СведенияОДоходах.ДатаДохода,
		|	СведенияОДоходах.ВидРасчета,
		|	СведенияОДоходах.УчитыватьИПН,
		|	СведенияОДоходах.СпособНалогообложенияИПН,
		|	СведенияОДоходах.УчитыватьОПВ,
		|	СведенияОДоходах.СпособНалогообложенияОПВ,
		|	СведенияОДоходах.УчитыватьСН,
		|	СведенияОДоходах.СпособНалогообложенияСН,
		|	СведенияОДоходах.УчитыватьСО,
		|	СведенияОДоходах.СпособНалогообложенияСО,
		|	СведенияОДоходах.УчитыватьОППВ,
		|	СведенияОДоходах.СпособНалогообложенияОППВ,
		|	СведенияОДоходах.УчитыватьВОСМС,
		|	СведенияОДоходах.СпособНалогообложенияВОСМС,
		|	СведенияОДоходах.УчитыватьООСМС,
		|	СведенияОДоходах.СпособНалогообложенияООСМС,
		|	СведенияОДоходах.УчитыватьОПВР,
		|	СведенияОДоходах.СпособНалогообложенияОПВР,
		|	СведенияОДоходах.СуммаДохода,
		|	СведенияОДоходах.УчитыватьЕП,
		|	СведенияОДоходах.СпособНалогообложенияЕП,
		|	СведенияОДоходах.СуммаВычета,
		|	ВЫБОР
		|		КОГДА СведенияОДоходах.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|			ТОГДА СведенияОДоходах.СпособОтраженияВБухучете
		|		ИНАЧЕ СведенияОДоходах.Ссылка.СпособОтраженияВБухучете
		|	КОНЕЦ КАК СпособОтраженияВБухучете
		|ПОМЕСТИТЬ ВТ_СведенияОДоходах
		|ИЗ
		|	Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения.СведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	СведенияОДоходах.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации 
		|			ТОГДА &Период 
		|		ИНАЧЕ СведенияОДоходах.МесяцНалоговогоПериода
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ВТ_ПериодыСотрудников
		|ИЗ 
		|	ВТ_СведенияОДоходах КАК СведенияОДоходах
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|";
			
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
				 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина, Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями И Не Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам);
	Результат = Запрос.Выполнить();
		
	                                                 
КонецПроцедуры

Функция ТекстЗапросаВыплаченныеДоходыРаботникамОрганизацийНУ(НомераТаблиц, Реквизиты, ПараметрыПроведения) 
	
	Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийРегистрацияПрочихДоходов.ДоходыВНатуральнойФорме Тогда
		
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	&Организация КАК Организация,
			|   &ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	&Налогоплательщик КАК Налогоплательщик,
			|	&ПериодВзаиморасчетов КАК Период,
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА &ПериодВзаиморасчетов
			|		ИНАЧЕ СтрокаСведенияОДоходах.МесяцНалоговогоПериода
			|	КОНЕЦ КАК МесяцНалоговогоПериода,
			|	СтрокаСведенияОДоходах.ФизЛицо КАК ФизЛицо,
			|	СтрокаСведенияОДоходах.ВидРасчета,
			|	СтрокаСведенияОДоходах.СуммаДохода,
			|	СтрокаСведенияОДоходах.НомерСтроки,
			|
			|	// СтруктурнаяЕдиница
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И &ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА 
			|				ВЫБОР
			|					КОГДА ЕСТЬNULL(ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ)
			|						ТОГДА &ПодразделениеОрганизации
			|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА &СтруктурноеПодразделение
			|					ИНАЧЕ &ОбособленноеПодразделение
			|				КОНЕЦ 
			|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА ЕСТЬNULL(ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ)
			|						ТОГДА &ПодразделениеОрганизации
			|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА &СтруктурноеПодразделение
			|					ИНАЧЕ &ОбособленноеПодразделение
			|				КОНЕЦ 
			|		ИНАЧЕ &ОбособленноеПодразделение 
			|	КОНЕЦ КАК СтруктурнаяЕдиница
			|
			|ИЗ
			|	ВТ_СведенияОДоходах КАК СтрокаСведенияОДоходах
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаСведенияОДоходах.ФизЛицо = МестоРаботы.ФизЛицо
			|			И (ВЫБОР
			|				КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|					ТОГДА &Период
			|				ИНАЧЕ СтрокаСведенияОДоходах.МесяцНалоговогоПериода
			|			КОНЕЦ) = МестоРаботы.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|		ПО ПодразделенияОрганизаций.Ссылка = &ПодразделениеОрганизации
			|ГДЕ 
			|	СтрокаСведенияОДоходах.УчитыватьИПН
			|	ИЛИ СтрокаСведенияОДоходах.УчитыватьЕП
			|
			|УПОРЯДОЧИТЬ ПО 
			|	СтрокаСведенияОДоходах.НомерСтроки
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ВыплаченныеДоходыРаботникамОрганизацийНУ", НомераТаблиц.Количество());

	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ВыплаченныеДоходыРаботникамОрганизацийНУ", Неопределено);
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСведенияОДоходах(НомераТаблиц, Реквизиты) 
	
	НомераТаблиц.Вставить("СведенияОДоходах", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Организация КАК Организация,
		|   &ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Период КАК ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|			ТОГДА &ПериодВзаиморасчетов
		|		ИНАЧЕ СтрокаСведенияОДоходах.МесяцНалоговогоПериода
		|	КОНЕЦ КАК Период,
		|	СтрокаСведенияОДоходах.ФизЛицо  КАК ФизЛицо,
		|	СтрокаСведенияОДоходах.МесяцНалоговогоПериода,
		|	СтрокаСведенияОДоходах.ВидРасчета,
		|	СтрокаСведенияОДоходах.СуммаДохода,
		|	СтрокаСведенияОДоходах.СуммаВычета,
		|	СтрокаСведенияОДоходах.НомерСтроки,
		|	СтрокаСведенияОДоходах.УчитыватьИПН,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияИПН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяИПН,
		|	СтрокаСведенияОДоходах.УчитыватьОПВ,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияОПВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВ,
		|	СтрокаСведенияОДоходах.УчитыватьСН,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияСН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСН,
		|	СтрокаСведенияОДоходах.УчитыватьСО,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияСО, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСО,
		|	СтрокаСведенияОДоходах.УчитыватьОППВ,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияОППВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОППВ,
		|	СтрокаСведенияОДоходах.УчитыватьВОСМС,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияВОСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяВОСМС,
		|	СтрокаСведенияОДоходах.УчитыватьООСМС,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияООСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяООСМС,
		|	СтрокаСведенияОДоходах.УчитыватьОПВР,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияОПВР, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВР,
		|	СтрокаСведенияОДоходах.УчитыватьЕП,
		|	ЕСТЬNULL(СтрокаСведенияОДоходах.СпособНалогообложенияЕП, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяЕП,
		|
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА ЕСТЬNULL(ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ)
		|						ТОГДА &ПодразделениеОрганизации
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ 
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА ЕСТЬNULL(ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ)
		|						ТОГДА &ПодразделениеОрганизации
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ 
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|	
		|ИЗ
		|	ВТ_СведенияОДоходах КАК СтрокаСведенияОДоходах
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаСведенияОДоходах.ФизЛицо = МестоРаботы.ФизЛицо
		|			И (ВЫБОР 
		|				КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|					ТОГДА &Период
		|				ИНАЧЕ СтрокаСведенияОДоходах.МесяцНалоговогоПериода
		|			КОНЕЦ)  = МестоРаботы.Период
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|		ПО ПодразделенияОрганизаций.Ссылка = &ПодразделениеОрганизации
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаСведенияОДоходах.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами(НомераТаблиц, Реквизиты, ПараметрыПроведения) 
	
	Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийРегистрацияПрочихДоходов.ДоходыКонтрагентов Тогда
		
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	&Организация КАК Организация,
			|   &ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	&Налогоплательщик КАК Налогоплательщик,
			|	&ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
			|	СтрокаСведенияОДоходах.ФизЛицо КАК Контрагент,
			|	СтрокаСведенияОДоходах.ДатаДохода КАК Период,
			|	СтрокаСведенияОДоходах.СуммаДохода КАК СуммаВзаиморасчетов,
			|	СтрокаСведенияОДоходах.НомерСтроки,
			|
			|	// СтруктурнаяЕдиница
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И &ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА ЕСТЬNULL(ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ)
			|						ТОГДА &ПодразделениеОрганизации
			|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА &СтруктурноеПодразделение
			|					ИНАЧЕ &ОбособленноеПодразделение
			|				КОНЕЦ 
			|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА ЕСТЬNULL(ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ)
			|						ТОГДА &ПодразделениеОрганизации
			|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА &СтруктурноеПодразделение
			|					ИНАЧЕ &ОбособленноеПодразделение
			|				КОНЕЦ 
			|		ИНАЧЕ &ОбособленноеПодразделение
			|	КОНЕЦ КАК СтруктурнаяЕдиница
			|		
			|ИЗ
			|	ВТ_СведенияОДоходах КАК СтрокаСведенияОДоходах
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаСведенияОДоходах.ФизЛицо = МестоРаботы.ФизЛицо
			|			И (ВЫБОР
			|				КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|					ТОГДА &Период
			|				ИНАЧЕ СтрокаСведенияОДоходах.МесяцНалоговогоПериода
			|			КОНЕЦ) = МестоРаботы.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|		ПО ПодразделенияОрганизаций.Ссылка = &ПодразделениеОрганизации
			|
			|УПОРЯДОЧИТЬ ПО 
			|	СтрокаСведенияОДоходах.НомерСтроки
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами", НомераТаблиц.Количество());
		
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Заполнение на основании

Процедура ЗаполнитьПоАвансовыйОтчет(Объект, Основание) Экспорт

	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Запрос = Новый Запрос;
	
	СписокВидовЗадолженности = Новый СписокЗначений;
	СписокВидовЗадолженности.Добавить(Перечисления.ВидыЗадолженностиПодотчетныхЛиц.Суточные);
	СписокВидовЗадолженности.Добавить(Перечисления.ВидыЗадолженностиПодотчетныхЛиц.СуточныеСверхНормы);
	СписокВидовЗадолженности.Добавить(Перечисления.ВидыЗадолженностиПодотчетныхЛиц.РасходыНаПроезд);
	СписокВидовЗадолженности.Добавить(Перечисления.ВидыЗадолженностиПодотчетныхЛиц.РасходыПоНаймуЖилья);
	
	Запрос.УстановитьПараметр("СписокВидовЗадолженности", СписокВидовЗадолженности);
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.УстановитьПараметр("СуточныеСверхНормы", Перечисления.ВидыЗадолженностиПодотчетныхЛиц.СуточныеСверхНормы);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АвансовыйОтчетПрочее.Ссылка.ФизЛицо КАК ФизЛицо,
	|	АвансовыйОтчетПрочее.Ссылка.Организация КАК Организация,
	|	АвансовыйОтчетПрочее.Ссылка.Дата КАК Дата,
	|	АвансовыйОтчетПрочее.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	АвансовыйОтчетПрочее.Ссылка.КурсДокумента КАК КурсДокумента,
	|	АвансовыйОтчетПрочее.Ссылка.КратностьДокумента КАК КратностьДокумента,
	|	ЕСТЬNULL(СУММА(АвансовыйОтчетПрочее.Сумма), 0) КАК СуммаДохода,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|					КОГДА АвансовыйОтчетПрочее.ВидЗадолженностиПодотчетногоЛица <> &СуточныеСверхНормы
	|						ТОГДА АвансовыйОтчетПрочее.Сумма
	|					ИНАЧЕ ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2))
	|		  		   КОНЕЦ), 0) КАК СуммаВычета
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|ГДЕ
	|	АвансовыйОтчетПрочее.Ссылка = &Основание
	|	И АвансовыйОтчетПрочее.ВидЗадолженностиПодотчетногоЛица В (&СписокВидовЗадолженности)
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетПрочее.Ссылка.ФизЛицо,
	|	АвансовыйОтчетПрочее.Ссылка.Организация,
	|	АвансовыйОтчетПрочее.Ссылка.Дата,
	|	АвансовыйОтчетПрочее.Ссылка.ВалютаДокумента,
	|	АвансовыйОтчетПрочее.Ссылка.КурсДокумента,
	|	АвансовыйОтчетПрочее.Ссылка.КратностьДокумента
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();		
	
	Если Выборка.Следующий() Тогда
		
		Если ОбщегоНазначенияБК.ЕстьПредопределенныйЭлемент("КомпенсационныеВыплатыПриСлужебныхКомандировках", Метаданные.ПланыВидовРасчета.ОсновныеНачисленияОрганизаций) Тогда
			ВРКомпенсационныеВыплаты = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсационныеВыплатыПриСлужебныхКомандировках;
		Иначе
			ВРКомпенсационныеВыплаты = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка();
		КонецЕсли;
		
		Объект.ПериодРегистрации 	= НачалоМесяца(Выборка.Дата);
		Объект.ВидОперации = Перечисления.ВидыОперацийРегистрацияПрочихДоходов.ДоходыВНатуральнойФорме;
		
		// реквизиты табличной части СведенияОДоходах
		СтрокаТЧ 							= Объект.СведенияОДоходах.Добавить();
		
		СтрокаТЧ.ФизЛицо					= Выборка.ФизЛицо;
		СтрокаТЧ.ДатаДохода					= Выборка.Дата;
		СтрокаТЧ.МесяцНалоговогоПериода 	= НачалоМесяца(Выборка.Дата);		    
		СтрокаТЧ.ВидРасчета					= ВРКомпенсационныеВыплаты;
		СтрокаТЧ.УчитыватьИПН               = Истина;
		СтрокаТЧ.УчитыватьОПВ               = Истина;
		СтрокаТЧ.УчитыватьСН                = Истина;
		СтрокаТЧ.УчитыватьСО                = Истина;
		СтрокаТЧ.СпособНалогообложенияИПН	= ВРКомпенсационныеВыплаты.ОблагаетсяИПН;			
		СтрокаТЧ.СпособНалогообложенияОПВ	= ВРКомпенсационныеВыплаты.ОблагаетсяОПВ;			
		СтрокаТЧ.СпособНалогообложенияСН	= ВРКомпенсационныеВыплаты.ОблагаетсяСН; 			
		СтрокаТЧ.СпособНалогообложенияСО	= ВРКомпенсационныеВыплаты.ОблагаетсяСО;
		
		// Взносы ОСМС с доходов физлиц вводятся с 1 января 2020 года
		Если Объект.ПериодРегистрации >= Дата(2020,1,1) Тогда
			СтрокаТЧ.УчитыватьВОСМС                = Истина;
			СтрокаТЧ.СпособНалогообложенияВОСМС	= ВРКомпенсационныеВыплаты.ОблагаетсяВОСМС;
		КонецЕсли;
		
		// Отчисления ОСМС с доходов физлиц вводятся с 1 июля 2017 года
		Если Объект.ПериодРегистрации >= Дата(2017,7,1) Тогда
			СтрокаТЧ.УчитыватьООСМС                = Истина;
			СтрокаТЧ.СпособНалогообложенияООСМС	= ВРКомпенсационныеВыплаты.ОблагаетсяООСМС;
		КонецЕсли;
		
		СтрокаТЧ.СуммаДохода				= ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(Выборка.СуммаДохода, 
																						Выборка.ВалютаДокумента, 
																						ВалютаРеглУчета,
																						Выборка.КурсДокумента,
																						1,
																						Выборка.КратностьДокумента,
																						1);
		СтрокаТЧ.СуммаВычета				= ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(Выборка.СуммаВычета, 
																						Выборка.ВалютаДокумента, 
																						ВалютаРеглУчета,
																						Выборка.КурсДокумента,
																						1,
																						Выборка.КратностьДокумента,
																						1);
		
	КонецЕсли;
	
	Объект.ДокументОснование = Основание;
	
КонецПроцедуры

Процедура ЗаполнитьПоПоступлениеТоваровУслуг(Объект, Основание) Экспорт
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.УстановитьПараметр("ЮрФизЛицо_ФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(ТЧТовары.Сумма) КАК Сумма,
	|	СУММА(ТЧТовары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ТЧТовары
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТЧТовары
	|ГДЕ
	|	ТЧТовары.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТЧУслуги.Сумма) КАК Сумма,
	|	СУММА(ТЧУслуги.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ТЧУслуги
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТЧУслуги
	|ГДЕ
	|	ТЧУслуги.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТЧОС.Сумма) КАК Сумма,
	|	СУММА(ТЧОС.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ТЧОС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОС КАК ТЧОС
	|ГДЕ
	|	ТЧОС.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Организация,
	|	ПоступлениеТоваровУслуг.Дата,
	|	ПоступлениеТоваровУслуг.Контрагент.Наименование КАК НаименованиеКонтрагента,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.Контрагент.ЮрФизЛицо = &ЮрФизЛицо_ФизЛицо
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтрагентЯвляетсяФизЛицом,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента,
	|	ПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ПоступлениеТоваровУслуг.УчитыватьНДС,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ПоступлениеТоваровУслуг
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоступлениеТоваровУслуг.Организация,
	|	ВТ_ПоступлениеТоваровУслуг.Дата,
	|	ВТ_ПоступлениеТоваровУслуг.НаименованиеКонтрагента КАК НаименованиеКонтрагента,
	|	ВТ_ПоступлениеТоваровУслуг.КонтрагентЯвляетсяФизЛицом КАК КонтрагентЯвляетсяФизЛицом,
	|	ВТ_ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ВТ_ПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ВТ_ПоступлениеТоваровУслуг.ДоговорКонтрагента,
	|	ВТ_ПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ВТ_ПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ПоступлениеТоваровУслуг.УчитыватьНДС
	|			ТОГДА ЕСТЬNULL(ТЧТовары.Сумма, 0)
	|		КОГДА ВТ_ПоступлениеТоваровУслуг.СуммаВключаетНДС
	|			ТОГДА ЕСТЬNULL(ТЧТовары.Сумма - ТЧТовары.СуммаНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТЧТовары.Сумма, 0)
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТ_ПоступлениеТоваровУслуг.УчитыватьНДС
	|			ТОГДА ЕСТЬNULL(ТЧУслуги.Сумма, 0)
	|		КОГДА ВТ_ПоступлениеТоваровУслуг.СуммаВключаетНДС
	|			ТОГДА ЕСТЬNULL(ТЧУслуги.Сумма - ТЧУслуги.СуммаНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТЧУслуги.Сумма, 0)
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТ_ПоступлениеТоваровУслуг.УчитыватьНДС
	|			ТОГДА ЕСТЬNULL(ТЧОС.Сумма, 0)
	|		КОГДА ВТ_ПоступлениеТоваровУслуг.СуммаВключаетНДС
	|			ТОГДА ЕСТЬNULL(ТЧОС.Сумма - ТЧОС.СуммаНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТЧОС.Сумма, 0)
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВТ_ПоступлениеТоваровУслуг КАК ВТ_ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧТовары КАК ТЧТовары
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧУслуги КАК ТЧУслуги
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧОС КАК ТЧОС
	|		ПО (ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если НЕ Выборка.КонтрагентЯвляетсяФизЛицом Тогда
			ТекстСообщения = НСтр("ru = ' не является физическим лицом, регистрация доходов в целях налогообложения для него не предусмотрена!'");
			ОбщегоНазначения.СообщитьПользователю("""" + СокрЛП(Выборка.НаименованиеКонтрагента) + """" + ТекстСообщения, Объект.Ссылка, , "Объект");
		Иначе
			
			Объект.ПериодРегистрации = НачалоМесяца(Выборка.Дата);
			Объект.ВидОперации 	  = Перечисления.ВидыОперацийРегистрацияПрочихДоходов.ДоходыКонтрагентов;
			
			// реквизиты табличной части СведенияОДоходах
			СтрокаТЧ						= Объект.СведенияОДоходах.Добавить();
			СтрокаТЧ.ФизЛицо				= Выборка.Контрагент;
			СтрокаТЧ.ДоговорКонтрагента		= Выборка.ДоговорКонтрагента;
			СтрокаТЧ.ДатаДохода				= Выборка.Дата;
			СтрокаТЧ.МесяцНалоговогоПериода	= НачалоМесяца(Выборка.Дата);				
			
			Если ОбщегоНазначенияБК.ЕстьПредопределенныйЭлемент("ПрочиеДоходыОблагаемыеУИсточника", Метаданные.ПланыВидовРасчета.ОсновныеНачисленияОрганизаций) Тогда
				ВидРасчета	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПрочиеДоходыОблагаемыеУИсточника;
			Иначе
				ВидРасчета 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
			СтрокаТЧ.ВидРасчета					= ВидРасчета;
			СтрокаТЧ.УчитыватьИПН               = Истина;
			СтрокаТЧ.УчитыватьОПВ               = Ложь;
			СтрокаТЧ.УчитыватьСН                = Ложь;
			СтрокаТЧ.УчитыватьСО                = Ложь;
			СтрокаТЧ.СпособНалогообложенияИПН	= ВидРасчета.ОблагаетсяИПН;			
			СтрокаТЧ.СпособНалогообложенияОПВ	= Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();			
			СтрокаТЧ.СпособНалогообложенияСН	= Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка(); 			
			СтрокаТЧ.СпособНалогообложенияСО	= Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();
			
			Если Объект.ПериодРегистрации >= Дата(2017,7,1) Тогда
				СтрокаТЧ.УчитыватьООСМС             = Ложь;
				СтрокаТЧ.СпособНалогообложенияООСМС	= Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();
				СтрокаТЧ.УчитыватьВОСМС             = Истина;
				СтрокаТЧ.СпособНалогообложенияВОСМС	= ВидРасчета.ОблагаетсяВОСМС;			
			КонецЕсли;
							
			СтрокаТЧ.СуммаДохода			    = ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(Выборка.Сумма, 
																							Выборка.ВалютаДокумента, 
																							ВалютаРеглУчета,
																							Выборка.КурсВзаиморасчетов,
																							1,
																							Выборка.КратностьВзаиморасчетов,
																							1);
		КонецЕсли;
	КонецЕсли;
	
	Объект.ДокументОснование = Основание;
	
КонецПроцедуры

Процедура ЗаполнитьПоПоступлениеНМА(Объект, Основание) Экспорт
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.УстановитьПараметр("ЮрФизЛицо_ФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(ТЧНМА.Сумма) КАК Сумма,
	|	СУММА(ТЧНМА.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ТЧНМА
	|ИЗ
	|	Документ.ПоступлениеНМА.НМА КАК ТЧНМА
	|ГДЕ
	|	ТЧНМА.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеНМА.Организация,
	|	ПоступлениеНМА.Дата,
	|	ПоступлениеНМА.Контрагент.Наименование КАК НаименованиеКонтрагента,
	|	ВЫБОР
	|		КОГДА ПоступлениеНМА.Контрагент.ЮрФизЛицо = &ЮрФизЛицо_ФизЛицо
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтрагентЯвляетсяФизЛицом,
	|	ПоступлениеНМА.Контрагент КАК Контрагент,
	|	ПоступлениеНМА.ВалютаДокумента,
	|	ПоступлениеНМА.ДоговорКонтрагента,
	|	ПоступлениеНМА.КратностьВзаиморасчетов,
	|	ПоступлениеНМА.КурсВзаиморасчетов,
	|	ПоступлениеНМА.СуммаВключаетНДС,
	|	ПоступлениеНМА.УчитыватьНДС
	|ПОМЕСТИТЬ ВТ_ПоступлениеНМА
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
	|ГДЕ
	|	ПоступлениеНМА.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоступлениеНМА.Организация,
	|	ВТ_ПоступлениеНМА.Дата,
	|	ВТ_ПоступлениеНМА.НаименованиеКонтрагента КАК НаименованиеКонтрагента,
	|	ВТ_ПоступлениеНМА.КонтрагентЯвляетсяФизЛицом КАК КонтрагентЯвляетсяФизЛицом,
	|	ВТ_ПоступлениеНМА.Контрагент КАК Контрагент,
	|	ВТ_ПоступлениеНМА.ВалютаДокумента,
	|	ВТ_ПоступлениеНМА.ДоговорКонтрагента,
	|	ВТ_ПоступлениеНМА.КратностьВзаиморасчетов,
	|	ВТ_ПоступлениеНМА.КурсВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ПоступлениеНМА.УчитыватьНДС
	|			ТОГДА ЕСТЬNULL(ТЧНМА.Сумма, 0)
	|		КОГДА ВТ_ПоступлениеНМА.СуммаВключаетНДС
	|			ТОГДА ЕСТЬNULL(ТЧНМА.Сумма - ТЧНМА.СуммаНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТЧНМА.Сумма, 0)
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВТ_ПоступлениеНМА КАК ВТ_ПоступлениеНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧНМА КАК ТЧНМА
	|		ПО (ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если НЕ Выборка.КонтрагентЯвляетсяФизЛицом Тогда
			ТекстСообщения = НСтр("ru = ' не является физическим лицом, регистрация доходов в целях налогообложения для него не предусмотрена!'");
			ОбщегоНазначения.СообщитьПользователю("""" + СокрЛП(Выборка.НаименованиеКонтрагента) + """" + ТекстСообщения, Объект.Ссылка, , "Объект");
		Иначе
			
			Объект.ПериодРегистрации = НачалоМесяца(Выборка.Дата);
			Объект.ВидОперации 	  = Перечисления.ВидыОперацийРегистрацияПрочихДоходов.ДоходыКонтрагентов;
			
			// реквизиты табличной части СведенияОДоходах
			СтрокаТЧ						= Объект.СведенияОДоходах.Добавить();
			СтрокаТЧ.ФизЛицо				= Выборка.Контрагент;
			СтрокаТЧ.ДоговорКонтрагента		= Выборка.ДоговорКонтрагента;
			СтрокаТЧ.ДатаДохода				= Выборка.Дата;
			СтрокаТЧ.МесяцНалоговогоПериода	= НачалоМесяца(Выборка.Дата);				
			
			Если ОбщегоНазначенияБК.ЕстьПредопределенныйЭлемент("ПрочиеДоходыОблагаемыеУИсточника", Метаданные.ПланыВидовРасчета.ОсновныеНачисленияОрганизаций) Тогда
				ВидРасчета	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПрочиеДоходыОблагаемыеУИсточника;
			Иначе
				ВидРасчета	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
			СтрокаТЧ.ВидРасчета				  = ВидРасчета;
			СтрокаТЧ.УчитыватьИПН             = Истина;
			СтрокаТЧ.УчитыватьОПВ             = Ложь;
			СтрокаТЧ.УчитыватьСН              = Ложь;
			СтрокаТЧ.УчитыватьСО              = Ложь;
			СтрокаТЧ.СпособНалогообложенияИПН = ВидРасчета.ОблагаетсяИПН;			
			СтрокаТЧ.СпособНалогообложенияОПВ = Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();			
			СтрокаТЧ.СпособНалогообложенияСН  = Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка(); 			
			СтрокаТЧ.СпособНалогообложенияСО  = Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();
			
			Если Объект.ПериодРегистрации >= Дата(2017,7,1) Тогда
				СтрокаТЧ.УчитыватьООСМС             = Ложь;
				СтрокаТЧ.СпособНалогообложенияООСМС	= Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();
				СтрокаТЧ.УчитыватьВОСМС             = Истина;
				СтрокаТЧ.СпособНалогообложенияВОСМС	= ВидРасчета.ОблагаетсяВОСМС;			
			КонецЕсли;
			
			СтрокаТЧ.СуммаДохода			  = ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(Выборка.Сумма, 
																							Выборка.ВалютаДокумента, 
																							ВалютаРеглУчета,
																							Выборка.КурсВзаиморасчетов,
																							1,
																							Выборка.КратностьВзаиморасчетов,
																							1);
		КонецЕсли;
	КонецЕсли;

	Объект.ДокументОснование = Основание;
	
КонецПроцедуры

Процедура ЗаполнитьПоПоступлениеДопРасходов(Объект, Основание) Экспорт
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);

	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Основание", Основание);
	Запрос.УстановитьПараметр("ЮрФизЛицо_ФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(ТЧТовары.Сумма) КАК Сумма,
	|	СУММА(ТЧТовары.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ТЧТовары
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ТЧТовары
	|ГДЕ
	|	ТЧТовары.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТЧОС.Сумма) КАК Сумма,
	|	СУММА(ТЧОС.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_ТЧОС
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.ОС КАК ТЧОС
	|ГДЕ
	|	ТЧОС.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходов.Организация,
	|	ПоступлениеДопРасходов.Дата,
	|	ПоступлениеДопРасходов.Контрагент.Наименование КАК НаименованиеКонтрагента,
	|	ВЫБОР
	|		КОГДА ПоступлениеДопРасходов.Контрагент.ЮрФизЛицо = &ЮрФизЛицо_ФизЛицо
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтрагентЯвляетсяФизЛицом,
	|	ПоступлениеДопРасходов.Контрагент КАК Контрагент,
	|	ПоступлениеДопРасходов.ВалютаДокумента,
	|	ПоступлениеДопРасходов.ДоговорКонтрагента,
	|	ПоступлениеДопРасходов.КратностьВзаиморасчетов,
	|	ПоступлениеДопРасходов.КурсВзаиморасчетов,
	|	ПоступлениеДопРасходов.СуммаВключаетНДС,
	|	ПоступлениеДопРасходов.УчитыватьНДС,
	|	ПоступлениеДопРасходов.Сумма,
	|	ПоступлениеДопРасходов.СуммаНДС
	|ПОМЕСТИТЬ ВТ_ПоступлениеДопРасходов
	|ИЗ
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоступлениеДопРасходов.Организация,
	|	ВТ_ПоступлениеДопРасходов.Дата,
	|	ВТ_ПоступлениеДопРасходов.НаименованиеКонтрагента КАК НаименованиеКонтрагента,
	|	ВТ_ПоступлениеДопРасходов.КонтрагентЯвляетсяФизЛицом КАК КонтрагентЯвляетсяФизЛицом,
	|	ВТ_ПоступлениеДопРасходов.Контрагент КАК Контрагент,
	|	ВТ_ПоступлениеДопРасходов.ВалютаДокумента,
	|	ВТ_ПоступлениеДопРасходов.ДоговорКонтрагента,
	|	ВТ_ПоступлениеДопРасходов.КратностьВзаиморасчетов,
	|	ВТ_ПоступлениеДопРасходов.КурсВзаиморасчетов,
	|	ВТ_ПоступлениеДопРасходов.Сумма - ВЫБОР
	|		КОГДА ВТ_ПоступлениеДопРасходов.УчитыватьНДС
	|				И ВТ_ПоступлениеДопРасходов.СуммаВключаетНДС
	|			ТОГДА ВТ_ПоступлениеДопРасходов.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТ_ПоступлениеДопРасходов.УчитыватьНДС
	|			ТОГДА ЕСТЬNULL(ТЧТовары.Сумма, 0)
	|		КОГДА ВТ_ПоступлениеДопРасходов.СуммаВключаетНДС
	|			ТОГДА ЕСТЬNULL(ТЧТовары.Сумма - ТЧТовары.СуммаНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТЧТовары.Сумма, 0)
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТ_ПоступлениеДопРасходов.УчитыватьНДС
	|			ТОГДА ЕСТЬNULL(ТЧОС.Сумма, 0)
	|		КОГДА ВТ_ПоступлениеДопРасходов.СуммаВключаетНДС
	|			ТОГДА ЕСТЬNULL(ТЧОС.Сумма - ТЧОС.СуммаНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТЧОС.Сумма, 0)
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВТ_ПоступлениеДопРасходов КАК ВТ_ПоступлениеДопРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧТовары КАК ТЧТовары
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЧОС КАК ТЧОС
	|		ПО (ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если НЕ Выборка.КонтрагентЯвляетсяФизЛицом Тогда
			ТекстСообщения = НСтр("ru = ' не является физическим лицом, регистрация доходов в целях налогообложения для него не предусмотрена!'");
			ОбщегоНазначения.СообщитьПользователю("""" + СокрЛП(Выборка.НаименованиеКонтрагента) + """" + ТекстСообщения, Объект.Ссылка, , "Объект");
		Иначе
			Объект.ПериодРегистрации = НачалоМесяца(Выборка.Дата);
			Объект.ВидОперации 	  = Перечисления.ВидыОперацийРегистрацияПрочихДоходов.ДоходыКонтрагентов;
			
			// реквизиты табличной части СведенияОДоходах
			СтрокаТЧ						= Объект.СведенияОДоходах.Добавить();
			СтрокаТЧ.ФизЛицо				= Выборка.Контрагент;
			СтрокаТЧ.ДоговорКонтрагента		= Выборка.ДоговорКонтрагента;
			СтрокаТЧ.ДатаДохода				= Выборка.Дата;
			СтрокаТЧ.МесяцНалоговогоПериода	= НачалоМесяца(Выборка.Дата);				
			
			Если ОбщегоНазначенияБК.ЕстьПредопределенныйЭлемент("ПрочиеДоходыОблагаемыеУИсточника", Метаданные.ПланыВидовРасчета.ОсновныеНачисленияОрганизаций) Тогда
				ВидРасчета	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПрочиеДоходыОблагаемыеУИсточника;
			Иначе
				ВидРасчета 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
			СтрокаТЧ.ВидРасчета				  = ВидРасчета;
			СтрокаТЧ.УчитыватьИПН             = Истина;
			СтрокаТЧ.УчитыватьОПВ             = Ложь;
			СтрокаТЧ.УчитыватьСН              = Ложь;
			СтрокаТЧ.УчитыватьСО              = Ложь;
			СтрокаТЧ.СпособНалогообложенияИПН = ВидРасчета.ОблагаетсяИПН;			
			СтрокаТЧ.СпособНалогообложенияОПВ = Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();			
			СтрокаТЧ.СпособНалогообложенияСН  = Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка(); 			
			СтрокаТЧ.СпособНалогообложенияСО  = Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();
			
			Если Объект.ПериодРегистрации >= Дата(2017,7,1) Тогда
				СтрокаТЧ.УчитыватьООСМС             = Ложь;
				СтрокаТЧ.СпособНалогообложенияООСМС	= Справочники.СпособыНалогообложенияДоходов.ПустаяСсылка();
				СтрокаТЧ.УчитыватьВОСМС             = Истина;
				СтрокаТЧ.СпособНалогообложенияВОСМС	= ВидРасчета.ОблагаетсяВОСМС;			
			КонецЕсли;
			
			СтрокаТЧ.СуммаДохода			  = ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(Выборка.Сумма, 
																							Выборка.ВалютаДокумента, 
																							ВалютаРеглУчета,
																							Выборка.КурсВзаиморасчетов,
																							1,
																							Выборка.КратностьВзаиморасчетов,
																							1);
		КонецЕсли;
	КонецЕсли;

	Объект.ДокументОснование = Основание;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// АвтоЗаполнение табличной части когда вид операции "Доходы индивидульного предпринимателя"
Процедура ЗаполнитьСведенияОдоходахСОиОПВиВОСМС(Объект) Экспорт
	
	Объект.СведенияОДоходах.Очистить();
	
	РазмерМЗПДляЦелейНалогообложения = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамПериод", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Объект.Организация);

	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.Организация КАК Организация,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.ПорядокРасчетаДоходаОПВ КАК ПорядокРасчетаДоходаОПВ,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.РазмерДоходаОПВ КАК РазмерДоходаОПВ,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.ПорядокРасчетаДоходаСО КАК ПорядокРасчетаДоходаСО,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.РазмерДоходаСО КАК РазмерДоходаСО,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.ПорядокРасчетаДоходаВОСМС КАК ПорядокРасчетаДоходаВОСМС,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.РазмерДоходаВОСМС КАК РазмерДоходаВОСМС,
	               |	РегламентированныеРасчетныеПоказателиСрезПоследних.РазмерМЗП КАК РазмерМЗП,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.СпособОтраженияОПВИП КАК СпособОтраженияОПВИП,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.СпособОтраженияОПВРИП КАК СпособОтраженияОПВРИП,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.СпособОтраженияСОИП КАК СпособОтраженияСОИП,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.СпособОтраженияВОСМСИП КАК СпособОтраженияВОСМСИП,
	               |	УчетнаяПолитикаНалоговыйУчетСрезПоследних.СуммаЗаявленногоДоходаИП КАК СуммаЗаявленногоДоходаИП
	               |ИЗ
	               |	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериод, Организация = &парамОрганизация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамПериод, ) КАК РегламентированныеРасчетныеПоказателиСрезПоследних
	               |		ПО (ИСТИНА)";	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДатаВводаЗаявленногоДоходаИП = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьДатуВводаЗаявленногоДоходаИП();
		
		// Добавляем строки в табличную часть СведенияОДоходах по СО и ОПВ                
		НоваяСтрока   						 = Объект.СведенияОДоходах.Добавить();
		НоваяСтрока.ФизЛицо 				 = Объект.Организация.ИндивидуальныйПредприниматель;
		НоваяСтрока.ДатаДохода 				 = Объект.ПериодРегистрации;
		НоваяСтрока.МесяцНалоговогоПериода   = НачалоМесяца(НоваяСтрока.ДатаДохода);
		НоваяСтрока.УчитыватьОПВ 			 = Истина;
		НоваяСтрока.СпособНалогообложенияОПВ = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
		
		Если Объект.ПериодРегистрации >= ДатаВводаЗаявленногоДоходаИП Тогда
			НоваяСтрока.СуммаДохода 		 = Выборка.СуммаЗаявленногоДоходаИП;
		Иначе
			Если Выборка.ПорядокРасчетаДоходаОПВ = Перечисления.ПорядокРасчетаДоходовЗаИП.КратноМЗП Тогда
				НоваяСтрока.СуммаДохода 	 = Выборка.РазмерДоходаОПВ * Выборка.РазмерМЗП;
			Иначе
				НоваяСтрока.СуммаДохода 	 = Выборка.РазмерДоходаОПВ;
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока.СпособОтраженияВБухучете = Выборка.СпособОтраженияОПВИП;
		
		НоваяСтрока 						 = Объект.СведенияОДоходах.Добавить();
		НоваяСтрока.ФизЛицо					 = Объект.Организация.ИндивидуальныйПредприниматель;
		НоваяСтрока.ДатаДохода 				 = Объект.ПериодРегистрации;
		НоваяСтрока.МесяцНалоговогоПериода 	 = НачалоМесяца(НоваяСтрока.ДатаДохода);
		НоваяСтрока.УчитыватьСО 			 = Истина;
		НоваяСтрока.СпособНалогообложенияСО  = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
		
		Если Объект.ПериодРегистрации >= ДатаВводаЗаявленногоДоходаИП Тогда
			НоваяСтрока.СуммаДохода 		 = Выборка.СуммаЗаявленногоДоходаИП;
		Иначе
			Если Выборка.ПорядокРасчетаДоходаСО  = Перечисления.ПорядокРасчетаДоходовЗаИП.КратноМЗП Тогда
				НоваяСтрока.СуммаДохода		 = Выборка.РазмерДоходаСО * Выборка.РазмерМЗП;
			Иначе
				НоваяСтрока.СуммаДохода 	 = Выборка.РазмерДоходаСО;
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока.СпособОтраженияВБухучете = Выборка.СпособОтраженияСОИП;
		
		НоваяСтрока 						 = Объект.СведенияОДоходах.Добавить();
		НоваяСтрока.ФизЛицо					 = Объект.Организация.ИндивидуальныйПредприниматель;
		НоваяСтрока.ДатаДохода 				 = Объект.ПериодРегистрации;
		НоваяСтрока.МесяцНалоговогоПериода 	 = НачалоМесяца(НоваяСтрока.ДатаДохода);
		НоваяСтрока.УчитыватьВОСМС 			 = Истина;
		НоваяСтрока.СпособНалогообложенияВОСМС  = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
		
		Если Объект.ПериодРегистрации >= ДатаВводаЗаявленногоДоходаИП Тогда
			НоваяСтрока.СуммаДохода 		 = Выборка.СуммаЗаявленногоДоходаИП;
		Иначе
			Если Выборка.ПорядокРасчетаДоходаВОСМС  = Перечисления.ПорядокРасчетаДоходовЗаИП.КратноМЗП Тогда
				НоваяСтрока.СуммаДохода		 = Выборка.РазмерДоходаВОСМС * Выборка.РазмерМЗП;
			Иначе
				НоваяСтрока.СуммаДохода 	 = Выборка.РазмерДоходаВОСМС;
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока.СпособОтраженияВБухучете = Выборка.СпособОтраженияВОСМСИП;
		
        Если Объект.ПериодРегистрации >= Дата("20240101") Тогда 
			
			НоваяСтрока 						 = Объект.СведенияОДоходах.Добавить();
			НоваяСтрока.ФизЛицо					 = Объект.Организация.ИндивидуальныйПредприниматель;
			НоваяСтрока.ДатаДохода 				 = Объект.ПериодРегистрации;
			НоваяСтрока.МесяцНалоговогоПериода 	 = НачалоМесяца(НоваяСтрока.ДатаДохода);
			НоваяСтрока.УчитыватьОПВР 			 = Истина;
			НоваяСтрока.СпособНалогообложенияОПВР = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
			
			НоваяСтрока.СуммаДохода 		 	 = Выборка.СуммаЗаявленногоДоходаИП;
			НоваяСтрока.СпособОтраженияВБухучете = Выборка.СпособОтраженияОПВРИП;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли