
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	ОбщегоНазначенияБКВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СПИСОК

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБККлиентСервер.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Функция ПечатьОпись(ПараметрыПечати) Экспорт
	
	СтрукутраПолей = Неопределено;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") Тогда
		Если ПараметрыПечати.Свойство("Форма") Тогда
			СтрукутраПолей = ПолучитьСоставКолонокДляПечати();
		КонецЕсли; 
	КонецЕсли;	
	
	ПараметрыПечати.ДополнительныеПараметры.Вставить("СтрукутраПолей", СтрукутраПолей);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, 
		ПараметрыПечати.ОбъектыПечати, ПараметрыПечати.Форма, ПараметрыПечати.ДополнительныеПараметры);
		
КонецФункции

&НаКлиенте
Функция ПолучитьСоставКолонокДляПечати()
	
	СтруктРекв = Новый Структура;
	
	ФормаДокумента = ПолучитьФорму("Документ.ВводНачальныхОстатковОСЗабаланс.Форма.ФормаДокумента");
	ЭлементыФормыДокумента = ФормаДокумента.Элементы;
		
	Для Каждого ТекСтрока Из ЭлементыФормыДокумента Цикл
		
		Если Лев(ТекСтрока.Имя, 2) <> "ОС" Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ТипЗнч(ТекСтрока) <> Тип("ПолеФормы") Тогда
		    Продолжить;		
		КонецЕсли;
		
		Если Не ТекСтрока.Видимость Тогда
			Продолжить;
		КонецЕсли; 
		
		ИмяКолонки = Прав(ТекСтрока.Имя, СтрДлина(ТекСтрока.Имя) - 2);
		
		Если Не (ИмяКолонки = "НомерСтроки" ИЛИ ИмяКолонки = "ОсновноеСредствоКод" ИЛИ ИмяКолонки = "ЛиквидационнаяСтоимостьБУ") Тогда
			СтруктРекв.Вставить(ИмяКолонки, ИмяКолонки);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктРекв;
		
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

