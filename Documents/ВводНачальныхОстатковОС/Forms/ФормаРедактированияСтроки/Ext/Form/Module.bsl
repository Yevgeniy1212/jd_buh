
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СтруктураПараметров") Тогда
		
		СтруктураПараметров = Параметры.СтруктураПараметров;
		
		ВидимостьНУ = СтруктураПараметров.ВидимостьНУ;
		ВидимостьБУ = СтруктураПараметров.ВидимостьБУ;
		ЭтоНовый    = СтруктураПараметров.ЭтоНовый;
		НомерСтроки = СтруктураПараметров.НомерСтроки;
		
		Если СтруктураПараметров.Свойство("ТекущиеДанные") Тогда
			ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураПараметров.ТекущиеДанные);
		КонецЕсли; 	
		
		Если СтруктураПараметров.ЭтоНовый Тогда
			Модифицированность = Истина;
		КонецЕсли; 
		
	КонецЕсли;
	
	ЛиквидационнаяСтоимостьБУ = ?(СтоимостьДляВычисленияАмортизацииБУ > 0, ТекущаяСтоимостьБУ - СтоимостьДляВычисленияАмортизацииБУ, 0);
	
	// Включим предопределенные счета и их субсчета
	УправлениеВнеоборотнымиАктивамиСервер.ОграничитьВыборСчетамиУчетаОС(Элементы.СчетУчетаБУ);
	УправлениеВнеоборотнымиАктивамиСервер.ОграничитьВыборСчетамиУчетаНачисленияАмортизацииОС(Элементы.СчетНачисленияАмортизацииБУ);

	УстановитьВидимость(ЭтаФорма);
	               	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;	
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		ПараметрыВопроса = Новый Структура("Отказ", Отказ);
		
		ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПередЗакрытием", ЭтотОбъект, ПараметрыВопроса);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0); 
		
	КонецЕсли; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОсновноеСредствоПриИзменении(Элемент)
	ИнвентарныйНомерРегл = ОсновноеСредствоПриИзмененииНаСервере(ОсновноеСредство);
КонецПроцедуры

&НаКлиенте
Процедура СпособНачисленияАмортизацииБУПриИзменении(Элемент)
	УстановитьВидимость(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СрокПолезногоИспользованияБУПриИзменении(Элемент)
	
	Если СрокПолезногоИспользованияБУ <> 0 Тогда
		Если СрокИспользованияДляВычисленияАмортизацииБУ = 0 Тогда
		    СрокИспользованияДляВычисленияАмортизацииБУ = СрокПолезногоИспользованияБУ;
			СрокИспользованияДляВычисленияАмортизацииБУПриИзмененииНаКлиенте();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяСтоимостьБУПриИзменении(Элемент)
	ВычислитьРазмерЛиквидационнойСтоимостиНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СтоимостьДляВычисленияАмортизацииБУПриИзменении(Элемент)
	ВычислитьРазмерЛиквидационнойСтоимостиНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура СрокИспользованияДляВычисленияАмортизацииБУПриИзменении(Элемент)
	СрокИспользованияДляВычисленияАмортизацииБУПриИзмененииНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентАмортизацииБУПриИзменении(Элемент)
	
	Если СпособНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ЛинейныйПроцентом") Тогда
		Если КоэффициентАмортизацииБУ <> 0 Тогда
			СрокИспользованияДляВычисленияАмортизацииБУ = Окр((12/КоэффициентАмортизацииБУ ) * 100, 2);
		Иначе
			СрокИспользованияДляВычисленияАмортизацииБУ = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъемПродукцииРаботБУПриИзменении(Элемент)
	
	Если ОбъемПродукцииРаботДляВычисленияАмортизацииБУ = 0 Тогда
		ОбъемПродукцииРаботДляВычисленияАмортизацииБУ = ОбъемПродукцииРаботБУ;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПризнакФиксированногоАктиваПриИзменении(Элемент)
	УстановитьВидимость(ЭтаФорма);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьДанные();
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	
	ЗаписатьДанные(Отказ);
	
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимость(Форма)
	
	Элементы = Форма.Элементы;

	//Устанавливаем видимость закладки НалоговыйУчет
	Элементы.ГруппаСтраницыНалоговыйУчет.Видимость     = Форма.ВидимостьНУ;
	Элементы.ГруппаСтраницыБухгалтерскийУчет.Видимость = Форма.ВидимостьБУ;
	Элементы.ГруппаСтраницыПрочиеРеквизиты.Видимость   = Форма.ВидимостьБУ;
	
	//Установим доступность для элементов, которых можно управлять доступностью
	Элементы.СрокПолезногоИспользованияБУ.Доступность 	     = Форма.ВидимостьБУ;	
	Элементы.НазваниеДокументаПринятияКУчетуРегл.Доступность = Форма.ВидимостьБУ;
	Элементы.СостояниеПринятияКУчетуРегл.Доступность         = Форма.ВидимостьБУ;
	Элементы.НомерДокументаПринятияКУчетуРегл.Доступность    = Форма.ВидимостьБУ;
	Элементы.СпособПоступленияРегл.Доступность 		         = Форма.ВидимостьБУ;
	                          	
	//В зависимости от выбранного способа начисления амортизации отображаем нужную панель с параметрами для ее расчета
	Если Форма.СпособНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.Производственный") Тогда
		Элементы.ГруппаСтраницаПараметрыАмортизации.Видимость = Ложь;
		Элементы.ГруппаСтраницаПараметрыАмортизацииПроизводственныйСпособ.Видимость = Истина;
	Иначе
		Элементы.ГруппаСтраницаПараметрыАмортизации.Видимость = Истина;
		Элементы.ГруппаСтраницаПараметрыАмортизацииПроизводственныйСпособ.Видимость = Ложь;
	КонецЕсли;
	
	// Доступность реквизитов НУ
	Элементы.ГруппаНУ.Доступность		             = Форма.ПризнакФиксированногоАктива;
	Элементы.ТекущаяСтоимостьНУ.Доступность 		 = Форма.ПризнакФиксированногоАктива;		
	Элементы.ПорядокПогашенияСтоимостиНУ.Доступность = Форма.ПризнакФиксированногоАктива;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаПередЗакрытием(Ответ, Параметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЗаписатьДанные(Параметры.Отказ);
		Закрыть();
	Иначе
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте 
Процедура ЗаписатьДанные(Отказ = Ложь)
	
	Если ЭтоНовый Тогда
		ДанныеДляЗаписи = ВладелецФормы.Объект.ОС.Добавить();
	Иначе
		ДанныеДляЗаписи = ВладелецФормы.Объект.ОС[НомерСтроки];
	КонецЕсли;
	
	Попытка
		ЗаполнитьЗначенияСвойств(ДанныеДляЗаписи, ЭтаФорма);
	Исключение
		
		ТекстСообщения = НСтр("ru='Операция не может быть выполнена из-за несоответствия версии или отсутствия строки документа (возможно, строка была изменена или удалена)!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения); 
		Отказ = Истина;
		Возврат;
		
	КонецПопытки;
	
	ВладелецФормы.Модифицированность = Истина;
	
	Модифицированность = Ложь;
	ЭтоНовый           = Ложь;
	
КонецПроцедуры  

&НаСервереБезКонтекста
Функция ОсновноеСредствоПриИзмененииНаСервере(ОсновноеСредство)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОсновноеСредство, "Код").Код;		
КонецФункции

&НаКлиенте
Процедура СрокИспользованияДляВычисленияАмортизацииБУПриИзмененииНаКлиенте()
	
	Если СрокИспользованияДляВычисленияАмортизацииБУ <> 0 Тогда
		
		Если (СпособНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ЛинейныйПроцентом")
			Или (СпособНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ЛинейныйПроцентом")
			И КоэффициентАмортизацииБУ = 0)) Тогда
			КоэффициентАмортизацииБУ = Окр((12/СрокИспользованияДляВычисленияАмортизацииБУ) * 100, 2);
		КонецЕсли;
			
	Иначе
		КоэффициентАмортизацииБУ = 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычислитьРазмерЛиквидационнойСтоимостиНаКлиенте()
	
	ЛиквидационнаяСтоимостьБУ = ?(СтоимостьДляВычисленияАмортизацииБУ > 0, ТекущаяСтоимостьБУ - СтоимостьДляВычисленияАмортизацииБУ, 0);	
	ЛиквидационнаяСтоимостьБУ = ?(ЛиквидационнаяСтоимостьБУ < 0, 0, ЛиквидационнаяСтоимостьБУ);
	
КонецПроцедуры

