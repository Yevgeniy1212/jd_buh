#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область УправлениеДоступом

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	УчетТоваров.ЗаполнитьНаборыПоОрганизацииСтрутурномуПодразделениюСкладу(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделениеОтправитель", "СкладОтправитель");
	УчетТоваров.ЗаполнитьНаборыПоОрганизацииСтрутурномуПодразделениюСкладу(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделениеПолучатель", "СкладПолучатель");
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(),,, ОбъектКопирования.Ссылка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ВедомостьВыдачиБУСпецодежды.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Таблица списанных товаров
	ТаблицаСписанныеТовары = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(ПараметрыПроведения.СписаниеТоваровТаблицаТовары,
			ПараметрыПроведения.СписаниеТоваровРеквизиты, Отказ);
			
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(ТаблицаСписанныеТовары,
			ПараметрыПроведения.СписаниеТоваровРеквизиты, Движения, Отказ);
			
	СформироватьЗаписиПоСпецОдежде(Отказ);			
	
КонецПроцедуры

Процедура СформироватьЗаписиПоСпецОдежде(Отказ)
	
	Движения.ВыданнаяСО.Очистить();
	
	Движения.ВыданнаяСО.Записывать = Истина;
	Движения.СрокСлужбыСО.Записывать = Истина;
	
	ТаблицаДвижений = Движения.СрокСлужбыСО.Выгрузить();
	ТаблицаДвижений.Очистить();
	Для каждого текСтрока из Товары цикл
		Движение 					= ТаблицаДвижений.Добавить();
		Движение.Номенклатура 		= текСтрока.Номенклатура;
		Движение.СрокСлужбы 		= текстрока.СрокСлужбы;
		Движение.ДатаОкончания 		= текстрока.ДатаОкончания;
		Движение.ДатаВыдачи 		= Дата;
		Движение.СкладПолучатель 	= СкладПолучатель;
		Движение.МОЛПолучатель 		= МОЛПолучатель;
		Движение.Количество			= текстрока.Количество;
		
		Движение = Движения.ВыданнаяСО.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, текСтрока, "Номенклатура,СрокСлужбы,ДатаОкончания,Количество,Цена,Сумма");
		Движение.Период 			= Дата;
		Движение.Склад 				= СкладПолучатель;
		Движение.МОЛ 				= МОЛПолучатель;
		Движение.ДатаВыдачи 		= Дата;
		Движение.СпецОдеждуБУ       = Истина;
	Конеццикла;
	Движения.СрокСлужбыСО.мПериод          = Дата;
	Движения.СрокСлужбыСО.мТаблицаДвижений = ТаблицаДвижений;
	Движения.СрокСлужбыСО.ВыполнитьПриход();
	
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры


#КонецЕсли


