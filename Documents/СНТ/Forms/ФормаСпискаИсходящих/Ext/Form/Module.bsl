////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СНТСерверПереопределяемый.СНТФормаСпискаИВыбораПриСозданииНаСервере(ЭтаФорма);
		
	УстановитьВидимостьКнопокИзмененияСтатуса();
	
	ИзменитьВидимостьКомандыСоздатьЭСФиСФ();
	
	УстановитьВидимостьСостоянияИТС();
	
	Элементы.ОткрытьОповещенияЭСФ.Заголовок = ЭСФВызовСервера.ПолучитьТекстГиперссылкиОповещений();
	
	ПараметрыЭСФ = ЭСФСервер.ПолучитьПараметрыЭСФ();
	Если не ПараметрыЭСФ.ИспользоватьОткрытиеСессииСПодписью Тогда
		Этаформа.Элементы.СписокДанныеАктивностиТикетов.Видимость = Ложь;
	КонецЕсли;
	
	ЭСФСервер.ПроверитьИспользованиеСервернойКриптографии(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = СНТКлиентСервер.ИмяСобытияЗаписьСНТ() Тогда
		
		Элементы.Список.Обновить();
		УстановитьВидимостьСостоянияИТС();
		
	ИначеЕсли ИмяСобытия = "СНТ_ПроверятьОповещенияФоновогоЗадания"
		И ЭтаФорма.КлючУникальности = Источник Тогда
		
		СНТКлиентПереопределяемый.ОбработкаОповещенияСНТ_ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, Параметр);
		Элементы.Список.Обновить();
		УстановитьВидимостьСостоянияИТС();
		
	ИначеЕсли ИмяСобытия = ЭСФКлиентСервер.ИмяСобытияЗаписьУведомленийИСЭСФ() Тогда
		
		Элементы.ОткрытьОповещенияЭСФ.Заголовок = ЭСФВызовСервера.ПолучитьТекстГиперссылкиОповещений();
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	УстановитьВидимостьКнопокИзмененияСтатуса();
	ИзменитьВидимостьКомандыСоздатьЭСФиСФ();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьИнформациюИТС(Команда)
	
	ЭлектронноеВзаимодействиеССервисамиВызовСервера.ОбновитьДанныеОкончанияПодписки();
	УстановитьВидимостьСостоянияИТС();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Организация", Организация);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Контрагент", Контрагент);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Состояние", Состояние);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОповещенияИСЭСФ(Команда)
	ЭСФКлиент.ОткрытьФормуОповещенийИСЭСФ(,);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОповещенияИСЭСФ(Команда)
	Элементы.ОткрытьОповещенияЭСФ.Заголовок = ЭСФВызовСервера.ПолучитьТекстГиперссылкиОповещений();
КонецПроцедуры

&НаКлиенте
Процедура ДанныеАктивностиТикетов(Команда)
	ОткрытьФорму("Обработка.ОбменЭСФ.Форма.РаботаСТикетами");
КонецПроцедуры

&НаКлиенте
Процедура КомментарийМестоУстановкиБиблиотекиНаСервереОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ЭСФКлиент.ОбработкаНавигационнойСсылкиМестоУстановкиБиблиотеки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка, ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ВидЭлемента, ЗначениеЭлемента)
	
	ЭСФКлиентСерверПереопределяемый.ИзменитьЭлементОтбораСписка(Список, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокИзмененияСтатуса()

	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		
		ПервыйВыделенныйСНТ = Элементы.Список.ВыделенныеСтроки[0];
		СоответвствиеСтатусов = СНТСервер.РазрешенныеДействияПоСтатусамСНТ(ПервыйВыделенныйСНТ.Направление, ПервыйВыделенныйСНТ.ВидОперации, ПервыйВыделенныйСНТ);
		УстановитьВидимостьКнопки(СоответвствиеСтатусов, "СписокДокументСНТОтозвать", ПервыйВыделенныйСНТ, СНТКлиентСервер.ДействиеОтзыв());
		УстановитьВидимостьКнопки(СоответвствиеСтатусов, "СписокДокументСНТПодтвердить", ПервыйВыделенныйСНТ, СНТКлиентСервер.ДействиеПодтверждение());
	Иначе
		СНТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДокументСНТОтозвать", "Видимость", Ложь);
		СНТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДокументСНТПодтвердить",  "Видимость", Ложь);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция УстановитьВидимостьКнопки(СоответвствиеСтатусов, НазваниеКнопки, ПервыйВыделенныйСНТ, Действие) 
	
	ВидимостьКнопки = СоответвствиеСтатусов[Действие][ПервыйВыделенныйСНТ.Статус];
	
	Если ВидимостьКнопки <> Неопределено Тогда
		
		СНТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, НазваниеКнопки, "Видимость", ВидимостьКнопки);
		
	Иначе
		
		СНТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокДокументСНТОтозвать", "Видимость", Истина);
		ТекстСообщения = НСтр("ru='Тех. ошибка! Для действия %1 и статуса СНТ %2 не указано соответствие для отображение кнопки'");
		ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, СНТКлиентСервер.ДействиеОтзыв(), ПервыйВыделенныйСНТ.Статус);
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ИзменитьВидимостьКомандыСоздатьЭСФиСФ()
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		
		ПервыйВыделенныйСНТ = Элементы.Список.ВыделенныеСтроки[0];
		
		Если ПервыйВыделенныйСНТ.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСНТ.Ввоз") 
			ИЛИ ПервыйВыделенныйСНТ.Статус = Перечисления.СтатусыСНТ.ЗаблокированИСЭСФ Тогда 
			СНТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокГруппаЭСФиСФ", "Видимость", Ложь);
		Иначе 
			СНТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СписокГруппаЭСФиСФ", "Видимость", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСостоянияИТС()
	
	ДатаОкончанияПодписки = ЭлектронноеВзаимодействиеССервисами.ПолучитьДатуОкончанияПодписки();
	
	Элементы.ГруппаСостояниеИТС.Видимость = ЗначениеЗаполнено(ДатаОкончанияПодписки);
	
	Если Элементы.ГруппаСостояниеИТС.Видимость Тогда
		ServiceNick = ЭлектронноеВзаимодействиеССервисами.ПолучитьServiceNickИСЭСФ();
		Если ЭлектронноеВзаимодействиеССервисами.ВыводитьИнформациюОСрокахПодписки(ServiceNick, Организация, ДатаОкончанияПодписки) Тогда
			Элементы.ГруппаСостояниеИТС.ЦветФона = Новый Цвет(251, 212, 212);
			ТекстСостояния = ЭлектронноеВзаимодействиеССервисами.ПолучитьТекстИнформацииСостояниеПодписки(ДатаОкончанияПодписки);
			Элементы.ОписаниеСостоянияПодписки.Заголовок = ТекстСостояния;
		Иначе
			Элементы.ГруппаСостояниеИТС.ЦветФона = Новый Цвет(204, 255, 204);
			ТекстСостояния = ЭлектронноеВзаимодействиеССервисами.ПолучитьТекстИнформацииСостояниеПодписки();
			Элементы.ОписаниеСостоянияПодписки.Заголовок = ТекстСостояния;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

