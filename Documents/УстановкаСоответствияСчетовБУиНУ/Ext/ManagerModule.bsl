#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ЗаполнитьСоответствиеСчетовБУиНУПоТекущемуСоответствию(Объект) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = "
	|ВЫБРАТЬ *
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&ДатаСреза) КАК СоответствиеСчетовБУиНУ
	|Где Учитывается";
	
	Запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);
	
	Объект.СоответствиеСчетовБУиНУ.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеСчетовБУиНУПоУмолчанию(Объект) Экспорт
	
	Объект.СоответствиеСчетовБУиНУ.Очистить();
	
	Макет = Документы.УстановкаСоответствияСчетовБУиНУ.ПолучитьМакет("СоответствияСчетовБУиНУ");
	
	Для Индекс = 2 По Макет.ВысотаТаблицы Цикл

		ИмяСчетаБУ     = Макет.Область(Индекс, 1, Индекс, 1).Текст;
		КодСчетаБУ     = Макет.Область(Индекс, 2, Индекс, 2).Текст;
		ИмяСчетаКоррБУ = Макет.Область(Индекс, 5, Индекс, 5).Текст;
		КодСчетаКоррБУ = Макет.Область(Индекс, 6, Индекс, 6).Текст;
		ИмяСчетаНУ     = Макет.Область(Индекс, 3, Индекс, 3).Текст;
		КодСчетаНУ     = Макет.Область(Индекс, 4, Индекс, 4).Текст;
		ИмяВидЗатратНУ = Макет.Область(Индекс, 7, Индекс, 7).Текст;
	
		Если КодСчетаБУ = "" Тогда
			Продолжить;
		КонецЕсли;
			
		Если КодСчетаНУ = "" Тогда
			Продолжить;
		КонецЕсли;	
		
		СчетБУ = ПланыСчетов.Типовой.НайтиПоКоду(КодСчетаБУ);
		
		Если СчетБУ = Неопределено Тогда
			Продолжить; // Нет счета с таким кодом
		КонецЕсли;
		
		СчетКоррБУ = ПланыСчетов.Типовой.НайтиПоКоду(КодСчетаКоррБУ);
		Если СчетКоррБУ= Неопределено Тогда
			СчетКоррБУ = ПланыСчетов.Типовой.ПустаяСсылка();
		КонецЕсли;

		СчетНУ = ПланыСчетов.Налоговый.НайтиПоКоду(КодСчетаНУ);
		Если СчетНУ = Неопределено Тогда
			Продолжить; // Нет счета с таким кодом
		КонецЕсли;
	    			
		Если НЕ ЗначениеЗаполнено(СчетБУ) Или НЕ ЗначениеЗаполнено(СчетНУ) Тогда
			Продолжить;
		КонецЕсли;
		
		Запись = Объект.СоответствиеСчетовБУиНУ.Добавить();

		Запись.СчетБУ = СчетБУ;
		КолвоСубконто = СчетБУ.ВидыСубконто.Количество();
		Если КолвоСубконто > 0 Тогда
			Запись.СубконтоБУ1 = Новый(СчетБУ.ВидыСубконто[0].ВидСубконто.ТипЗначения.Типы()[0]);
		КонецЕсли;
		Если КолвоСубконто > 1 Тогда
			Запись.СубконтоБУ2 = Новый(СчетБУ.ВидыСубконто[1].ВидСубконто.ТипЗначения.Типы()[0]);
		КонецЕсли;
		Если КолвоСубконто > 2 Тогда
			Запись.СубконтоБУ3 = Новый(СчетБУ.ВидыСубконто[2].ВидСубконто.ТипЗначения.Типы()[0]);
		КонецЕсли;

		Если ЗначениеЗаполнено(СчетКоррБУ) Тогда
			Запись.СчетКоррБУ = СчетКоррБУ;
		КонецЕсли;

		Запись.СчетНУ = СчетНУ;
		КолвоСубконто = СчетНУ.ВидыСубконто.Количество();
		Если КолвоСубконто > 0 Тогда
			Запись.СубконтоНУ1 = Новый(СчетНУ.ВидыСубконто[0].ВидСубконто.ТипЗначения.Типы()[0])
		КонецЕсли;
		Если КолвоСубконто > 1 Тогда
			Запись.СубконтоНУ2 = Новый(СчетНУ.ВидыСубконто[1].ВидСубконто.ТипЗначения.Типы()[0])
		КонецЕсли;
		Если КолвоСубконто > 2 Тогда
			Запись.СубконтоНУ3 = Новый(СчетНУ.ВидыСубконто[2].ВидСубконто.ТипЗначения.Типы()[0])
		КонецЕсли;
		
		Запись.Учитывается = Истина;		
	КонецЦикла;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();
	Результат = Запрос.Выполнить();
	ПараметрыПроведения.Вставить("ТаблицаРеквизитов", Результат.Выгрузить());
	
	Реквизиты = ПараметрыПроведения.ТаблицаРеквизитов[0];
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаТаблицаСоответствия(НомераТаблиц);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение
	|ИЗ
	|	Документ.УстановкаСоответствияСчетовБУиНУ КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса 
	
КонецФункции

Функция ТекстЗапросаТаблицаСоответствия(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаСоответствия", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСоответствие.Ссылка,
	|	ТаблицаСоответствие.НомерСтроки,
	|	ТаблицаСоответствие.СчетБУ,
	|	ТаблицаСоответствие.СчетКоррБУ,
	|	ТаблицаСоответствие.СубконтоБУ1,
	|	ТаблицаСоответствие.СубконтоБУ2,
	|	ТаблицаСоответствие.СубконтоБУ3,
	|	ТаблицаСоответствие.ВидЗатратНУ,
	|	ТаблицаСоответствие.СчетНУ,
	|	ТаблицаСоответствие.СубконтоНУ1,
	|	ТаблицаСоответствие.СубконтоНУ2,
	|	ТаблицаСоответствие.СубконтоНУ3,
	|	ТаблицаСоответствие.Учитывается,
	|	ТаблицаСоответствие.Комментарий
	|ИЗ
	|	Документ.УстановкаСоответствияСчетовБУиНУ.СоответствиеСчетовБУиНУ КАК ТаблицаСоответствие
	|ГДЕ
	|	ТаблицаСоответствие.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаСоответствие.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры формирования движений

Процедура СформироватьДвиженияУстановкаСоответствияСчетовБУиНУ(Таблица, ТаблицаРеквизитов, Движения, Отказ) Экспорт
	
	Если Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизитов[0];
	
	Для каждого СтрокаТаблицы Из Таблица Цикл

		Движение = Движения.СоответствиеСчетовБУиНУ.Добавить();
		
		Движение.Период 	 = Реквизиты.Период;
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		
		Движение.СубконтоБУ1 = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.СубконтоБУ1), Неопределено, СтрокаТаблицы.СубконтоБУ1);
		Движение.СубконтоБУ2 = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.СубконтоБУ2), Неопределено, СтрокаТаблицы.СубконтоБУ2);
		Движение.СубконтоБУ3 = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.СубконтоБУ3), Неопределено, СтрокаТаблицы.СубконтоБУ3);
		
		Движение.ВидЗатратНУ = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.ВидЗатратНУ), Неопределено, СтрокаТаблицы.ВидЗатратНУ);
		
		Движение.СубконтоНУ1 = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.СубконтоНУ1), Неопределено, СтрокаТаблицы.СубконтоНУ1);
		Движение.СубконтоНУ2 = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.СубконтоНУ2), Неопределено, СтрокаТаблицы.СубконтоНУ2);
		Движение.СубконтоНУ3 = ?(НЕ ЗначениеЗаполнено(СтрокаТаблицы.СубконтоНУ3), Неопределено, СтрокаТаблицы.СубконтоНУ3);

	КонецЦикла;
	
	Движения.СоответствиеСчетовБУиНУ.Записывать = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	
КонецПроцедуры

#КонецЕсли
