#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснования(ДанныеЗаполнения);
		Возврат;
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда 
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеВнеоборотнымиАктивамиСервер.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);

	ТаблицаОСДляПроверки = СФормироватьТЧОСДляПроверки();
	
	// сначала проверис все ОС - приняты ли они к учету в данной организации
	Для Каждого СтрокаОС Из ТаблицаОСДляПроверки Цикл
		
		ПутьКСтрокеТЧ = "ОС" + "[" + Формат(СтрокаОС.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]";
		
		Если НЕ СтрокаОС.ОтражалосьВБухгалтерскомУчете Тогда
			
			ТекстСообщения = НСтр("ru='Основное средство <%1> не отражалось в учете по указанной организации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				СтрокаОС.ОсновноеСредство);
				
			Поле = ПутьКСтрокеТЧ;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);

			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	// если хоть один ОС не принимается к учету, то дальше не идем
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого СтрокаОС Из ТаблицаОСДляПроверки Цикл
		
		ПутьКСтрокеТЧ = "ОС" + "[" + Формат(СтрокаОС.НомерСтроки - 1, "ЧН=0; ЧГ=") + "]";
		
		//если снимаем начисление амортизации, то должны проверить ранее устанавливался ли признак начисления
		Если ИзменениеНачисленияАмортизации И
			(Не СтрокаОС.НачислятьАмортизацию) И (Не СтрокаОС.НачислятьАмортизациюСтарый) Тогда
			
			ТекстСообщения = НСтр("ru='Для основного средства <%1> код <%2> ранее не устанавливался признак начисления амортизациии.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.Код));
				
			Поле = ПутьКСтрокеТЧ + ".НачислятьАмортизацию";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);

			Отказ = Истина;	
		КонецЕсли;	
		
		// если снимаем с налогов, то должны проверить а являлся ли ОС объектом обложения по тому или иному налогу
		Если ИзменениеИмущественногоНалога И 
			(Не СтрокаОС.ОбъектИмущественногоНалога) И (Не СтрокаОС.ОбъектИмущественногоНалогаСтарый) Тогда
			
			ТекстСообщения = НСтр("ru='Основное средство <%1> код <%2> не является объектом обложения имущественным налогом в данной организации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.Код));
				
			Поле = ПутьКСтрокеТЧ + ".ОбъектИмущественногоНалога";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
			Отказ = Истина;
		КонецЕсли;	
		
		Если ИзменениеТранспортногоНалога И 
			(Не СтрокаОС.ОбъектТранспортногоНалога) И (Не СтрокаОС.ОбъектТранспортногоНалогаСтарый) Тогда
			
			ТекстСообщения = НСтр("ru='Основное средство <%1> код <%2> не является объектом обложения транспортным налогом в данной организации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.Код));
				
			Поле = ПутьКСтрокеТЧ + ".ОбъектТранспортногоНалога";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
			Отказ = Истина;
		КонецЕсли;	
		
		Если ИзменениеЗемельногоНалога И 
			(Не СтрокаОС.ОбъектЗемельногоНалога) И (Не СтрокаОС.ОбъектЗемельногоНалогаСтарый) Тогда
			
			ТекстСообщения = НСтр("ru='Основное средство <%1> код <%2> не является объектом обложения земельным налогом в данной организации.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
				СтрокаОС.ОсновноеСредство, СокрЛП(СтрокаОС.Код));
				
			Поле = ПутьКСтрокеТЧ + ".ОбъектЗемельногоНалога";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
			Отказ = Истина;
		КонецЕсли;	
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ИзменениеСостоянияОС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Если вдруг не удалось получить параметры проведения и не установлен флаг Отказ, то просто выйдем из проведения
	Если ПараметрыПроведения = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	Если ПараметрыПроведения.СобытияОСОрганизацийТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияРегистрацияСобытияОС(ПараметрыПроведения.СобытияОСОрганизацийТаблицаОС, 
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
	КонецЕсли;
	
	Если ПараметрыПроведения.СостоянияОСОрганизацийТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияИзменениеСостоянияОС(ПараметрыПроведения.СостоянияОСОрганизацийТаблицаОС,
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
    КонецЕсли;
	
	Если ПараметрыПроведения.НачислениеАмортизацииОСБухгалтерскийУчетТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОС(ПараметрыПроведения.НачислениеАмортизацииОСБухгалтерскийУчетТаблицаОС,
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
    КонецЕсли;
	
	Если ПараметрыПроведения.ОбъектыИмущественногоНалогаТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияОбъектыИмущественногоНалога(ПараметрыПроведения.ОбъектыИмущественногоНалогаТаблицаОС,
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
    КонецЕсли;

	
	Если ПараметрыПроведения.ИзменениеТранспортногоНалогаТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияИзменениеТранспортногоНалога(ПараметрыПроведения.ИзменениеТранспортногоНалогаТаблицаОС,
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
    КонецЕсли;
	
	Если ПараметрыПроведения.ИзменениеЗемельногоНалогаТаблицаОС.Количество() <> 0 Тогда 
		УчетОС.СформироватьДвиженияИзменениеЗемельногоНалога(ПараметрыПроведения.ИзменениеЗемельногоНалогаТаблицаОС,
														ПараметрыПроведения.Реквизиты,
														Движения, Отказ);
    КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	              	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура выполняет заполнение документа по документу-основанию
//
Процедура ЗаполнитьПоДокументуОснования(Основание) Экспорт
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
		Документы.ИзменениеСостоянияОС.ЗаполнитьДокументПоСправочникуОсновныеСредства(ЭтотОбъект, Основание);
	КонецЕсли;
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(), , , , Основание);

КонецПроцедуры // ЗаполнитьПоДокументуОснования()

Функция СФормироватьТЧОСДляПроверки()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      	Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",	Дата);
	Запрос.УстановитьПараметр("СписокОС",	 	ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("ТаблицаОС",		ОС.Выгрузить());

	Запрос.Текст = "ВЫБРАТЬ *
				   |ПОМЕСТИТЬ ВТ_ТаблицаОС
				   |ИЗ &ТаблицаОС КАК ТаблицаОС
				   |;
				   |ВЫБРАТЬ
	               |	ТаблицаОС.НомерСтроки,
	               |	ТаблицаОС.ОсновноеСредство,
	               |	ТаблицаОС.ОбъектИмущественногоНалога,
	               |	ТаблицаОС.ОбъектТранспортногоНалога,
	               |	ТаблицаОС.ОбъектЗемельногоНалога,
	               |	ТаблицаОС.НачислятьАмортизацию,
	               |	ЕСТЬNULL(ОбъектыИмущественногоНалогаСрезПоследних.НачислятьНалог, ЛОЖЬ) КАК ОбъектИмущественногоНалогаСтарый,
	               |	ОбъектыИмущественногоНалогаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаИмущественногоНалога,
	               |	ЕСТЬNULL(ОбъектыТранспортногоНалогаСрезПоследних.НачислятьНалог, ЛОЖЬ) КАК ОбъектТранспортногоНалогаСтарый,
	               |	ОбъектыТранспортногоНалогаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаТранспортногоНалога,
	               |	ЕСТЬNULL(ОбъектыЗемельногоНалогаСрезПоследних.НачислятьНалог, ЛОЖЬ) КАК ОбъектЗемельногоНалогаСтарый,
	               |	ОбъектыЗемельногоНалогаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаЗемельногоНалога,
	               |	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	               |	ВЫБОР
	               |		КОГДА ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство ЕСТЬ NULL 
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ОтражалосьВБухгалтерскомУчете,
	               |	ЕСТЬNULL(НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию, ЛОЖЬ) КАК НачислятьАмортизациюСтарый,
	               |	ТаблицаОС.ОсновноеСредство.Код КАК Код
	               |ИЗ
	               |	ВТ_ТаблицаОС КАК ТаблицаОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	               |				&ДатаДокумента,
	               |				Организация = &Организация
	               |					И ОсновноеСредство В (&СписокОС)
				   |					И Регистратор <> &Ссылка) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыИмущественногоНалога.СрезПоследних(
	               |				&ДатаДокумента,
	               |				ОбъектНалогообложения В (&СписокОС)
	               |					И Налогоплательщик = &Организация
				   |					И Регистратор <> &Ссылка) КАК ОбъектыИмущественногоНалогаСрезПоследних
	               |		ПО ТаблицаОС.ОсновноеСредство = ОбъектыИмущественногоНалогаСрезПоследних.ОбъектНалогообложения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыЗемельногоНалога.СрезПоследних(
	               |				&ДатаДокумента,
	               |				ОбъектНалогообложения В (&СписокОС)
	               |					И Налогоплательщик = &Организация
   				   |					И Регистратор <> &Ссылка) КАК ОбъектыЗемельногоНалогаСрезПоследних
	               |		ПО ТаблицаОС.ОсновноеСредство = ОбъектыЗемельногоНалогаСрезПоследних.ОбъектНалогообложения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыТранспортногоНалога.СрезПоследних(
	               |				&ДатаДокумента,
	               |				ОбъектНалогообложения В (&СписокОС)
	               |					И Налогоплательщик = &Организация
				   |					И Регистратор <> &Ссылка) КАК ОбъектыТранспортногоНалогаСрезПоследних
	               |		ПО ТаблицаОС.ОсновноеСредство = ОбъектыТранспортногоНалогаСрезПоследних.ОбъектНалогообложения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	               |				&ДатаДокумента,
	               |				ОсновноеСредство В (&СписокОС)
	               |					И Организация = &Организация
				   |					И Регистратор <> &Ссылка) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	               |		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	               |				&ДатаДокумента,
	               |				ОсновноеСредство В (&СписокОС)
	               |					И Организация = &Организация
				   |					И Регистратор <> &Ссылка) КАК НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних
	               |		ПО ТаблицаОС.ОсновноеСредство = НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				   
	Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции

#КонецЕсли