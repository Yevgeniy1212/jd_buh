#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура по месяцам налогового периода расчитывает сумму налогов(взносов)
// пропорционально выплаченным доходам.
//
Процедура РассчитатьВсе(Объект, РасчетИПН, РасчетОПВ, РасчетВОСМС)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("парамОрганизация",  Объект.Организация);
	Запрос.УстановитьПараметр("парамНачало", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонец", КонецМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПослеКон", КонецМесяца(Объект.ПериодРегистрации) + 1);

	// Виды платежей по ОПВ, по которым считается сумма подлежащая перечислению и, 
	// соответственно, потом будет считаться пеня
	СписокВидовПлатежей = Новый СписокЗначений;	
	СписокВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	СписокВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт);
	СписокВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам);
	
	Запрос.УстановитьПараметр("СписокВидовПлатежей", СписокВидовПлатежей);
	
	Если ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями") Тогда
		// в случае работы со структурными подразделениями удельный вес определяем в целом по налогоплательщику
		Запрос.УстановитьПараметр("парамНалогоплательщик",ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Объект.СтруктурноеПодразделение,
																										Объект.Организация,
																										Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты));
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", Объект.Организация);
	КонецЕсли;

	// Получим настройки из учетной политики
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации,
	|	УчетнаяПолитикаНУ.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамКонец, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ОтражениеПоПериодуРегистрации 				= Выборка.ОтражениеПоПериодуРегистрации;
		ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ  = Выборка.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ;
	Иначе
		ОтражениеПоПериодуРегистрации 				= Ложь;
		ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ  = Ложь;
	КонецЕсли;

	// Список работников, по которым выполнять расчет
	СписокРаботниковТекст = "";
	
	Если РасчетИПН Тогда
		СписокРаботниковТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УдержанныйИПН.ФизЛицо
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ.УдержанныйИПН КАК УдержанныйИПН
		|ГДЕ
		|	УдержанныйИПН.Ссылка = &ДокументСсылка
		|";
	КонецЕсли;
	
	Если РасчетОПВ Тогда
		Если СписокРаботниковТекст <> "" Тогда
			СписокРаботниковТекст = СписокРаботниковТекст + "
			|
			|ОБЪЕДИНИТЬ
			|
			|";
		КонецЕсли;
		
		СписокРаботниковТекст = СписокРаботниковТекст + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УдержанныйОПВ.ФизЛицо
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ.УдержанныйОПВ КАК УдержанныйОПВ
		|ГДЕ
		|	УдержанныйОПВ.Ссылка = &ДокументСсылка
		|";
	КонецЕсли;
	
	Если РасчетВОСМС Тогда
		Если СписокРаботниковТекст <> "" Тогда
			СписокРаботниковТекст = СписокРаботниковТекст + "
			|
			|ОБЪЕДИНИТЬ
			|
			|";
		КонецЕсли;
		
		СписокРаботниковТекст = СписокРаботниковТекст + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УдержанныеВОСМС.ФизЛицо
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ.УдержанныеВОСМС КАК УдержанныеВОСМС
		|ГДЕ
		|	УдержанныеВОСМС.Ссылка = &ДокументСсылка
		|";
	КонецЕсли;

	Если СписокРаботниковТекст = "" Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СписокФизЛиц.Физлицо
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|ИЗ
	|	(" + СписокРаботниковТекст + ") КАК СписокФизЛиц
	|ИНДЕКСИРОВАТЬ ПО 
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	
	// Данные для расчета коэффициентов выплаты дохода по каждому физлицу в разрезе месяцев налогового периода
	ДоходыВыплатаСальдоТекст = "
	|// сальдо текущих взаиморасчетов за период регистрации
	|ВЫБРАТЬ	
	|	ВзаиморасчетыСРаботниками.ФизЛицо КАК ФизЛицо,
	|	ВзаиморасчетыСРаботниками.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВзаиморасчетыСРаботниками.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботниками.ПериодВзаиморасчетов, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВзаиморасчетыСРаботниками.СуммаВзаиморасчетовОстаток КАК СальдоПоЗП,
	|	0 КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|							&парамНачало, 
	|							Налогоплательщик = &парамНалогоплательщик
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВзаиморасчетыСРаботниками
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// сальдо депонированной зарплаты за период регистрации
	|ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.ФизЛицо КАК ФизЛицо,
	|	ВзаиморасчетыСДепонентами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВзаиморасчетыСДепонентами.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСДепонентами.ПериодВзаиморасчетов, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВзаиморасчетыСДепонентами.СуммаВзаиморасчетовОстаток КАК СальдоПоЗП,
	|	0 КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентамиОрганизаций.Остатки(
	|							&парамНачало, 
	|							Налогоплательщик = &парамНалогоплательщик
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВзаиморасчетыСДепонентами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|// сальдо по актам закупа за период регистрации
	|ВЫБРАТЬ
	|	ВзаиморасчетыСКонтрагентамиФизЛицами.Контрагент КАК Физлицо,
	|	ВзаиморасчетыСКонтрагентамиФизЛицами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСКонтрагентамиФизЛицами.ПериодВзаиморасчетов, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВзаиморасчетыСКонтрагентамиФизЛицами.СуммаВзаиморасчетовОстаток КАК СальдоПоЗП,
	|	0 КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами.Остатки(
	|							&парамНачало,
	|							Налогоплательщик = &парамНалогоплательщик
	|							И Контрагент В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВзаиморасчетыСКонтрагентамиФизЛицами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// выплаченные доходы
	|ВЫБРАТЬ
	|	ВыплаченныеДоходы.ФизЛицо КАК ФизЛицо,
	|	ВыплаченныеДоходы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВыплаченныеДоходы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ВыплаченныеДоходы.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	0 КАК СальдоПоЗП,
	|	0 КАК НачисленоЗП,
	|	ВыплаченныеДоходы.СуммаДоходаОборот КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ВыплаченныеДоходыРаботникамОрганизацийНУ.Обороты(
	|							&парамНачало,
	|							&парамКонец,
	|							,
	|							Налогоплательщик = &парамНалогоплательщик
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВыплаченныеДоходы
	|";
	
	Если НЕ ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ Тогда
		// зачитывать в выплаченные доходы фактически перечисленные суммы по исполнительным листам
		ДоходыВыплатаСальдоТекст = ДоходыВыплатаСальдоТекст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВзаиморасчетыСПолучателямиИЛ.ДокументОснование.ФизЛицо КАК ФизЛицо,
		|	ВзаиморасчетыСПолучателямиИЛ.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ВзаиморасчетыСПолучателямиИЛ.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСПолучателямиИЛ.ПериодВзаиморасчетов, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	ВзаиморасчетыСПолучателямиИЛ.СуммаВзаиморасчетовНачальныйОстаток + ВзаиморасчетыСПолучателямиИЛ.СуммаСборовНачальныйОстаток КАК СальдоПоЗП,
		|	0 КАК НачисленоЗП,
		|	ВзаиморасчетыСПолучателямиИЛ.СуммаВзаиморасчетовРасход + ВзаиморасчетыСПолучателямиИЛ.СуммаСборовРасход КАК ВыплаченоЗП
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыОрганизацийСПолучателямиИЛ.ОстаткиИОбороты(
		|				&парамНачало,
		|				&парамКонец,
		|				,
		|				ДвиженияИГраницыПериода,
		|				Налогоплательщик = &парамНалогоплательщик
		|				И ДокументОснование.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВзаиморасчетыСПолучателямиИЛ
		|";
	//Иначе
		// суммы удержаний по ИЛ уже находятся в регистре накопления ВыплаченныеДоходыРаботникамОрганизацийНУ
	КонецЕсли;
	                         
	ДоходыВыплатаСальдоТекст = ДоходыВыплатаСальдоТекст + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// начисление доходы (по ИПНСведенияОДоходах, где зарегистрированы все полученные доходы)
	|ВЫБРАТЬ
	|	ДоходыВНатуральнойФорме.ФизЛицо КАК ФизЛицо,
	|	ДоходыВНатуральнойФорме.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ДоходыВНатуральнойФорме.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ДоходыВНатуральнойФорме.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	0 КАК СальдоПоЗП,
	|	ДоходыВНатуральнойФорме.СуммаДохода КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ДоходыВНатуральнойФорме
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК Работники
	|		ПО ДоходыВНатуральнойФорме.ФизЛицо = Работники.ФизЛицо
	|ГДЕ
	|	ДоходыВНатуральнойФорме.ПериодРегистрации МЕЖДУ &парамНачало И &парамКонец И
	|	ДоходыВНатуральнойФорме.Налогоплательщик = &парамНалогоплательщик И
	|	ДоходыВНатуральнойФорме.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	ИПНРасчетыСБюджетом.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ИПНРасчетыСБюджетом.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	0 КАК СальдоПоЗП,
	|	- ИПНРасчетыСБюджетом.Налог КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО ИПНРасчетыСБюджетом.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ИПНРасчетыСБюджетом.Период МЕЖДУ &парамНачало И &парамКонец И
	|	ИПНРасчетыСБюджетом.Налогоплательщик = &парамНалогоплательщик И
	|	ИПНРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И 
	|	ИПНРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление) И
	|	ИПНРасчетыСБюджетом.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ОПВРасчетыСФондами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОПВРасчетыСФондами.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	0 КАК СальдоПоЗП,
	|	- ОПВРасчетыСФондами.Взнос КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО ОПВРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ОПВРасчетыСФондами.Период МЕЖДУ &парамНачало И &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И 
	|	ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление) И
	|	ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) И
	|	ОПВРасчетыСФондами.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ВОСМСРасчетыСФондами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВОСМСРасчетыСФондами.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	0 КАК СальдоПоЗП,
	|	- ВОСМСРасчетыСФондами.Взнос КАК НачисленоЗП,
	|	0 КАК ВыплаченоЗП
	|ИЗ
	|	РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО ВОСМСРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ВОСМСРасчетыСФондами.Период МЕЖДУ &парамНачало И &парамКонец И
	|	ВОСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ВОСМСРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И 
	|	ВОСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление) И
	|	ВОСМСРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) И
	|	ВОСМСРасчетыСФондами.Активность
	|";

	// Общая сумма доходов и выплат
	ДоходыВыплатаСальдоТекст = "
	|ВЫБРАТЬ
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница,
	|	Данные.ПодразделениеОрганизации,
	|	Данные.МесяцНалоговогоПериода,
	|	СУММА(Данные.СальдоПоЗП) КАК СальдоПоЗП,
	|	СУММА(Данные.НачисленоЗП) КАК НачисленоЗП,
	|	СУММА(Данные.ВыплаченоЗП) КАК ВыплаченоЗП
	|ИЗ
	|	(" + ДоходыВыплатаСальдоТекст + ") КАК Данные
	|СГРУППИРОВАТЬ ПО
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница,
	|	Данные.ПодразделениеОрганизации,
	|	Данные.МесяцНалоговогоПериода
	|";

	// сальдо по налогу/взносам определяем в разрезе организаций, чтобы правильно закрыть регистры
	СальдоИПНиОПВТекст = "";
	
	Если РасчетИПН Тогда
		СальдоИПНиОПВТекст = "
		|ВЫБРАТЬ
		|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
		|	ИПНРасчетыСБюджетом.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ИПНРасчетыСБюджетом.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ИПНРасчетыСБюджетом.НалогОстаток КАК СальдоПоИПН,
		|	0 КАК СальдоПоОПВ,
		|	0 КАК СальдоПоВОСМС
		|ИЗ
		|	РегистрНакопления.ИПНРасчетыСБюджетом.Остатки(
		|			&парамПослеКон,
		|			Организация = &парамОрганизация
		|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ИПНРасчетыСБюджетом
		|";
	КонецЕсли;
	
	Если РасчетОПВ Тогда
		Если СальдоИПНиОПВТекст <> "" Тогда
			СальдоИПНиОПВТекст = СальдоИПНиОПВТекст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		СальдоИПНиОПВТекст = СальдоИПНиОПВТекст + "
		|ВЫБРАТЬ
		|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|	ОПВРасчетыСФондами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ОПВРасчетыСФондами.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	0 КАК СальдоПоИПН,
		|	ОПВРасчетыСФондами.ВзносОстаток КАК СальдоПоОПВ,
		|	0 КАК СальдоПоВОСМС
		|ИЗ
		|	РегистрНакопления.ОПВРасчетыСФондами.Остатки(
		|			&парамПослеКон,
		|			Организация = &парамОрганизация И
		|			ВидПлатежа В (&СписокВидовПлатежей) И
		|			ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ОПВРасчетыСФондами
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОПВПодлежитПеречислениюВФонды.ФизЛицо КАК ФизЛицо,
		|	ОПВПодлежитПеречислениюВФонды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ОПВПодлежитПеречислениюВФонды.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ОПВПодлежитПеречислениюВФонды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	0 КАК СальдоПоИПН,
		|	- ОПВПодлежитПеречислениюВФонды.ВзносОстаток КАК СальдоПоОПВ,
		|	0 СальдоПоВОСМС
		|ИЗ
		|	РегистрНакопления.ОПВПодлежитПеречислениюВФонды.Остатки(
		|			&парамПослеКон,
		|			Организация = &парамОрганизация
		|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ОПВПодлежитПеречислениюВФонды
		|";
	КонецЕсли;

	Если РасчетВОСМС Тогда
		Если СальдоИПНиОПВТекст <> "" Тогда
			СальдоИПНиОПВТекст = СальдоИПНиОПВТекст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		СальдоИПНиОПВТекст = СальдоИПНиОПВТекст + "
		|ВЫБРАТЬ
		|	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|	ВОСМСРасчетыСФондами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ВОСМСРасчетыСФондами.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	0 КАК СальдоПоИПН,
		|	0 КАК СальдоПоОПВ,
		|	ВОСМСРасчетыСФондами.ВзносОстаток КАК СальдоПоВОСМС
		|ИЗ
		|	РегистрНакопления.ВОСМСРасчетыСФондами.Остатки(
		|			&парамПослеКон,
		|			Организация = &парамОрганизация И
		|			ВидПлатежа В (&СписокВидовПлатежей) И
		|			ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВОСМСРасчетыСФондами
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВОСМСПодлежитПеречислениюВФонды.ФизЛицо КАК ФизЛицо,
		|	ВОСМСПодлежитПеречислениюВФонды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ВОСМСПодлежитПеречислениюВФонды.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ВОСМСПодлежитПеречислениюВФонды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	0 КАК СальдоПоИПН,
		|	0 КАК СальдоПоОПВ,
		|	- ВОСМСПодлежитПеречислениюВФонды.ВзносОстаток КАК СальдоПоВОСМС
		|ИЗ
		|	РегистрНакопления.ВОСМСПодлежитПеречислениюВФонды.Остатки(
		|			&парамПослеКон,
		|			Организация = &парамОрганизация
		|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСписокФизЛиц КАК СписокФизЛиц)) КАК ВОСМСПодлежитПеречислениюВФонды
		|";
	КонецЕсли;

	// Общая сумма задолженности по ИПН, ОПВ и ВОСМС
	СальдоИПНиОПВТекст = "
	|ВЫБРАТЬ
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница,
	|	Данные.ПодразделениеОрганизации,
	|	Данные.МесяцНалоговогоПериода,
	|	СУММА(Данные.СальдоПоИПН) КАК СальдоПоИПН,
	|	СУММА(Данные.СальдоПоОПВ) КАК СальдоПоОПВ,
	|	СУММА(Данные.СальдоПоВОСМС) КАК СальдоПоВОСМС
	|ИЗ
	|	(" + СальдоИПНиОПВТекст + ") КАК Данные
	|СГРУППИРОВАТЬ ПО 
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница,
	|	Данные.ПодразделениеОрганизации,
	|	Данные.МесяцНалоговогоПериода
	|";

	// Определяем размер удерживаемых ИПН и ОПВ
	УдерживаемыеСуммыТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Данные.Физлицо,
	|	Данные.СтруктурнаяЕдиница,
	|	Данные.ПодразделениеОрганизации,
	|	Данные.МесяцНалоговогоПериода,
	|	СУММА(Данные.СальдоПоИПН) КАК СальдоПоИПН,
	|	СУММА(Данные.СальдоПоОПВ) КАК СальдоПоОПВ,
	|	СУММА(Данные.СальдоПоВОСМС) КАК СальдоПоВОСМС,
	|	ВЫБОР
	|		КОГДА СУММА(Данные.ОтсутствиеДанных) > 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтсутствиеДанных,
	|	СУММА(Данные.СальдоПоЗП) КАК СальдоПоЗП,
	|	СУММА(Данные.НачисленоЗП) КАК НачисленоЗП,
	|	СУММА(Данные.ВыплаченоЗП) КАК ВыплаченоЗП
	|ИЗ
	|	(ВЫБРАТЬ
	|		СальдоИПНиОПВ.ФизЛицо,
	|		СальдоИПНиОПВ.СтруктурнаяЕдиница,
	|		СальдоИПНиОПВ.ПодразделениеОрганизации,
	|		СальдоИПНиОПВ.МесяцНалоговогоПериода,
	|		СальдоИПНиОПВ.СальдоПоИПН,
	|		СальдоИПНиОПВ.СальдоПоОПВ,
	|		СальдоИПНиОПВ.СальдоПоВОСМС,
	|		0 КАК ОтсутствиеДанных,
	|		0 КАК СальдоПоЗП,
	|		0 КАК НачисленоЗП,
	|		0 КАК ВыплаченоЗП
	|	ИЗ
	|		(" + СальдоИПНиОПВТекст + ") КАК СальдоИПНиОПВ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДоходыВыплатаСальдо.ФизЛицо,
	|		ДоходыВыплатаСальдо.СтруктурнаяЕдиница,
	|		ДоходыВыплатаСальдо.ПодразделениеОрганизации,
	|		ДоходыВыплатаСальдо.МесяцНалоговогоПериода,
	|		0 КАК СальдоПоИПН,
	|		0 КАК СальдоПоОПВ,
	|		0 КАК СальдоПоВОСМС,
	|		1 КАК ОтсутствиеДанных,
	|		ДоходыВыплатаСальдо.СальдоПоЗП,
	|		ДоходыВыплатаСальдо.НачисленоЗП,
	|		ДоходыВыплатаСальдо.ВыплаченоЗП
	|	ИЗ
	|		(" + ДоходыВыплатаСальдоТекст + ") КАК ДоходыВыплатаСальдо
	|
	|) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ФизЛицо, 
	|	Данные.СтруктурнаяЕдиница, 
	|	Данные.ПодразделениеОрганизации, 
	|	Данные.МесяцНалоговогоПериода
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Данные.ФизЛицо, 
	|	Данные.МесяцНалоговогоПериода,
	|	Данные.СтруктурнаяЕдиница,
	|	Данные.ПодразделениеОрганизации
	|";
	
	Запрос.Текст = УдерживаемыеСуммыТекст;	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Перезаполним имеющиеся строки
	Если РасчетИПН Тогда
		Объект.УдержанныйИПН.Очистить();
	КонецЕсли;
	Если РасчетОПВ Тогда
		Объект.УдержанныйОПВ.Очистить();
	КонецЕсли;
	Если РасчетВОСМС Тогда
		Объект.УдержанныеВОСМС.Очистить();
	КонецЕсли;
	
	ТекущееФизЛицо = Неопределено;
	ТекущаяСтруктурнаяЕдиница = Неопределено;
	СальдоПоЗППрошлыхМесяцев = Новый Массив(3);
	
	МассивПравилОкругления = Новый Массив(3);
	МассивПравилОкругления[0] = ПроведениеРасчетовСервер.ПолучитьПравилоОкругленияВидаРасчета(Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог,Объект.ПериодРегистрации);
	МассивПравилОкругления[1] = ПроведениеРасчетовСервер.ПолучитьПравилоОкругленияВидаРасчета(Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, Объект.ПериодРегистрации);
	Если Объект.ПериодРегистрации >= '20220101' Тогда
		МассивПравилОкругления[2] = Новый Структура("МетодОкругления, ПорядокОкругления, Период", Перечисления.МетодыОкругления.ПоАрифметическимПравилам, Перечисления.ПорядкиОкругления.Окр1,'20220101');
	Иначе	
		МассивПравилОкругления[2] = ПроведениеРасчетовСервер.ПолучитьПравилоОкругленияВидаРасчета(Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование, Объект.ПериодРегистрации);
	КонецЕсли;
	
	ЕстьДанные = Выборка.Следующий();
	
	Пока ЕстьДанные Цикл
		// Начало данных по новому физлицу
		ТекущееФизЛицо = Выборка.ФизЛицо;		
		ТекущаяСтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
		ТекущееПодразделениеОрганизации = Выборка.ПодразделениеОрганизации;
		Для ВидСуммы = 0 По 2 Цикл
			СальдоПоЗППрошлыхМесяцев[ВидСуммы] = 0;
		КонецЦикла;
		
		Пока ЕстьДанные
			 И Выборка.ФизЛицо = ТекущееФизЛицо
			 И Выборка.СтруктурнаяЕдиница = ТекущаяСтруктурнаяЕдиница 
			 И Выборка.ПодразделениеОрганизации = ТекущееПодразделениеОрганизации Цикл
			 
			 Для ВидСуммы = 0 По 2 Цикл
			 	 
			 	Если ВидСуммы = 0 Тогда // перечисление ИПН 
			 		Если РасчетИПН Тогда
			 			НачисленоЗП = Выборка.НачисленоЗП;
			 			ВыплаченоЗП = Выборка.ВыплаченоЗП;
			 			СальдоПоЗП  = Выборка.СальдоПоЗП;
			 			СальдоПоНалогуВзносу = Выборка.СальдоПоИПН;
			 		Иначе
			 			Продолжить; // ИПН рассчитывать не надо
			 		КонецЕсли;
			 	ИначеЕсли ВидСуммы = 1 Тогда // перечисление ОПВ
			 		Если РасчетОПВ Тогда
			 			НачисленоЗП = Выборка.НачисленоЗП;
			 			ВыплаченоЗП = Выборка.ВыплаченоЗП;
			 			СальдоПоЗП  = Выборка.СальдоПоЗП;
			 			СальдоПоНалогуВзносу = Выборка.СальдоПоОПВ;
			 		Иначе
			 			Продолжить; // ОПВ рассчитывать не надо
			 		КонецЕсли;
			 	ИначеЕсли ВидСуммы = 2 Тогда // перечисление ВОСМС
			 		Если РасчетВОСМС Тогда
			 			НачисленоЗП = Выборка.НачисленоЗП;
			 			ВыплаченоЗП = Выборка.ВыплаченоЗП;
			 			СальдоПоЗП  = Выборка.СальдоПоЗП;
			 			СальдоПоНалогуВзносу = Выборка.СальдоПоВОСМС;
			 		Иначе
			 			Продолжить; // ВОСМС рассчитывать не надо
			 		КонецЕсли;
			 	КонецЕсли;
			 
				КоэффициентПеречисления = 0;
				 
				Если Выборка.ОтсутствиеДанных Тогда
				 	// всю зарплату уже выплатили ранее (т.к. нет даже нач. сальдо по зарплате) - перечисляем всю сумму налогов/взносов
					КоэффициентПеречисления = 1;

				ИначеЕсли СальдоПоЗП + НачисленоЗП <= ВыплаченоЗП Тогда
					// выплатили всю зарплату или даже с авансом - перечисляем всю сумму налогов/взносов
					КоэффициентПеречисления = 1;					
					СальдоПоЗППрошлыхМесяцев[ВидСуммы] = СальдоПоЗППрошлыхМесяцев[ВидСуммы] + СальдоПоЗП + НачисленоЗП - ВыплаченоЗП;

				ИначеЕсли СальдоПоЗП + НачисленоЗП = 0 Тогда
				 	// за данный месяц была переплата, которая полностью погасилась начислением - перечисляем всю сумму налогов/взносов
					КоэффициентПеречисления = 1;
					СальдоПоЗППрошлыхМесяцев[ВидСуммы] = СальдоПоЗППрошлыхМесяцев[ВидСуммы] + СальдоПоЗП + НачисленоЗП - ВыплаченоЗП;

				ИначеЕсли СальдоПоЗППрошлыхМесяцев[ВидСуммы] < 0 Тогда // по прошлым месяцам была переплата - переносим ее при расчете суммы текущей выплаты
					// добавим к выплате за текущий месяц сальдо с прошлых месяцев 
					ДополнительноВыплачено = Мин( - СальдоПоЗППрошлыхМесяцев[ВидСуммы], СальдоПоЗП + НачисленоЗП - ВыплаченоЗП);
					КоэффициентПеречисления = (ВыплаченоЗП + ДополнительноВыплачено) / (СальдоПоЗП + НачисленоЗП);
					СальдоПоЗППрошлыхМесяцев[ВидСуммы] = СальдоПоЗППрошлыхМесяцев[ВидСуммы] + СальдоПоЗП + НачисленоЗП - ВыплаченоЗП - ДополнительноВыплачено;
				
				Иначе
					// самая обычная ситуация - перечисляем пропорционально выплаченному доходу
					КоэффициентПеречисления = ВыплаченоЗП / (СальдоПоЗП + НачисленоЗП);
					СальдоПоЗППрошлыхМесяцев[ВидСуммы] = СальдоПоЗППрошлыхМесяцев[ВидСуммы] + СальдоПоЗП + НачисленоЗП - ВыплаченоЗП;
					
				КонецЕсли;
				
				Если КоэффициентПеречисления <> 1 Тогда
					ПравилоОкругления 	= МассивПравилОкругления[ВидСуммы];
					СуммаКПеречислению 	= ОбщегоНазначенияБККлиентСервер.ОкруглитьЧисло(СальдоПоНалогуВзносу * КоэффициентПеречисления, ПравилоОкругления.ПорядокОкругления, ПравилоОкругления.МетодОкругления);
				Иначе
					// чтобы ничего не зависало из-за округления берем всю задолженность
					СуммаКПеречислению = СальдоПоНалогуВзносу;
				КонецЕсли;
					
				Если СуммаКПеречислению <> 0 Тогда
					Если ВидСуммы = 0 Тогда // перечисление ИПН
						СтрокаТЧ 		= Объект.УдержанныйИПН.Добавить();
						СтрокаТЧ.Налог 	= СуммаКПеречислению;
					ИначеЕсли ВидСуммы = 1 Тогда // перечисление ОПВ
						СтрокаТЧ 		= Объект.УдержанныйОПВ.Добавить();
						СтрокаТЧ.Взнос 	= СуммаКПеречислению;
					ИначеЕсли ВидСуммы = 2 Тогда // перечисление ВОСМС
						СтрокаТЧ 		= Объект.УдержанныеВОСМС.Добавить();
						СтрокаТЧ.Взнос 	= СуммаКПеречислению;
					КонецЕсли;
					
					СтрокаТЧ.ФизЛицо 					= Выборка.ФизЛицо;
					СтрокаТЧ.МесяцНалоговогоПериода 	= Выборка.МесяцНалоговогоПериода;
					СтрокаТЧ.СтруктурнаяЕдиница			= Выборка.СтруктурнаяЕдиница;
					СтрокаТЧ.ПодразделениеОрганизации 	= Выборка.ПодразделениеОрганизации;
				КонецЕсли;
				
			 КонецЦикла;
			 
			 ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры // РассчитатьВсе()

// Выполняет автоматическое заполнение документа по данным учетных регистров.
//
Функция Автозаполнение(Объект) Экспорт

	ГоловнаяОрганизация = ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Объект.Организация);
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("парамНачало" , Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонец" , КонецМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПослеКон" , КонецМесяца(Объект.ПериодРегистрации) + 1);
	Запрос.УстановитьПараметр("парамОрганизация" , Объект.Организация);
	Запрос.УстановитьПараметр("парамСтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПользователь" , Объект.Ответственный);
	Запрос.УстановитьПараметр("парамПодразделение" , Объект.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Год", Год(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("Принят", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("парамУдержание", Перечисления.РасчетыСБюджетомФондамиВидСтроки.Удержание);
	Запрос.УстановитьПараметр("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
    Запрос.УстановитьПараметр("парамСтруктурнаяЕдиница", ?(ЗначениеЗаполнено(Объект.СтруктурноеПодразделение),Объект.СтруктурноеПодразделение, Объект.Организация));
	
	// Виды платежей по ОПВ, по которым считается сумма подлежащая перечислению и, 
	// соответственно, потом будет считаться пеня
	СписокВидовПлатежей = Новый СписокЗначений;	
	СписокВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	СписокВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт);
	СписокВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам);
	
	Запрос.УстановитьПараметр("СписокВидовПлатежей", СписокВидовПлатежей);

	ПустоеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();

	Если Объект.ПодразделениеОрганизации = ПустоеПодразделение Тогда
		ПоВсемПодразделениямОрганизации = Истина;
		УсловиеНаПодразделение = "РаботникиОрганизации.ПодразделениеОрганизации.Владелец = &парамОрганизация";
	Иначе
		ПоВсемПодразделениямОрганизации = Ложь;
		УсловиеНаПодразделение = "РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)";
	КонецЕсли;
	
	//СписокРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и принятых за месяц,
	//	а также переведенных в середине месяца из других обособленных подразделений
	СписокРаботниковТекст = "
	|		// срез работников на начало месяца
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&парамНачало, 
	|						Организация = &парамГоловнаяОрганизация 
	|						И Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство) КАК РаботникиОрганизации
	|		ГДЕ
	|			РаботникиОрганизации.Организация = &парамГоловнаяОрганизация И
	|			РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|			И РаботникиОрганизации.СтруктурноеПодразделение = &парамСтруктурноеПодразделение
	|		"+?(ПоВсемПодразделениямОрганизации, "", "И "+УсловиеНаПодразделение)+"
	|		
	|		ОБЪЕДИНИТЬ
	|
	|		// движения работников за месяц
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|
	|           ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки,
	|									МАКСИМУМ(ПредыдущееНазначение.Период) КАК ДатаПредыдущегоНазначения
	|								ИЗ
	|									РегистрСведений.РаботникиОрганизаций КАК ТекущееНазначение
	|									ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущееНазначение
	|										ПО ТекущееНазначение.Сотрудник = ПредыдущееНазначение.Сотрудник
	|											И ПредыдущееНазначение.Организация = &парамГоловнаяОрганизация
	|											И ПредыдущееНазначение.Период < ТекущееНазначение.Период
	|											И ПредыдущееНазначение.Активность
	|								ГДЕ
	|									ТекущееНазначение.Период > &парамНачало
	|									И ТекущееНазначение.Период <= &парамКонец
	|									И ТекущееНазначение.Организация = &парамГоловнаяОрганизация
	|									И ТекущееНазначение.ОбособленноеПодразделение = &парамОрганизация
	|									И ТекущееНазначение.Активность
	|								СГРУППИРОВАТЬ ПО
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки) КАК ДатыПредыдущихНазначений
	|				ПО РаботникиОрганизации.Регистратор = ДатыПредыдущихНазначений.Регистратор
	|					И РаботникиОрганизации.НомерСтроки = ДатыПредыдущихНазначений.НомерСтроки
	|	
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущиеНазначения
	|				ПО РаботникиОрганизации.Сотрудник = ПредыдущиеНазначения.Сотрудник
	|					И ПредыдущиеНазначения.Организация = &парамГоловнаяОрганизация
	|					И ДатыПредыдущихНазначений.ДатаПредыдущегоНазначения = ПредыдущиеНазначения.Период
	|					И ПредыдущиеНазначения.Активность
	|		
	|		ГДЕ
	|			РаботникиОрганизации.Период > &парамНачало
	|			И РаботникиОрганизации.Период <= &парамКонец
	|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|			И (РаботникиОрганизации.ПричинаИзмененияСостояния = &Принят
	|					ИЛИ РаботникиОрганизации.ОбособленноеПодразделение <> ПредыдущиеНазначения.ОбособленноеПодразделение
	|					ИЛИ РаботникиОрганизации.СтруктурноеПодразделение <> ПредыдущиеНазначения.СтруктурноеПодразделение)
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|			И РаботникиОрганизации.СтруктурноеПодразделение = &парамСтруктурноеПодразделение
	|			И РаботникиОрганизации.Активность
	|			"+?(ПоВсемПодразделениямОрганизации, "", "И "+УсловиеНаПодразделение)+"
	|";
	
	// Физлица, по которым имеются остатки по ИПН на конец месяца
	ОстаткиИПНТекст = "
	|ВЫБРАТЬ
	|	ИПНРасчетыСБюджетом.ФизЛицо,
	|	ИПНРасчетыСБюджетом.СтруктурнаяЕдиница,
	|	ИПНРасчетыСБюджетом.НалогОстаток
	|ИЗ
	|	РегистрНакопления.ИПНРасчетыСБюджетом.Остатки(&парамПослеКон, Организация = &парамОрганизация) КАК ИПНРасчетыСБюджетом
	|";
	
	// ФизЛица, по которым имеются остатки по ОПВ на конец месяца
	ОстаткиОПВТекст = "
	|ВЫБРАТЬ
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница,
	|	СУММА(Данные.ВзносОстаток) КАК ВзносОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОПВРасчетыСФондами.ФизЛицо,
	|		ОПВРасчетыСФондами.СтруктурнаяЕдиница,
	|		ОПВРасчетыСФондами.ВзносОстаток
	|	ИЗ
	|		РегистрНакопления.ОПВРасчетыСФондами.Остатки(
	|					&парамПослеКон, 
	|					Организация = &парамОрганизация
	|					И ВидПлатежа В (&СписокВидовПлатежей)) КАК ОПВРасчетыСФондами
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ОПВПодлежитПеречислениюВФонды.ФизЛицо,
	|		ОПВПодлежитПеречислениюВФонды.СтруктурнаяЕдиница,
	|		- ОПВПодлежитПеречислениюВФонды.ВзносОстаток
	|	ИЗ
	|		РегистрНакопления.ОПВПодлежитПеречислениюВФонды.Остатки(
	|					&парамПослеКон,
	|					Организация = &парамОрганизация) КАК ОПВПодлежитПеречислениюВФонды) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО 
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница
	|
	|ИМЕЮЩИЕ 
	|	СУММА(Данные.ВзносОстаток) <> 0
	|";
	
	// ФизЛица, по которым имеются остатки по ВОСМС на конец месяца
	ОстаткиВОСМСТекст = "
	|ВЫБРАТЬ
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница,
	|	СУММА(Данные.ВзносОстаток) КАК ВзносОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВОСМСРасчетыСФондами.ФизЛицо,
	|		ВОСМСРасчетыСФондами.СтруктурнаяЕдиница,
	|		ВОСМСРасчетыСФондами.ВзносОстаток
	|	ИЗ
	|		РегистрНакопления.ВОСМСРасчетыСФондами.Остатки(
	|					&парамПослеКон, 
	|					Организация = &парамОрганизация
	|					И ВидПлатежа В (&СписокВидовПлатежей)) КАК ВОСМСРасчетыСФондами
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВОСМСПодлежитПеречислениюВФонды.ФизЛицо,
	|		ВОСМСПодлежитПеречислениюВФонды.СтруктурнаяЕдиница,
	|		- ВОСМСПодлежитПеречислениюВФонды.ВзносОстаток
	|	ИЗ
	|		РегистрНакопления.ВОСМСПодлежитПеречислениюВФонды.Остатки(
	|					&парамПослеКон,
	|					Организация = &парамОрганизация) КАК ВОСМСПодлежитПеречислениюВФонды) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО 
	|	Данные.ФизЛицо,
	|	Данные.СтруктурнаяЕдиница
	|
	|ИМЕЮЩИЕ 
	|	СУММА(Данные.ВзносОстаток) <> 0
	|";

	// В список физлиц добавим еще тех, кто не является работником,
	// но при этом по ним имеется остатки ИПН или ОПВ и нет движений по удержанию за месяц (напр, акты закупа)
	СписокРаботниковТекст = "
	|ВЫБРАТЬ
	|	РаботникиОрганизации.ФизЛицо
	|ИЗ
	|	(" + СписокРаботниковТекст + ") КАК РаботникиОрганизации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиИПН.ФизЛицо
	|ИЗ
	|	(" + ОстаткиИПНТекст + ") КАК ОстаткиИПН
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&парамКонец, 
	|				Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
	|		ПО ОстаткиИПН.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|
	|ГДЕ
	|	РаботникиОрганизации.Сотрудник ЕСТЬ NULL	
	|	И ОстаткиИПН.СтруктурнаяЕдиница = &парамСтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиОПВ.ФизЛицо
	|ИЗ
	|	(" + ОстаткиОПВТекст + ") КАК ОстаткиОПВ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&парамКонец, 
	|				Организация = &парамОрганизация) КАК РаботникиОрганизации
	|		ПО ОстаткиОПВ.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|
	|ГДЕ
	|	РаботникиОрганизации.Сотрудник ЕСТЬ NULL
	|	И ОстаткиОПВ.СтруктурнаяЕдиница = &парамСтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОстаткиВОСМС.ФизЛицо
	|ИЗ
	|	(" + ОстаткиВОСМСТекст + ") КАК ОстаткиВОСМС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&парамКонец, 
	|				Организация = &парамОрганизация) КАК РаботникиОрганизации
	|		ПО ОстаткиВОСМС.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|
	|ГДЕ
	|	РаботникиОрганизации.Сотрудник ЕСТЬ NULL
	|	И ОстаткиВОСМС.СтруктурнаяЕдиница = &парамСтруктурнаяЕдиница
	|";
	
	// заполнение табличной части "УдержанныйИПН"
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ОстаткиИПН.ФизЛицо,
	|	ОстаткиИПН.СтруктурнаяЕдиница,
	|	&парамНачало КАК МесяцНалоговогоПериода
	|ИЗ
	|	(" + ОстаткиИПНТекст + ") КАК ОстаткиИПН
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокРаботниковТекст + ") КАК Работники
	|		ПО ОстаткиИПН.ФизЛицо = Работники.ФизЛицо
	|";
	
	Объект.УдержанныйИПН.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// заполнение табличной части "УдержанныйОПВ"
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ОстаткиОПВ.ФизЛицо,
	|	ОстаткиОПВ.СтруктурнаяЕдиница,
	|	&парамНачало КАК МесяцНалоговогоПериода
	|ИЗ
	|	(" + ОстаткиОПВТекст + ") КАК ОстаткиОПВ
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокРаботниковТекст + ") КАК Работники
	|		ПО ОстаткиОПВ.ФизЛицо = Работники.ФизЛицо
	|";
	
	Объект.УдержанныйОПВ.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// заполнение табличной части "УдержанныеВОСМС"
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ОстаткиВОСМС.ФизЛицо,
	|	ОстаткиВОСМС.СтруктурнаяЕдиница,
	|	&парамНачало КАК МесяцНалоговогоПериода
	|ИЗ
	|	(" + ОстаткиВОСМСТекст + ") КАК ОстаткиВОСМС
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокРаботниковТекст + ") КАК Работники
	|		ПО ОстаткиВОСМС.ФизЛицо = Работники.ФизЛицо
	|";
	
	Объект.УдержанныеВОСМС.Загрузить(Запрос.Выполнить().Выгрузить());

КонецФункции // Автозаполнение()

// Процедура рассчитывает результат УдержанныйИПН.
//
Процедура РассчитатьИПН(Объект) Экспорт

	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьВсе(Объект, Истина, Ложь, Ложь);

КонецПроцедуры // РассчитатьИПН()

// Процедура рассчитывает результат УдержанныйОПВ.
//
Процедура РассчитатьОПВ(Объект) Экспорт
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	РассчитатьВсе(Объект, Ложь, Истина, Ложь);

КонецПроцедуры // РассчитатьОПВ()

// Процедура рассчитывает результат УдержанныеВОСМС.
//
Процедура РассчитатьВОСМС(Объект) Экспорт
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;

	РассчитатьВсе(Объект, Ложь, Ложь, Истина);

КонецПроцедуры // РассчитатьВОСМС()

// Процедура рассчитывает результаты всех табличных частей документа.
//
Процедура Рассчитать(Объект) Экспорт
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
		
	РассчитатьВсе(Объект, Истина, Истина, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.ПериодРегистрации);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Реквизиты.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	Запрос.УстановитьПараметр("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	Запрос.УстановитьПараметр("Организация", 			   	Реквизиты.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", 	Реквизиты.Организация);
	
	// массив пустых значений СтруктурнойЕдиницы
	МассивПустыеСтруктурныеЕдиницы = Новый Массив();
	МассивПустыеСтруктурныеЕдиницы.Добавить(Неопределено);
	МассивПустыеСтруктурныеЕдиницы.Добавить(Справочники.Организации.ПустаяСсылка());
	МассивПустыеСтруктурныеЕдиницы.Добавить(Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("ПустыеСтруктурныеЕдиницы", МассивПустыеСтруктурныеЕдиницы);

	ПодготовитьТаблицыДокумента(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаУдержанныйИПН(НомераТаблиц, Реквизиты)
					+ ТекстЗапросаУдержанныйОПВ(НомераТаблиц, Реквизиты)
					+ ТекстЗапросаУдержанныеВОСМС(НомераТаблиц, Реквизиты);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
			
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВременнаяТаблица_ДанныеДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблица_Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	УдержаниеИПНиОПВНУ.Ссылка,
		|	УдержаниеИПНиОПВНУ.Дата,
		|	УдержаниеИПНиОПВНУ.Организация,
		|	УдержаниеИПНиОПВНУ.СтруктурноеПодразделение,
		|	УдержаниеИПНиОПВНУ.ПодразделениеОрганизации,
		|	УдержаниеИПНиОПВНУ.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ КАК УдержаниеИПНиОПВНУ
		|ГДЕ
		|	УдержаниеИПНиОПВНУ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.СтруктурноеПодразделение,
		|	ДанныеДокумента.ПодразделениеОрганизации,
		|	ДанныеДокумента.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация
		|					ИНАЧЕ ДанныеДокумента.Организация
		|				КОНЕЦ
		|		ИНАЧЕ ДанныеДокумента.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций
		|ПОМЕСТИТЬ ВТ_Реквизиты
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&Период, ) КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Ссылка,
		|	Реквизиты.Дата,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.ГоловнаяОрганизация,
		|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокумента(Запрос, Реквизиты)
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УдержанныйИПН.НомерСтроки,
		|	УдержанныйИПН.ФизЛицо,
		|	УдержанныйИПН.МесяцНалоговогоПериода,
		|	УдержанныйИПН.ПодразделениеОрганизации,
		|	УдержанныйИПН.Налог,
		|	УдержанныйИПН.СтруктурнаяЕдиница
		|ПОМЕСТИТЬ ВТ_УдержанныйИПН
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ.УдержанныйИПН КАК УдержанныйИПН
		|ГДЕ
		|	УдержанныйИПН.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УдержанныйОПВ.НомерСтроки,
		|	УдержанныйОПВ.ФизЛицо,
		|	УдержанныйОПВ.МесяцНалоговогоПериода,
		|	УдержанныйОПВ.ПодразделениеОрганизации,
		|	УдержанныйОПВ.Взнос,
		|	УдержанныйОПВ.СтруктурнаяЕдиница
		|ПОМЕСТИТЬ ВТ_УдержанныйОПВ
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ.УдержанныйОПВ КАК УдержанныйОПВ
		|ГДЕ
		|	УдержанныйОПВ.Ссылка = &Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УдержанныеВОСМС.НомерСтроки,
		|	УдержанныеВОСМС.ФизЛицо,
		|	УдержанныеВОСМС.МесяцНалоговогоПериода,
		|	УдержанныеВОСМС.ПодразделениеОрганизации,
		|	УдержанныеВОСМС.Взнос,
		|	УдержанныеВОСМС.СтруктурнаяЕдиница
		|ПОМЕСТИТЬ ВТ_УдержанныеВОСМС
		|ИЗ
		|	Документ.УдержаниеИПНиОПВНУ.УдержанныеВОСМС КАК УдержанныеВОСМС
		|ГДЕ
		|	УдержанныеВОСМС.Ссылка = &Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	УдержанныйИПН.ФизЛицо,
		|	УдержанныйИПН.МесяцНалоговогоПериода КАК Период
		|ПОМЕСТИТЬ ВТ_ПериодыСотрудников
		|ИЗ 
		|	ВТ_УдержанныйИПН КАК УдержанныйИПН
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	УдержанныйОПВ.ФизЛицо,
		|	УдержанныйОПВ.МесяцНалоговогоПериода КАК Период
		|ИЗ 
		|	ВТ_УдержанныйОПВ КАК УдержанныйОПВ
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	УдержанныеВОСМС.ФизЛицо,
		|	УдержанныеВОСМС.МесяцНалоговогоПериода КАК Период
		|ИЗ 
		|	ВТ_УдержанныеВОСМС КАК УдержанныеВОСМС
		|";
			
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
					 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина, Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями И НЕ Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам);
		Результат = Запрос.Выполнить();
		
КонецПроцедуры

Функция ТекстЗапросаУдержанныйИПН(НомераТаблиц, Реквизиты) 
	
	НомераТаблиц.Вставить("УдержанныйИПН", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтрокаУдержанныйИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
		|	СтрокаУдержанныйИПН.ФизЛицо,
		|	ЕСТЬNULL(СтрокаУдержанныйИПН.Налог, 0) КАК Налог,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание) КАК ВидСтроки,
		|	СтрокаУдержанныйИПН.НомерСтроки,
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|				И Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СтрокаУдержанныйИПН.СтруктурнаяЕдиница В (&ПустыеСтруктурныеЕдиницы)
		|						ТОГДА СтрокаУдержанныйИПН.СтруктурнаяЕдиница
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СтрокаУдержанныйИПН.СтруктурнаяЕдиница В (&ПустыеСтруктурныеЕдиницы)
		|						ТОГДА СтрокаУдержанныйИПН.СтруктурнаяЕдиница
		|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL 
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА СтрокаУдержанныйИПН.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации
		|ИЗ
		|	ВТ_УдержанныйИПН КАК СтрокаУдержанныйИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаУдержанныйИПН.ФизЛицо = МестоРаботы.ФизЛицо
		|			И СтрокаУдержанныйИПН.МесяцНалоговогоПериода = МестоРаботы.Период
		|ГДЕ
		|	ЕСТЬNULL(СтрокаУдержанныйИПН.Налог, 0) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтрокаУдержанныйИПН.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаУдержанныйОПВ(НомераТаблиц, Реквизиты) 
	
	НомераТаблиц.Вставить("УдержанныйОПВ", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтрокаУдержанныйОПВ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	СтрокаУдержанныйОПВ.ФизЛицо,
		|	ЕСТЬNULL(СтрокаУдержанныйОПВ.Взнос, 0) КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание) КАК ВидСтроки,
		|	СтрокаУдержанныйОПВ.НомерСтроки,
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|				И Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СтрокаУдержанныйОПВ.СтруктурнаяЕдиница В (&ПустыеСтруктурныеЕдиницы)
		|						ТОГДА СтрокаУдержанныйОПВ.СтруктурнаяЕдиница
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СтрокаУдержанныйОПВ.СтруктурнаяЕдиница В (&ПустыеСтруктурныеЕдиницы)
		|						ТОГДА СтрокаУдержанныйОПВ.СтруктурнаяЕдиница
		|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL 
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА СтрокаУдержанныйОПВ.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации
		|ИЗ
		|	ВТ_УдержанныйОПВ КАК СтрокаУдержанныйОПВ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаУдержанныйОПВ.ФизЛицо = МестоРаботы.ФизЛицо
		|			И СтрокаУдержанныйОПВ.МесяцНалоговогоПериода = МестоРаботы.Период
		|ГДЕ
		|	ЕСТЬNULL(СтрокаУдержанныйОПВ.Взнос, 0) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтрокаУдержанныйОПВ.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаУдержанныеВОСМС(НомераТаблиц, Реквизиты) 
	
	НомераТаблиц.Вставить("УдержанныеВОСМС", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтрокаУдержанныеВОСМС.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	СтрокаУдержанныеВОСМС.ФизЛицо,
		|	ЕСТЬNULL(СтрокаУдержанныеВОСМС.Взнос, 0) КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание) КАК ВидСтроки,
		|	СтрокаУдержанныеВОСМС.НомерСтроки,
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|				И Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СтрокаУдержанныеВОСМС.СтруктурнаяЕдиница В (&ПустыеСтруктурныеЕдиницы)
		|						ТОГДА СтрокаУдержанныеВОСМС.СтруктурнаяЕдиница
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ СтрокаУдержанныеВОСМС.СтруктурнаяЕдиница В (&ПустыеСтруктурныеЕдиницы)
		|						ТОГДА СтрокаУдержанныеВОСМС.СтруктурнаяЕдиница
		|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL 
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА СтрокаУдержанныеВОСМС.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации
		|ИЗ
		|	ВТ_УдержанныеВОСМС КАК СтрокаУдержанныеВОСМС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаУдержанныеВОСМС.ФизЛицо = МестоРаботы.ФизЛицо
		|			И СтрокаУдержанныеВОСМС.МесяцНалоговогоПериода = МестоРаботы.Период
		|ГДЕ
		|	ЕСТЬNULL(СтрокаУдержанныеВОСМС.Взнос, 0) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтрокаУдержанныеВОСМС.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли