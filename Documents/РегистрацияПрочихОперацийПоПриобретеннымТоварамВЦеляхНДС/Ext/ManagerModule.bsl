#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	
	// расчеты с поставщиком
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "РасчетыСПоставщиком");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТребуетсяУчетРасчетов");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "КорректировкаПрочее");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ОтложитьПринятиеНДСКЗачету");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "ОтложенныйНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТребуетсяУчетРасчетов");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "КорректировкаПрочее");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтложитьПринятиеНДСКЗачету");
	
	//СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаРасчетовПоАвансам", "АвансыПоставщику");
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовПоАвансам", "АвансыПоставщику");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТребуетсяУчетАвансов");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "КорректировкаПрочее");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ОтложитьПринятиеНДСКЗачету");
	
	// затраты по НДС при корректировке прочего оборота
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетЗатратНДСБУ", "ПрочиеРасходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "КорректировкаПрочее");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоЗатратНДСБУ1", "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоЗатратНДСБУ2", "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоЗатратНДСБУ3", "СубконтоЗатрат3");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетЗатратНДСНУ", "ПрочиеРасходыНУ");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "КорректировкаПрочее");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "ПлательщикНалогаНаПрибыль");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоЗатратНДСНУ1", "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание", "СубконтоЗатратНДСБУ1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоЗатратНДСНУ2", "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание", "СубконтоЗатратНДСБУ2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СубконтоЗатратНДСНУ3", "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Основание", "СубконтоЗатратНДСБУ3");
	
	// Табличная часть Товары
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНДС",   "ПредъявленныйНДС_Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "НДСВключенВСтоимость");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "НДСВидОборота", "ВидОборотаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС",    "СтавкаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "НДСВидПоступления",   "ВидПоступленияНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС",    "СтавкаНДС");
	
	// Табличная часть Услуги
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетУчетаНДС", "ПредъявленныйНДС_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "НДСВидОборота", "ВидОборотаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "НДСВидПоступления", "ВидПоступленияНДСПредъявленного_Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС",    "СтавкаНДС");
	
	// Табличная часть ОсновныеСредства
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "СчетУчетаНДС", "ПредъявленныйНДС_ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "НДСВидОборота", "ВидОборотаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "НДСВидПоступления", "ВидПоступленияНДСПредъявленного_ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	
	// Табличная часть НематериальныеАктивы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "НМА", "СчетУчетаНДС", "ПредъявленныйНДС_НематериальныеАктивы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "НематериальныйАктив", "НематериальныйАктив");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОтражатьВБухУчете");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "НМА", "НДСВидОборота", "ВидОборотаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "НематериальныйАктив", "НематериальныйАктив");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "НМА", "НДСВидПоступления", "ВидПоступленияНДСПредъявленного_НематериальныеАктивы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "НематериальныйАктив", "НематериальныйАктив");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СтавкаНДС", "СтавкаНДС");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "СтруктурноеПодразделение");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "УчитыватьНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "УчитыватьКПН");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ДокументОснование");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "КорректировкаПрочее",   "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ТребуетсяУчетРасчетов", "ВидОперации, ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ТребуетсяУчетАвансов",  "ВидОперации, ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ОтражатьВБухУчете",     "ОтражатьВБухгалтерскомУчете");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ОтложитьПринятиеНДСКЗачету", "ДокументОснование");
	
КонецПроцедуры

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("КорректировкаПрочее") Тогда
		
		ДанныеЗаполнения.КорректировкаПрочее = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаПрочее);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ТребуетсяУчетРасчетов") Или ДанныеЗаполнения.Свойство("ТребуетсяУчетАвансов") Тогда
		
		ОсобенностиДокумента = ОсобенностиУчетаРасчетов(ДанныеЗаполнения.ВидОперации, ДанныеЗаполнения.ДоговорКонтрагента);
		
		ДокументОснование    = ДанныеЗаполнения.ДокументОснование;
		Если ЗначениеЗаполнено(ДокументОснование) И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов") Тогда
			ОсобенностиДокумента.ТребуетсяУчетАвансов = Ложь;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, ОсобенностиДокумента);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ОтражатьВБухУчете") Тогда
		
		ДанныеЗаполнения.ОтражатьВБухУчете = ДанныеЗаполнения.ОтражатьВБухгалтерскомУчете;
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ОтложитьПринятиеНДСКЗачету") Тогда
		
		ДокументОснование          = ДанныеЗаполнения.ДокументОснование;
		ОтложитьПринятиеНДСКЗачету = Ложь;
		
		Если ЗначениеЗаполнено(ДокументОснование)
			И Метаданные.Документы[ДокументОснование.Метаданные().Имя].Реквизиты.Найти("ОтложитьПринятиеНДСКЗачету") <> Неопределено Тогда
			ОтложитьПринятиеНДСКЗачету = ДокументОснование.ОтложитьПринятиеНДСКЗачету;
		КонецЕсли;
		
		ДанныеЗаполнения.ОтложитьПринятиеНДСКЗачету = ОтложитьПринятиеНДСКЗачету;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОсобенностиУчетаРасчетов(ВидОперации, ДоговорКонтрагента) Экспорт
	
	ОсобенностиДокумента = УправлениеВзаиморасчетамиСервер.НовыйОсобенностиУчетаРасчетовДокумента();
	
	Если ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаПрочее Тогда
		ОсобенностиДокумента.ТребуетсяУчетРасчетов = Ложь;
		ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = Ложь;
	КонецЕсли;
	
	Если Не ОсобенностиДокумента.ТребуетсяУчетРасчетов Тогда
		ОсобенностиДокумента.ТребуетсяУчетАвансов = Ложь;
		ОсобенностиДокумента.ТребуетсяУчетСроковОплаты = Ложь;
	КонецЕсли;
	
	Возврат ОсобенностиДокумента;
	
КонецФункции

#Область УстаревшиеПроцедурыИФункции

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация");
	
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	Если ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "Услуги" Тогда
		СоответствиеСчетовУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаСпискаНоменклатуры(
			ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Дата);
			
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
			ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
		КонецЦикла;
			
	ИначеЕсли ИмяТабличнойЧасти = "ОС" Тогда
		СоответствиеСчетовУчета = УправлениеВнеоборотнымиАктивамиСервер.ПолучитьСчетаУчетаСпискаОС(
			ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "ОсновноеСредство", Истина), ДанныеОбъекта.Дата);
			
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.ОсновноеСредство);
			ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
		КонецЦикла;
			
	Иначе
			
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			СчетаУчета = Новый Структура("СчетУчетаБУ, СчетУчетаНДСПоПриобретению", ПланыСчетов.Типовой.ПустаяСсылка(), ПланыСчетов.Типовой.НалогНаДобавленнуюСтоимостьКВозмещению);
			ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
		КонецЦикла;
			
	КонецЕсли;

КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре, ВключаяЗаполненные = Истина) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСПоПриобретению) Тогда
		Если ВключаяЗаполненные ИЛИ НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчетаНДС) Тогда				
			СтрокаТабличнойЧасти.СчетУчетаНДС = СчетаУчета.СчетУчетаНДСПоПриобретению;
		КонецЕсли;
		
	Иначе
		Если ВключаяЗаполненные ИЛИ НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчетаНДС) Тогда				
			СтрокаТабличнойЧасти.СчетУчетаНДС = ПланыСчетов.Типовой.НалогНаДобавленнуюСтоимостьКВозмещению;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект) Экспорт
	
	ЗаполнятьСчетаРасчетов = Истина;
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		МетаданныеДокумента = Объект.ДокументОснование.Метаданные();
		
		Если (ОбщегоНазначенияБК.ЕстьРеквизитДокумента("ОтложитьПринятиеНДСКЗачету",МетаданныеДокумента) И Объект.ДокументОснование.ОтложитьПринятиеНДСКЗачету) 
			ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда		
			Объект.СчетУчетаРасчетовСКонтрагентом  = ПланыСчетов.Типовой.НДСНачисленныйПриПокупке;
			Объект.СчетУчетаРасчетовПоАвансам      = ПланыСчетов.Типовой.ПустаяСсылка();
			ЗаполнятьСчетаРасчетов = Ложь;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаполнятьСчетаРасчетов Тогда
		
		СчетаУчета = УправлениеВзаиморасчетамиСервер.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
		
		Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
		Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
	КонецЕсли;
	
КонецПроцедуры

// Производит заполнение и установку реквизитов налогового учета и НДС в табличной части
//
Процедура ЗаполнитьРеквизитыНалоговогоУчета(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти) Экспорт
	
	МетаданныеДокумента = ДанныеОбъекта.Ссылка.Метаданные();
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидОборотаТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта, ИмяТабличнойЧасти, МетаданныеДокумента);
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидПоступленияТабЧасти(СтрокаТабличнойЧасти, ИмяТабличнойЧасти, МетаданныеДокумента, Пользователи.ТекущийПользователь());		

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	Если ОбщегоНазначенияБККлиентСервер.ЭтоПростаяВерсияКонфигурации() Тогда
		БлокируемыеРеквизиты.Добавить("Дата");
		БлокируемыеРеквизиты.Добавить("Номер");
		БлокируемыеРеквизиты.Добавить("ВалютаДокумента");
		БлокируемыеРеквизиты.Добавить("ВидОперации");
		БлокируемыеРеквизиты.Добавить("ДатаВходящегоДокумента");
		БлокируемыеРеквизиты.Добавить("НомерВходящегоДокумента");
		БлокируемыеРеквизиты.Добавить("ВидВходящегоДокумента");
		БлокируемыеРеквизиты.Добавить("ДокументОснование; ДокументОснование"); //сделано специально для формы Дополнительно
		БлокируемыеРеквизиты.Добавить("Контрагент");
		БлокируемыеРеквизиты.Добавить("ДоговорКонтрагента");
		БлокируемыеРеквизиты.Добавить("КурсВзаиморасчетов");
		БлокируемыеРеквизиты.Добавить("КратностьВзаиморасчетов");
		БлокируемыеРеквизиты.Добавить("Организация; СтруктурноеПодразделениеОрганизация");
		БлокируемыеРеквизиты.Добавить("СуммаДокумента");
		БлокируемыеРеквизиты.Добавить("СтруктурноеПодразделение");
		БлокируемыеРеквизиты.Добавить("ОтражатьВБухгалтерскомУчете");
		
		// таб. часть Товары
		БлокируемыеРеквизиты.Добавить("Товары; ТоварыПодборТМЗ, ТоварыИзменитьТМЗ, ТоварыГруппаЗаполнить,
			|ТоварыСкопироватьСтроки, ТоварыВставитьСтроки, ТоварыКонтекстноеМенюСкопироватьСтроки, ТоварыКонтекстноеМенюВставитьСтроки");
		БлокируемыеРеквизиты.Добавить("Товары.Номенклатура; ТоварыНоменклатура");
		БлокируемыеРеквизиты.Добавить("Товары.Количество; ТоварыКоличество");
		БлокируемыеРеквизиты.Добавить("Товары.ЕдиницаИзмерения; ТоварыЕдиницаИзмерения");
		БлокируемыеРеквизиты.Добавить("Товары.Цена; ТоварыЦена");
		БлокируемыеРеквизиты.Добавить("Товары.СтавкаНДС; ТоварыСтавкаНДС");
		БлокируемыеРеквизиты.Добавить("Товары.Сумма; ТоварыСумма");
		БлокируемыеРеквизиты.Добавить("Товары.СуммаНДС; ТоварыСуммаНДС");
		БлокируемыеРеквизиты.Добавить("Товары.УплаченныйНДС; ТоварыУплаченныйНДС");
		БлокируемыеРеквизиты.Добавить("Товары.Коэффициент; ТоварыКоэффициент");
		БлокируемыеРеквизиты.Добавить("Товары.НомерГТД; ТоварыНомерГТД");
		// таб. часть Услуги
		БлокируемыеРеквизиты.Добавить("Услуги; УслугиГруппаЗаполнить, УслугиПодборУслуги, УслугиИзменитьУслуги,
			|УслугиСкопироватьСтроки, УслугиВставитьСтроки, УслугиКонтекстноеМенюСкопироватьСтроки, УслугиКонтекстноеМенюВставитьСтроки");
		БлокируемыеРеквизиты.Добавить("Услуги.Номенклатура; УслугиНоменклатура");
		БлокируемыеРеквизиты.Добавить("Услуги.Количество; УслугиКоличество");
		БлокируемыеРеквизиты.Добавить("Услуги.Цена; УслугиЦена");
		БлокируемыеРеквизиты.Добавить("Услуги.Сумма; УслугиСумма");
		БлокируемыеРеквизиты.Добавить("Услуги.СуммаНДС; УслугиСуммаНДС");
		БлокируемыеРеквизиты.Добавить("Услуги.СтавкаНДС; УслугиСтавкаНДС");
		БлокируемыеРеквизиты.Добавить("Услуги.УплаченныйНДС; УслугиУплаченныйНДС");
		
		// таб. часть ОС
		БлокируемыеРеквизиты.Добавить("ОС; ОСПодборОС, ОСИзменитьОС, ОСГруппаЗаполнить");
		БлокируемыеРеквизиты.Добавить("ОС.ОсновноеСредство; ОСОсновноеСредство");
		БлокируемыеРеквизиты.Добавить("ОС.СтавкаНДС; ОССтавкаНДС");
		БлокируемыеРеквизиты.Добавить("ОС.Сумма; ОССумма");
		БлокируемыеРеквизиты.Добавить("ОС.СуммаНДС; ОССуммаНДС");
		БлокируемыеРеквизиты.Добавить("ОС.УплаченныйНДС; ОСУплаченныйНДС");
		БлокируемыеРеквизиты.Добавить("ОС.ГТД; ОСГТД");
		
		// таб. часть НМА
		БлокируемыеРеквизиты.Добавить("НМА; НМАПодборНМА, НМАИзменитьНМА, НМАГруппаЗаполнить");
		БлокируемыеРеквизиты.Добавить("НМА.НематериальныйАктив; НМАНематериальныйАктив");
		БлокируемыеРеквизиты.Добавить("НМА.СтавкаНДС; НМАСтавкаНДС");
		БлокируемыеРеквизиты.Добавить("НМА.Сумма; НМАСумма");
		БлокируемыеРеквизиты.Добавить("НМА.СуммаНДС; НМАСуммаНДС");
		БлокируемыеРеквизиты.Добавить("НМА.УплаченныйНДС; НМАУплаченныйНДС");
		
	КонецЕсли;
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ЗаполнитьПоДокументамСписанияДС(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина) Экспорт
					
	Если ЗаполнятьШапкуДокумента Тогда 
		
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
			 
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
		
		//проверим заполнено ли поле "СчетОргганизации" в платежном документе
		ДанныеОбъекта.УчитыватьНДС     = Истина;
		ДанныеОбъекта.СуммаВключаетНДС = Ложь;
			
		ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.РегистрацияОборотаПоРеализации;
		ДанныеОбъекта.ВалютаДокумента = ДанныеЗаполнения.ВалютаДокумента;
			
		Если ЗначениеЗаполнено(ДанныеЗаполнения.СчетОрганизации) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	БанковскиеСчета.Банк,
				|	БанковскиеСчета.ДоговорКонтрагента,
				|	БанковскиеСчета.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
				|	БанковскиеСчета.Банк.Контрагент КАК Контрагент,
				|	БанковскиеСчета.СтавкаНДС
				|ИЗ
				|	Справочник.БанковскиеСчета КАК БанковскиеСчета
				|ГДЕ
				|	БанковскиеСчета.Ссылка = &Ссылка";

			Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.СчетОрганизации);

			РеквизитыСчетаОрганизации = Запрос.Выполнить().Выбрать();

			РеквизитыСчетаОрганизации.Следующий();

			ДанныеОбъекта.Контрагент = РеквизитыСчетаОрганизации.Контрагент;
			ДанныеОбъекта.ДоговорКонтрагента = РеквизитыСчетаОрганизации.ДоговорКонтрагента;
			
			СтруктураКурсаВзаиморасчетов = ОбщегоНазначенияБК.ПолучитьКурсВалюты(РеквизитыСчетаОрганизации.ВалютаВзаиморасчетов, ТекущаяДата());
			ДанныеОбъекта.КурсВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Курс;
			ДанныеОбъекта.КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.ВключатьКомиссиюБанка И ДанныеЗаполнения.СуммаКомиссии <> 0 Тогда 
		
		НоваяСтрока = ДанныеОбъекта.Услуги.Добавить();
		НоваяСтрока.Содержание = НСтр("ru='Услуги банка'", ОбщегоНазначения.КодОсновногоЯзыка());
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена       = ДанныеЗаполнения.СуммаКомиссии;
		НоваяСтрока.СтавкаНДС  = ДанныеЗаполнения.СчетОрганизации.СтавкаНДС;
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрока);
		
		ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
		ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
		
		ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
			|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
		ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);
				
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина);
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);
		
		НоваяСтрока.СчетУчетаНДС = ДанныеЗаполнения.СчетОрганизации.СчетУчетаНДС;
		НоваяСтрока.НДСВидПоступления = ДанныеЗаполнения.СчетОрганизации.НДСВидПоступления;
		НоваяСтрока.НДСВидОборота     = ДанныеЗаполнения.СчетОрганизации.НДСВидОборота;
		
	КонецЕсли;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаявлениюОВвозеТоваровИУплатеКосвенныхНалогов(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина, СтруктураТЧ = Неопределено) Экспорт
					
	Если ЗаполнятьШапкуДокумента Тогда
	
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
			
		// Документ не имеет смысла без данного признака
		ДанныеОбъекта.УчитыватьНДС = Истина;	
		// Меняем валюту на валюту рег. учета
		ДанныеОбъекта.ВалютаДокумента = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		//из документа основания
		Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ВалютаДокумента) Тогда
			ДанныеОбъекта.ВалютаДокумента 		   = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
			ДанныеОбъекта.КурсВзаиморасчетов 	   = 1;
			ДанныеОбъекта.КратностьВзаиморасчетов  = 1;		
		КонецЕсли;
		
		ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.РегистрацияОборотаПоРеализации;
		
		СчетУчетаРасчетовСКонтрагентом = ДанныеЗаполнения.СчетЗатратНДСБУ;
		Если НЕ ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом) Тогда
			СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Типовой.ПрочиеКраткосрочныеАктивы;
		КонецЕсли;
		ДанныеОбъекта.СчетУчетаРасчетовСКонтрагентом = СчетУчетаРасчетовСКонтрагентом;
	
	КонецЕсли;
	
	Если СтруктураТЧ = Неопределено Тогда
		// заполним табличные части
		// структура табличных частей документа основания для заполнения	
		СтруктураТЧ = Новый Структура;
		МетаданныеДокумента = ДанныеЗаполнения.Метаданные();
		Для Каждого ТабЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл			
			
			ИмяТабЧастиОснование = ТабЧасть.Имя;
			ИмяТабЧастиОбъекта   = ИмяТабЧастиОснование;		
			
			ТабличнаяЧасть = ДанныеОбъекта.Ссылка.Метаданные().ТабличныеЧасти.Найти(ИмяТабЧастиОбъекта); 
			
			Если НЕ ТабличнаяЧасть = Неопределено Тогда
				СтруктураТЧ.Вставить(ИмяТабЧастиОбъекта, ИмяТабЧастиОснование);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);

	Для Каждого ЗначениеТЧ Из СтруктураТЧ Цикл		
		
		ИмяТабЧастиОбъекта   = ЗначениеТЧ.Ключ;
		ИмяТабЧастиОснование = ЗначениеТЧ.Значение;
		
		Если ИмяТабЧастиОснование = "УчастникиСовместнойДеятельности" Тогда 	
			ДанныеОбъекта.УчастникиСовместнойДеятельности.Загрузить(ДанныеЗаполнения.УчастникиСовместнойДеятельности.Выгрузить());
			Продолжить;
		КонецЕсли;
		
		Для Каждого Строка Из ДанныеЗаполнения[ИмяТабЧастиОснование] Цикл			
			
			// для НДС методом зачета не отражаем принятие к учету после оплаты
			// так как при оформлении Заявления движения по НДС к возмещению были сделаны сразу
			Если Строка.ВидНДС = Перечисления.ВидыНДС.НДСМетодомЗачета Тогда
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрока = ДанныеОбъекта[ИмяТабЧастиОбъекта].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.СчетУчетаНДС = Строка.СчетУчетаНДСКВозмещению;
			
			НоваяСтрока.Сумма = Строка.ОборотПоРеализации;
			Если ИмяТабЧастиОбъекта = "Товары" Тогда
				ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(НоваяСтрока);
			КонецЕсли;	
			
			ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
			
			Если ИмяТабЧастиОснование = "Товары" Тогда
				ДанныеСтрокаТаблицы.Вставить("Коэффициент");
				ДанныеСтрокаТаблицы.Вставить("НомерГТД");
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина); 
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);

		КонецЦикла;
		
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьПоСписаниюОС(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина) Экспорт
					
	Если ЗаполнятьШапкуДокумента Тогда
		
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
			
		// Документ не имеет смысла без данного признака
		ДанныеОбъекта.УчитыватьНДС     = Истина;
		ДанныеОбъекта.СуммаВключаетНДС = Ложь; 
				
		ВалютаРеглУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		//из документа основания
		Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ВалютаДокумента) Тогда
			ДанныеОбъекта.ВалютаДокумента 		   = ВалютаРеглУчета;
		КонецЕсли;
		
		Если ДанныеОбъекта.ВалютаДокумента = ВалютаРеглУчета Тогда			
			ДанныеОбъекта.КурсВзаиморасчетов 	   = 1;
			ДанныеОбъекта.КратностьВзаиморасчетов  = 1;		
		КонецЕсли;   		
		
		ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаПрочее;
						   
		МетаданныеДокумента = ДанныеЗаполнения.ПолучитьОбъект().Метаданные();	
	
	КонецЕсли;
	
	// заполним табличные части
	// структура табличных частей документа основания для заполнения	
	СтруктураТЧ = Новый Структура;
	// ТЧ "Товары" Списания ОС не учитываем
	СтруктураТЧ.Вставить("ОС", "ОС");		

	Для Каждого ЗначениеТЧ Из СтруктураТЧ Цикл		
		
		ИмяТабЧастиОбъекта = ЗначениеТЧ.Ключ;
		ИмяТабЧастиОснование = ЗначениеТЧ.Значение;
		
		Для Каждого Строка Из ДанныеЗаполнения[ИмяТабЧастиОснование] Цикл			
			
			НоваяСтрока = ДанныеОбъекта[ИмяТабЧастиОбъекта].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			// меняем знак корректировки, так как сумма подлежит исключению из зачета.
			НоваяСтрока.Сумма = - (Строка.СтоимостьБУ - Строка.АмортизацияБУ - Строка.АмортизацияЗаМесяцБУ);
			// устанавливаем ставку НДС по умолчанию
			НоваяСтрока.СтавкаНДС = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
			
			ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
						
			ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
			
			ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
				|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина); 
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);

		КонецЦикла;
		
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьПоСписаниюТоваров(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина) Экспорт
	
	Если ЗаполнятьШапкуДокумента Тогда
						
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
			
		// Документ не имеет смысла без данного признака
		ДанныеОбъекта.УчитыватьНДС = Истина;	
		
		ВалютаРеглУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		//из документа основания
		Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ВалютаДокумента) Тогда
			ДанныеОбъекта.ВалютаДокумента 		   = ВалютаРеглУчета;
		КонецЕсли;
		
		Если ДанныеОбъекта.ВалютаДокумента = ВалютаРеглУчета Тогда			
			ДанныеОбъекта.КурсВзаиморасчетов 	   = 1;
			ДанныеОбъекта.КратностьВзаиморасчетов  = 1;		
		КонецЕсли;   		
		
		ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаПрочее;
		
		ДанныеОбъекта.СуммаВключаетНДС = Ложь;
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТиповойДвиженияССубконто.СубконтоКт1 КАК Номенклатура,
	                      |	СУММА(ТиповойДвиженияССубконто.КоличествоКт) КАК Количество,
	                      |	СУММА(ТиповойДвиженияССубконто.Сумма) КАК Сумма,
	                      |	СУММА(1) КАК Коэффициент
	                      |ИЗ
	                      |	РегистрБухгалтерии.Типовой.ДвиженияССубконто(
	                      |			&ДатаНачала,
	                      |			&ДатаОкончания,
	                      |			Регистратор = &Ссылка
	                      |				И ВидСубконтоКт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура),
	                      |			,
	                      |			) КАК ТиповойДвиженияССубконто
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТиповойДвиженияССубконто.СубконтоКт1");
						  
	Запрос.УстановитьПараметр("ДатаНачала",		ДанныеЗаполнения.Дата);
	Запрос.УстановитьПараметр("ДатаОкончания", 	ДанныеЗаполнения.Дата);
	Запрос.УстановитьПараметр("Ссылка",	 		ДанныеЗаполнения.Ссылка);
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ДанныеОбъекта.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Количество = НоваяСтрока.Количество * -1;
			НоваяСтрока.Сумма      = НоваяСтрока.Сумма * -1;
			
			ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(НоваяСтрока, "Товары", ДанныеОбъекта.Ссылка.Метаданные());
			         
			ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество,Коэффициент, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
			
			ДанныеСтрокаТаблицы.Вставить("НомерГТД");
			
			ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
			
			ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
				|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);	
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина);  
					
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);        						
			 	
			ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(НоваяСтрока);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьПоПоступлениюДопРасходов(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина, СтруктураТЧ = Неопределено) Экспорт
					
	Если ЗаполнятьШапкуДокумента Тогда
		
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
			
		// Документ не имеет смысла без данного признака
		ДанныеОбъекта.УчитыватьНДС = Истина;	
		
		//из документа основания
		Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ВалютаДокумента) Тогда
			ДанныеОбъекта.ВалютаДокумента 		   = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
			ДанныеОбъекта.КурсВзаиморасчетов 	   = 1;
			ДанныеОбъекта.КратностьВзаиморасчетов  = 1;		
		КонецЕсли;
		
		ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.РегистрацияОборотаПоРеализации;
		
	КонецЕсли;

	Если СтруктураТЧ = Неопределено
		ИЛИ (СтруктураТЧ <> Неопределено
		     И СтруктураТЧ.Свойство("Услуги")) Тогда
	
		НоваяСтрока = ДанныеОбъекта.Услуги.Добавить();
		НоваяСтрока.Содержание   = ДанныеЗаполнения.Содержание;
		НоваяСтрока.Номенклатура = ДанныеЗаполнения.Номенклатура;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.Цена       = ДанныеЗаполнения.Сумма;
		НоваяСтрока.СтавкаНДС  = ДанныеЗаполнения.СтавкаНДС;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрока);
		
		ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
		ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
		
		ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
			|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
		ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина);    
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);
		
		Если СтруктураТЧ <> Неопределено Тогда
			СтруктураТЧ.Очистить();
		КонецЕсли;
		
	КонецЕсли;

	МетаданныеДокумента = ДанныеЗаполнения.ПолучитьОбъект().Метаданные();	
	
	Если ЗаполнятьШапкуДокумента Тогда
		
		Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента("ОтложитьПринятиеНДСКЗачету", МетаданныеДокумента) И ДанныеЗаполнения.ОтложитьПринятиеНДСКЗачету Тогда		
			ДанныеОбъекта.СчетУчетаРасчетовСКонтрагентом  = ПланыСчетов.Типовой.НДСНачисленныйПриПокупке;
			ДанныеОбъекта.СчетУчетаРасчетовПоАвансам      = ПланыСчетов.Типовой.ПустаяСсылка();

		Иначе
			ДанныеОбъекта.СчетУчетаРасчетовСКонтрагентом = ДанныеЗаполнения.СчетУчетаРасчетовСКонтрагентом;	
			ДанныеОбъекта.СчетУчетаРасчетовПоАвансам = ДанныеЗаполнения.СчетУчетаРасчетовПоАвансам;
		КонецЕсли;
		
	КонецЕсли;

	Если СтруктураТЧ = Неопределено Тогда
		// заполним табличные части
		// структура табличных частей документа основания для заполнения	
		СтруктураТЧ = Новый Структура;
			
		Для Каждого ТабЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл			
			
			ИмяТабЧастиОснование = ТабЧасть.Имя;
			ИмяТабЧастиОбъекта   = ИмяТабЧастиОснование;		
			
			ТабличнаяЧасть = ДанныеОбъекта.Ссылка.Метаданные().ТабличныеЧасти.Найти(ИмяТабЧастиОбъекта); 
			
			Если НЕ ТабличнаяЧасть = Неопределено Тогда
				СтруктураТЧ.Вставить(ИмяТабЧастиОбъекта, ИмяТабЧастиОснование);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	Для Каждого ЗначениеТЧ Из СтруктураТЧ Цикл		
		
		ИмяТабЧастиОбъекта = ЗначениеТЧ.Ключ;
		ИмяТабЧастиОснование = ЗначениеТЧ.Значение;
		
		Если ИмяТабЧастиОснование = "УчастникиСовместнойДеятельности" Тогда 	
			ДанныеОбъекта.УчастникиСовместнойДеятельности.Загрузить(ДанныеЗаполнения.УчастникиСовместнойДеятельности.Выгрузить());
			Продолжить;
		КонецЕсли;
		
		Для Каждого Строка Из ДанныеЗаполнения[ИмяТабЧастиОснование] Цикл	
			
			Если НЕ ЗначениеЗаполнено(Строка.Сумма) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ДанныеОбъекта[ИмяТабЧастиОбъекта].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.СтавкаНДС = ДанныеЗаполнения.СтавкаНДС;
			
			ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
			
			Если ИмяТабЧастиОснование = "Товары" Тогда
				ДанныеСтрокаТаблицы.Вставить("Коэффициент");
				ДанныеСтрокаТаблицы.Вставить("НомерГТД");
				ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииСуммыТабЧасти(НоваяСтрока);
			КонецЕсли;		
							
			ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
			
			ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
				|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина); 
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);

		КонецЦикла;
	КонецЦикла;     	
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

// Процедура выполняет заполнение документа по документу-основанию
//
Процедура ЗаполнитьПоАвансовомуОтчету(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина, СтруктураТЧ = Неопределено) Экспорт
	
	Если ЗаполнятьШапкуДокумента Тогда
	
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
		
		ДанныеОбъекта.ВалютаДокумента 		   = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		ДанныеОбъекта.КурсВзаиморасчетов 	   = 1;
		ДанныеОбъекта.КратностьВзаиморасчетов  = 1;		
		
		ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.РегистрацияОборотаПоРеализации;
		МетаданныеДокумента = ДанныеЗаполнения.ПолучитьОбъект().Метаданные();	
		
		Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента("ОтложитьПринятиеНДСКЗачету", МетаданныеДокумента) И ДанныеЗаполнения.ОтложитьПринятиеНДСКЗачету Тогда		
			ДанныеОбъекта.СчетУчетаРасчетовСКонтрагентом  = ПланыСчетов.Типовой.НДСНачисленныйПриПокупке;
			ДанныеОбъекта.СчетУчетаРасчетовПоАвансам      = ПланыСчетов.Типовой.ПустаяСсылка();
		КонецЕсли;
	
	КонецЕсли;
	
	Если СтруктураТЧ = Неопределено Тогда
		
		// заполним табличные части
		// структура табличных частей документа основания для заполнения	
		СтруктураТЧ = Новый Структура;
		СтруктураТЧ.Вставить("Товары", "Товары");
		СтруктураТЧ.Вставить("Услуги", "Прочее");
	
	КонецЕсли;

	Для Каждого ЗначениеТЧ Из СтруктураТЧ Цикл		
		
		ИмяТабЧастиОбъекта = ЗначениеТЧ.Ключ;
		ИмяТабЧастиОснование = ЗначениеТЧ.Значение;
		
		Для Каждого Строка Из ДанныеЗаполнения[ИмяТабЧастиОснование] Цикл			
			
			НоваяСтрока = ДанныеОбъекта[ИмяТабЧастиОбъекта].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
			
			Если ИмяТабЧастиОснование = "Товары" Тогда
				ДанныеСтрокаТаблицы.Вставить("Коэффициент");
				ДанныеСтрокаТаблицы.Вставить("НомерГТД");
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока);
			
			ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
				|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина); 
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);

		КонецЦикла;
	КонецЦикла;     	
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснования(ДанныеОбъекта, ДанныеЗаполнения, ЗаполнятьШапкуДокумента = Истина, СтруктураТЧ = Неопределено) Экспорт
					
	Если ЗаполнятьШапкуДокумента Тогда
	
		ДанныеОбъекта.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ДанныеОбъекта, ДанныеЗаполнения);
			
		// Документ не имеет смысла без данного признака
		ДанныеОбъекта.УчитыватьНДС = Истина;	
		
		//из документа основания
		Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ВалютаДокумента) Тогда
			ДанныеОбъекта.ВалютаДокумента 		   = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
			ДанныеОбъекта.КурсВзаиморасчетов 	   = 1;
			ДанныеОбъекта.КратностьВзаиморасчетов  = 1;		
		КонецЕсли;
		
		Если ТипЗнч(ДанныеОбъекта.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
			ИЛИ (ТипЗнч(ДанныеОбъекта.ДокументОснование)= Тип("ДокументСсылка.СчетФактураПолученный")
				И ДанныеОбъекта.ДокументОснование.ВидСчетаФактуры = Перечисления.ВидыСчетовФактур.Дополнительный) Тогда
			ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаОборотаПоРеализации;
			Коэффициент = -1;
		Иначе 		
			ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.РегистрацияОборотаПоРеализации;
			Коэффициент = 1;
		КонецЕсли;
		
		МетаданныеДокумента = ДанныеЗаполнения.ПолучитьОбъект().Метаданные();	
		Если (ОбщегоНазначенияБК.ЕстьРеквизитДокумента("ОтложитьПринятиеНДСКЗачету", МетаданныеДокумента) И ДанныеЗаполнения.ОтложитьПринятиеНДСКЗачету) 
			ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда		
			ДанныеОбъекта.СчетУчетаРасчетовСКонтрагентом  = ПланыСчетов.Типовой.НДСНачисленныйПриПокупке;
			ДанныеОбъекта.СчетУчетаРасчетовПоАвансам      = ПланыСчетов.Типовой.ПустаяСсылка();

		Иначе
			
			Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента("СчетУчетаРасчетовСКонтрагентом", МетаданныеДокумента) Тогда
				ДанныеОбъекта.СчетУчетаРасчетовСКонтрагентом = ДанныеЗаполнения.СчетУчетаРасчетовСКонтрагентом;	
			КонецЕсли;
			
			Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента("СчетУчетаРасчетовПоАвансам", МетаданныеДокумента) Тогда
				ДанныеОбъекта.СчетУчетаРасчетовПоАвансам = ДанныеЗаполнения.СчетУчетаРасчетовПоАвансам;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураТЧ = Неопределено Тогда
		
		СтруктураТЧ = Новый Структура;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда			
			СтруктураТЧ.Вставить("Услуги", "Услуги"); 
		Иначе
			
			// заполним табличные части
			// структура табличных частей документа основания для заполнения	
			
			Для Каждого ТабЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл			
				
				ИмяТабЧастиОснование = ТабЧасть.Имя;
				ИмяТабЧастиОбъекта   = ИмяТабЧастиОснование;		
				
				ТабличнаяЧасть = ДанныеОбъекта.Ссылка.Метаданные().ТабличныеЧасти.Найти(ИмяТабЧастиОбъекта); 
				
				Если НЕ ТабличнаяЧасть = Неопределено Тогда
					СтруктураТЧ.Вставить(ИмяТабЧастиОбъекта, ИмяТабЧастиОснование);
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;

	Для Каждого ЗначениеТЧ Из СтруктураТЧ Цикл		
		
		ИмяТабЧастиОбъекта = ЗначениеТЧ.Ключ;
		ИмяТабЧастиОснование = ЗначениеТЧ.Значение;
		
		Если ИмяТабЧастиОснование = "УчастникиСовместнойДеятельности" Тогда 	
			ДанныеОбъекта.УчастникиСовместнойДеятельности.Загрузить(ДанныеЗаполнения.УчастникиСовместнойДеятельности.Выгрузить());
			Продолжить;
		КонецЕсли;
		
		Для Каждого Строка Из ДанныеЗаполнения[ИмяТабЧастиОснование] Цикл			
			
			НоваяСтрока = ДанныеОбъекта[ИмяТабЧастиОбъекта].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			ДанныеСтрокаТаблицы = Новый Структура("Номенклатура, Количество, Цена, Сумма, СтавкаНДС, УплаченныйНДС, СуммаНДС");
			Если ИмяТабЧастиОснование = "Товары" Тогда
				ДанныеСтрокаТаблицы.Вставить("НомерГТД");
			КонецЕсли; 			
			
			Если  ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаОборотаПоРеализации  Тогда
				Если ИмяТабЧастиОснование = "Товары" ИЛИ ИмяТабЧастиОснование = "Услуги" Тогда					
					НоваяСтрока.Количество = НоваяСтрока.Количество * -1;
					Если НЕ (ТипЗнч(ДанныеОбъекта.ДокументОснование)= Тип("ДокументСсылка.СчетФактураПолученный"))  Тогда
						ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрока);
					КонецЕсли;
				Иначе  			
					НоваяСтрока.Сумма = НоваяСтрока.Сумма * -1;				
				КонецЕсли;
			КонецЕсли; 	
			
			ЗаполнитьЗначенияСвойств(ДанныеСтрокаТаблицы, НоваяСтрока); 			

			
			ПараметрыОбъекта = Новый Структура("Организация, Дата, Ссылка, УчитыватьНДС, СуммаВключаетНДС, НДСВключенВСтоимость,
				|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеОбъекта);
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокаТаблицы, ПараметрыОбъекта, "УплаченныйНДС", Истина); 
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокаТаблицы);

		КонецЦикла;
		
	КонецЦикла;     	
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДанныеОбъекта);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	Константы.ВалютаРегламентированногоУчета.Получить());
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "БУ", Истина, ДокументСсылка)
		ИЛИ НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "НУ", Истина, ДокументСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
	

	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.Вставить("РасчетыВВалюте", Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("РасчетыВВалюте",  Реквизиты.РасчетыВВалюте);
		
	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
		Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
			Результат    = Запрос.ВыполнитьПакет();
		КонецЕсли;
	КонецЕсли;
	
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	
	НеобходимостьОтраженияВНУ 						= ОрганизацияПлательщикНалогаНаПрибыль И Реквизиты.УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ Реквизиты.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	
	ОпределятьСтоимостьПриобретенияПоКурсуАванса    = УчетнаяПолитикаСервер.ОпределятьСтоимостьПриобретенияПоКурсуАванса(Реквизиты.Организация, Реквизиты.Период);
	
	Если ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями") Тогда
		
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																	Реквизиты.Организация,
																	Перечисления.РазделыНалоговогоУчета.НДС);
	Иначе
		Налогоплательщик = Реквизиты.Организация;															
	КонецЕсли;	
	
	Реквизиты.Вставить("Налогоплательщик", Налогоплательщик);	
	Реквизиты.Вставить("НеобходимостьОтраженияВНУ", 					 НеобходимостьОтраженияВНУ);
	Реквизиты.Вставить("ОпределятьСтоимостьПриобретенияПоКурсуАванса",   ОпределятьСтоимостьПриобретенияПоКурсуАванса);
	Реквизиты.Вставить("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
		
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(НеобходимостьОтраженияВНУ					  , "НеобходимостьОтраженияВНУ");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ОпределятьСтоимостьПриобретенияПоКурсуАванса  , "ОпределятьСтоимостьПриобретенияПоКурсуАванса");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль, "ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(Налогоплательщик		 					  , "Налогоплательщик");
		
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаУчастникиСовместнойДеятельности(НомераТаблиц, ПараметрыПроведения, Реквизиты);
					                  	
	СодержаниеДокумента = НСтр("ru = '%1 НДС %2: %3'", ОбщегоНазначения.КодОсновногоЯзыка());	
	КорректировкаСодержание = ?(Реквизиты.КорректировкаОборота, НСтр("ru = 'Корректировка'", ОбщегоНазначения.КодОсновногоЯзыка()), "");
	
	Запрос.УстановитьПараметр("СинонимТовары",	      НСтр("ru = 'Товары'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Запрос.УстановитьПараметр("СинонимУслуги",	      НСтр("ru = 'Услуги'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Запрос.УстановитьПараметр("СинонимОС",	          НСтр("ru = 'ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Запрос.УстановитьПараметр("СинонимНМА",	          НСтр("ru = 'НМА'", ОбщегоНазначения.КодОсновногоЯзыка()));
	Запрос.УстановитьПараметр("СодержаниеТовары",     СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СодержаниеДокумента,
															КорректировкаСодержание, НСтр("ru = '(Товары)'", ОбщегоНазначения.КодОсновногоЯзыка()), Реквизиты.Комментарий));
	Запрос.УстановитьПараметр("СодержаниеУслуги",     СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СодержаниеДокумента,
															КорректировкаСодержание, НСтр("ru = '(Услуги)'", ОбщегоНазначения.КодОсновногоЯзыка()), Реквизиты.Комментарий));
	Запрос.УстановитьПараметр("СодержаниеОС",     СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СодержаниеДокумента,
															КорректировкаСодержание, НСтр("ru = '(ОС)'", ОбщегоНазначения.КодОсновногоЯзыка()), Реквизиты.Комментарий));     															
	Запрос.УстановитьПараметр("СодержаниеНМА",     СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СодержаниеДокумента,
															КорректировкаСодержание, НСтр("ru = '(НМА)'", ОбщегоНазначения.КодОсновногоЯзыка()), Реквизиты.Комментарий));
														
	Запрос.УстановитьПараметр("НеобходимостьОтраженияВНУ",	                  НеобходимостьОтраженияВНУ);
	Запрос.УстановитьПараметр("ОпределятьСтоимостьПриобретенияПоКурсуАванса", ОпределятьСтоимостьПриобретенияПоКурсуАванса);
	
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	СтруктураТаблицДокумента = Новый Структура;
	СтруктураТаблицДокумента.Вставить("ТаблицаДокумента", ПараметрыПроведения.ТаблицаНДС);
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары,
	|	МАКСИМУМ(СоставДокумента.ЕстьУслуги) КАК ЕстьУслуги,
	|	МАКСИМУМ(СоставДокумента.ЕстьОС) КАК ЕстьОС,
	|	МАКСИМУМ(СоставДокумента.ЕстьНМА) КАК ЕстьНМА,
	|	МАКСИМУМ(СоставДокумента.ЕстьУчастникиСовместнойДеятельности) КАК ЕстьУчастникиСовместнойДеятельности
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьТовары,
	|		ЛОЖЬ КАК ЕстьУслуги,
	|		ЛОЖЬ КАК ЕстьОС,
	|		ЛОЖЬ КАК ЕстьНМА,
	|		ЛОЖЬ КАК ЕстьУчастникиСовместнойДеятельности
	|	ИЗ
	|		Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.Услуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.ОС КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.НМА КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.УчастникиСовместнойДеятельности КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Организация КАК Налогоплательщик,
	|	Реквизиты.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ГоловнаяОрганизация ЕСТЬ NULL 
	|				ИЛИ Реквизиты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ Реквизиты.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Реквизиты.УчитыватьКПН,
	|	Реквизиты.ВидУчетаНУ,
	|	Реквизиты.ВидОперации,
	|	ВЫБОР
	|		КОГДА НЕ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВЦеляхНДС.РегистрацияОборотаПоРеализации)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КорректировкаОборота,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВЦеляхНДС.КорректировкаПрочее)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КорректировкаЗатрат,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ДоговорСовместнойДеятельности, НЕОПРЕДЕЛЕНО) КАК ПризнакДоговорСовместнойДеятельности,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВедениеВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВедениеВзаиморасчетов,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВидДоговора, НЕОПРЕДЕЛЕНО) КАК ВидДоговора,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВЦеляхНДС.КорректировкаПрочее)
	|			ТОГДА &ВалютаРегламентированногоУчета
	|		ИНАЧЕ ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК ВалютаВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.УчитыватьНДС,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	&ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ЛОЖЬ КАК НеобходимостьОтраженияВНУ,
	|	Реквизиты.ОтражатьВБухгалтерскомУчете КАК ОтражатьВБухгалтерскомУчете,
	|	ЛОЖЬ КАК ОпределятьСтоимостьПриобретенияПоКурсуАванса,
	|	ЛОЖЬ КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
	|	Реквизиты.СчетЗатратНДСБУ КАК СчетЗатратБУ,
	|	Реквизиты.СубконтоЗатратНДСБУ1 КАК СубконтоЗатратБУ1,
	|	Реквизиты.СубконтоЗатратНДСБУ2 КАК СубконтоЗатратБУ2,
	|	Реквизиты.СубконтоЗатратНДСБУ3 КАК СубконтоЗатратБУ3,
	|	Реквизиты.СчетЗатратНДСНУ КАК СчетЗатратНУ,
	|	Реквизиты.СубконтоЗатратНДСНУ1 КАК СубконтоЗатратНУ1,
	|	Реквизиты.СубконтоЗатратНДСНУ2 КАК СубконтоЗатратНУ2,
	|	Реквизиты.СубконтоЗатратНДСНУ3 КАК СубконтоЗатратНУ3,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	""НДСКВозмещению"" КАК ИмяРегистраНДС,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента,
	|	Реквизиты.ВидВходящегоДокумента,
	|	Реквизиты.ДокументОснование
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Налогоплательщик,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.ГоловнаяОрганизация,
	|	Реквизиты.УчитыватьКПН,
	|	Реквизиты.ВидУчетаНУ,
	|	Реквизиты.ВидОперации,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ПризнакДоговорСовместнойДеятельности,
	|	Реквизиты.ВедениеВзаиморасчетов,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.УчитыватьНДС,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	Реквизиты.НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
	|	Реквизиты.ОпределятьСтоимостьПриобретенияПоКурсуАванса КАК ОпределятьСтоимостьПриобретенияПоКурсуАванса,
	|	Реквизиты.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
	|	Реквизиты.СчетЗатратБУ,
	|	Реквизиты.СубконтоЗатратБУ1,
	|	Реквизиты.СубконтоЗатратБУ2,
	|	Реквизиты.СубконтоЗатратБУ3,
	|	Реквизиты.СчетЗатратНУ,
	|	Реквизиты.СубконтоЗатратНУ1,
	|	Реквизиты.СубконтоЗатратНУ2,
	|	Реквизиты.СубконтоЗатратНУ3,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТовары, ЛОЖЬ) КАК ЕстьТовары,
	|	ЕСТЬNULL(СоставДокумента.ЕстьУслуги, ЛОЖЬ) КАК ЕстьУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьОС, ЛОЖЬ) КАК ЕстьОС,
	|	ЕСТЬNULL(СоставДокумента.ЕстьНМА, ЛОЖЬ) КАК ЕстьНМА,
	|	ЕСТЬNULL(СоставДокумента.ЕстьУчастникиСовместнойДеятельности, ЛОЖЬ) КАК ЕстьУчастникиСовместнойДеятельности,
	|	Реквизиты.Комментарий,
	|	Реквизиты.КорректировкаОборота,
	|	Реквизиты.КорректировкаЗатрат,
	|	Реквизиты.ОтражатьВБухгалтерскомУчете,
	|	ВЫБОР
	|		КОГДА Реквизиты.КорректировкаОборота
	|			ТОГДА ""КорректировкаНДСКВозмещению""
	|		ИНАЧЕ ""НДСКВозмещению""
	|	КОНЕЦ КАК ИмяРегистраНДС,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента,
	|	Реквизиты.ВидВходящегоДокумента,
	|	Реквизиты.ДокументОснование
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)

	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаТовары.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаТовары.УплаченныйНДС КАК УплаченныйНДС,
		|	ТаблицаТовары.УплаченныйНДС КАК УплаченныйНДСВзаиморасчетов,
		|	ТаблицаТовары.СчетУчетаНДС,
		|	ТаблицаТовары.НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаТовары.Ссылка = Реквизиты.Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	    	
	Если Реквизиты.ЕстьУслуги Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаУслуги.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДС,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаУслуги.УплаченныйНДС КАК УплаченныйНДС,
		|	ТаблицаУслуги.УплаченныйНДС КАК УплаченныйНДСВзаиморасчетов,
		|	ТаблицаУслуги.СчетУчетаНДС,
		|	ТаблицаУслуги.НДСВидОборота,
		|	ТаблицаУслуги.НДСВидПоступления
		|ПОМЕСТИТЬ ТаблицаУслуги
		|ИЗ
		|	Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.Услуги КАК ТаблицаУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаУслуги.Ссылка = Реквизиты.Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ЕстьОС Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаОС", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.СтавкаНДС,
		|	ТаблицаОС.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаОС.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаОС.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаОС.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаОС.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаОС.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДС,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаОС.УплаченныйНДС КАК УплаченныйНДС,
		|	ТаблицаОС.УплаченныйНДС КАК УплаченныйНДСВзаиморасчетов,
		|	ТаблицаОС.СчетУчетаНДС,
		|	ТаблицаОС.НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ЕстьНМА Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаНМА", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаНМА.Ссылка,
		|	ТаблицаНМА.НомерСтроки,
		|	ТаблицаНМА.НематериальныйАктив,
		|	ТаблицаНМА.СтавкаНДС,
		|	ТаблицаНМА.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаНМА.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаНМА.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаНМА.Сумма - ВЫБОР
		|		КОГДА Реквизиты.СуммаВключаетНДС
		|			ТОГДА ТаблицаНМА.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаНМА.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаНМА.СуммаНДС КАК СуммаНДС,
		|	ТаблицаНМА.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаНМА.УплаченныйНДС КАК УплаченныйНДС,
		|	ТаблицаНМА.УплаченныйНДС КАК УплаченныйНДСВзаиморасчетов,
		|	ТаблицаНМА.СчетУчетаНДС,
		|	ТаблицаНМА.НДСВидОборота,
		|	ТаблицаНМА.НДСВидПоступления
		|ПОМЕСТИТЬ ТаблицаНМА
		|ИЗ
		|	Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.НМА КАК ТаблицаНМА
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаНМА.Ссылка = Реквизиты.Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	 		
	Если Реквизиты.ЕстьУчастникиСовместнойДеятельности Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаУчастникиСовместнойДеятельности", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаУчастникиСовместнойДеятельности.НомерСтроки,
		|	ТаблицаУчастникиСовместнойДеятельности.УчастникСовместнойДеятельности,
		|	ТаблицаУчастникиСовместнойДеятельности.ДоляУчастия
		|ПОМЕСТИТЬ ТаблицаУчастникиСовместнойДеятельности
		|ИЗ
		|	Документ.РегистрацияПрочихОперацийПоПриобретеннымТоварамВЦеляхНДС.УчастникиСовместнойДеятельности КАК ТаблицаУчастникиСовместнойДеятельности
		|ГДЕ
		|	ТаблицаУчастникиСовместнойДеятельности.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		СуммыТаблицыТовары = Результат[НомераТаблиц["СуммыТаблицыТовары"]].Выгрузить();
		УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТовары, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыТовары", СуммыТаблицыТовары);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТовары(НомераТаблиц, Реквизиты);
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда
		СуммыТаблицыУслуги = Результат[НомераТаблиц["СуммыТаблицыУслуги"]].Выгрузить();
		УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыУслуги, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыУслуги", СуммыТаблицыУслуги);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеУслуги(НомераТаблиц, Реквизиты);
	КонецЕсли;

	Если Реквизиты.ЕстьОС Тогда
		СуммыТаблицыОС = Результат[НомераТаблиц["СуммыТаблицыОС"]].Выгрузить();
		УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыОС, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыОС", СуммыТаблицыОС);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеОС(НомераТаблиц, Реквизиты);
	КонецЕсли;
	
	Если Реквизиты.ЕстьНМА Тогда
		СуммыТаблицыНМА = Результат[НомераТаблиц["СуммыТаблицыНМА"]].Выгрузить();
		УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыНМА, Реквизиты);
		Запрос.УстановитьПараметр("СуммыТаблицыНМА", СуммыТаблицыНМА);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеНМА(НомераТаблиц, Реквизиты);
	КонецЕсли;

	Запрос.Текст = ТекстЗапроса;
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаТовары", "ПОМЕСТИТЬ ВременнаяТаблицаТовары");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Ссылка = &Ссылка", "ТаблицаТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки,
		|	ВременнаяТаблицаТовары.СтавкаНДС,
		|	ВременнаяТаблицаТовары.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаТовары.Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС,
		|	ВременнаяТаблицаТовары.УплаченныйНДС	
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаУслуги", "ПОМЕСТИТЬ ВременнаяТаблицаУслуги");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаУслуги.Ссылка = &Ссылка", "ТаблицаУслуги.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаУслуги.НомерСтроки,
		|	ВременнаяТаблицаУслуги.СтавкаНДС,
		|	ВременнаяТаблицаУслуги.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаУслуги.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаУслуги.Сумма,
		|	ВременнаяТаблицаУслуги.СуммаНДС,
		|	ВременнаяТаблицаУслуги.УплаченныйНДС	
		|ИЗ
		|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ЕстьОС Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаОС", "ПОМЕСТИТЬ ВременнаяТаблицаОС");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОС.Ссылка = &Ссылка", "ТаблицаОС.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыОС", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.НомерСтроки,
		|	ВременнаяТаблицаОС.СтавкаНДС,
		|	ВременнаяТаблицаОС.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаОС.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаОС.Сумма,
		|	ВременнаяТаблицаОС.СуммаНДС,
		|	ВременнаяТаблицаОС.УплаченныйНДС
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьНМА Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаНМА", "ПОМЕСТИТЬ ВременнаяТаблицаНМА");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаНМА.Ссылка = &Ссылка", "ТаблицаНМА.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыНМА", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаНМА.НомерСтроки,
		|	ВременнаяТаблицаНМА.СтавкаНДС,
		|	ВременнаяТаблицаНМА.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаНМА.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаНМА.Сумма,
		|	ВременнаяТаблицаНМА.СуммаНДС,
		|	ВременнаяТаблицаНМА.УплаченныйНДС
		|ИЗ
		|	ВременнаяТаблицаНМА КАК ВременнаяТаблицаНМА"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеТовары(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТовары.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.Сумма,
	|	СуммыТаблицыТовары.СуммаНДС,
	|	СуммыТаблицыТовары.УплаченныйНДС
	|ПОМЕСТИТЬ СуммыТаблицыТовары
	|ИЗ
	|	&СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Ссылка,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.Сумма,
	|	СуммыТаблицыТовары.СуммаНДС,
	|	СуммыТаблицыТовары.УплаченныйНДС,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.СчетУчетаНДС,
	|	ВременнаяТаблицаТовары.НДСВидОборота,
	|	ВременнаяТаблицаТовары.НДСВидПоступления
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|		ПО ВременнаяТаблицаТовары.НомерСтроки = СуммыТаблицыТовары.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеУслуги(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ТаблицаУслуги", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыУслуги.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.Сумма,
	|	СуммыТаблицыУслуги.СуммаНДС,
	|	СуммыТаблицыУслуги.УплаченныйНДС
	|ПОМЕСТИТЬ СуммыТаблицыУслуги
	|ИЗ
	|	&СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаУслуги.Ссылка,
	|	ВременнаяТаблицаУслуги.НомерСтроки,
	|	ВременнаяТаблицаУслуги.Номенклатура,
	|	СуммыТаблицыУслуги.СуммаВзаиморасчетов,
	|	СуммыТаблицыУслуги.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыУслуги.Сумма,
	|	СуммыТаблицыУслуги.СуммаНДС,
	|	СуммыТаблицыУслуги.УплаченныйНДС,
	|	ВременнаяТаблицаУслуги.СтавкаНДС,
	|	ВременнаяТаблицаУслуги.СчетУчетаНДС,
	|	ВременнаяТаблицаУслуги.НДСВидОборота,
	|	ВременнаяТаблицаУслуги.НДСВидПоступления
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	ВременнаяТаблицаУслуги КАК ВременнаяТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыУслуги КАК СуммыТаблицыУслуги
	|		ПО ВременнаяТаблицаУслуги.НомерСтроки = СуммыТаблицыУслуги.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеОС(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыОС.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыОС.СуммаВзаиморасчетов,
	|	СуммыТаблицыОС.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОС.Сумма,
	|	СуммыТаблицыОС.СуммаНДС,
	|	СуммыТаблицыОС.УплаченныйНДС
	|ПОМЕСТИТЬ СуммыТаблицыОС
	|ИЗ
	|	&СуммыТаблицыОС КАК СуммыТаблицыОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОС.Ссылка,
	|	ВременнаяТаблицаОС.НомерСтроки,
	|	ВременнаяТаблицаОС.ОсновноеСредство,
	|	СуммыТаблицыОС.СуммаВзаиморасчетов,
	|	СуммыТаблицыОС.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОС.Сумма,
	|	СуммыТаблицыОС.СуммаНДС,
	|	СуммыТаблицыОС.УплаченныйНДС,
	|	ВременнаяТаблицаОС.СтавкаНДС,
	|	ВременнаяТаблицаОС.СчетУчетаНДС,
	|	ВременнаяТаблицаОС.НДСВидОборота,
	|	ВременнаяТаблицаОС.НДСВидПоступления
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыОС КАК СуммыТаблицыОС
	|		ПО ВременнаяТаблицаОС.НомерСтроки = СуммыТаблицыОС.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеНМА(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ТаблицаНМА", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыНМА.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыНМА.СуммаВзаиморасчетов,
	|	СуммыТаблицыНМА.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыНМА.Сумма,
	|	СуммыТаблицыНМА.СуммаНДС,
	|	СуммыТаблицыНМА.УплаченныйНДС
	|ПОМЕСТИТЬ СуммыТаблицыНМА
	|ИЗ
	|	&СуммыТаблицыНМА КАК СуммыТаблицыНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНМА.Ссылка,
	|	ВременнаяТаблицаНМА.НомерСтроки,
	|	ВременнаяТаблицаНМА.НематериальныйАктив,
	|	СуммыТаблицыНМА.СуммаВзаиморасчетов,
	|	СуммыТаблицыНМА.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыНМА.Сумма,
	|	СуммыТаблицыНМА.СуммаНДС,
	|	СуммыТаблицыНМА.УплаченныйНДС,
	|	ВременнаяТаблицаНМА.СтавкаНДС,
	|	ВременнаяТаблицаНМА.СчетУчетаНДС,
	|	ВременнаяТаблицаНМА.НДСВидОборота,
	|	ВременнаяТаблицаНМА.НДСВидПоступления
	|ПОМЕСТИТЬ ТаблицаНМА
	|ИЗ
	|	ВременнаяТаблицаНМА КАК ВременнаяТаблицаНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыНМА КАК СуммыТаблицыНМА
	|		ПО ВременнаяТаблицаНМА.НомерСтроки = СуммыТаблицыНМА.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
		
	Если Реквизиты.ЕстьТовары Тогда 
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	""ТоварыНДС"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК ТМЗ,
		|	0 КАК Сумма,
		|	0 КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаТовары.УплаченныйНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ТаблицаТовары.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаКорректировкиОборота,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаТовары.СуммаНДС * -1
		|		ИНАЧЕ ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаНДС,
		|	ТаблицаТовары.УплаченныйНДС КАК УплаченныйНДС,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаТовары.СуммаНДСВзаиморасчетов * -1
		|		ИНАЧЕ ТаблицаТовары.СуммаНДСВзаиморасчетов
		|	КОНЕЦ КАК СуммаНДСВал,
		|	ТаблицаТовары.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаТовары.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК Счет,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаТовары.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто1,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто2,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто1,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке) 
		|                   И НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСУплачиваемыйНалоговымАгентом)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто2,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто3,
		|	ТаблицаТовары.НДСВидОборота КАК ВидОборота,
		|	ТаблицаТовары.НДСВидПоступления КАК ВидОперацииПоступления,
		|	ТаблицаТовары.НДСВидПоступления КАК ВидОперацииКорректировки,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыНДС.НДС) КАК ВидНалогаНДС,
		|	&СодержаниеТовары КАК Содержание,
		|	Реквизиты.ВидВходящегоДокумента КАК ВидВходящегоДокумента,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	Реквизиты.ДоговорКонтрагента,
		|	0 КАК Порядок
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда 
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда 
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""УслугиНДС"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.Номенклатура КАК ТМЗ,
		|	0 КАК Сумма,
		|	0 КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаУслуги.УплаченныйНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ТаблицаУслуги.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаКорректировкиОборота,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаУслуги.СуммаНДС * -1
		|		ИНАЧЕ ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаНДС,
		|	ТаблицаУслуги.УплаченныйНДС КАК УплаченныйНДС,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаУслуги.СуммаНДСВзаиморасчетов * -1
		|		ИНАЧЕ ТаблицаУслуги.СуммаНДСВзаиморасчетов
		|	КОНЕЦ КАК СуммаНДСВал,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаУслуги.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК Счет,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаУслуги.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто1,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто2,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто1,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто2,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто3,
		|	ТаблицаУслуги.НДСВидОборота КАК ВидОборота,
		|	ТаблицаУслуги.НДСВидПоступления КАК ВидОперацииПоступления,
		|	ТаблицаУслуги.НДСВидПоступления КАК ВидОперацииКорректировки,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыНДС.НДС) КАК ВидНалогаНДС,
		|	&СодержаниеУслуги КАК Содержание,
		|	Реквизиты.ВидВходящегоДокумента КАК ВидВходящегоДокумента,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	Реквизиты.ДоговорКонтрагента,
		|	1 КАК Порядок
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";
	КонецЕсли;

	Если Реквизиты.ЕстьОС Тогда 
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда 
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""ОСНДС"" КАК ИмяСписка,
		|	&СинонимОС КАК СинонимСписка,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК ТМЗ,
		|	0 КАК Сумма,
		|	0 КАК СуммаВзаиморасчетов,
		|	ТаблицаОС.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаОС.УплаченныйНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ТаблицаОС.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаОС.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаКорректировкиОборота,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаОС.СуммаНДС * -1
		|		ИНАЧЕ ТаблицаОС.СуммаНДС
		|	КОНЕЦ КАК СуммаНДС,
		|	ТаблицаОС.УплаченныйНДС КАК УплаченныйНДС,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаОС.СуммаНДСВзаиморасчетов * -1
		|		ИНАЧЕ ТаблицаОС.СуммаНДСВзаиморасчетов
		|	КОНЕЦ КАК СуммаНДСВал,
		|	ТаблицаОС.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаОС.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК Счет,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаОС.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто1,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто2,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто1,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто2,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто3,
		|	ТаблицаОС.НДСВидОборота КАК ВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК ВидОперацииПоступления,
		|	ТаблицаОС.НДСВидПоступления КАК ВидОперацииКорректировки,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыНДС.НДС) КАК ВидНалогаНДС,
		|	&СодержаниеОС КАК Содержание,
		|	Реквизиты.ВидВходящегоДокумента КАК ВидВходящегоДокумента,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	Реквизиты.ДоговорКонтрагента,
		|	2 КАК Порядок
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";		
	КонецЕсли;
	
	Если Реквизиты.ЕстьНМА Тогда 
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда 
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""НМАНДС"" КАК ИмяСписка,
		|	&СинонимНМА КАК СинонимСписка,
		|	ТаблицаНМА.НомерСтроки,
		|	ТаблицаНМА.НематериальныйАктив КАК ТМЗ,
		|	0 КАК Сумма,
		|	0 КАК СуммаВзаиморасчетов,
		|	ТаблицаНМА.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаНМА.УплаченныйНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ТаблицаНМА.Сумма - ВЫБОР
		|		КОГДА Реквизиты.НДСВключенВСтоимость
		|			ТОГДА ТаблицаНМА.СуммаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаКорректировкиОборота,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаНМА.СуммаНДС * -1
		|		ИНАЧЕ ТаблицаНМА.СуммаНДС
		|	КОНЕЦ КАК СуммаНДС,
		|	ТаблицаНМА.УплаченныйНДС КАК УплаченныйНДС,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаНМА.СуммаНДСВзаиморасчетов * -1
		|		ИНАЧЕ ТаблицаНМА.СуммаНДСВзаиморасчетов
		|	КОНЕЦ КАК СуммаНДСВал,
		|	ТаблицаНМА.СтавкаНДС,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаНМА.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК Счет,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ТаблицаНМА.СчетУчетаНДС
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СчетЗатратБУ
		|				ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто1,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто2,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК Субконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ1
		|				ИНАЧЕ Реквизиты.Контрагент
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто1,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ2
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.ДоговорКонтрагента
		|						ИНАЧЕ Реквизиты.ДокументОснование
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто2,
		|	ВЫБОР
		|		КОГДА Реквизиты.КорректировкаОборота
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Реквизиты.КорректировкаЗатрат
		|					ТОГДА Реквизиты.СубконтоЗатратБУ3
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|							ТОГДА Реквизиты.Ссылка
		|						ИНАЧЕ НЕОПРЕДЕЛЕНО
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК КорСубконто3,
		|	ТаблицаНМА.НДСВидОборота КАК ВидОборота,
		|	ТаблицаНМА.НДСВидПоступления КАК ВидОперацииПоступления,
		|	ТаблицаНМА.НДСВидПоступления КАК ВидОперацииКорректировки,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыНДС.НДС) КАК ВидНалогаНДС,
		|	&СодержаниеНМА КАК Содержание,
		|	Реквизиты.ВидВходящегоДокумента КАК ВидВходящегоДокумента,
		|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	Реквизиты.ДоговорКонтрагента,
		|	3 КАК Порядок
		|ИЗ
		|	ТаблицаНМА КАК ТаблицаНМА
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда 
		НомераТаблиц.Вставить("ТаблицаНДС",	НомераТаблиц.Количество());

		ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	НомерСтроки" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	Иначе 
		ПараметрыПроведения.Вставить("ТаблицаНДС", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийВЦеляхНДС.КорректировкаПрочее ИЛИ НЕ Реквизиты.ОтражатьВБухгалтерскомУчете Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаДокумента", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаНДСВзаиморасчетов) КАК СуммаНДСВзаиморасчетов,
	|	СУММА(ТаблицаСуммВзаиморасчетов.Сумма) КАК Сумма,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		0 КАК СуммаВзаиморасчетов,
	|		0 КАК СуммаНДСВзаиморасчетов,
	|		0 КАК Сумма,
	|		0 КАК СуммаНДС"
	+ ?(Реквизиты.ЕстьТовары, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0 КАК СуммаВзаиморасчетов,
	|		ТаблицаТовары.СуммаНДСВзаиморасчетов,
	|		0 КАК Сумма,
	|		ТаблицаТовары.СуммаНДС
	|	ИЗ
	|		ТаблицаТовары КАК ТаблицаТовары", "")
	+ ?(Реквизиты.ЕстьУслуги, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0 КАК СуммаВзаиморасчетов,
	|		ТаблицаУслуги.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|		0 КАК Сумма,
	|		ТаблицаУслуги.СуммаНДС
	|	ИЗ
	|		ТаблицаУслуги КАК ТаблицаУслуги", "")  
	+ ?(Реквизиты.ЕстьОС, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		ТаблицаОС.СуммаНДСВзаиморасчетов,
	|		0,
	|		ТаблицаОС.СуммаНДС
	|	ИЗ
	|		ТаблицаОС КАК ТаблицаОС", "") 
	+ ?(Реквизиты.ЕстьНМА, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		ТаблицаНМА.СуммаНДСВзаиморасчетов,
	|		0,
	|		ТаблицаНМА.СуммаНДС
	|	ИЗ
	|		ТаблицаНМА КАК ТаблицаНМА", "") 	+ ") КАК ТаблицаСуммВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
	|	&ОпределятьСтоимостьПриобретенияПоКурсуАванса КАК ОпределятьСтоимостьПриобретенияПоКурсуАванса,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВедениеВзаиморасчетов,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	НЕОПРЕДЕЛЕНО КАК Сделка,
	|	ТаблицаСуммВзаиморасчетов.Сумма + ТаблицаСуммВзаиморасчетов.СуммаНДС КАК СуммаРегл,
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов + ТаблицаСуммВзаиморасчетов.СуммаНДСВзаиморасчетов КАК СуммаВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов ЕСТЬ НЕ NULL "
	+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция ТекстЗапросаУчастникиСовместнойДеятельности(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьУчастникиСовместнойДеятельности Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаУчастникиСовместнойДеятельности.НомерСтроки,
		|	ТаблицаУчастникиСовместнойДеятельности.УчастникСовместнойДеятельности КАК УчастникСовместнойДеятельности,
		|	ТаблицаУчастникиСовместнойДеятельности.ДоляУчастия КАК ДоляУчастия
		|ИЗ
		|	ТаблицаУчастникиСовместнойДеятельности КАК ТаблицаУчастникиСовместнойДеятельности
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		НомераТаблиц.Вставить("ТаблицаУчастникиСовместнойДеятельности",	НомераТаблиц.Количество());
	Иначе
		ПараметрыПроведения.Вставить("ТаблицаУчастникиСовместнойДеятельности", Неопределено);
		Возврат ТекстЗапроса;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ВыполнитьКонтрольОтложенногоНДСкЗачету(Отказ, ТаблицаНДС, ТаблицаРеквизиты) Экспорт
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	ДокументОснование = Реквизиты.ДокументОснование;
	
	СуммаНДС = ТаблицаНДС.Итог("СуммаНДС");
	
	Если СуммаНДС = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос       = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТиповойОстатки.Организация,
	               |	ТиповойОстатки.СтруктурноеПодразделение,
	               |	ТиповойОстатки.Счет,
	               |	ТиповойОстатки.СуммаОстаток КАК СуммаНДС
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.Остатки(
	               |			&ПериодОстатков,
	               |			Счет = &Счет,
	               |			&ВидыСубконто,
	               |			Организация = &Организация
	               |				И СтруктурноеПодразделение = &СтруктурноеПодразделение
	               |				И Субконто1 = &Контрагент
	               |				И Субконто2 = &ДокументПоступления) КАК ТиповойОстатки";
	
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Типовой.НДСНачисленныйПриПокупке);
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(Реквизиты.Период, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", Реквизиты.СтруктурноеПодразделение);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ДокументыПоступления);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументОснование);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаРезультата = Результат.Выбрать();
	
	ПревышениеСуммыНДС = СуммаНДС;

	Если ВыборкаРезультата.Следующий() Тогда
		
		ПревышениеСуммыНДС = ПревышениеСуммыНДС - ВыборкаРезультата.СуммаНДС;
		
	КонецЕсли;
	
	Если ПревышениеСуммыНДС > 0 Тогда
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			ПредставлениеОснования = ДокументОснование;
		Иначе
			ПредставлениеОснования = "<...>";
		КонецЕсли;
		
		ТекстОшибки = НСтр("ru='Сумма НДС к принятию в зачет превышает сумму отложенного налога по документу ""%1"" на %2.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстОшибки,
			ПредставлениеОснования,
			Формат(ПревышениеСуммыНДС, "ЧЦ=15; ЧДЦ=2; ЧРД='.'"));
			
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли

