#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	
	// расчеты с покупателем
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "РасчетыСПоставщиком");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВариантОтражения_РасчетыСКонтрагентами");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентомВал", "РасчетыСПоставщиком");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВариантОтражения_РасчетыСКонтрагентами");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "ПрочиеОбязательстваПоПлатежам");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ВариантОтражения_РасчетыСКонтрагентами");

	// НДС
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаНДСПоРеализации", "РеализацияНДС");
	
	// Табличная часть Товары
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаБУ", "Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНУ", "ЗапасыНУ");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчетаНДС", "ПредъявленныйНДС_Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "НДСВключенВСтоимость");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "ВидНДС", "ВидНДС_ИмпортНоменклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "НДСВидОборота", "ВидОборотаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "НДСВидПоступления", "ВидПоступленияНДС_Импорт");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	// Табличная часть ОсновныеСредства
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "СчетУчетаБУ", "ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "СчетУчетаНУ", "ОсновныеСредстваНУ");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "СчетУчетаНДС", "ПредъявленныйНДС_ОсновныеСредства");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "НДСВключенВСтоимость");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "ВидНДС", "ВидНДС_НДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "НДСВидОборота", "ВидОборотаНДСПредъявленного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ОС", "НДСВидПоступления", "ВидПоступленияНДС_Импорт");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ОсновноеСредство", "ОсновноеСредство");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "СтруктурноеПодразделение");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "НДСВключенВСтоимость");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "УчитыватьНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "УчитыватьКПН");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ВариантОтражения");
	
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ВариантОтражения_РасчетыСКонтрагентами", "ВариантОтражения");
	
КонецПроцедуры

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("ВариантОтражения_РасчетыСКонтрагентами") Тогда
		
		ДанныеЗаполнения.ВариантОтражения_РасчетыСКонтрагентами = (ДанныеЗаполнения.ВариантОтражения = 0);
		
	КонецЕсли;
	
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт
	
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	КолонкаНоменклатура = ?(ИмяТабличнойЧасти = "ОС", "ОсновноеСредство", "Номенклатура");
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, УчитыватьКПН, УчитыватьНДС");
	
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	Если ИмяТабличнойЧасти = "ОС" Тогда
		
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			СчетаУчета = УправлениеВнеоборотнымиАктивамиСервер.ПолучитьСчетаУчетаОС(
				ДанныеОбъекта.Организация, СтрокаТабличнойЧасти[КолонкаНоменклатура], ДанныеОбъекта.Дата);
			ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
		КонецЦикла;
		
	Иначе
		
		СоответствиеСчетовУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаСпискаНоменклатуры(ДанныеОбъекта.Организация, 
			ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, КолонкаНоменклатура, Истина), ДанныеОбъекта.Дата);
			
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти[КолонкаНоменклатура]);
			ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре, ВключаяЗаполненные = Истина) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
			
	Если ИмяТабличнойЧасти = "ОС" Тогда
		
		Если СчетаУчета.СчетУчетаБУ = ПланыСчетов.Типовой.ПустаяСсылка() Тогда
			СчетаУчета.СчетУчетаБУ  = ПланыСчетов.Типовой.ОсновныеСредства;
		КонецЕсли;	 
		
		Если СчетаУчета.СчетУчетаНДСПоПриобретению = ПланыСчетов.Типовой.ПустаяСсылка() Тогда
			СчетаУчета.СчетУчетаНДСПоПриобретению  = ПланыСчетов.Типовой.НалогНаДобавленнуюСтоимостьКВозмещению;
		КонецЕсли;	 
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаБУ) Тогда
			СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСПоПриобретению) Тогда
			СтрокаТабличнойЧасти.СчетУчетаНДС = СчетаУчета.СчетУчетаНДСПоПриобретению;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНУ) Тогда 
			СтрокаТабличнойЧасти.СчетУчетаНУ = СчетаУчета.СчетУчетаНУ;
		ИначеЕсли НЕ ЗначениеЗаполнено(СчетаУчета.СчетУчетаНУ) Тогда 
			СтрокаТабличнойЧасти.СчетУчетаНУ = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СчетаУчета.СчетУчетаБУ));
		КонецЕсли;
				
	ИначеЕсли ИмяТабличнойЧасти = "Товары" Тогда
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаБУ) Тогда
			Если ВключаяЗаполненные ИЛИ НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчетаБУ) Тогда
				СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;
			КонецЕсли;    			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСПоПриобретению) Тогда 
			СтрокаТабличнойЧасти.СчетУчетаНДС = ?(НЕ ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСУплаченногоНаТаможне), СчетаУчета.СчетУчетаНДСПоПриобретению, СчетаУчета.СчетУчетаНДСУплаченногоНаТаможне);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНУ) Тогда 			
			Если ВключаяЗаполненные ИЛИ НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.СчетУчетаБУ) Тогда
				СтрокаТабличнойЧасти.СчетУчетаНУ = СчетаУчета.СчетУчетаНУ;
			КонецЕсли;			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Производит заполнение и установку реквизитов налогового учета и НДС в табличной части
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//
Процедура ЗаполнитьРеквизитыНалоговогоУчета(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти) Экспорт
	
	МетаданныеДокумента = ДанныеОбъекта.Ссылка.Метаданные();
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидОборотаТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта, ИмяТабличнойЧасти, МетаданныеДокумента);
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидПоступленияТабЧасти(СтрокаТабличнойЧасти, ИмяТабличнойЧасти, МетаданныеДокумента, Пользователи.ТекущийПользователь());
	
	СтрокаТабличнойЧасти.ВидНДС = Перечисления.ВидыНДС.НДС;
	
	Если ИмяТабличнойЧасти = "Товары" И НЕ ДанныеОбъекта.НДСВключенВСтоимость Тогда
		ВидНДСПриИмпорте = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.Номенклатура, "ВидНДСПриИмпорте");
		Если ЗначениеЗаполнено(ВидНДСПриИмпорте) Тогда
			СтрокаТабличнойЧасти.ВидНДС = ВидНДСПриИмпорте;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Производит заполнение и установку счетов учета расчетов с контрагентом
//
Процедура ЗаполнитьСчетаУчетаРасчетовСКонтрагентом(Объект) Экспорт
	
	ОсновнойДоговорКонтрагента = ПолучитьДоговорКонтрагента(Объект.Организация, Объект.Контрагент, Объект.ВалютаВзаиморасчетов, Объект.ВалютаДокумента);
	
	Если Объект.ВариантОтражения = 0 Тогда
		СчетаУчета = УправлениеВзаиморасчетамиСервер.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, ОсновнойДоговорКонтрагента);
		Объект.СчетУчетаРасчетовСКонтрагентом    = СчетаУчета.СчетРасчетов;
		Объект.СчетУчетаРасчетовСКонтрагентомВал = СчетаУчета.СчетРасчетов;
	Иначе
		Объект.СчетУчетаРасчетовСКонтрагентом    = ПланыСчетов.Типовой.ПрочиеОбязательстваПоДругимОбязательнымПлатежам;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов   

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение

Процедура ЗаполнитьПоДокументуОснования(Объект, Основание) Экспорт
	
	Объект.Разделы.Очистить();
	Объект.Товары.Очистить();
	Объект.ОС.Очистить();
	
	Разделы = Объект.Разделы;
		
	Если НЕ (ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")) Тогда
		Возврат;
	КонецЕсли;
	
	Если (НЕ (Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия 
		ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Импорт
		ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары
		ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги
		ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства)) Тогда
		Возврат;
	КонецЕсли;
		
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
			
	// при импорте, лицо импортирующее товар автоматически считается плательщиком НДС
	// В том случае, если организация не состоит на учете по НДС
	// сумму уплаченного НДС будем включать в стоимость приобретаемого товара
	Объект.УчитыватьНДС = Истина;
	Объект.НДСВключенВСтоимость = НЕ ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНДС(Объект.Организация, Объект.Дата);
	
	Объект.ДокументОснование = Основание;
		
	// Контрагент у нас другой
	Объект.Контрагент = Объект.Организация.НалоговыйКомитет;
	
	// Заполним Табличную часть разделов
	НовыйРаздел = Разделы.Добавить();
	НовыйРаздел.СтавкаНДС = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОсновнаяСтавкаНДС");
	
	Договор = ПолучитьДоговорКонтрагента(Объект.Организация, Объект.Контрагент, Объект.ВалютаВзаиморасчетов, Объект.ВалютаДокумента); 
	ЗаполнитьДоговорыВСтрокеТабЧастиРазделов(Договор, НовыйРаздел, Объект.ВалютаВзаиморасчетов, Объект.ВалютаДокумента);
			
	ЗаполнитьПоПоступлению(Основание, 1, "Товары", Объект);
	ЗаполнитьПоПоступлению(Основание, 1, "ОС", Объект);
	
	ВсегоСтоимость = 0;
		
	ПосчитатьИтогиПоРазделу(1, Объект.Товары, Объект.ОС, ВсегоСтоимость);
	
	НовыйРаздел.ТаможеннаяСтоимость = ВсегоСтоимость;
	
КонецПроцедуры

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	Если ОбщегоНазначенияБККлиентСервер.ЭтоПростаяВерсияКонфигурации() Тогда
		БлокируемыеРеквизиты.Добавить("Дата");
		БлокируемыеРеквизиты.Добавить("Номер");
		БлокируемыеРеквизиты.Добавить("ВалютаВзаиморасчетов;ВариантОтражения");
		БлокируемыеРеквизиты.Добавить("ВалютаДокумента");
		БлокируемыеРеквизиты.Добавить("ДокументОснование; ДокументОснование");
		БлокируемыеРеквизиты.Добавить("Контрагент");
		БлокируемыеРеквизиты.Добавить("ДоговорКонтрагента");
		БлокируемыеРеквизиты.Добавить("КратностьВзаиморасчетов");
		БлокируемыеРеквизиты.Добавить("КратностьДокумента");
		БлокируемыеРеквизиты.Добавить("КурсВзаиморасчетов");
		БлокируемыеРеквизиты.Добавить("КурсДокумента");
		БлокируемыеРеквизиты.Добавить("Организация; СтруктурноеПодразделениеОрганизация");
		БлокируемыеРеквизиты.Добавить("ФизЛицо");
		БлокируемыеРеквизиты.Добавить("СуммаДокумента");
		БлокируемыеРеквизиты.Добавить("СтруктурноеПодразделение");
		БлокируемыеРеквизиты.Добавить("НомерГТД");
		БлокируемыеРеквизиты.Добавить("ТаможенныйСбор");
		  		
		// таб. часть Товары
		БлокируемыеРеквизиты.Добавить("Товары; ТоварыГруппаЗаполнить, ТоварыПодборТовары, ТоварыИзменитьТовары,
			|ТоварыСкопироватьСтроки, ТоварыВставитьСтроки, ТоварыКонтекстноеМенюСкопироватьСтроки,ТоварыКонтекстноеМенюВставитьСтроки");
		БлокируемыеРеквизиты.Добавить("Товары.Номенклатура; ТоварыНоменклатура");
		БлокируемыеРеквизиты.Добавить("Товары.Поставщик; ТоварыПоставщик");
		БлокируемыеРеквизиты.Добавить("Товары.Коэффициент; ТоварыКоэффициент");
		БлокируемыеРеквизиты.Добавить("Товары.КоличествоМест; ТоварыКоличествоМест");
		БлокируемыеРеквизиты.Добавить("Товары.Количество; ТоварыКоличество");
		БлокируемыеРеквизиты.Добавить("Товары.ФактурнаяСтоимость; ТоварыФактурнаяСтоимость");
		БлокируемыеРеквизиты.Добавить("Товары.СуммаПошлины; ТоварыСуммаПошлины");
		БлокируемыеРеквизиты.Добавить("Товары.СуммаСбора; ТоварыСуммаСбора");
		БлокируемыеРеквизиты.Добавить("Товары.СуммаСбораВал; ТоварыСуммаСбораВал");
		БлокируемыеРеквизиты.Добавить("Товары.СуммаНДС; ТоварыСуммаНДС");
		БлокируемыеРеквизиты.Добавить("Товары.ДокументПартии; ТоварыДокументПартии");
		БлокируемыеРеквизиты.Добавить("Товары.ТаможеннаяСтоимость; ТоварыТаможеннаяСтоимость");
		БлокируемыеРеквизиты.Добавить("Товары.ЕдиницаИзмерения; ТоварыЕдиницаИзмерения");
		БлокируемыеРеквизиты.Добавить("Товары.НомерГТД; ТоварыНомерГТД");
		
		// таб. часть Разделы
		БлокируемыеРеквизиты.Добавить("Разделы; РассчитатьПоТоварамОС");
		БлокируемыеРеквизиты.Добавить("Разделы.ТаможеннаяСтоимость; РазделыТаможеннаяСтоимость");
		БлокируемыеРеквизиты.Добавить("Разделы.СтавкаПошлины; РазделыСтавкаПошлины");
		БлокируемыеРеквизиты.Добавить("Разделы.СтавкаНДС; РазделыСтавкаНДС");
		БлокируемыеРеквизиты.Добавить("Разделы.СуммаПошлины; РазделыСуммаПошлины");
		БлокируемыеРеквизиты.Добавить("Разделы.СуммаНДС; РазделыСуммаНДС");
		БлокируемыеРеквизиты.Добавить("Разделы.ТаможенныйСборВал; РазделыТаможенныйСборВал");
		БлокируемыеРеквизиты.Добавить("Разделы.ТаможенныйСбор; РазделыТаможенныйСбор");
		БлокируемыеРеквизиты.Добавить("Разделы.ДоговорВзаиморасчетовПошлина; РазделыДоговорВзаиморасчетовПошлина");
		БлокируемыеРеквизиты.Добавить("Разделы.ДоговорВзаиморасчетовНДС; РазделыДоговорВзаиморасчетовНДС");
		БлокируемыеРеквизиты.Добавить("Разделы.ДоговорВзаиморасчетовСбор; РазделыДоговорВзаиморасчетовСбор");
		БлокируемыеРеквизиты.Добавить("Разделы.ДоговорВзаиморасчетовСборВал; РазделыДоговорВзаиморасчетовСборВал");
		
		// таб. часть ОС
		БлокируемыеРеквизиты.Добавить("ОС; ОСГруппаЗаполнить, ОСИзменитьОС");
		БлокируемыеРеквизиты.Добавить("ОС.ОсновноеСредство; ОСОсновноеСредство");
		БлокируемыеРеквизиты.Добавить("ОС.ФактурнаяСтоимость; ОСФактурнаяСтоимость");
		БлокируемыеРеквизиты.Добавить("ОС.СуммаПошлины; ОССуммаПошлины");
		БлокируемыеРеквизиты.Добавить("ОС.СуммаСбора; ОССуммаСбора");
		БлокируемыеРеквизиты.Добавить("ОС.СуммаСбораВал; ОССуммаСбораВал");
		БлокируемыеРеквизиты.Добавить("ОС.СуммаНДС; ОССуммаНДС");
		БлокируемыеРеквизиты.Добавить("ОС.ДокументПартии; ОСДокументПартии");
		БлокируемыеРеквизиты.Добавить("ОС.ТаможеннаяСтоимость; ОСТаможеннаяСтоимость");
		БлокируемыеРеквизиты.Добавить("ОС.НомерГТД; ОСНомерГТД");
			 
	КонецЕсли;
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	Константы.ВалютаРегламентированногоУчета.Получить());
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	Если НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "БУ", Истина, ДокументСсылка)
		ИЛИ НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "НУ", Истина, ДокументСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.Вставить("РасчетыВВалюте", Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("РасчетыВВалюте",  Реквизиты.РасчетыВВалюте);
	Запрос.УстановитьПараметр("ВедетсяАналитическийУчетОСПоПодразделениям",   УправлениеВнеоборотнымиАктивамиСервер.ВедетсяАналитическийУчетОСПоПодразделениям(Реквизиты.Период));
	Запрос.УстановитьПараметр("ВедетсяАналитическийУчетОСПоМОЛ",              УправлениеВнеоборотнымиАктивамиСервер.ВедетсяАналитическийУчетОСПоМОЛ(Реквизиты.Период));
	Запрос.УстановитьПараметр("СодержаниеПошлина",     НСтр("ru = 'Таможенная пошлина'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеПошлинаВал",  НСтр("ru = 'Таможенная пошлина (в валюте)'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеПошлинаСпец", НСтр("ru = 'Таможенная пошлина (спец.)'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеСборы",       НСтр("ru = 'Таможенный сбор'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеСборыВал",    НСтр("ru = 'Таможенный сбор (в валюте)'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеНДС",         НСтр("ru = 'НДС по импорту'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеНДСВал",      НСтр("ru = 'НДС по импорту (в валюте)'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеВыделенНДС",         НСтр("ru = 'НДС'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеВыделенНДСВал",      НСтр("ru = 'НДС (в валюте)'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СодержаниеПринятНДСПоИмпорту", НСтр("ru = 'Принятие НДС в зачет, уплаченного по импорту'", КодОсновногоЯзыка));
		
	Если Реквизиты.РасчетыВВалюте Тогда
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты);
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
		Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
			Результат    = Запрос.ВыполнитьПакет();
		КонецЕсли;
	КонецЕсли;
		
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	
	НеобходимостьОтраженияВНУ 						= ОрганизацияПлательщикНалогаНаПрибыль И Реквизиты.УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ Реквизиты.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	
	Реквизиты.Вставить("ОрганизацияПлательщикНалогаНаПрибыль", 			 ОрганизацияПлательщикНалогаНаПрибыль);
	Реквизиты.Вставить("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
	Реквизиты.Вставить("НеобходимостьОтраженияВНУ", 					 НеобходимостьОтраженияВНУ);
	
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(НеобходимостьОтраженияВНУ, "НеобходимостьОтраженияВНУ");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль, "ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль");
	
	Налогоплательщик = Реквизиты.Организация;
	
	Если ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями")  Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
									Реквизиты.Организация,
									Перечисления.РазделыНалоговогоУчета.НДС);
	КонецЕсли;	
	
	Реквизиты.Вставить("Налогоплательщик", Налогоплательщик);

	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(Налогоплательщик, "Налогоплательщик");

	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаПоступление(НомераТаблиц, ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаТоварыОрганизаций(НомераТаблиц, ПараметрыПроведения, Реквизиты);

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СинонимТовары", НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимОС", НСтр("ru = 'ОС'"));
	Запрос.УстановитьПараметр("НеобходимостьОтраженияВНУ", НеобходимостьОтраженияВНУ);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьРазделы) КАК ЕстьРазделы,
	|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары,
	|	МАКСИМУМ(СоставДокумента.ЕстьОС) КАК ЕстьОС
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьРазделы,
	|		ЛОЖЬ КАК ЕстьТовары,
	|		ЛОЖЬ КАК ЕстьОС
	|	ИЗ
	|		Документ.ГТДИмпорт.Разделы КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ГТДИмпорт.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.ГТДИмпорт.ОС КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Организация КАК Налогоплательщик,
	|	Реквизиты.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ГоловнаяОрганизация ЕСТЬ NULL 
	|				ИЛИ Реквизиты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ Реквизиты.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Реквизиты.УчитыватьКПН,
	|	Реквизиты.ВидУчетаНУ,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентомВал,
	|	Реквизиты.УчитыватьНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СчетУчетаНДСПоРеализации,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.КурсДокумента,
	|	Реквизиты.КратностьДокумента,
	|	Реквизиты.ВариантОтражения,
	|	Реквизиты.ВидНалогаТаможеннойПошлины,
    |	Реквизиты.ВидНалогаТаможенногоСбора,
    |	Реквизиты.ВидНалогаНДСПоИмпорту,
	|	&ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ЛОЖЬ КАК НеобходимостьОтраженияВНУ,
	|	ЛОЖЬ КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
	|	Реквизиты.ВидВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ВидНалогаСпециальнойПошлины
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ГТДИмпорт КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.Налогоплательщик,
	|	Реквизиты.ГоловнаяОрганизация,
	|	Реквизиты.УчитыватьКПН,
	|	Реквизиты.ВидУчетаНУ,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентомВал,
	|	Реквизиты.УчитыватьНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.СчетУчетаНДСПоРеализации,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.ВариантОтражения,
	|	Реквизиты.ВидНалогаТаможеннойПошлины,
    |	Реквизиты.ВидНалогаТаможенногоСбора,
    |	Реквизиты.ВидНалогаНДСПоИмпорту,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.КурсДокумента,
	|	Реквизиты.КратностьДокумента,
	|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	Реквизиты.НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
	|	Реквизиты.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
	|	ЕСТЬNULL(СоставДокумента.ЕстьРазделы, ЛОЖЬ) КАК ЕстьРазделы,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТовары, ЛОЖЬ) КАК ЕстьТовары,
	|	ЕСТЬNULL(СоставДокумента.ЕстьОС, ЛОЖЬ) КАК ЕстьОС,
	|	Реквизиты.ВидВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента,
	|	Реквизиты.НомерВходящегоДокумента,
	|	Реквизиты.ВидНалогаСпециальнойПошлины
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)

	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьРазделы Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаРазделы", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаРазделы.Ссылка,
		|	ТаблицаРазделы.НомерСтроки,
		|	ТаблицаРазделы.НомерСтроки КАК НомерРаздела,
		|	ТаблицаРазделы.ТаможеннаяСтоимость,
		|	ТаблицаРазделы.СтавкаПошлины,
		|	ТаблицаРазделы.СтавкаНДС,
		|	ТаблицаРазделы.СуммаПошлины,
		|	ТаблицаРазделы.СуммаПошлиныСпец,
		|	ТаблицаРазделы.СуммаНДС,
		|	ТаблицаРазделы.ТаможенныйСбор,
		|	ТаблицаРазделы.ТаможенныйСборВал,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетовПошлина,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетовНДС,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСбор,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСбор.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетовСбор,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСборВал,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСборВал.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетовСборВал
		|ПОМЕСТИТЬ ТаблицаРазделы
		|ИЗ
		|	Документ.ГТДИмпорт.Разделы КАК ТаблицаРазделы
		|ГДЕ
		|	ТаблицаРазделы.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаТоварыПоНомерамГТД", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		
		// НомерГТД нужен только для движений по НДС, поэтому,
		// в запросах ниже для пошлины, сборов и т.д. выбирается пустая ссылка.
		
		ТекстЗапроса = ТекстЗапроса + 
		// Товары для движений по регистру ТоварыОрганизаций.
		// Учет по номерам ГТД для ОС не реализован, поэтому по ОС нет такого запроса.
		"ВЫБРАТЬ
		|	ГТДИмпортТовары.НомерСтроки,
		|	ГТДИмпортТовары.Номенклатура КАК Товар,
		|	ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
		|	ГТДИмпортТовары.НомерГТД,
		|	ГТДИмпортТовары.Количество * ГТДИмпортТовары.Коэффициент КАК Количество
		|ПОМЕСТИТЬ ВременнаяТаблицаТоварыПоНомерамГТД
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ГТДИмпортТовары.Ссылка = Реквизиты.Ссылка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета() + 
		// пошлина
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	0 КАК Порядок,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовПошлина КАК ВалютаВзаиморасчетов,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.КоличествоМест,
		|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент КАК Количество,
		|	ТаблицаТовары.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаТовары.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	ТаблицаТовары.СуммаПошлины КАК Сумма,
		|	Реквизиты.ВидНалогаТаможеннойПошлины КАК ВидНалога,
		|	ТаблицаТовары.СуммаПошлины КАК СуммаВзаиморасчетов,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаТовары.ДокументПартии КАК ДокументПартии,
		|	ТаблицаТовары.ДокументПартии.Склад КАК Склад,
		|	ТаблицаРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.ВидНДС КАК ВидНДС,
		|	ТаблицаТовары.НДСВидОборота КАК НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления КАК НДСВидПоступления,
		|	ТаблицаТовары.НДССрокПлатежа КАК НДССрокПлатежа,
		|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
		|   ТаблицаТовары.НомерГТД КАК НомерГТД,
		|	ЕСТЬNULL(Типовой.Забалансовый, ЛОЖЬ) КАК СчетУчетаБУЗабалансовый,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> ТаблицаРазделы.ВалютаВзаиморасчетовПошлина
		|			ТОГДА &СодержаниеПошлинаВал
		|		ИНАЧЕ &СодержаниеПошлина
		|	КОНЕЦ КАК Содержание
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаТовары.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаТовары.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|		ПО ТаблицаТовары.СчетУчетаБУ = Типовой.Ссылка
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И ТаблицаТовары.СуммаПошлины <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// НДС
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	1 КАК Порядок,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовНДС,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.КоличествоМест,
		|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.ТаможеннаяСтоимость,
		|	0,
		|	Реквизиты.ВидНалогаНДСПоИмпорту КАК ВидНалога,
		|	0,
		|	ТаблицаТовары.СуммаНДС,
		|	ТаблицаТовары.СуммаНДС,
		|	ТаблицаТовары.ДокументПартии,
		|	ТаблицаТовары.ДокументПартии.Склад,
		|	ТаблицаРазделы.СтавкаНДС,
		|	ТаблицаТовары.ВидНДС,
		|	ТаблицаТовары.НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления,
		|	ТаблицаТовары.НДССрокПлатежа,
		|	ТаблицаТовары.СчетУчетаНДС,
		|   ТаблицаТовары.НомерГТД КАК НомерГТД,
		|	ЕСТЬNULL(Типовой.Забалансовый, ЛОЖЬ),
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> ТаблицаРазделы.ВалютаВзаиморасчетовНДС
		|			ТОГДА &СодержаниеНДСВал
		|		ИНАЧЕ &СодержаниеНДС
		|	КОНЕЦ КАК Содержание
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаТовары.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаТовары.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|		ПО ТаблицаТовары.СчетУчетаБУ = Типовой.Ссылка
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		// движения по регистрам НДС должны формироваться всегда, поэтому не ставим условия на ненулевую сумму НДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Сбор в валюте регл. учета
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	2 КАК Порядок,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСбор КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовСбор,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.КоличествоМест,
		|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.ТаможеннаяСтоимость,
		|	ТаблицаТовары.СуммаСбора,
		|	Реквизиты.ВидНалогаТаможенногоСбора КАК ВидНалога,
		|	ТаблицаТовары.СуммаСбора,
		|	0,
		|	0,
		|	ТаблицаТовары.ДокументПартии,
		|	ТаблицаТовары.ДокументПартии.Склад,
		|	ТаблицаРазделы.СтавкаНДС,
		|	ТаблицаТовары.ВидНДС,
		|	ТаблицаТовары.НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления,
		|	ТаблицаТовары.НДССрокПлатежа,
		|	ТаблицаТовары.СчетУчетаНДС,
		|   ТаблицаТовары.НомерГТД КАК НомерГТД,		
		|	ЕСТЬNULL(Типовой.Забалансовый, ЛОЖЬ),
		|	&СодержаниеСборы КАК Содержание
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаТовары.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаТовары.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|		ПО ТаблицаТовары.СчетУчетаБУ = Типовой.Ссылка
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСбор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И ТаблицаТовары.СуммаСбора <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Сбор в валюте взаиморасчетов
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	3 КАК Порядок,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСборВал КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовСборВал,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.КоличествоМест,
		|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.ТаможеннаяСтоимость,
		|	ТаблицаТовары.СуммаСбораВал,
		|	Реквизиты.ВидНалогаТаможенногоСбора КАК ВидНалога,
		|	ТаблицаТовары.СуммаСбораВал,
		|	0,
		|	0,
		|	ТаблицаТовары.ДокументПартии,
		|	ТаблицаТовары.ДокументПартии.Склад,
		|	ТаблицаРазделы.СтавкаНДС,
		|	ТаблицаТовары.ВидНДС,
		|	ТаблицаТовары.НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления,
		|	ТаблицаТовары.НДССрокПлатежа,
		|	ТаблицаТовары.СчетУчетаНДС,
		|   ТаблицаТовары.НомерГТД КАК НомерГТД,		
		|	ЕСТЬNULL(Типовой.Забалансовый, ЛОЖЬ),
		|	&СодержаниеСборыВал КАК Содержание
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаТовары.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаТовары.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|		ПО ТаблицаТовары.СчетУчетаБУ = Типовой.Ссылка
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСборВал <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И ТаблицаТовары.СуммаСбораВал <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Спец. пошлина
		|ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	4 КАК Порядок,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина КАК ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.КоличествоМест,
		|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.ТаможеннаяСтоимость,
		|	ТаблицаТовары.СуммаПошлиныСпец, // Сумма
		|	Реквизиты.ВидНалогаСпециальнойПошлины, // ВидНалога
		|	ТаблицаТовары.СуммаПошлиныСпец, // СуммаВзаиморасчетов
		|	0, // СуммаНДС
		|	0, // СуммаНДСВзаиморасчетов
		|	ТаблицаТовары.ДокументПартии,
		|	ТаблицаТовары.ДокументПартии.Склад,
		|	ТаблицаРазделы.СтавкаНДС,
		|	ТаблицаТовары.ВидНДС,
		|	ТаблицаТовары.НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления,
		|	ТаблицаТовары.НДССрокПлатежа,
		|	ТаблицаТовары.СчетУчетаНДС,
		|   ТаблицаТовары.НомерГТД,
		|	ЕСТЬNULL(Типовой.Забалансовый, ЛОЖЬ),
		|	&СодержаниеПошлинаСпец
		|ИЗ
		|	Документ.ГТДИмпорт.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаТовары.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаТовары.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|		ПО ТаблицаТовары.СчетУчетаБУ = Типовой.Ссылка
		|ГДЕ
		|	ТаблицаТовары.СуммаПошлиныСпец <> 0
		|"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьОС Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаОС", НомераТаблиц.Количество());
		
		// НомерГТД нужен только для движений по НДС, поэтому,
		// в запросах ниже для пошлины, сборов и т.д. выбирается пустая ссылка.
		
		// пошлина
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	0 КАК Порядок,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовПошлина КАК ВалютаВзаиморасчетов,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаОС.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаОС.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	ТаблицаОС.СуммаПошлины КАК Сумма,
		|	Реквизиты.ВидНалогаТаможеннойПошлины КАК ВидНалога,
		|	ТаблицаОС.СуммаПошлины КАК СуммаВзаиморасчетов,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаОС.ДокументПартии КАК ДокументПартии,
		|	ТаблицаРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаОС.ВидНДС КАК ВидНДС,
		|	ТаблицаОС.НДСВидОборота КАК НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК НДСВидПоступления,
		|	ТаблицаОС.НДССрокПлатежа КАК НДССрокПлатежа,
		|	ТаблицаОС.СчетУчетаНДС КАК СчетУчетаНДС,
		|   ТаблицаОС.НомерГТД КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоПодразделениям 
		|			ТОГДА ТаблицаОС.ПодразделениеОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоМОЛ
		|			ТОГДА ТаблицаОС.МОЛОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК МОЛОрганизации,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> ТаблицаРазделы.ВалютаВзаиморасчетовПошлина
		|			ТОГДА &СодержаниеПошлинаВал
		|		ИНАЧЕ &СодержаниеПошлина
		|	КОНЕЦ КАК Содержание
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	Документ.ГТДИмпорт.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаОС.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаОС.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И ТаблицаОС.СуммаПошлины <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// НДС
		|ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	1 КАК Порядок,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовНДС КАК ВалютаВзаиморасчетов,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаОС.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаОС.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	0 КАК Сумма,
		|	Реквизиты.ВидНалогаНДСПоИмпорту КАК ВидНалога,
		|	0 КАК СуммаВзаиморасчетов,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДС,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаОС.ДокументПартии КАК ДокументПартии,
		|	ТаблицаРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаОС.ВидНДС КАК ВидНДС,
		|	ТаблицаОС.НДСВидОборота КАК НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК НДСВидПоступления,
		|	ТаблицаОС.НДССрокПлатежа КАК НДССрокПлатежа,
		|	ТаблицаОС.СчетУчетаНДС КАК СчетУчетаНДС,
		|   ТаблицаОС.НомерГТД КАК НомерГТД,		
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоПодразделениям 
		|			ТОГДА ТаблицаОС.ПодразделениеОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоМОЛ
		|			ТОГДА ТаблицаОС.МОЛОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК МОЛОрганизации,
		|	ВЫБОР
		|		КОГДА Реквизиты.ВалютаДокумента <> ТаблицаРазделы.ВалютаВзаиморасчетовНДС
		|			ТОГДА &СодержаниеНДСВал
		|		ИНАЧЕ &СодержаниеНДС
		|	КОНЕЦ КАК Содержание
		|ИЗ
		|	Документ.ГТДИмпорт.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаОС.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаОС.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		// движения по регистрам НДС должны формироваться всегда, поэтому не ставим условия на ненулевую сумму НДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Сбор в валюте документа
		|ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	2 КАК Порядок,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСбор КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовСбор КАК ВалютаВзаиморасчетов,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаОС.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаОС.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	ТаблицаОС.СуммаСбора КАК Сумма,
		|	Реквизиты.ВидНалогаТаможенногоСбора КАК ВидНалога,
		|	ТаблицаОС.СуммаСбора КАК СуммаВзаиморасчетов,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаОС.ДокументПартии КАК ДокументПартии,
		|	ТаблицаРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаОС.ВидНДС КАК ВидНДС,
		|	ТаблицаОС.НДСВидОборота КАК НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК НДСВидПоступления,
		|	ТаблицаОС.НДССрокПлатежа КАК НДССрокПлатежа,
		|	ТаблицаОС.СчетУчетаНДС КАК СчетУчетаНДС,
		|   ТаблицаОС.НомерГТД КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоПодразделениям 
		|			ТОГДА ТаблицаОС.ПодразделениеОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоМОЛ
		|			ТОГДА ТаблицаОС.МОЛОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК МОЛОрганизации,
		|	&СодержаниеСборы КАК Содержание
		|ИЗ
		|	Документ.ГТДИмпорт.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаОС.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаОС.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСбор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И ТаблицаОС.СуммаСбора <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Сбор в валюте взаиморасчетов
		|ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	3 КАК Порядок,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСборВал КАК ДоговорКонтрагента,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовСборВал КАК ВалютаВзаиморасчетов,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаОС.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаОС.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
		|	ТаблицаОС.СуммаСбораВал КАК Сумма,
		|	Реквизиты.ВидНалогаТаможенногоСбора КАК ВидНалога,
		|	ТаблицаОС.СуммаСбораВал КАК СуммаВзаиморасчетов,
		|	0 КАК СуммаНДС,
		|	0 КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаОС.ДокументПартии КАК ДокументПартии,
		|	ТаблицаРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаОС.ВидНДС КАК ВидНДС,
		|	ТаблицаОС.НДСВидОборота КАК НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК НДСВидПоступления,
		|	ТаблицаОС.НДССрокПлатежа КАК НДССрокПлатежа,
		|	ТаблицаОС.СчетУчетаНДС КАК СчетУчетаНДС,
		|   ТаблицаОС.НомерГТД КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоПодразделениям 
		|			ТОГДА ТаблицаОС.ПодразделениеОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоМОЛ
		|			ТОГДА ТаблицаОС.МОЛОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК МОЛОрганизации,
		|	&СодержаниеСборыВал КАК Содержание
		|ИЗ
		|	Документ.ГТДИмпорт.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаОС.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаОС.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|ГДЕ
		|	ТаблицаРазделы.ДоговорВзаиморасчетовСборВал <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|	И ТаблицаОС.СуммаСбораВал <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Спец. пошлина
		|ВЫБРАТЬ
		|	ТаблицаОС.Ссылка,
		|	4 КАК Порядок,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.НомерРаздела,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовПошлина,
		|	Реквизиты.ВалютаВзаиморасчетов,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.СчетУчетаБУ,
		|	ТаблицаОС.СчетУчетаНУ,
		|	ТаблицаОС.ТаможеннаяСтоимость,
		|	ТаблицаОС.СуммаПошлиныСпец, // Сумма
		|	Реквизиты.ВидНалогаСпециальнойПошлины, // ВидНалога
		|	ТаблицаОС.СуммаПошлиныСпец, // СуммаВзаиморасчетов
		|	0, // СуммаНДС
		|	0, // СуммаНДСВзаиморасчетов
		|	ТаблицаОС.ДокументПартии КАК ДокументПартии,
		|	ТаблицаРазделы.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаОС.ВидНДС КАК ВидНДС,
		|	ТаблицаОС.НДСВидОборота КАК НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК НДСВидПоступления,
		|	ТаблицаОС.НДССрокПлатежа КАК НДССрокПлатежа,
		|	ТаблицаОС.СчетУчетаНДС КАК СчетУчетаНДС,
		|   ТаблицаОС.НомерГТД КАК НомерГТД,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоПодразделениям 
		|			ТОГДА ТаблицаОС.ПодразделениеОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА &ВедетсяАналитическийУчетОСПоМОЛ
		|			ТОГДА ТаблицаОС.МОЛОрганизации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК МОЛОрганизации,
		|	&СодержаниеПошлинаСпец
		|ИЗ
		|	Документ.ГТДИмпорт.ОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ТаблицаОС.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаОС.Ссылка = ТаблицаРазделы.Ссылка
		|			И ТаблицаОС.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|ГДЕ
		|	ТаблицаОС.СуммаПошлиныСпец <> 0
		|"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты)
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
	РеквизитыДляПересчетаСумм = Новый Структура("ВалютаДокумента, ВалютаРегламентированногоУчета, КурсВзаиморасчетов, КратностьВзаиморасчетов, НДСВключенВСтоимость, УчитыватьНДС");
	ЗаполнитьЗначенияСвойств(РеквизитыДляПересчетаСумм, Реквизиты, , "ВалютаДокумента");
	РеквизитыДляПересчетаСумм.ВалютаДокумента = Реквизиты.ВалютаВзаиморасчетов;
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьТовары Тогда
		СуммыТаблицыТовары = Результат[НомераТаблиц["СуммыТаблицыТовары"]].Выгрузить();
		УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыТовары, РеквизитыДляПересчетаСумм);
		Запрос.УстановитьПараметр("СуммыТаблицыТовары", СуммыТаблицыТовары);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеТовары(НомераТаблиц, Реквизиты);
	КонецЕсли;
	
	Если Реквизиты.ЕстьОС Тогда
		СуммыТаблицыОС = Результат[НомераТаблиц["СуммыТаблицыОС"]].Выгрузить();
		УправлениеВзаиморасчетамиСервер.ПодготовитьТаблицуДокументаРасчетыВВалюте(СуммыТаблицыОС, РеквизитыДляПересчетаСумм);
		Запрос.УстановитьПараметр("СуммыТаблицыОС", СуммыТаблицыОС);
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРасчетыВВалютеОС(НомераТаблиц, Реквизиты);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат    = Запрос.ВыполнитьПакет();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	ТекстЗапроса = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаТовары", "ПОМЕСТИТЬ ВременнаяТаблицаТовары");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.Ссылка = &Ссылка", "ТаблицаТовары.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|Порядок,
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки,
		|	ВременнаяТаблицаТовары.Порядок,
		|	ВременнаяТаблицаТовары.СтавкаНДС,
		|	ВременнаяТаблицаТовары.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаТовары.Сумма,
		|	ВременнаяТаблицаТовары.СуммаНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Реквизиты.ВалютаДокумента <> ВременнаяТаблицаТовары.ВалютаВзаиморасчетов"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьОС Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаОС", "ПОМЕСТИТЬ ВременнаяТаблицаОС");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаОС.Ссылка = &Ссылка", "ТаблицаОС.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|Порядок,
		|НомерСтроки");
		НомераТаблиц.Вставить("СуммыТаблицыОС", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВременнаяТаблицаОС.НомерСтроки,
		|	ВременнаяТаблицаОС.Порядок,
		|	ВременнаяТаблицаОС.СтавкаНДС,
		|	ВременнаяТаблицаОС.СуммаВзаиморасчетов,
		|	ВременнаяТаблицаОС.СуммаНДСВзаиморасчетов,
		|	ВременнаяТаблицаОС.Сумма,
		|	ВременнаяТаблицаОС.СуммаНДС
		|ИЗ
		|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	Реквизиты.ВалютаДокумента <> ВременнаяТаблицаОС.ВалютаВзаиморасчетов"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасчетыВВалютеТовары(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыТовары.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыТовары.Порядок КАК Порядок,
	|	СуммыТаблицыТовары.СуммаВзаиморасчетов,
	|	СуммыТаблицыТовары.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыТовары.Сумма,
	|	СуммыТаблицыТовары.СуммаНДС
	|ПОМЕСТИТЬ СуммыТаблицыТовары
	|ИЗ
	|	&СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.Ссылка,
	|	ВременнаяТаблицаТовары.Порядок КАК Порядок,
	|	ВременнаяТаблицаТовары.НомерСтроки,
	|	ВременнаяТаблицаТовары.НомерРаздела,
	|	ВременнаяТаблицаТовары.ДоговорКонтрагента,
	|	ВременнаяТаблицаТовары.ВалютаВзаиморасчетов,
	|	ВременнаяТаблицаТовары.Номенклатура,
	|	ВременнаяТаблицаТовары.КоличествоМест,
	|	ВременнаяТаблицаТовары.Количество,
	|	ВременнаяТаблицаТовары.СчетУчетаБУ,
	|	ВременнаяТаблицаТовары.СчетУчетаНУ,
	|	ВременнаяТаблицаТовары.ТаможеннаяСтоимость,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаТовары.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыТовары.Сумма
	|		ИНАЧЕ ВременнаяТаблицаТовары.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаТовары.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыТовары.СуммаВзаиморасчетов
	|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаВзаиморасчетов
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаТовары.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыТовары.СуммаНДС
	|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаТовары.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыТовары.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ВременнаяТаблицаТовары.СуммаНДСВзаиморасчетов
	|	КОНЕЦ КАК СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаТовары.ДокументПартии,
	|	ВременнаяТаблицаТовары.Склад,
	|	ВременнаяТаблицаТовары.СтавкаНДС,
	|	ВременнаяТаблицаТовары.ВидНДС,
	|	ВременнаяТаблицаТовары.НДСВидОборота,
	|	ВременнаяТаблицаТовары.НДСВидПоступления,
	|	ВременнаяТаблицаТовары.НДССрокПлатежа,
	|	ВременнаяТаблицаТовары.СчетУчетаНДС,
	|   ВременнаяТаблицаТовары.НомерГТД КАК НомерГТД,	
	|	ВременнаяТаблицаТовары.СчетУчетаБУЗабалансовый,
	|	ВременнаяТаблицаТовары.Содержание,
	|	ВременнаяТаблицаТовары.ВидНалога
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыТовары КАК СуммыТаблицыТовары
	|		ПО ВременнаяТаблицаТовары.НомерСтроки = СуммыТаблицыТовары.НомерСтроки
	|			И ВременнаяТаблицаТовары.Порядок = СуммыТаблицыТовары.Порядок";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРасчетыВВалютеОС(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СуммыТаблицыОС.НомерСтроки КАК НомерСтроки,
	|	СуммыТаблицыОС.Порядок КАК Порядок,
	|	СуммыТаблицыОС.СуммаВзаиморасчетов,
	|	СуммыТаблицыОС.СуммаНДСВзаиморасчетов,
	|	СуммыТаблицыОС.Сумма,
	|	СуммыТаблицыОС.СуммаНДС
	|ПОМЕСТИТЬ СуммыТаблицыОС
	|ИЗ
	|	&СуммыТаблицыОС КАК СуммыТаблицыОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаОС.Ссылка,
	|	ВременнаяТаблицаОС.Порядок,
	|	ВременнаяТаблицаОС.НомерСтроки,
	|	ВременнаяТаблицаОС.НомерРаздела,
	|	ВременнаяТаблицаОС.ДоговорКонтрагента,
	|	ВременнаяТаблицаОС.ВалютаВзаиморасчетов,
	|	ВременнаяТаблицаОС.ОсновноеСредство,
	|	ВременнаяТаблицаОС.СчетУчетаБУ,
	|	ВременнаяТаблицаОС.СчетУчетаНУ,
	|	ВременнаяТаблицаОС.ТаможеннаяСтоимость,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаОС.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыОС.Сумма
	|		ИНАЧЕ ВременнаяТаблицаОС.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаОС.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыОС.СуммаВзаиморасчетов
	|		ИНАЧЕ ВременнаяТаблицаОС.СуммаВзаиморасчетов
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаОС.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыОС.СуммаНДС
	|		ИНАЧЕ ВременнаяТаблицаОС.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаОС.ВалютаВзаиморасчетов
	|			ТОГДА СуммыТаблицыОС.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ВременнаяТаблицаОС.СуммаНДСВзаиморасчетов
	|	КОНЕЦ КАК СуммаНДСВзаиморасчетов,
	|	ВременнаяТаблицаОС.ДокументПартии,
	|	ВременнаяТаблицаОС.СтавкаНДС,
	|	ВременнаяТаблицаОС.ВидНДС,
	|	ВременнаяТаблицаОС.НДСВидОборота,
	|	ВременнаяТаблицаОС.НДСВидПоступления,
	|	ВременнаяТаблицаОС.НДССрокПлатежа,
	|	ВременнаяТаблицаОС.СчетУчетаНДС,
	|   ВременнаяТаблицаОС.НомерГТД КАК НомерГТД,
	|	ВременнаяТаблицаОС.ПодразделениеОрганизации,
	|	ВременнаяТаблицаОС.МОЛОрганизации,
	|	ВременнаяТаблицаОС.ВидНалога,
	|	ВременнаяТаблицаОС.Содержание
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	ВременнаяТаблицаОС КАК ВременнаяТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыТаблицыОС КАК СуммыТаблицыОС
	|		ПО ВременнаяТаблицаОС.НомерСтроки = СуммыТаблицыОС.НомерСтроки
	|			И ВременнаяТаблицаОС.Порядок = СуммыТаблицыОС.Порядок";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаПоступление(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	ТекстЗапроса = "";
	Если НЕ Реквизиты.ЕстьТовары Тогда 
		ПараметрыПроведения.Вставить("ТаблицаТовары", Неопределено);
	Иначе 
		НомераТаблиц.Вставить("ТаблицаТовары",	НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Порядок,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.ТаможеннаяСтоимость,
		|	ТаблицаТовары.Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СуммаВзаиморасчетов = 0 И ТаблицаТовары.СуммаНДСВзаиморасчетов <> 0
		| 			ТОГДА ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ ТаблицаТовары.Сумма
		| 	КОНЕЦ КАК Сумма,
		|   ТаблицаТовары.ВидНалога,
		|	ТаблицаТовары.СуммаНДС,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СуммаВзаиморасчетов = 0 И ТаблицаТовары.СуммаНДСВзаиморасчетов <> 0
		| 			ТОГДА ТаблицаТовары.СуммаНДСВзаиморасчетов
		|		ИНАЧЕ ТаблицаТовары.СуммаВзаиморасчетов
		| 	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВал,
		|	ТаблицаТовары.ДокументПартии,
		|	ТаблицаТовары.Склад,
		|	ТаблицаТовары.ДоговорКонтрагента,
		|	ТаблицаТовары.ВалютаВзаиморасчетов,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.СчетУчетаНДС,
		|	ТаблицаТовары.НДСВидОборота,
		|	ТаблицаТовары.НДСВидПоступления,
		|	ВЫБОР
		|		КОГДА СпособОценкиЗапасовБУ.СпособОценки ЕСТЬ NULL 
		|				ИЛИ СпособОценкиЗапасовБУ.СпособОценки В (ЗНАЧЕНИЕ(Перечисление.СпособыОценки.ПоСредней), ЗНАЧЕНИЕ(Перечисление.СпособыОценки.ПустаяСсылка))
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВедетсяПартионныйУчет,
		|	ТаблицаТовары.СчетУчетаБУЗабалансовый КАК СчетУчетаБУЗабалансовый,
		|	ТаблицаТовары.Содержание
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособОценкиЗапасовБУ КАК СпособОценкиЗапасовБУ
		|		ПО ТаблицаТовары.СчетУчетаБУ = СпособОценкиЗапасовБУ.СчетЗапасов
		|ГДЕ
		|	ВЫБОР
		|			КОГДА НЕ Реквизиты.НДСВключенВСтоимость
		|				ТОГДА ТаблицаТовары.СуммаНДСВзаиморасчетов = 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Порядок"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаОС", Неопределено);
	Иначе 
		НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	""ОС"" КАК ИмяСписка,
		|	&СинонимОС КАК СинонимСписка,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.Порядок,
		|	ТаблицаОС.ОсновноеСредство,
		|	ТаблицаОС.ТаможеннаяСтоимость,
		|	ВЫБОР
		|		КОГДА ТаблицаОС.СуммаВзаиморасчетов = 0 И ТаблицаОС.СуммаНДСВзаиморасчетов <> 0
		| 			ТОГДА ТаблицаОС.СуммаНДС
		|		ИНАЧЕ ТаблицаОС.Сумма
		| 	КОНЕЦ КАК Сумма,
		|	ТаблицаОС.ВидНалога,
		|	ТаблицаОС.СуммаНДС,
		|	ВЫБОР
		|		КОГДА ТаблицаОС.СуммаВзаиморасчетов = 0 И ТаблицаОС.СуммаНДСВзаиморасчетов <> 0
		| 			ТОГДА ТаблицаОС.СуммаНДСВзаиморасчетов
		|		ИНАЧЕ ТаблицаОС.СуммаВзаиморасчетов
		| 	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаОС.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаОС.СуммаНДСВзаиморасчетов КАК СуммаНДСВал,
		|	ТаблицаОС.ДоговорКонтрагента,
		|	ТаблицаОС.ВалютаВзаиморасчетов,
		|	ТаблицаОС.СтавкаНДС,
		|	ТаблицаОС.СчетУчетаБУ,
		|	ТаблицаОС.СчетУчетаНУ,
		|	ТаблицаОС.СчетУчетаНДС,
		|	ТаблицаОС.НДСВидОборота,
		|	ТаблицаОС.НДСВидПоступления,
		|	ТаблицаОС.ПодразделениеОрганизации,
		|	ТаблицаОС.МОЛОрганизации,
		|   &ВедетсяАналитическийУчетОСПоПодразделениям КАК ВедетсяАналитическийУчетОСПоПодразделениям,
		|   &ВедетсяАналитическийУчетОСПоМОЛ КАК ВедетсяАналитическийУчетОСПоМОЛ,
		|	ТаблицаОС.Содержание
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА НЕ Реквизиты.НДСВключенВСтоимость
		|				ТОГДА ТаблицаОС.СуммаНДСВзаиморасчетов = 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.Порядок"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	Если НЕ Реквизиты.УчитыватьНДС Тогда 
		ПараметрыПроведения.Вставить("ТаблицаНДС", Неопределено);
		Возврат ТекстЗапроса;
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары Тогда 
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	""ТоварыНДС"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.НомерРаздела,
		|	ТаблицаТовары.Порядок,
		|	ТаблицаТовары.Номенклатура КАК ТМЗ,
		|	ТаблицаТовары.ТаможеннаяСтоимость,
		|	ТаблицаТовары.СуммаНДС,
		|	ТаблицаТовары.СуммаНДС КАК УплаченныйНДС,
		|	ТаблицаТовары.СуммаНДСВзаиморасчетов КАК СуммаНДСВал,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.Сумма КАК СуммаБезНДС,
		|	ТаблицаТовары.НДСВидОборота КАК ВидОборота,
		|	ТаблицаТовары.НДСВидПоступления КАК ВидОперацииПоступления,
		|   ТаблицаТовары.ВидНДС КАК ВидНалогаНДС,
		|	ТаблицаТовары.СчетУчетаНДС КАК Счет,
		|	ТаблицаТовары.СчетУчетаНДС КАК СчетУчетаНДС,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС КАК Договор,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовНДС КАК ВалютаВзаиморасчетов,
		|	ТаблицаТовары.НДССрокПлатежа КАК СрокПлатежа,
		|	ТаблицаТовары.НомерГТД КАК НомерГТД,
		|	0 КАК Метка
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаТовары.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";   		
	КонецЕсли;
	
	Если Реквизиты.ЕстьОС Тогда 
		Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда 
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	""ОСНДС"" КАК ИмяСписка,
		|	&СинонимОС КАК СинонимСписка,
		|	ТаблицаОС.НомерСтроки,
		|	ТаблицаОС.НомерРаздела,
		|	ТаблицаОС.Порядок,
		|	ТаблицаОС.ОсновноеСредство КАК ТМЗ,
		|	ТаблицаОС.ТаможеннаяСтоимость,
		|	ТаблицаОС.СуммаНДС,		
		|	ТаблицаОС.СуммаНДС КАК УплаченныйНДС,
		|	ТаблицаОС.СуммаНДСВзаиморасчетов КАК СуммаНДСВал,
		|	ТаблицаОС.СтавкаНДС,
		|	ТаблицаОС.Сумма КАК СуммаБезНДС,
		|	ТаблицаОС.НДСВидОборота КАК ВидОборота,
		|	ТаблицаОС.НДСВидПоступления КАК ВидОперацииПоступления,
		|   ТаблицаОС.ВидНДС КАК ВидНалогаНДС,
		|	ТаблицаОС.СчетУчетаНДС КАК Счет,
		|	ТаблицаОС.СчетУчетаНДС КАК СчетУчетаНДС,
		|	ТаблицаРазделы.ДоговорВзаиморасчетовНДС КАК Договор,
		|	ТаблицаРазделы.ВалютаВзаиморасчетовНДС КАК ВалютаВзаиморасчетов,
		|	ТаблицаОС.НДССрокПлатежа КАК СрокПлатежа,
		|	ТаблицаОС.НомерГТД КАК НомерГТД,
		|	1 КАК Метка
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРазделы КАК ТаблицаРазделы
		|		ПО ТаблицаОС.НомерРаздела = ТаблицаРазделы.НомерРаздела
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)";
			
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда 
		
		НомераТаблиц.Вставить("ВременнаяТаблицаНДС", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаНДС",          НомераТаблиц.Количество());

		ТекстЗапроса = "
		|ВЫБРАТЬ 
		|	ВложенныйЗапрос.ИмяСписка,
		|	ВложенныйЗапрос.СинонимСписка,
		|	ВложенныйЗапрос.НомерСтроки,
		|	ВложенныйЗапрос.НомерРаздела,
		|	ВложенныйЗапрос.ТМЗ,
		|	ВложенныйЗапрос.ТаможеннаяСтоимость,
		|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ВложенныйЗапрос.УплаченныйНДС) КАК УплаченныйНДС,
		|	СУММА(ВложенныйЗапрос.СуммаНДСВал) КАК СуммаНДСВал,
		|	ВложенныйЗапрос.СтавкаНДС,
		|	СУММА(ВложенныйЗапрос.СуммаБезНДС) КАК СуммаБезНДС,
		|	ВложенныйЗапрос.ВидОборота,
		|	ВложенныйЗапрос.ВидОперацииПоступления,
		|   ВложенныйЗапрос.ВидНалогаНДС,
		|	ВложенныйЗапрос.Счет,
		|	ВложенныйЗапрос.СчетУчетаНДС,
		|	ВложенныйЗапрос.Договор,
		|	ВложенныйЗапрос.ВалютаВзаиморасчетов,
		|	ВложенныйЗапрос.СрокПлатежа,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.Метка
		|ПОМЕСТИТЬ ВременнаяТаблицаНДС
		|ИЗ 
		|	(" + ТекстЗапроса + ") КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ИмяСписка,
		|	ВложенныйЗапрос.СинонимСписка,
		|	ВложенныйЗапрос.НомерСтроки,
		|	ВложенныйЗапрос.НомерРаздела,
		|	ВложенныйЗапрос.ТМЗ,
		|	ВложенныйЗапрос.ТаможеннаяСтоимость,		
		|	ВложенныйЗапрос.СтавкаНДС,
		|	ВложенныйЗапрос.ВидОборота,
		|	ВложенныйЗапрос.ВидОперацииПоступления,
		|   ВложенныйЗапрос.ВидНалогаНДС,
		|	ВложенныйЗапрос.Счет,
		|	ВложенныйЗапрос.СчетУчетаНДС,
		|	ВложенныйЗапрос.Договор,
		|	ВложенныйЗапрос.ВалютаВзаиморасчетов,
		|	ВложенныйЗапрос.СрокПлатежа,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.Метка"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета() + "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНДС.ИмяСписка,
		|	ВременнаяТаблицаНДС.СинонимСписка,
		|	ВременнаяТаблицаНДС.НомерСтроки,
		|	ВременнаяТаблицаНДС.НомерРаздела,
		|	ВременнаяТаблицаНДС.ТМЗ,
		|	ВременнаяТаблицаНДС.СуммаНДС,
		|	ВременнаяТаблицаНДС.УплаченныйНДС,
		|	ВременнаяТаблицаНДС.СуммаНДСВал,
		|	ВременнаяТаблицаНДС.СтавкаНДС,
		|	ВременнаяТаблицаНДС.СуммаБезНДС + ВременнаяТаблицаНДС.ТаможеннаяСтоимость КАК СуммаБезНДС,
		|	ВременнаяТаблицаНДС.СуммаБезНДС + ВременнаяТаблицаНДС.ТаможеннаяСтоимость КАК ОборотПоРеализации,
		|	ВременнаяТаблицаНДС.ВидОборота,
		|	ВременнаяТаблицаНДС.ВидОперацииПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыРеализации.ИмпортТМЗМетодомЗачета) КАК ВидОперацииРеализации,
		|   ВременнаяТаблицаНДС.ВидНалогаНДС,
		|	ВременнаяТаблицаНДС.СчетУчетаНДС,
		|	ВременнаяТаблицаНДС.Договор,
		|	ВременнаяТаблицаНДС.ВалютаВзаиморасчетов,
		|	ВременнаяТаблицаНДС.СрокПлатежа,
		|	ВременнаяТаблицаНДС.НомерГТД КАК ГТД,
		|	ВременнаяТаблицаНДС.Счет,
		|  ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость) КАК Субконто1, 
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК Субконто2,
		|	НЕОПРЕДЕЛЕНО КАК Субконто3,
		|	ВЫБОР КОГДА Реквизиты.ВариантОтражения = 1 ТОГДА 
		|      ЗНАЧЕНИЕ(ПланСчетов.Типовой.НДСНачисленныйПриПокупке)
		|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаНДС.ВалютаВзаиморасчетов И Реквизиты.ВариантОтражения = 0
		|			ТОГДА Реквизиты.СчетУчетаРасчетовСКонтрагентомВал
		|		ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|	КОНЕЦ  КАК КорСчет,
		|		Реквизиты.Контрагент КАК КорСубконто1,
		|	ВЫБОР КОГДА Реквизиты.ВариантОтражения = 0 ТОГДА 
        |		ВременнаяТаблицаНДС.Договор 
		|	ИНАЧЕ 	Реквизиты.Ссылка 
		|   КОНЕЦ КАК КорСубконто2,
		|	ВЫБОР КОГДА Реквизиты.ВариантОтражения = 0 ТОГДА 
        |		Реквизиты.Ссылка 
		|	ИНАЧЕ 	Неопределено 
		|   КОНЕЦ КАК КорСубконто3,
		|	Реквизиты.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
		|	Реквизиты.ВидНалогаНДСПоИмпорту КАК ВидНалогаНДСПоИмпорту,
		|	ВЫБОР КОГДА Реквизиты.ВариантОтражения = 1 ТОГДА 
		|       Реквизиты.СчетУчетаНДСПоРеализации
		|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаНДС.ВалютаВзаиморасчетов И Реквизиты.ВариантОтражения = 0
		|			ТОГДА Реквизиты.СчетУчетаРасчетовСКонтрагентомВал
		|		ИНАЧЕ Реквизиты.СчетУчетаРасчетовСКонтрагентом
		|	КОНЕЦ КАК СчетУчетаРасчетовСКонтрагентом,
		|	ВЫБОР
		|	   КОГДА Реквизиты.ВариантОтражения = 1 И НЕ ВременнаяТаблицаНДС.ВидНалогаНДС = ЗНАЧЕНИЕ(Перечисление.ВидыНДС.НДСМетодомЗачета) ТОГДА 
		|       &СодержаниеПринятНДСПоИмпорту
		|		КОГДА Реквизиты.ВалютаДокумента <> ВременнаяТаблицаНДС.ВалютаВзаиморасчетов
		|			ТОГДА &СодержаниеВыделенНДСВал
		|		ИНАЧЕ &СодержаниеВыделенНДС
		|	КОНЕЦ КАК Содержание,
		|	Реквизиты.ВидВходящегоДокумента,
		|	Реквизиты.ДатаВходящегоДокумента,
		|	Реквизиты.НомерВходящегоДокумента,
		|	ВременнаяТаблицаНДС.Метка
		|ИЗ
		|	ВременнаяТаблицаНДС КАК ВременнаяТаблицаНДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)	
		|УПОРЯДОЧИТЬ ПО
		|	ВременнаяТаблицаНДС.Метка,
		|	ВременнаяТаблицаНДС.НомерСтроки" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	Иначе 
		ПараметрыПроведения.Вставить("ТаблицаНДС", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТоварыОрганизаций(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары Тогда 
		
		НомераТаблиц.Вставить("ТаблицаТоварыПоНомерамГТД", НомераТаблиц.Количество());		
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТоварыПоНомерамГТД.НомерСтроки,
		|	""Товары"" КАК ИмяСписка,
		|	ТаблицаТоварыПоНомерамГТД.Товар,
		|	ТаблицаТоварыПоНомерамГТД.НомерГТД,
		|	ТаблицаТоварыПоНомерамГТД.Количество,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТоварыПоНомерамГТД.ДокументПартии.Склад КАК Склад
		|ИЗ
		|	ВременнаяТаблицаТоварыПоНомерамГТД КАК ТаблицаТоварыПоНомерамГТД
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТоварыПоНомерамГТД.НомерСтроки"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
	 Иначе 
		
		ПараметрыПроведения.Вставить("ТаблицаТоварыПоНомерамГТД", Неопределено);
		
		Возврат ТекстЗапроса;
		
	КонецЕсли;

	Возврат ТекстЗапроса;
		
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочие

Функция ПолучитьДоговорКонтрагента(Организация, Контрагент, ВалютаВзаиморасчетов, ВалютаДокумента) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли; 
    
    Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
        СписокВидовДоговора = Новый Массив;
        СписокВидовДоговора.Добавить(Перечисления.ВидыДоговоровКонтрагентов.Прочее);
        НайденныйДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
        РаботаСДоговорамиКонтрагентов.УстановитьДоговорКонтрагента(НайденныйДоговор, Контрагент, Организация, СписокВидовДоговора);
        Возврат НайденныйДоговор;
    КонецЕсли;
    
	МассивВалют = Новый Массив;
	МассивВалют.Добавить(ВалютаДокумента);
	Если ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		МассивВалют.Добавить(ВалютаВзаиморасчетов);
	КонецЕсли; 
	                                               
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДоговорыКонтрагентов.Ссылка,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПолеСортировки
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Владелец
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	|	И ДоговорыКонтрагентов.ВедениеВзаиморасчетов = &ВедениеВзаиморасчетов
	|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов В(&МассивВалют)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПолеСортировки УБЫВ";
	Запрос.УстановитьПараметр("Владелец", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.Прочее);
	Запрос.УстановитьПараметр("ВедениеВзаиморасчетов", Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом);
	Запрос.УстановитьПараметр("МассивВалют", МассивВалют);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		Возврат РезультатЗапроса.Ссылка;
	Иначе
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции    

Процедура ЗаполнитьДоговорыВСтрокеТабЧастиРазделов(Договор, СтрокаРаздела, ВалютаВзаиморасчетов, ВалютаДокумента) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Договор) Тогда
		Возврат;
	КонецЕсли;
	
	// Для НДС и пошлины можно установить данный договор
	Если НЕ ЗначениеЗаполнено(СтрокаРаздела.ДоговорВзаиморасчетовПошлина) ТОгда
		СтрокаРаздела.ДоговорВзаиморасчетовПошлина = Договор;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаРаздела.ДоговорВзаиморасчетовНДС) ТОгда
		СтрокаРаздела.ДоговорВзаиморасчетовНДС = Договор;
	КонецЕсли;			
	
	// Для сбора можно установит только договор, валюта которого равна валюте документа
	Если НЕ ЗначениеЗаполнено(СтрокаРаздела.ДоговорВзаиморасчетовСбор) и Договор.ВалютаВзаиморасчетов = ВалютаДокумента Тогда
		СтрокаРаздела.ДоговорВзаиморасчетовСбор = Договор;
	КонецЕсли;			
	
	// Для валютного сбора можно установит только договор, валюта которого равна валюте взаиморасчетов
	Если НЕ ЗначениеЗаполнено(СтрокаРаздела.ДоговорВзаиморасчетовСборВал) и Договор.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов Тогда
		СтрокаРаздела.ДоговорВзаиморасчетовСборВал = Договор;
	КонецЕсли;			
	
КонецПроцедуры

Функция ПолучитьКодыТНВЭДСпискаНоменклатуры(СписокНоменклатуры)
	
	Результат = Новый Соответствие;
	
	Если СписокНоменклатуры.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.КодТНВЭД
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&СписокНоменклатуры)";
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатуры = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаНоменклатуры.Следующий() Цикл
		Результат.Вставить(ВыборкаНоменклатуры.Номенклатура, ВыборкаНоменклатуры.КодТНВЭД);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Заполняет таб часть Товары/ОС по указанному поступлению товаров
//
// Параметры
//  ДокументПоступления - ссылка на документ ПоступлениеТоваровУслуг, определяет документ поступления, по которому надо заполнить этот документ,
//  НомерРаздела        - число, номер раздела, который надо заполнить.
//
Процедура ЗаполнитьПоПоступлению(ДокументПоступления, НомерРаздела, ИмяТабличнойЧасти, Объект) Экспорт
	
	ОснованиеВидОперации = ДокументПоступления.ВидОперации;
	
	Если (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия) 
		ИЛИ (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Импорт) 
		ИЛИ (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары) 
		ИЛИ (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги) 
		ИЛИ (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства) Тогда 
		ТаблицаЗначенийТовары = ДокументПоступления[ИмяТабличнойЧасти].Выгрузить();						
		Если ИмяТабличнойЧасти = "Товары" Тогда
			СоответствиеКодовТНВЭД = ПолучитьКодыТНВЭДСпискаНоменклатуры(ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаЗначенийТовары, "Номенклатура", Истина));
		КонецЕсли;
	Иначе
		Возврат;		
	КонецЕсли;
		
	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Объект.Организация, Объект.Дата);
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	// пересчитываем в валюту рег. учета 
	Объект.ВалютаДокумента 	  = ВалютаРегламентированногоУчета;   	
	СтруктураКурсаДокумента   = ОбщегоНазначенияБК.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
	Объект.КурсДокумента 	  = СтруктураКурсаДокумента.Курс;
	Объект.КратностьДокумента = СтруктураКурсаДокумента.Кратность;	
	
	ДанныеОбъекта = Новый Структура("Ссылка, Дата, Организация, Склад, ВидОперации, УчитыватьКПН, УчитыватьНДС, УчитыватьАкциз, НДСВключенВСтоимость");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);   
	
	// Обработка добавленных строк	
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаЗначенийТовары Цикл
		
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
		
		НоваяСтрока.НомерРаздела = НомерРаздела;		
		
		Если ИмяТабличнойЧасти = "Товары" Тогда			
			НоваяСтрока.Номенклатура     = СтрокаТаблицыЗначений.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения = СтрокаТаблицыЗначений.ЕдиницаИзмерения;
			НоваяСтрока.Количество       = СтрокаТаблицыЗначений.Количество;
			НоваяСтрока.Коэффициент      = СтрокаТаблицыЗначений.Коэффициент;
			НоваяСтрока.ДокументПартии   = ДокументПоступления;
			СведенияОНоменклатуре        = ОбработкаТабличныхЧастей.ПолучитьСведенияОНоменклатуре(НоваяСтрока.Номенклатура, ДанныеОбъекта);
			НоваяСтрока.КодТНВЭД         = СоответствиеКодовТНВЭД.Получить(НоваяСтрока.Номенклатура);
			
			ЗначениеРеквизитаНоменклатура = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НоваяСтрока.Номенклатура, "НаименованиеПолное, Наименование");
			
			НоваяСтрока.НаименованиеТовара = ?(ЗначениеЗаполнено(ЗначениеРеквизитаНоменклатура.НаименованиеПолное)
																, ЗначениеРеквизитаНоменклатура.НаименованиеПолное
																, ЗначениеРеквизитаНоменклатура.Наименование);
			
		Иначе
			НоваяСтрока.ОсновноеСредство         = СтрокаТаблицыЗначений.ОсновноеСредство;
			НоваяСтрока.ПодразделениеОрганизации = СтрокаТаблицыЗначений.ПодразделениеОрганизации;
			НоваяСтрока.МОЛОрганизации           = СтрокаТаблицыЗначений.МОЛОрганизации;
			НоваяСтрока.ДокументПартии           = ДокументПоступления;
			СведенияОНоменклатуре                = УправлениеВнеоборотнымиАктивамиСервер.ПолучитьСчетаУчетаОС(Объект.Организация, НоваяСтрока.ОсновноеСредство, Объект.Дата);
		КонецЕсли;
		
		НоваяСтрока.ФактурнаяСтоимость = ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТаблицыЗначений.Сумма, ДокументПоступления.ВалютаДокумента,
										 Объект.ВалютаДокумента, 
										 ОбщегоНазначенияБК.КурсДокумента(ДокументПоступления, ВалютаРегламентированногоУчета), Объект.КурсДокумента,
										 ОбщегоНазначенияБК.КратностьДокумента(ДокументПоступления, ВалютаРегламентированногоУчета), Объект.КратностьДокумента);
        НоваяСтрока.ТаможеннаяСтоимость = ОбщегоНазначенияБККлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТаблицыЗначений.Сумма, ДокументПоступления.ВалютаДокумента,
										 Объект.ВалютаДокумента, 
										 ОбщегоНазначенияБК.КурсДокумента(ДокументПоступления, ВалютаРегламентированногоУчета), Объект.КурсДокумента,
										 ОбщегоНазначенияБК.КратностьДокумента(ДокументПоступления, ВалютаРегламентированногоУчета), Объект.КратностьДокумента);
				
	КонецЦикла;	
	
	ВсегоСтоимость = 0;	
	ПосчитатьИтогиПоРазделу(НомерРаздела, Объект.Товары, Объект.ОС, ВсегоСтоимость);
	Объект.Разделы[НомерРаздела - 1].ТаможеннаяСтоимость = ВсегоСтоимость;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(Объект);
	
КонецПроцедуры 

// Вычисляет суммы по данным раздела.
//
// Параметры
//  НомерРаздела   - число, номер раздела по которому надо получить итоги,
//  ВсегоСтоимость - число, в этот параметр будет возвращена сумма фактурной стоимости,
//  ВсегоПошлина   - число, в этот параметр будет возвращена сумма пошлины, 
//  ВсегоНДС       - число, в этот параметр будет возвращена сумма НДС.
//  ВсегоСбор      - число, в этот параметр будет возвращена сумма таможенного сбора.
//  ВсегоСборВал   - число, в этот параметр будет возвращена сумма таможенного сбора в валюте.
//
Процедура ПосчитатьИтогиПоРазделу(НомерРаздела, Товары, ОС, ВсегоСтоимость)
	
	МассивСтрок = Товары.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));
	ПосчитатьИтогиПоТабличнойЧасти(МассивСтрок, ВсегоСтоимость);	
	
	МассивСтрокОС = ОС.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));
	ПосчитатьИтогиПоТабличнойЧасти(МассивСтрокОС, ВсегоСтоимость);		
	
КонецПроцедуры

// Вычисляет итоговые суммы раздела по каждой табличной части.
//
Процедура ПосчитатьИтогиПоТабличнойЧасти(МассивСтрок, ВсегоСтоимость)
	
	Для каждого ЭлементМассива Из МассивСтрок Цикл		
		ВсегоСтоимость 	= ВсегоСтоимость + ЭлементМассива.ФактурнаяСтоимость;
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ГТДИмпорт";
	КомандаПечати.Представление = НСтр("ru = 'ГТД по импорту'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ГТДИмпортДопРасходы";
	КомандаПечати.Представление = НСтр("ru = 'ГТД по импорту (доп. расходы)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 51;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ГТДИмпортДопРасходыПоКонтрагентам";
	КомандаПечати.Представление = НСтр("ru = 'ГТД по импорту (доп. расходы по контрагентам)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 52;
	
	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ГТДИмпорт,ГТДИмпортДопРасходы,ГТДИмпортДопРасходыПоКонтрагентам";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ГТДИмпорт");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ГТДИмпорт",
			НСтр("ru = 'ГТД по импорту'"),
			ПечатьГТДИмпорт(МассивОбъектов, ОбъектыПечати, ПараметрыВывода.КодЯзыка),
			,
			"Документ.ГТДИмпорт.ПФ_MXL_ГТДИмпорт");
		
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("ГТДИмпорт"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ГТДИмпортДопРасходы");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ГТДИмпортДопРасходы",
			НСтр("ru = 'ГТД по импорту (доп. расходы)'"),
			ПечатьГТДИмпортДопРасходы(МассивОбъектов, ОбъектыПечати, ПараметрыВывода.КодЯзыка),
			,
			"Документ.ГТДИмпорт.ПФ_MXL_ГТДИмпорт_ДопРасходы");
		
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("ГТДИмпортДопРасходы"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ГТДИмпортДопРасходыПоКонтрагентам");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ГТДИмпортДопРасходыПоКонтрагентам",
			НСтр("ru = 'ГТД по импорту (доп. расходы по контрагентам)'"),
			ПечатьГТДИмпортДопРасходыПоКонтрагентам(МассивОбъектов, ОбъектыПечати, ПараметрыВывода.КодЯзыка),
			,
			"Документ.ГТДИмпорт.ПФ_MXL_ГТДИмпорт_ДопРасходы_ПоКонтрагентам");
		
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег("ГТДИмпортДопРасходыПоКонтрагентам"), "ИмяВРЕГ");
		Если ОписаниеПечатнойФормы <> Неопределено Тогда
			ОписаниеПечатнойФормы.ДоступенВыводНаДругихЯзыках = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой ГТДИмпорт,
// разработанной методистами
Функция ПечатьГТДИмпорт(МассивОбъектов, ОбъектыПечати = Неопределено, КодЯзыка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ГТДИмпорт_ГТДИмпорт";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ГТДИмпорт.ПФ_MXL_ГТДИмпорт", КодЯзыка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	ВидыСубконтоОС = Новый Массив;
	ВидыСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидыСубконтоОС", ВидыСубконтоОС);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ГТДИмпортТовары.ДокументПартии КАК ДокументПартии
	               |ПОМЕСТИТЬ ВТ_ДокументыПартии
	               |ИЗ
	               |	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	               |ГДЕ
	               |	ГТДИмпортТовары.Ссылка В(&Ссылка)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ГТДИмпортОС.ДокументПартии
	               |ИЗ
	               |	Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	               |ГДЕ
	               |	ГТДИмпортОС.Ссылка В(&Ссылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТиповойОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	               |	ТиповойОборотыДтКт.Регистратор КАК Регистратор,
	               |	ТиповойОборотыДтКт.СчетДт КАК СчетДт,
	               |	ТиповойОборотыДтКт.СуммаОборот КАК СуммаОборот
	               |ПОМЕСТИТЬ ВТ_ТиповойОборотыДтКт
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконто, , , ) КАК ТиповойОборотыДтКт
	               |ГДЕ
	               |	ТиповойОборотыДтКт.Регистратор В
	               |			(ВЫБРАТЬ
	               |				ВТ_ДокументыПартии.ДокументПартии
	               |			ИЗ
	               |				ВТ_ДокументыПартии)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТиповойОборотыДтКт.СубконтоДт1,
	               |	ТиповойОборотыДтКт.Регистратор,
	               |	ТиповойОборотыДтКт.СчетДт,
	               |	ТиповойОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконтоОС, , , ) КАК ТиповойОборотыДтКт
	               |ГДЕ
	               |	ТиповойОборотыДтКт.Регистратор В
	               |			(ВЫБРАТЬ
	               |				ВТ_ДокументыПартии.ДокументПартии
	               |			ИЗ
	               |				ВТ_ДокументыПартии)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГТДИмпорт.Ссылка КАК Ссылка,
	               |	ГТДИмпорт.Номер КАК Номер,
	               |	ГТДИмпорт.Дата КАК Дата,
	               |	ГТДИмпорт.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	               |	ГТДИмпорт.ВалютаДокумента КАК ВалютаДокумента,
	               |	ГТДИмпорт.Контрагент КАК Контрагент,
	               |	ГТДИмпорт.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	               |	ГТДИмпорт.НомерГТД КАК НомерГТД,
	               |	ГТДИмпорт.Организация КАК Организация,
	               |	ГТДИмпорт.СтруктурноеПодразделение КАК СтруктурноеПодразделение
	               |ПОМЕСТИТЬ ВТ_ГТД
	               |ИЗ
	               |	Документ.ГТДИмпорт КАК ГТДИмпорт
	               |ГДЕ
	               |	ГТДИмпорт.Ссылка В(&Ссылка)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ГТД.Ссылка КАК Ссылка,
	               |	ВТ_ГТД.Организация КАК Организация,
	               |	ВТ_ГТД.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	               |	ГТДОбщий.НомерСтроки КАК НомерСтроки,
	               |	ГТДОбщий.НомерРаздела КАК НомерРаздела,
	               |	ГТДОбщий.Номенклатура КАК Номенклатура,
	               |	ГТДОбщий.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	               |	ГТДОбщий.СуммаПошлиныВВалюте КАК СуммаПошлиныВВалюте,
	               |	ГТДОбщий.СуммаПошлиныСпецВВалюте КАК СуммаПошлиныСпецВВалюте,
	               |	ГТДОбщий.СуммаСбора КАК СуммаСбора,
	               |	ГТДОбщий.СуммаСбораВВалюте КАК СуммаСбораВВалюте,
	               |	ГТДОбщий.ВалютаСбора КАК ВалютаСбора,
	               |	ГТДОбщий.Количество КАК Количество,
	               |	ГТДОбщий.ВалютаДокументаПоступления КАК ВалютаДокументаПоступления,
	               |	ГТДОбщий.СтавкаПошлины КАК СтавкаПошлины,
	               |	ГТДОбщий.ВалютаПошлины КАК ВалютаПошлины,
	               |	ГТДОбщий.СуммаНДСВВалюте КАК СуммаНДСВВалюте,
	               |	ГТДОбщий.ВалютаНДС КАК ВалютаНДС,
	               |	ГТДОбщий.СуммаПошлиныРегл КАК СуммаПошлиныРегл,
	               |	ГТДОбщий.СуммаПошлиныСпецРегл КАК СуммаПошлиныСпецРегл,
	               |	ГТДОбщий.СуммаВалютногоСбораРегл КАК СуммаВалютногоСбораРегл,
	               |	ГТДОбщий.СуммаНДСРегл КАК СуммаНДСРегл,
	               |	ГТДОбщий.СуммаПоступленияРегл КАК СуммаПоступленияРегл,
	               |	ГТДОбщий.СуммаПоступленияРегл + ГТДОбщий.СуммаПошлиныРегл + ГТДОбщий.СуммаВалютногоСбораРегл + ГТДОбщий.СуммаСбора + ГТДОбщий.СуммаНДСВСтоимостиРегл + ГТДОбщий.СуммаПошлиныСпецРегл КАК ОбщаяСуммаРегл,
	               |	ВЫБОР
	               |		КОГДА ГТДОбщий.Количество = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ (ГТДОбщий.СуммаПоступленияРегл + ГТДОбщий.СуммаПошлиныРегл + ГТДОбщий.СуммаВалютногоСбораРегл + ГТДОбщий.СуммаСбора + ГТДОбщий.СуммаНДСВСтоимостиРегл + ГТДОбщий.СуммаПошлиныСпецРегл) / ГТДОбщий.Количество
	               |	КОНЕЦ КАК ОбщаяЦенаРегл,
	               |	ГТДОбщий.ЦенаРегл КАК ЦенаРегл,
	               |	ГТДОбщий.ЦенаВал КАК ЦенаВал,
	               |	ВТ_ГТД.ВалютаДокумента КАК ВалютаДокумента,
	               |	ГТДОбщий.КодНоменклатуры КАК КодНоменклатуры,
	               |	ВТ_ГТД.Дата КАК Дата,
	               |	ВТ_ГТД.Контрагент КАК Контрагент,
	               |	ВТ_ГТД.НомерГТД КАК НомерГТД,
	               |	ВТ_ГТД.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	               |	ВТ_ГТД.НДСВключенВСтоимость КАК НДСВключенВСтоимость
	               |ИЗ
	               |	ВТ_ГТД КАК ВТ_ГТД
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ГТДИмпортТовары.Ссылка КАК Ссылка,
	               |			ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	               |			ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	               |			ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	               |			ГТДИмпортТовары.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	               |			ВЫБОР
	               |				КОГДА НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаПошлины
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК СуммаПошлиныВВалюте,
	               |			ВЫБОР
	               |				КОГДА НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаПошлиныСпец
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК СуммаПошлиныСпецВВалюте,
	               |			ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	               |			ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВВалюте,
	               |			ГТДИмпортРазделы.ДоговорВзаиморасчетовСбор.ВалютаВзаиморасчетов КАК ВалютаСбора,
	               |			ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) КАК Количество,
	               |			ПоступлениеТМЗ.ВалютаДокумента КАК ВалютаДокументаПоступления,
	               |			ГТДИмпортРазделы.СтавкаПошлины КАК СтавкаПошлины,
	               |			ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов КАК ВалютаПошлины,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА 0
	               |				ИНАЧЕ ГТДИмпортТовары.СуммаНДС
	               |			КОНЕЦ КАК СуммаНДСВВалюте,
	               |			ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов КАК ВалютаНДС,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаПошлины
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлины * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаПошлиныРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаПошлиныСпец
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлиныСпец * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаПошлиныСпецРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаСбораВал * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаВалютногоСбораРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаНДС
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаНДСРегл,
	               |			ВЫБОР
	               |				КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) * ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) / ПоступлениеТМЗ.Количество
	               |			КОНЕЦ КАК СуммаПоступленияРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.Ссылка.НДСВключенВСтоимость
	               |					ТОГДА ВЫБОР
	               |							КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |								ТОГДА ГТДИмпортТовары.СуммаНДС
	               |							КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |								ТОГДА 0
	               |							ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК СуммаНДСВСтоимостиРегл,
	               |			ВЫРАЗИТЬ(ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	               |						ТОГДА 0
	               |					ИНАЧЕ ЕСТЬNULL(ПоступлениеТМЗ.СуммаПоступленияВал, 0) / ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0)
	               |				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаВал,
	               |			ВЫРАЗИТЬ(ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	               |						ТОГДА 0
	               |					ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) / ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0)
	               |				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаРегл,
	               |			ГТДИмпортРазделы.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	               |			ГТДИмпортТовары.Номенклатура.Код КАК КодНоменклатуры
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				МИНИМУМ(ГТДИмпортТовары.НомерСтроки) КАК НомерСтроки,
	               |				ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	               |				ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	               |				СУММА(ГТДИмпортТовары.Количество) КАК Количество,
	               |				СУММА(ГТДИмпортТовары.ТаможеннаяСтоимость) КАК ТаможеннаяСтоимость,
	               |				СУММА(ГТДИмпортТовары.СуммаПошлины) КАК СуммаПошлины,
	               |				СУММА(ГТДИмпортТовары.СуммаПошлиныСпец) КАК СуммаПошлиныСпец,
	               |				СУММА(ГТДИмпортТовары.СуммаСбора) КАК СуммаСбора,
	               |				СУММА(ГТДИмпортТовары.СуммаСбораВал) КАК СуммаСбораВал,
	               |				ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	               |				ГТДИмпортТовары.Ссылка КАК Ссылка,
	               |				СУММА(ГТДИмпортТовары.СуммаНДС) КАК СуммаНДС,
	               |				ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	               |			ИЗ
	               |				(ВЫБРАТЬ
	               |					ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	               |					ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	               |					ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	               |					ГТДИмпортТовары.Количество КАК Количество,
	               |					ГТДИмпортТовары.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	               |					ГТДИмпортТовары.СуммаПошлины КАК СуммаПошлины,
	               |					ГТДИмпортТовары.СуммаПошлиныСпец КАК СуммаПошлиныСпец,
	               |					ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	               |					ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВал,
	               |					ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	               |					ГТДИмпортТовары.Ссылка КАК Ссылка,
	               |					ГТДИмпортТовары.СуммаНДС КАК СуммаНДС,
	               |					ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	               |				ИЗ
	               |					Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	               |				ГДЕ
	               |					ГТДИмпортТовары.Ссылка В(&Ссылка)
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ГТДИмпортОС.НомерСтроки,
	               |					ГТДИмпортОС.НомерРаздела,
	               |					ГТДИмпортОС.ОсновноеСредство,
	               |					1,
	               |					ГТДИмпортОС.ТаможеннаяСтоимость,
	               |					ГТДИмпортОС.СуммаПошлины,
	               |					ГТДИмпортОС.СуммаПошлиныСпец,
	               |					ГТДИмпортОС.СуммаСбора,
	               |					ГТДИмпортОС.СуммаСбораВал,
	               |					ГТДИмпортОС.ДокументПартии,
	               |					ГТДИмпортОС.Ссылка,
	               |					ГТДИмпортОС.СуммаНДС,
	               |					ГТДИмпортОС.СчетУчетаБУ
	               |				ИЗ
	               |					Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	               |				ГДЕ
	               |					ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИмпортТовары
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ГТДИмпортТовары.НомерРаздела,
	               |				ГТДИмпортТовары.Номенклатура,
	               |				ГТДИмпортТовары.ДокументПартии,
	               |				ГТДИмпортТовары.Ссылка,
	               |				ГТДИмпортТовары.СчетУчетаБУ) КАК ГТДИмпортТовары
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	               |				ПО ГТДИмпортТовары.Ссылка = ГТДИмпортРазделы.Ссылка
	               |					И ГТДИмпортТовары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
	               |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |					ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	               |					ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |					ПоступлениеТоваровУслугТовары.ВалютаДокумента КАК ВалютаДокумента,
	               |					СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	               |					СУММА(ПоступлениеТоваровУслугТовары.СуммаПоступленияВал) КАК СуммаПоступленияВал
	               |				ИЗ
	               |					(ВЫБРАТЬ
	               |						ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	               |						ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |						ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	               |						ВЫБОР
	               |							КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	               |									И НЕ ПоступлениеТоваровУслугТовары.Ссылка.НДСВключенВСтоимость
	               |								ТОГДА ПоступлениеТоваровУслугТовары.Сумма - ПоступлениеТоваровУслугТовары.СуммаНДС
	               |							ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма
	               |						КОНЕЦ КАК СуммаПоступленияВал,
	               |						ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	               |					ИЗ
	               |						Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |					
	               |					ОБЪЕДИНИТЬ ВСЕ
	               |					
	               |					ВЫБРАТЬ
	               |						ПоступлениеТоваровУслугОС.Ссылка,
	               |						ПоступлениеТоваровУслугОС.ОсновноеСредство,
	               |						1,
	               |						ВЫБОР
	               |							КОГДА ПоступлениеТоваровУслугОС.Ссылка.СуммаВключаетНДС
	               |									И НЕ ПоступлениеТоваровУслугОС.Ссылка.НДСВключенВСтоимость
	               |								ТОГДА ПоступлениеТоваровУслугОС.Сумма - ПоступлениеТоваровУслугОС.СуммаНДС
	               |							ИНАЧЕ ПоступлениеТоваровУслугОС.Сумма
	               |						КОНЕЦ,
	               |						ПоступлениеТоваровУслугОС.Ссылка.ВалютаДокумента
	               |					ИЗ
	               |						Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС) КАК ПоступлениеТоваровУслугТовары
	               |				
	               |				СГРУППИРОВАТЬ ПО
	               |					ПоступлениеТоваровУслугТовары.Ссылка,
	               |					ПоступлениеТоваровУслугТовары.Номенклатура,
	               |					ПоступлениеТоваровУслугТовары.ВалютаДокумента) КАК ПоступлениеТМЗ
	               |				ПО ГТДИмпортТовары.ДокументПартии = ПоступлениеТМЗ.Ссылка
	               |					И ГТДИмпортТовары.Номенклатура = ПоступлениеТМЗ.Номенклатура
	               |				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТиповойОборотыДтКт КАК ТиповойОборотыДтКт
	               |				ПО ГТДИмпортТовары.Номенклатура = ТиповойОборотыДтКт.СубконтоДт1
	               |					И ГТДИмпортТовары.ДокументПартии = ТиповойОборотыДтКт.Регистратор
	               |					И ГТДИмпортТовары.СчетУчетаБУ = ТиповойОборотыДтКт.СчетДт) КАК ГТДОбщий
	               |		ПО ВТ_ГТД.Ссылка = ГТДОбщий.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка,
	               |	НомерРаздела,
	               |	НомерСтроки
	               |ИТОГИ
	               |	МАКСИМУМ(Организация),
	               |	МАКСИМУМ(СтруктурноеПодразделение),
	               |	СУММА(ТаможеннаяСтоимость),
	               |	СУММА(СуммаПошлиныВВалюте),
	               |	СУММА(СуммаПошлиныСпецВВалюте),
	               |	СУММА(СуммаСбора),
	               |	СУММА(СуммаСбораВВалюте),
	               |	МАКСИМУМ(ВалютаСбора),
	               |	СУММА(Количество),
	               |	МАКСИМУМ(ВалютаДокументаПоступления),
	               |	МАКСИМУМ(СтавкаПошлины),
	               |	МАКСИМУМ(ВалютаПошлины),
	               |	СУММА(СуммаНДСВВалюте),
	               |	МАКСИМУМ(ВалютаНДС),
	               |	СУММА(СуммаПошлиныРегл),
	               |	СУММА(СуммаПошлиныСпецРегл),
	               |	СУММА(СуммаВалютногоСбораРегл),
	               |	СУММА(СуммаНДСРегл),
	               |	СУММА(СуммаПоступленияРегл),
	               |	СУММА(ОбщаяСуммаРегл),
	               |	МАКСИМУМ(ВалютаДокумента),
	               |	МАКСИМУМ(Дата),
	               |	МАКСИМУМ(Контрагент),
	               |	МАКСИМУМ(НомерГТД),
	               |	МАКСИМУМ(ВалютаВзаиморасчетов),
	               |	МАКСИМУМ(НДСВключенВСтоимость)
	               |ПО
	               |	Ссылка,
	               |	НомерРаздела
	               |АВТОУПОРЯДОЧИВАНИЕ" ;
	
	Результат = Запрос.Выполнить();
	ВыборкаОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщиеИтоги.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктурнаяЕдиницаОрганизация = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(ВыборкаОбщиеИтоги.Организация, ВыборкаОбщиеИтоги.СтруктурноеПодразделение);
		
		ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");	
		ОбластьЗаголовка.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ВыборкаОбщиеИтоги.Ссылка, НСтр("ru = 'ГТД по импорту'", КодЯзыка));
				
		ПредставлениеОрганизации = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, ВыборкаОбщиеИтоги.Дата), "ПолноеНаименование,");
		ПредставлениеКонтрагента = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(ВыборкаОбщиеИтоги.Контрагент, ВыборкаОбщиеИтоги.Дата), "ПолноеНаименование,");
		
		ОбластьЗаголовка.Параметры.ПредставлениеПолучателя 	= ПредставлениеОрганизации;
		ОбластьЗаголовка.Параметры.ПредставлениеКонтрагента = ПредставлениеКонтрагента;
		ОбластьЗаголовка.Параметры.ГТДНомер 				= ВыборкаОбщиеИтоги.НомерГТД;
		
		ТабДокумент.Вывести(ОбластьЗаголовка);   			
						   
		
		ПечатьВВалюте = Не ВыборкаОбщиеИтоги.СуммаПошлиныВВалюте = 0 или 
						Не ВыборкаОбщиеИтоги.СуммаСбораВВалюте = 0 или 
						Не ВыборкаОбщиеИтоги.СуммаНДСВВалюте = 0; 
															   					
		ОбластьШапки = Макет.ПолучитьОбласть(?(ПечатьВВалюте, "ШапкаВал", "Шапка"));	
		
		ОбластьШапки.Параметры.Валюта = ВыборкаОбщиеИтоги.ВалютаВзаиморасчетов;
		ОбластьШапки.Параметры.ВалютаДокумента = ВыборкаОбщиеИтоги.ВалютаДокумента;
		ОбластьШапки.Параметры.СтрокаНДС = ?(ВыборкаОбщиеИтоги.НДСВключенВСтоимость, НСтр("ru = 'НДС (включен в стоимость ТМЗ)'", КодЯзыка), НСтр("ru = 'НДС'", КодЯзыка));
			
		ТабДокумент.Вывести(ОбластьШапки);
		
		Если ПечатьВВалюте Тогда
			ОбластьРаздела = Макет.ПолучитьОбласть("РазделВал");	
			ОбластьДанных  = Макет.ПолучитьОбласть("ДанныеВал");		
			ОбластьПодвала = Макет.ПолучитьОбласть("ПодвалВал");		
			СтруктураСуммовыхПолей = Новый Структура("СуммаПоступленияРегл,СуммаПошлиныВВалюте,СуммаПошлиныРегл,СуммаСбораВВалюте,СуммаСбора,СуммаВалютногоСбораРегл,СуммаНДСВВалюте,СуммаНДСРегл,ОбщаяСуммаРегл");			
			СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаВалютногоСбораРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
		Иначе
			ОбластьРаздела = Макет.ПолучитьОбласть("Раздел");	
			ОбластьДанных  = Макет.ПолучитьОбласть("Данные");		
			ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");		
			СтруктураСуммовыхПолей 			= Новый Структура("СуммаПоступленияРегл,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");	
			СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
		КонецЕсли;
		
		ОбластьПодвала.Параметры.Заполнить(ВыборкаОбщиеИтоги);
			
		ВыборкаРазделы = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаРазделы.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаРазделы.НомерРаздела) Тогда
				Продолжить;
			КонецЕсли; 
			
			ОбластьРаздела.Параметры.Заполнить(ВыборкаРазделы);
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НомерРаздела" , СокрЛП(ВыборкаРазделы.НомерРаздела));
			СтруктураПараметров.Вставить("СтавкаПошлины", СокрЛП(ВыборкаРазделы.СтавкаПошлины));
			
			Если ПечатьВВалюте Тогда
				ПредставлениеРаздела = НСтр("ru = 'Раздел №[НомерРаздела], пошлина ([ВалютаПошлины]) : [СтавкаПошлины]%, таможенный сбор ([ВалютаСбора]), НДС ([ВалютаНДС])'", КодЯзыка);
				СтруктураПараметров.Вставить("ВалютаПошлины", СокрЛП(ВыборкаРазделы.ВалютаПошлины));
				СтруктураПараметров.Вставить("ВалютаСбора"  , СокрЛП(ВыборкаРазделы.ВалютаСбора));
				СтруктураПараметров.Вставить("ВалютаНДС"    , СокрЛП(ВыборкаРазделы.ВалютаНДС));
			Иначе
				ПредставлениеРаздела = НСтр("ru = 'Раздел №[НомерРаздела], пошлина ([Валюта]) : [СтавкаПошлины]%, таможенный сбор ([Валюта]), НДС ([Валюта])'", КодЯзыка);
				СтруктураПараметров.Вставить("Валюта"       , СокрЛП(ВыборкаРазделы.ВалютаДокумента));
			КонецЕсли;
			
			ОбластьРаздела.Параметры.ПредставлениеРаздела = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ПредставлениеРаздела, СтруктураПараметров);
			
			// форматирование суммовых полей
			Для каждого СуммовоеПоле из СтруктураСуммовыхПолей Цикл
				ОбластьРаздела.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаРазделы[СуммовоеПоле.Ключ]);
			КонецЦикла;	
				
			ТабДокумент.Вывести(ОбластьРаздела);
			
			ВыборкаДанные= ВыборкаРазделы.Выбрать();
			Пока ВыборкаДанные.Следующий() Цикл
				ОбластьДанных.Параметры.Заполнить(ВыборкаДанные);
				// форматирование суммовых полей
				Для Каждого СуммовоеПоле из СтруктураСуммовыхПолей Цикл
					ОбластьДанных.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные[СуммовоеПоле.Ключ]);
				КонецЦикла;
				ОбластьДанных.Параметры.СуммаПоступленияРегл = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные.СуммаПоступленияРегл);
				ОбластьДанных.Параметры.ЦенаРегл = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные.ЦенаРегл);
				ОбластьДанных.Параметры.ОбщаяЦенаРегл = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные.ОбщаяЦенаРегл);
				ТабДокумент.Вывести(ОбластьДанных);
			КонецЦикла;	
		КонецЦикла;		
		
		// форматирование суммовых полей
		Для каждого СуммовоеПоле из СтруктураСуммовыхПолейПодвала Цикл
			ОбластьПодвала.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаОбщиеИтоги[СуммовоеПоле.Ключ],,"0,00");
		КонецЦикла;	
		
		ТабДокумент.Вывести(ОбластьПодвала);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаОбщиеИтоги.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент; 
	
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьГТДИмпортДопРасходы,
// разработанной методистами
Функция ПечатьГТДИмпортДопРасходы(МассивОбъектов, ОбъектыПечати = Неопределено, КодЯзыка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ГТДИмпорт_ДопРасходы";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ГТДИмпорт.ПФ_MXL_ГТДИмпорт_ДопРасходы", КодЯзыка);
	
	ЗапросПоДопРасходам = Новый Запрос;
	ЗапросПоДопРасходам.УстановитьПараметр("Ссылка", МассивОбъектов);
	ЗапросПоДопРасходам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГТДИМпорт.Номенклатура КАК Номенклатура,
	|	ДопРасходы.ДопРасходыСумма,
	|	ДопРасходы.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДопРасходы.КратностьВзаиморасчетов, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ДопРасходы.ДопРасходыСумма * ДопРасходы.КурсВзаиморасчетов / ДопРасходы.КратностьВзаиморасчетов, 0)
	|	КОНЕЦ КАК ДопРасходыСуммаРегл,
	|	ДопРасходы.ДопРасходыКонтрагент КАК ДопРасходыКонтрагент,
	|	ДопРасходы.ДопРасходыСодержание,
	|	ДопРасходы.ДопРасходыСсылка,
	|	ДопРасходы.ДопРасходыДокументПартии КАК ДопРасходыДокументПартии,
	|	ГТДИМпорт.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	|		ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	|		ГТДИмпортТовары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|	ГДЕ
	|		ГТДИмпортТовары.Ссылка В(&Ссылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГТДИмпортТовары.Номенклатура,
	|		ГТДИмпортТовары.ДокументПартии,
	|		ГТДИмпортТовары.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГТДИмпортОС.ОсновноеСредство,
	|		ГТДИмпортОС.ДокументПартии,
	|		ГТДИмпортОС.Ссылка
	|	ИЗ
	|		Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|	ГДЕ
	|		ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИМпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПоступлениеДопРасходовТовары.Номенклатура КАК ДопРасходыНоменклатура,
	|			ВЫБОР
	|				КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	|						И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|					ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	|				ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	|			КОНЕЦ КАК ДопРасходыСумма,
	|			ПоступлениеДопРасходовТовары.ДокументПартии КАК ДопРасходыДокументПартии,
	|			ПоступлениеДопРасходовТовары.Ссылка КАК ДопРасходыСсылка,
	|			ПоступлениеДопРасходовТовары.Ссылка.Контрагент КАК ДопРасходыКонтрагент,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)) КАК ДопРасходыСодержание,
	|			ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|			ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|		ИЗ
	|			Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ГДЕ
	|			ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступлениеДопРасходовТовары.Номенклатура,
	|			ПоступлениеДопРасходовТовары.ДокументПартии,
	|			ПоступлениеДопРасходовТовары.Ссылка,
	|			ПоступлениеДопРасходовТовары.Ссылка.Контрагент,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)),
	|			ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента,
	|			ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов,
	|			ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС,
	|			ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПоступлениеДопРасходовОС.ОсновноеСредство,
	|			ВЫБОР
	|				КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	|						И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	|					ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	|				ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	|			КОНЕЦ,
	|			ПоступлениеДопРасходовОС.ДокументПартии,
	|			ПоступлениеДопРасходовОС.Ссылка,
	|			ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|			ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|			ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов
	|		ИЗ
	|			Документ.ПоступлениеДопРасходов.ОС КАК ПоступлениеДопРасходовОС
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступлениеДопРасходовОС.ОсновноеСредство,
	|			ПоступлениеДопРасходовОС.ДокументПартии,
	|			ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС,
	|			ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость,
	|			ПоступлениеДопРасходовОС.Ссылка,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|			ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|			ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|			ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов) КАК ДопРасходы
	|		ПО ГТДИМпорт.ДокументПартии = ДопРасходы.ДопРасходыДокументПартии
	|			И ГТДИМпорт.Номенклатура = ДопРасходы.ДопРасходыНоменклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ДопРасходыДокументПартии,
	|	ДопРасходыКонтрагент";       	
	
	ЗапросПоГТД = Новый Запрос;
	ЗапросПоГТД.УстановитьПараметр("Ссылка", МассивОбъектов);
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	ЗапросПоГТД.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	ВидыСубконтоОС = Новый Массив;
	ВидыСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ОсновныеСредства);
	ЗапросПоГТД.УстановитьПараметр("ВидыСубконтоОС", ВидыСубконтоОС);
	ЗапросПоГТД.Текст = "ВЫБРАТЬ
	                    |	ГТДИмпортТовары.ДокументПартии КАК ДокументПартии
	                    |ПОМЕСТИТЬ ВТ_ДокументыПартии
	                    |ИЗ
	                    |	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	                    |ГДЕ
	                    |	ГТДИмпортТовары.Ссылка В(&Ссылка)
	                    |
	                    |ОБЪЕДИНИТЬ
	                    |
	                    |ВЫБРАТЬ
	                    |	ГТДИмпортОС.ДокументПартии
	                    |ИЗ
	                    |	Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	                    |ГДЕ
	                    |	ГТДИмпортОС.Ссылка В(&Ссылка)
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ТиповойОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	                    |	ТиповойОборотыДтКт.Регистратор КАК Регистратор,
	                    |	ТиповойОборотыДтКт.СчетДт КАК СчетДт,
	                    |	ТиповойОборотыДтКт.СуммаОборот КАК СуммаОборот
	                    |ПОМЕСТИТЬ ВТ_ТиповойОборотыДтКт
	                    |ИЗ
	                    |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконто, , , ) КАК ТиповойОборотыДтКт
	                    |ГДЕ
	                    |	ТиповойОборотыДтКт.Регистратор В
	                    |			(ВЫБРАТЬ
	                    |				ВТ_ДокументыПартии.ДокументПартии
	                    |			ИЗ
	                    |				ВТ_ДокументыПартии)
	                    |
	                    |ОБЪЕДИНИТЬ ВСЕ
	                    |
	                    |ВЫБРАТЬ
	                    |	ТиповойОборотыДтКт.СубконтоДт1,
	                    |	ТиповойОборотыДтКт.Регистратор,
	                    |	ТиповойОборотыДтКт.СчетДт,
	                    |	ТиповойОборотыДтКт.СуммаОборот
	                    |ИЗ
	                    |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконтоОС, , , ) КАК ТиповойОборотыДтКт
	                    |ГДЕ
	                    |	ТиповойОборотыДтКт.Регистратор В
	                    |			(ВЫБРАТЬ
	                    |				ВТ_ДокументыПартии.ДокументПартии
	                    |			ИЗ
	                    |				ВТ_ДокументыПартии)
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ГТДИмпорт.Ссылка КАК Ссылка,
	                    |	ГТДИмпорт.Дата КАК Дата,
	                    |	ГТДИмпорт.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	                    |	ГТДИмпорт.ВалютаДокумента КАК ВалютаДокумента,
	                    |	ГТДИмпорт.Контрагент КАК Контрагент,
	                    |	ГТДИмпорт.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	                    |	ГТДИмпорт.НомерГТД КАК НомерГТД,
	                    |	ГТДИмпорт.Организация КАК Организация,
	                    |	ГТДИмпорт.СтруктурноеПодразделение КАК СтруктурноеПодразделение
	                    |ПОМЕСТИТЬ ВТ_ГТД
	                    |ИЗ
	                    |	Документ.ГТДИмпорт КАК ГТДИмпорт
	                    |ГДЕ
	                    |	ГТДИмпорт.Ссылка В(&Ссылка)
	                    |
	                    |ИНДЕКСИРОВАТЬ ПО
	                    |	Ссылка
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                    |	ВТ_ГТД.Ссылка КАК Ссылка,
	                    |	ГТДИмпорт.Номенклатура КАК Номенклатура,
	                    |	ГТДИмпорт.ДокументПартии КАК ДокументПартии,
	                    |	ГТДИмпорт.СуммаПоступленияРегл КАК СуммаПоступленияРегл,
	                    |	ГТДИмпорт.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	                    |	ГТДИмпорт.СуммаПошлиныВВалюте КАК СуммаПошлиныВВалюте,
	                    |	ГТДИмпорт.СуммаПошлиныСпецВВалюте КАК СуммаПошлиныСпецВВалюте,
	                    |	ГТДИмпорт.СуммаСбора КАК СуммаСбора,
	                    |	ГТДИмпорт.СуммаСбораВВалюте КАК СуммаСбораВВалюте,
	                    |	ГТДИмпорт.СтавкаПошлины КАК СтавкаПошлины,
	                    |	ГТДИмпорт.СуммаНДСВВалюте КАК СуммаНДСВВалюте,
	                    |	ГТДИмпорт.СуммаПошлиныРегл КАК СуммаПошлиныРегл,
	                    |	ГТДИмпорт.СуммаПошлиныСпецРегл КАК СуммаПошлиныСпецРегл,
	                    |	ГТДИмпорт.СуммаВалютногоСбораРегл КАК СуммаВалютногоСбораРегл,
	                    |	ГТДИмпорт.СуммаНДСРегл КАК СуммаНДСРегл,
	                    |	ГТДИмпорт.ОбщаяСуммаРегл + ЕСТЬNULL(ДопРасходы.ДопРасходыСуммаРегл, 0) + ГТДИмпорт.СуммаПошлиныСпецРегл КАК ОбщаяСуммаРегл,
	                    |	ГТДИмпорт.КодНоменклатуры КАК КодНоменклатуры,
	                    |	ВЫБОР
	                    |		КОГДА ГТДИмпорт.КоличествоПоступления = 0
	                    |			ТОГДА 0
	                    |		ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпорт.СуммаПоступленияРегл / ГТДИмпорт.КоличествоПоступления КАК ЧИСЛО(15, 2))
	                    |	КОНЕЦ КАК ЦенаРегл,
	                    |	ВЫБОР
	                    |		КОГДА ГТДИмпорт.КоличествоПоступления = 0
	                    |			ТОГДА 0
	                    |		ИНАЧЕ ВЫРАЗИТЬ((ГТДИмпорт.ОбщаяСуммаРегл + ЕСТЬNULL(ДопРасходы.ДопРасходыСуммаРегл, 0) + ГТДИмпорт.СуммаПошлиныСпецРегл) / ГТДИмпорт.КоличествоПоступления КАК ЧИСЛО(15, 2))
	                    |	КОНЕЦ КАК ОбщаяЦенаРегл,
	                    |	ДопРасходы.ДопРасходыСуммаРегл КАК ДопРасходыСуммаРегл,
	                    |	ПРЕДСТАВЛЕНИЕ(ГТДИмпорт.ДокументПартии) КАК ПредставлениеДокументаПартии,
	                    |	ГТДИмпорт.КоличествоПоступления КАК КоличествоПоступления,
	                    |	ВТ_ГТД.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	                    |	ВТ_ГТД.Контрагент КАК Контрагент,
	                    |	ВТ_ГТД.Организация КАК Организация,
	                    |	ВТ_ГТД.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	                    |	ВТ_ГТД.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	                    |	ВТ_ГТД.Дата КАК Дата,
	                    |	ВТ_ГТД.НомерГТД КАК НомерГТД,
	                    |	ВТ_ГТД.ВалютаДокумента КАК ВалютаДокумента
	                    |ИЗ
	                    |	ВТ_ГТД КАК ВТ_ГТД
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |			ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	                    |			СУММА(ГТДИмпортТовары.ТаможеннаяСтоимость) КАК ТаможеннаяСтоимость,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ГТДИмпортТовары.СуммаПошлины
	                    |				КОНЕЦ) КАК СуммаПошлиныВВалюте,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ГТДИмпортТовары.СуммаПошлиныСпец
	                    |				КОНЕЦ) КАК СуммаПошлиныСпецВВалюте,
	                    |			СУММА(ГТДИмпортТовары.СуммаСбора) КАК СуммаСбора,
	                    |			СУММА(ГТДИмпортТовары.СуммаСбораВал) КАК СуммаСбораВВалюте,
	                    |			СУММА(ЕСТЬNULL(ГТДИмпортТовары.Количество, 0)) КАК КоличествоПоступления,
	                    |			СУММА(ГТДИмпортРазделы.СтавкаПошлины) КАК СтавкаПошлины,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ГТДИмпортТовары.СуммаНДС
	                    |				КОНЕЦ) КАК СуммаНДСВВалюте,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаПошлины
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлины * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаПошлиныРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаПошлиныСпец
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлиныСпец * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаПошлиныСпецРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаСбораВал * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаВалютногоСбораРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаНДС
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаНДСРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) * ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) / ПоступлениеТМЗ.Количество
	                    |				КОНЕЦ) КАК СуммаПоступленияРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) * ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) / ПоступлениеТМЗ.Количество
	                    |				КОНЕЦ + ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаПошлины
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлины * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ + ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаСбораВал * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ + ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.НДСВключенВСтоимость
	                    |						ТОГДА ВЫБОР
	                    |								КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |									ТОГДА ГТДИмпортТовары.СуммаНДС
	                    |								КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |									ТОГДА 0
	                    |								ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |							КОНЕЦ
	                    |					ИНАЧЕ 0
	                    |				КОНЕЦ + ГТДИмпортТовары.СуммаСбора) КАК ОбщаяСуммаРегл,
	                    |			ГТДИмпортТовары.Номенклатура.Код КАК КодНоменклатуры,
	                    |			ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	                    |			ГТДИмпортТовары.Ссылка КАК Ссылка
	                    |		ИЗ
	                    |			(ВЫБРАТЬ
	                    |				МИНИМУМ(ГТДИмпортТовары.НомерСтроки) КАК НомерСтроки,
	                    |				ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	                    |				ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	                    |				СУММА(ГТДИмпортТовары.Количество) КАК Количество,
	                    |				СУММА(ГТДИмпортТовары.ТаможеннаяСтоимость) КАК ТаможеннаяСтоимость,
	                    |				СУММА(ГТДИмпортТовары.СуммаПошлины) КАК СуммаПошлины,
	                    |				СУММА(ГТДИмпортТовары.СуммаПошлиныСпец) КАК СуммаПошлиныСпец,
	                    |				СУММА(ГТДИмпортТовары.СуммаСбора) КАК СуммаСбора,
	                    |				СУММА(ГТДИмпортТовары.СуммаСбораВал) КАК СуммаСбораВал,
	                    |				ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	                    |				ГТДИмпортТовары.Ссылка КАК Ссылка,
	                    |				СУММА(ГТДИмпортТовары.СуммаНДС) КАК СуммаНДС,
	                    |				ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	                    |			ИЗ
	                    |				(ВЫБРАТЬ
	                    |					ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	                    |					ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	                    |					ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	                    |					ГТДИмпортТовары.Количество КАК Количество,
	                    |					ГТДИмпортТовары.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	                    |					ГТДИмпортТовары.СуммаПошлины КАК СуммаПошлины,
	                    |					ГТДИмпортТовары.СуммаПошлиныСпец КАК СуммаПошлиныСпец,
	                    |					ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	                    |					ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВал,
	                    |					ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	                    |					ГТДИмпортТовары.Ссылка КАК Ссылка,
	                    |					ГТДИмпортТовары.СуммаНДС КАК СуммаНДС,
	                    |					ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	                    |				ИЗ
	                    |					Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	                    |				ГДЕ
	                    |					ГТДИмпортТовары.Ссылка В(&Ссылка)
	                    |				
	                    |				ОБЪЕДИНИТЬ ВСЕ
	                    |				
	                    |				ВЫБРАТЬ
	                    |					ГТДИмпортОС.НомерСтроки,
	                    |					ГТДИмпортОС.НомерРаздела,
	                    |					ГТДИмпортОС.ОсновноеСредство,
	                    |					1,
	                    |					ГТДИмпортОС.ТаможеннаяСтоимость,
	                    |					ГТДИмпортОС.СуммаПошлины,
	                    |					ГТДИмпортОС.СуммаПошлиныСпец,
	                    |					ГТДИмпортОС.СуммаСбора,
	                    |					ГТДИмпортОС.СуммаСбораВал,
	                    |					ГТДИмпортОС.ДокументПартии,
	                    |					ГТДИмпортОС.Ссылка,
	                    |					ГТДИмпортОС.СуммаНДС,
	                    |					ГТДИмпортОС.СчетУчетаБУ
	                    |				ИЗ
	                    |					Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	                    |				ГДЕ
	                    |					ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИмпортТовары
	                    |			
	                    |			СГРУППИРОВАТЬ ПО
	                    |				ГТДИмпортТовары.НомерРаздела,
	                    |				ГТДИмпортТовары.Номенклатура,
	                    |				ГТДИмпортТовары.ДокументПартии,
	                    |				ГТДИмпортТовары.СчетУчетаБУ,
	                    |				ГТДИмпортТовары.Ссылка) КАК ГТДИмпортТовары
	                    |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	                    |				ПО ГТДИмпортТовары.Ссылка = ГТДИмпортРазделы.Ссылка
	                    |					И ГТДИмпортТовары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
	                    |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |					ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	                    |					ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	                    |					ПоступлениеТоваровУслугТовары.ВалютаДокумента КАК ВалютаДокумента,
	                    |					СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	                    |					СУММА(ПоступлениеТоваровУслугТовары.СуммаПоступленияВал) КАК СуммаПоступленияВал
	                    |				ИЗ
	                    |					(ВЫБРАТЬ
	                    |						ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	                    |						ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	                    |						ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	                    |						ВЫБОР
	                    |							КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	                    |									И НЕ ПоступлениеТоваровУслугТовары.Ссылка.НДСВключенВСтоимость
	                    |								ТОГДА ПоступлениеТоваровУслугТовары.Сумма - ПоступлениеТоваровУслугТовары.СуммаНДС
	                    |							ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма
	                    |						КОНЕЦ КАК СуммаПоступленияВал,
	                    |						ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	                    |					ИЗ
	                    |						Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	                    |					
	                    |					ОБЪЕДИНИТЬ ВСЕ
	                    |					
	                    |					ВЫБРАТЬ
	                    |						ПоступлениеТоваровУслугОС.Ссылка,
	                    |						ПоступлениеТоваровУслугОС.ОсновноеСредство,
	                    |						1,
	                    |						ВЫБОР
	                    |							КОГДА ПоступлениеТоваровУслугОС.Ссылка.СуммаВключаетНДС
	                    |									И НЕ ПоступлениеТоваровУслугОС.Ссылка.НДСВключенВСтоимость
	                    |								ТОГДА ПоступлениеТоваровУслугОС.Сумма - ПоступлениеТоваровУслугОС.СуммаНДС
	                    |							ИНАЧЕ ПоступлениеТоваровУслугОС.Сумма
	                    |						КОНЕЦ,
	                    |						ПоступлениеТоваровУслугОС.Ссылка.ВалютаДокумента
	                    |					ИЗ
	                    |						Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС) КАК ПоступлениеТоваровУслугТовары
	                    |				
	                    |				СГРУППИРОВАТЬ ПО
	                    |					ПоступлениеТоваровУслугТовары.Ссылка,
	                    |					ПоступлениеТоваровУслугТовары.Номенклатура,
	                    |					ПоступлениеТоваровУслугТовары.ВалютаДокумента) КАК ПоступлениеТМЗ
	                    |				ПО ГТДИмпортТовары.ДокументПартии = ПоступлениеТМЗ.Ссылка
	                    |					И ГТДИмпортТовары.Номенклатура = ПоступлениеТМЗ.Номенклатура
	                    |				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТиповойОборотыДтКт КАК ТиповойОборотыДтКт
	                    |				ПО ГТДИмпортТовары.Номенклатура = ТиповойОборотыДтКт.СубконтоДт1
	                    |					И ГТДИмпортТовары.ДокументПартии = ТиповойОборотыДтКт.Регистратор
	                    |					И ГТДИмпортТовары.СчетУчетаБУ = ТиповойОборотыДтКт.СчетДт
	                    |		
	                    |		СГРУППИРОВАТЬ ПО
	                    |			ГТДИмпортТовары.Номенклатура,
	                    |			ГТДИмпортТовары.ДокументПартии,
	                    |			ГТДИмпортТовары.Номенклатура.Код,
	                    |			ГТДИмпортТовары.Ссылка) КАК ГТДИмпорт
	                    |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |				ДопРасходы.ДопРасходыНоменклатура КАК ДопРасходыНоменклатура,
	                    |				СУММА(ДопРасходы.ДопРасходыСумма) КАК ДопРасходыСумма,
	                    |				ДопРасходы.ДопРасходыДокументПартии КАК ДопРасходыДокументПартии,
	                    |				СУММА(ДопРасходы.ДопРасходыСуммаРегл) КАК ДопРасходыСуммаРегл
	                    |			ИЗ
	                    |				(ВЫБРАТЬ
	                    |					ПоступлениеДопРасходовТовары.Номенклатура КАК ДопРасходыНоменклатура,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	                    |								И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	                    |							ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	                    |						ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	                    |					КОНЕЦ КАК ДопРасходыСумма,
	                    |					ПоступлениеДопРасходовТовары.ДокументПартии КАК ДопРасходыДокументПартии,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов = 0
	                    |							ТОГДА 0
	                    |						ИНАЧЕ ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов / ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов * ВЫБОР
	                    |								КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	                    |										И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	                    |									ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	                    |								ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	                    |							КОНЕЦ
	                    |					КОНЕЦ КАК ДопРасходыСуммаРегл
	                    |				ИЗ
	                    |					Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	                    |				ГДЕ
	                    |					ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА
	                    |				
	                    |				СГРУППИРОВАТЬ ПО
	                    |					ПоступлениеДопРасходовТовары.Номенклатура,
	                    |					ПоступлениеДопРасходовТовары.ДокументПартии,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов
	                    |				
	                    |				ОБЪЕДИНИТЬ ВСЕ
	                    |				
	                    |				ВЫБРАТЬ
	                    |					ПоступлениеДопРасходовОС.ОсновноеСредство,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	                    |								И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	                    |							ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	                    |						ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	                    |					КОНЕЦ,
	                    |					ПоступлениеДопРасходовОС.ДокументПартии,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов = 0
	                    |							ТОГДА 0
	                    |						ИНАЧЕ ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов / ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов * ВЫБОР
	                    |								КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	                    |										И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	                    |									ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	                    |								ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	                    |							КОНЕЦ
	                    |					КОНЕЦ
	                    |				ИЗ
	                    |					Документ.ПоступлениеДопРасходов.ОС КАК ПоступлениеДопРасходовОС
	                    |				ГДЕ
	                    |					ПоступлениеДопРасходовОС.Ссылка.Проведен = ИСТИНА
	                    |				
	                    |				СГРУППИРОВАТЬ ПО
	                    |					ПоступлениеДопРасходовОС.ОсновноеСредство,
	                    |					ПоступлениеДопРасходовОС.ДокументПартии,
	                    |					ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС,
	                    |					ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость,
	                    |					ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	                    |					ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов) КАК ДопРасходы
	                    |			
	                    |			СГРУППИРОВАТЬ ПО
	                    |				ДопРасходы.ДопРасходыНоменклатура,
	                    |				ДопРасходы.ДопРасходыДокументПартии) КАК ДопРасходы
	                    |			ПО ГТДИмпорт.Номенклатура = ДопРасходы.ДопРасходыНоменклатура
	                    |				И ГТДИмпорт.ДокументПартии = ДопРасходы.ДопРасходыДокументПартии
	                    |		ПО ВТ_ГТД.Ссылка = ГТДИмпорт.Ссылка
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Ссылка
	                    |ИТОГИ
	                    |	СУММА(СуммаПоступленияРегл),
	                    |	СУММА(ТаможеннаяСтоимость),
	                    |	СУММА(СуммаПошлиныВВалюте),
	                    |	СУММА(СуммаПошлиныСпецВВалюте),
	                    |	СУММА(СуммаСбора),
	                    |	СУММА(СуммаСбораВВалюте),
	                    |	МАКСИМУМ(СтавкаПошлины),
	                    |	СУММА(СуммаНДСВВалюте),
	                    |	СУММА(СуммаПошлиныРегл),
	                    |	СУММА(СуммаПошлиныСпецРегл),
	                    |	СУММА(СуммаВалютногоСбораРегл),
	                    |	СУММА(СуммаНДСРегл),
	                    |	СУММА(ОбщаяСуммаРегл),
	                    |	МАКСИМУМ(КодНоменклатуры),
	                    |	СУММА(ДопРасходыСуммаРегл),
	                    |	МАКСИМУМ(ВалютаВзаиморасчетов),
	                    |	МАКСИМУМ(Контрагент),
	                    |	МАКСИМУМ(Организация),
	                    |	МАКСИМУМ(СтруктурноеПодразделение),
	                    |	МАКСИМУМ(НДСВключенВСтоимость),
	                    |	МАКСИМУМ(Дата),
	                    |	МАКСИМУМ(НомерГТД),
	                    |	МАКСИМУМ(ВалютаДокумента)
	                    |ПО
	                    |	Ссылка,
	                    |	Номенклатура
	                    |АВТОУПОРЯДОЧИВАНИЕ" ;
	
	Результат = ЗапросПоГТД.Выполнить();
	РезультатДоРасходы = ЗапросПоДопРасходам.Выполнить();
	ВыборкаДопРасходы = РезультатДоРасходы.Выбрать();
	
	ВыборкаОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщиеИтоги.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктурнаяЕдиницаОрганизация = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(ВыборкаОбщиеИтоги.Организация, ВыборкаОбщиеИтоги.СтруктурноеПодразделение);
		
		ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");	
		ОбластьЗаголовка.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ВыборкаОбщиеИтоги.Ссылка, НСтр("ru = 'ГТД по импорту'", КодЯзыка));
		ПредставлениеОрганизации = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, ВыборкаОбщиеИтоги.Дата), "ПолноеНаименование,");
		ПредставлениеКонтрагента = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(ВыборкаОбщиеИтоги.Контрагент, ВыборкаОбщиеИтоги.Дата), "ПолноеНаименование,");
		
		ОбластьЗаголовка.Параметры.ПредставлениеПолучателя 	= ПредставлениеОрганизации;
		ОбластьЗаголовка.Параметры.ПредставлениеКонтрагента = ПредставлениеКонтрагента;
		ОбластьЗаголовка.Параметры.ГТДНомер 				= ВыборкаОбщиеИтоги.НомерГТД;
		
		ТабДокумент.Вывести(ОбластьЗаголовка);
		
		ПечатьВВалюте = НЕ ВыборкаОбщиеИтоги.СуммаПошлиныВВалюте = 0 ИЛИ 
		НЕ ВыборкаОбщиеИтоги.СуммаСбораВВалюте = 0 ИЛИ 
		НЕ ВыборкаОбщиеИтоги.СуммаНДСВВалюте = 0; 
		
		ОбластьШапки = Макет.ПолучитьОбласть(?(ПечатьВВалюте, "ШапкаВал", "Шапка"));	
		
		ОбластьШапки.Параметры.Валюта 			= ВыборкаОбщиеИтоги.ВалютаВзаиморасчетов;
		ОбластьШапки.Параметры.ВалютаДокумента 	= ВыборкаОбщиеИтоги.ВалютаДокумента;
		ОбластьШапки.Параметры.СтрокаНДС 		= ?(ВыборкаОбщиеИтоги.НДСВключенВСтоимость, НСтр("ru = 'НДС (включен в стоимость ТМЗ)'", КодЯзыка), НСтр("ru = 'НДС'", КодЯзыка));
		
		ТабДокумент.Вывести(ОбластьШапки);
		
		Если ПечатьВВалюте Тогда
			ОбластьНоменклатуры = Макет.ПолучитьОбласть("НоменклатураВал");	
			ОбластьДанных  		= Макет.ПолучитьОбласть("ДанныеВал");		
			ОбластьДопРасходов	= Макет.ПолучитьОбласть("ДопРасходыВал");		
			ОбластьПодвала 		= Макет.ПолучитьОбласть("ПодвалВал");		
			                                   			
			СтруктураСуммовыхПолей 			= Новый Структура("СуммаПоступленияРегл,СуммаПошлиныВВалюте,СуммаПошлиныРегл,СуммаСбораВВалюте,СуммаСбора,СуммаВалютногоСбораРегл,СуммаНДСВВалюте,СуммаНДСРегл,ОбщаяСуммаРегл");			
			СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаВалютногоСбораРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
		Иначе
			ОбластьНоменклатуры = Макет.ПолучитьОбласть("Номенклатура");	
			ОбластьДанных  		= Макет.ПолучитьОбласть("Данные");		
			ОбластьДопРасходов	= Макет.ПолучитьОбласть("ДопРасходы");		
			ОбластьПодвала 		= Макет.ПолучитьОбласть("Подвал");		
			
			СтруктураСуммовыхПолей 			= Новый Структура("СуммаПоступленияРегл,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");	
			СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
		КонецЕсли;
		
		ОбластьПодвала.Параметры.Заполнить(ВыборкаОбщиеИтоги);
		
		// номенклатурные позиции	
		ВыборкаНоменклатуры = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НомерСтрокиПечати = 0;
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			НомерСтрокиПечати = НомерСтрокиПечати + 1;
			ОбластьНоменклатуры.Параметры.Заполнить(ВыборкаНоменклатуры);					
			// форматирование суммовых полей
			Для каждого СуммовоеПоле из СтруктураСуммовыхПолей Цикл
				ОбластьНоменклатуры.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаНоменклатуры[СуммовоеПоле.Ключ]);
			КонецЦикла;	
			ОбластьНоменклатуры.Параметры.НомерСтрокиПечати = НомерСтрокиПечати;
			//ОбластьНоменклатуры.Параметры.НомерСтрокиПечати = ВыборкаНоменклатуры.НомерСтроки;
			
			ТабДокумент.Вывести(ОбластьНоменклатуры);
			// Партии поступления
			ВыборкаДанные= ВыборкаНоменклатуры.Выбрать();
			Пока ВыборкаДанные.Следующий() Цикл
				ОбластьДанных.Параметры.Заполнить(ВыборкаДанные);
				// форматирование суммовых полей
				Для Каждого СуммовоеПоле Из СтруктураСуммовыхПолей Цикл
					ОбластьДанных.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные[СуммовоеПоле.Ключ]);
				КонецЦикла;	
				ОбластьДанных.Параметры.ЦенаРегл 		= ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные.ЦенаРегл);
				ОбластьДанных.Параметры.ОбщаяЦенаРегл 	= ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДанные.ОбщаяЦенаРегл);
				ТабДокумент.Вывести(ОбластьДанных);
				// ДопРасходы
				ВыборкаДопРасходы.Сбросить();
				Пока ВыборкаДопРасходы.НайтиСледующий(Новый Структура("Номенклатура, ДопРасходыДокументПартии, Ссылка",ВыборкаДанные.Номенклатура, ВыборкаДанные.ДокументПартии, ВыборкаДанные.Ссылка)) Цикл
					ОбластьДопРасходов.Параметры.Заполнить(ВыборкаДопРасходы);
					// форматирование полей
					ОбластьДопРасходов.Параметры.ДопРасходыСумма 		= ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДопРасходы.ДопРасходыСумма,ВыборкаДопРасходы.ВалютаДокумента);				
					ОбластьДопРасходов.Параметры.ДопРасходыСодержание 	= СокрЛП(ВыборкаДопРасходы.ДопРасходыСодержание);
					ТабДокумент.Вывести(ОбластьДопРасходов);				
				КонецЦикла;	                                			
			КонецЦикла;	
		КонецЦикла;		
		
		// форматирование суммовых полей
		Для каждого СуммовоеПоле из СтруктураСуммовыхПолейПодвала Цикл
			ОбластьПодвала.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаОбщиеИтоги[СуммовоеПоле.Ключ],,"0,00");
		КонецЦикла;	
		
		ОбластьПодвала.Параметры.ВалютаДокумента = ВыборкаОбщиеИтоги.ВалютаДокумента;
		ТабДокумент.Вывести(ОбластьПодвала);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаОбщиеИтоги.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;  	
	
КонецФункции

// Функция формирует табличный документ с печатной формой ПечатьГТДИмпортДопРасходыПоКонтрагентам,
// разработанной методистами
Функция ПечатьГТДИмпортДопРасходыПоКонтрагентам(МассивОбъектов, ОбъектыПечати = Неопределено, КодЯзыка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ГТДИмпорт_ДопРасходы_ПоКонтрагентам";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ГТДИмпорт.ПФ_MXL_ГТДИмпорт_ДопРасходы_ПоКонтрагентам", КодЯзыка);
	
	ЗапросПоДопРасходам = Новый Запрос;
	ЗапросПоДопРасходам.УстановитьПараметр("Ссылка", МассивОбъектов);
	ЗапросПоДопРасходам.Текст = "ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка КАК Ссылка,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Контрагент,
	|	ГТДИмпорт.ВалютаДокумента,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Организация,
	|	ГТДИмпорт.СтруктурноеПодразделение
	|ПОМЕСТИТЬ ВТ_ГТД
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ДопРасходы.ДопРасходыСумма) КАК ДопРасходыСумма,
	|	ВТ_ГТД.ВалютаДокумента КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДопРасходы.КратностьВзаиморасчетов, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ДопРасходы.ДопРасходыСумма * ДопРасходы.КурсВзаиморасчетов / ДопРасходы.КратностьВзаиморасчетов, 0)
	|		КОНЕЦ) КАК ДопРасходыСуммаРегл,
	|	ДопРасходы.ДопРасходыКонтрагент КАК ДопРасходыКонтрагент,
	|	ДопРасходы.ДопРасходыСодержание,
	|	ДопРасходы.ДопРасходыСсылка,
	|	ДопРасходы.ДопРасходыДокументПартии КАК ДопРасходыДокументПартии,
	|	ПРЕДСТАВЛЕНИЕ(ДопРасходы.ДопРасходыДокументПартии),
	|	ВТ_ГТД.Ссылка КАК Ссылка,
	|	ВТ_ГТД.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ВТ_ГТД.Организация КАК Организация,
	|	ВТ_ГТД.Контрагент КАК Контрагент,
	|	ВТ_ГТД.НомерГТД КАК НомерГТД,
	|	ВТ_ГТД.Дата КАК Дата
	|ИЗ
	|	ВТ_ГТД КАК ВТ_ГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	|			ГТДИмпортТовары.Ссылка КАК Ссылка,
	|			ГТДИмпортТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	|		ИЗ
	|			Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ГДЕ
	|			ГТДИмпортТовары.Ссылка В(&Ссылка)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ГТДИмпортТовары.ДокументПартии,
	|			ГТДИмпортТовары.Ссылка,
	|			ГТДИмпортТовары.Ссылка.ВалютаДокумента
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ГТДИмпортОС.ДокументПартии,
	|			ГТДИмпортОС.Ссылка,
	|			ГТДИмпортОС.Ссылка.ВалютаДокумента
	|		ИЗ
	|			Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ГДЕ
	|			ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИМпорт
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	|							И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|						ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	|					ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	|				КОНЕЦ КАК ДопРасходыСумма,
	|				ПоступлениеДопРасходовТовары.ДокументПартии КАК ДопРасходыДокументПартии,
	|				ПоступлениеДопРасходовТовары.Ссылка КАК ДопРасходыСсылка,
	|				ПоступлениеДопРасходовТовары.Ссылка.Контрагент КАК ДопРасходыКонтрагент,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)) КАК ДопРасходыСодержание,
	|				ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|				ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|			ИЗ
	|				Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|			ГДЕ
	|				ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПоступлениеДопРасходовТовары.ДокументПартии,
	|				ПоступлениеДопРасходовТовары.Ссылка,
	|				ПоступлениеДопРасходовТовары.Ссылка.Контрагент,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)),
	|				ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента,
	|				ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов,
	|				ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС,
	|				ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	|							И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	|						ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	|					ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	|				КОНЕЦ,
	|				ПоступлениеДопРасходовОС.ДокументПартии,
	|				ПоступлениеДопРасходовОС.Ссылка,
	|				ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|				ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|				ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов
	|			ИЗ
	|				Документ.ПоступлениеДопРасходов.ОС КАК ПоступлениеДопРасходовОС
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПоступлениеДопРасходовОС.ДокументПартии,
	|				ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС,
	|				ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость,
	|				ПоступлениеДопРасходовОС.Ссылка,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|				ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|				ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|				ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов) КАК ДопРасходы
	|			ПО ГТДИМпорт.ДокументПартии = ДопРасходы.ДопРасходыДокументПартии
	|		ПО ВТ_ГТД.Ссылка = ГТДИМпорт.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДопРасходы.ДопРасходыКонтрагент,
	|	ДопРасходы.ДопРасходыСодержание,
	|	ДопРасходы.ДопРасходыСсылка,
	|	ДопРасходы.ДопРасходыДокументПартии,
	|	ВТ_ГТД.Ссылка,
	|	ВТ_ГТД.СтруктурноеПодразделение,
	|	ВТ_ГТД.Организация,
	|	ВТ_ГТД.Контрагент,
	|	ВТ_ГТД.НомерГТД,
	|	ВТ_ГТД.Дата,
	|	ВТ_ГТД.ВалютаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДопРасходыДокументПартии,
	|	ДопРасходыКонтрагент
	|ИТОГИ
	|	СУММА(ДопРасходыСумма),
	|	МАКСИМУМ(ВалютаДокумента),
	|	СУММА(ДопРасходыСуммаРегл),
	|	МАКСИМУМ(СтруктурноеПодразделение),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(НомерГТД),
	|	МАКСИМУМ(Дата)
	|ПО
	|	Ссылка,
	|	ДопРасходыКонтрагент
	|АВТОУПОРЯДОЧИВАНИЕ";    			
	
	РезультатДопРасходы = ЗапросПоДопРасходам.Выполнить();
	ВыборкаДопРасходыИтоги = РезультатДопРасходы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДопРасходыИтоги.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		СтруктурнаяЕдиницаОрганизация = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(ВыборкаДопРасходыИтоги.Организация, ВыборкаДопРасходыИтоги.СтруктурноеПодразделение);
		
		ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");	
		ОбластьЗаголовка.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ВыборкаДопРасходыИтоги.Ссылка, НСтр("ru = 'Дополнительные расходы к ГТД по импорту'", КодЯзыка));
		ПредставлениеОрганизации = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, ВыборкаДопРасходыИтоги.Дата), "ПолноеНаименование,");
		ПредставлениеКонтрагента = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(ВыборкаДопРасходыИтоги.Контрагент, ВыборкаДопРасходыИтоги.Дата), "ПолноеНаименование,");
		
		ОбластьЗаголовка.Параметры.ПредставлениеПолучателя 	= ПредставлениеОрганизации;
		ОбластьЗаголовка.Параметры.ПредставлениеКонтрагента = ПредставлениеКонтрагента;
		ОбластьЗаголовка.Параметры.ГТДНомер 				= ВыборкаДопРасходыИтоги.НомерГТД;
		
		ТабДокумент.Вывести(ОбластьЗаголовка);                       		
		
		ОбластьШапки = Макет.ПолучитьОбласть("Шапка");		
		ОбластьШапки.Параметры.ВалютаДокумента 	= ВыборкаДопРасходыИтоги.ВалютаДокумента;
		
		ТабДокумент.Вывести(ОбластьШапки);
		
		ОбластьКонтрагент	= Макет.ПолучитьОбласть("Контрагент");			
		ОбластьДанных  		= Макет.ПолучитьОбласть("Данные");			
		ОбластьДопРасходовГр= Макет.ПолучитьОбласть("ДопРасходыГр");		
		ОбластьПодвала 		= Макет.ПолучитьОбласть("Подвал");		 		
		
		ОбластьПодвала.Параметры.Заполнить(ВыборкаДопРасходыИтоги);
		
		// Контрагенты
		ВыборкаКонтрагенты = ВыборкаДопРасходыИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НомерСтрокиПечати = 0;
		
		Пока ВыборкаКонтрагенты.Следующий() Цикл
			ИтогоСтоимость = 0;
			НомерСтрокиПечати = НомерСтрокиПечати + 1;
			
			ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагенты);
			ОбластьКонтрагент.Параметры.ПредставлениеКонтрагента = СокрЛП(ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(ВыборкаКонтрагенты.ДопРасходыКонтрагент, ВыборкаДопРасходыИтоги.Дата), "ПолноеНаименование,"));
			ОбластьКонтрагент.Параметры.НомерСтрокиПечати = НомерСтрокиПечати;
			ТабДокумент.Вывести(ОбластьКонтрагент);		
			
			ОбластьДопРасходовГр.Параметры.Заполнить(ВыборкаКонтрагенты);
			
			ВыборкаДопРасходы = ВыборкаКонтрагенты.Выбрать();				
			
			Пока ВыборкаДопРасходы.Следующий()Цикл
				ОбластьДанных.Параметры.Заполнить(ВыборкаДопРасходы);
				Если ЗначениеЗаполнено(ВыборкаДопРасходы.ДопРасходыСумма) Тогда
					ОбластьДанных.Параметры.ДопРасходыСумма 		= ОбщегоНазначенияБКВызовСервера.ФорматСумм(ВыборкаДопРасходы.ДопРасходыСумма,ВыборкаДопРасходы.ВалютаДокумента);
				КонецЕсли;
				ОбластьДанных.Параметры.ДопРасходыСодержание 	= СокрЛП(ВыборкаДопРасходы.ДопРасходыСодержание);
				
				ТабДокумент.Вывести(ОбластьДанных);			
			КонецЦикла;
			
			ТабДокумент.Вывести(ОбластьДопРасходовГр);				
		КонецЦикла;
		
		ОбластьПодвала.Параметры.ВалютаДокумента = ВыборкаДопРасходыИтоги.ВалютаДокумента;
		ТабДокумент.Вывести(ОбластьПодвала);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДопРасходыИтоги.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
		
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики обновления ИБ

Процедура ЗаполнитьТаможенныйСборТаможеннуюСтоимостьПриОбновлении(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ГТДИмпорт.Ссылка КАК ГТД,
	|	СУММА(ГТДИмпортРазделы.ТаможенныйСбор) КАК ТаможенныйСбор,
	|	МАКСИМУМ(ГТДИмпорт.ТаможенныйСбор) КАК ТаможенныйСборШапки
	|ПОМЕСТИТЬ ВТГТД
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ПО (ГТДИмпортРазделы.Ссылка = ГТДИмпорт.Ссылка)
	|ГДЕ
	|	НЕ ГТДИмпорт.ПометкаУдаления
	|	И ГТДИмпорт.ТаможенныйСбор <= 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ГТДИмпорт.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ГТДИмпортРазделы.ТаможенныйСбор) <> МАКСИМУМ(ГТДИмпорт.ТаможенныйСбор)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТГТД.ТаможенныйСбор, 0) КАК ТаможенныйСбор,
	|	ГТДИмпортТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимостьТовары,
	|	ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	|	0 КАК ФактурнаяСтоимостьОС,
	|	ГТДИмпортТовары.Ссылка КАК Ссылка,
	|	""Товары"" КАК ИмяТаблицы
	|ПОМЕСТИТЬ ВТТоварыОС
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГТД КАК ВТГТД
	|		ПО ГТДИмпортТовары.Ссылка = ВТГТД.ГТД
	|ГДЕ
	|	ГТДИмпортТовары.ФактурнаяСтоимость <> ГТДИмпортТовары.ТаможеннаяСтоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТГТД.ТаможенныйСбор,
	|	ГТДИмпортТовары.Ссылка,
	|	ГТДИмпортТовары.ФактурнаяСтоимость,
	|	ГТДИмпортТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТГТД.ТаможенныйСбор, 0),
	|	0,
	|	ГТДИмпортОС.НомерСтроки,
	|	ГТДИмпортОС.ФактурнаяСтоимость,
	|	ГТДИмпортОС.Ссылка,
	|	""ОС""
	|ИЗ
	|	Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГТД КАК ВТГТД
	|		ПО ГТДИмпортОС.Ссылка = ВТГТД.ГТД
	|ГДЕ
	|	ГТДИмпортОС.ФактурнаяСтоимость <> ГТДИмпортОС.ТаможеннаяСтоимость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварыОС.Ссылка КАК Ссылка,
	|	ВТТоварыОС.ИмяТаблицы КАК ИмяТаблицы,
	|	ВТТоварыОС.ФактурнаяСтоимостьТовары КАК Товары,
	|	ВТТоварыОС.ФактурнаяСтоимостьОС КАК ОС,
	|	ВТТоварыОС.НомерСтроки КАК НомерСтроки,
	|	ВТТоварыОС.ТаможенныйСбор КАК ТаможенныйСбор
	|ИЗ
	|	ВТТоварыОС КАК ВТТоварыОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТоварыОС.ИмяТаблицы,
	|	ВТТоварыОС.ФактурнаяСтоимостьТовары,
	|	ВТТоварыОС.ФактурнаяСтоимостьОС,
	|	ВТТоварыОС.НомерСтроки,
	|	ВТТоварыОС.ТаможенныйСбор,
	|	ВТТоварыОС.Ссылка
	|ИТОГИ
	|	МАКСИМУМ(ТаможенныйСбор)
	|ПО
	|	Ссылка,
	|	ИмяТаблицы";
	  	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ВыборкаГТД = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаГТД.Следующий() Цикл
		НачатьТранзакцию();
		ДокументОбъект = ВыборкаГТД.Ссылка.ПолучитьОбъект();
		Если ДокументОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ГТДИмпорт");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаГТД.Ссылка);
		
		Попытка
			Блокировка.Заблокировать();
			ДокументОбъект.ТаможенныйСбор = ВыборкаГТД.ТаможенныйСбор;
			
			ВыборкаТЧ = ВыборкаГТД.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаТЧ.Следующий() Цикл
				
				ИмяТаблицы = ВыборкаТЧ.ИмяТаблицы;
				Если ЗначениеЗаполнено(ИмяТаблицы) Тогда
					ВыборкаДетальныеЗаписи = ВыборкаТЧ.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						СтрокаТЧ = ДокументОбъект[ИмяТаблицы].Получить(ВыборкаДетальныеЗаписи.НомерСтроки-1);
						СтрокаТЧ.ТаможеннаяСтоимость = ВыборкаДетальныеЗаписи[ИмяТаблицы];
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Операция не выполнена'", ОбщегоНазначения.КодОсновногоЯзыка());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли