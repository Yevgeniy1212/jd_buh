#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "БУ", Истина, ДокументСсылка)
		ИЛИ НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "НУ", Истина, ДокументСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	
	НеобходимостьОтраженияВНУ 					    = ОрганизацияПлательщикНалогаНаПрибыль И Реквизиты.УчитыватьКПН;
	ВедениеУчетаВременныхРазницБалансовымМетодом    = УчетнаяПолитикаСервер.ВедетсяУчетВременныхРазницБалансовымМетодом(Реквизиты.Организация, Реквизиты.Период);
	
	Реквизиты.Вставить("ОрганизацияПлательщикНалогаНаПрибыль", 		   ОрганизацияПлательщикНалогаНаПрибыль);
	Реквизиты.Вставить("НеобходимостьОтраженияВНУ", 				   НеобходимостьОтраженияВНУ);
	Реквизиты.Вставить("ВедениеУчетаВременныхРазницБалансовымМетодом", ВедениеУчетаВременныхРазницБалансовымМетодом);
	
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(НеобходимостьОтраженияВНУ, "НеобходимостьОтраженияВНУ");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ВедениеУчетаВременныхРазницБалансовымМетодом, "ВедениеУчетаВременныхРазницБалансовымМетодом");
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаМассивТоваровПоВидамУчетаДляКорректировки(НомераТаблиц);

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("НачалоПериода",	Реквизиты.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",	Новый Граница(Реквизиты.КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",	Реквизиты.Организация);
	Запрос.УстановитьПараметр("СписокСчетовБУ",	ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСписокСчетовУчетаТМЗ("БУ"));
	Запрос.УстановитьПараметр("СписокСчетовНУ",	ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСписокСчетовУчетаТМЗ("НУ"));
	Запрос.УстановитьПараметр("ВидыСубконто",   ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура));
	
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.ПериодРегистрации КАК ПериодРегистрации,
	|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК НачалоПериода,
	|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК КонецПериода,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.УчитыватьКПН,
	|	ЛОЖЬ КАК НеобходимостьОтраженияВНУ,
	|	ЛОЖЬ КАК ВедениеУчетаВременныхРазницБалансовымМетодом
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.КорректировкаСтоимостиСписанияТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.НачалоПериода,
	|	Реквизиты.КонецПериода,
	|	Реквизиты.Организация,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.УчитыватьКПН,
	|	Реквизиты.НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
	|	Реквизиты.ВедениеУчетаВременныхРазницБалансовымМетодом КАК ВедениеУчетаВременныхРазницБалансовымМетодом,
	|	НЕОПРЕДЕЛЕНО КАК СписокНеКорректируемыхСчетов,
	|	"""" КАК РасчетПрямыхЗатратНомер
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаМассивТоваровПоВидамУчетаДляКорректировки(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаТоваров", НомераТаблиц.Количество());
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	""БУ"" КАК ПрефиксУчета,
	|	ТаблицаОстатковИПриходов.Счет КАК Счет,
	|	ТаблицаОстатковИПриходов.Субконто1 КАК Номенклатура
	|ИЗ
	|	РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, , Счет В ИЕРАРХИИ (&СписокСчетовБУ), &ВидыСубконто, Организация = &Организация) КАК ТаблицаОстатковИПриходов
	|ГДЕ
	|	(ТаблицаОстатковИПриходов.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
	|			ИЛИ ТаблицаОстатковИПриходов.Регистратор ССЫЛКА Документ.ГТДИмпорт)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковИПриходов.Счет,
	|	ТаблицаОстатковИПриходов.Субконто1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""НУ"",
	|	ТаблицаОстатковИПриходов.Счет,
	|	ТаблицаОстатковИПриходов.Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Регистратор, , Счет В ИЕРАРХИИ (&СписокСчетовНУ), &ВидыСубконто, Организация = &Организация) КАК ТаблицаОстатковИПриходов
	|ГДЕ
	|	(ТаблицаОстатковИПриходов.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
	|			ИЛИ ТаблицаОстатковИПриходов.Регистратор ССЫЛКА Документ.ГТДИмпорт)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковИПриходов.Счет,
	|	ТаблицаОстатковИПриходов.Субконто1";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли