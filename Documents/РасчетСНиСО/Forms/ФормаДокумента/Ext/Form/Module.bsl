
&НаКлиенте
Перем СинхронизируемыеТабличныеЧасти, ЭтоРедактированиеСтроки;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере();
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// РедактированиеДокументовПользователей
    ПраваДоступаКОбъектам.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец РедактированиеДокументовПользователей
	
	ПодготовитьФормуНаСервере();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);	
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	РассчитатьДополнительныеСведенияНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		
	ОбщегоНазначенияБККлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Справочник.СотрудникиОрганизаций.Форма.ФормаСписка" Тогда
		ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, Неопределено);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "Документ ""расчет налогов, взносов и отчислений сотрудников организаций"" (проведение)";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцПодобратьДатуПоТексту(МесяцНачисленияСтрокой, Объект.ПериодРегистрации);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		Ожидание = 0;
		РаботаСДиалогамиКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, Объект.ПериодРегистрации, ЭтаФорма);
	Иначе
		РаботаСДиалогамиКлиент.ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе  
		Результат = РаботаСДиалогамиКлиент.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
			СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИсчисленныйСН

&НаКлиенте
Процедура ИсчисленныйСНФизЛицоПриИзменении(Элемент)
	
	ЭтоРедактированиеСтроки = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФамилияИнициалыФизЛица(ФизЛицо) 
	
	Возврат ОбщегоНазначенияБК.ФамилияИнициалыФизЛица(ФизЛицо);
	
КонецФункции

&НаКлиенте
Процедура ИсчисленныйСНПриАктивизацииСтроки(Элемент)
	
	Если НЕ ЭтаФорма.ТекущийЭлемент = Элементы.ИсчисленныйСН
		// это открытие формы
		И НЕ ЭтаФорма.ТекущийЭлемент = Элементы.Дата Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйСНПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЭтоРедактированиеСтроки = Истина;
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.МесяцНалоговогоПериода = НачалоМесяца(Объект.ПериодРегистрации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйСНФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Истина);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("СписокСотрудниковСНСписокЗавершениеВыбора", ЭтотОбъект);

	Если ЕжемесячныйРасчетВзносовИОтчисленийЗаИП Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбора", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);			
	Иначе
		
		ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
		ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
		
		ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйСНОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйСНПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ЭтоРедактированиеСтроки Тогда
		ЭтоРедактированиеСтроки = Ложь;
		ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		СНПодробностиРасчетаПрочитаны = Ложь;
		Если ОтображатьПодробностиРасчетаСН Тогда
		   	РассчитатьДополнительныеСведенияНаСервере("ПодробноСН");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИсчисленныеСО

&НаКлиенте
Процедура ИсчисленныеСОФизЛицоПриИзменении(Элемент)
	
	ЭтоРедактированиеСтроки = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеСОПриАктивизацииСтроки(Элемент)
		
	Если НЕ ЭтаФорма.ТекущийЭлемент = Элементы.ИсчисленныеСО Тогда
		Возврат;
	КонецЕсли;

	ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеСОПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЭтоРедактированиеСтроки = Истина;
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.МесяцНалоговогоПериода = НачалоМесяца(Объект.ПериодРегистрации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеСОФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Истина);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("СписокСотрудниковСОСписокЗавершениеВыбора", ЭтотОбъект);
	
	Если ЕжемесячныйРасчетВзносовИОтчисленийЗаИП Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбора", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);			
	Иначе
		
		ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
		ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
		
		ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);
	КонецЕсли;  	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеСООбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеСОПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	Если ЭтоРедактированиеСтроки Тогда
		ЭтоРедактированиеСтроки = Ложь;
		ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		СОПодробностиРасчетаПрочитаны = Ложь;
		Если ОтображатьПодробностиРасчетаСО Тогда
		   	РассчитатьДополнительныеСведенияНаСервере("ПодробноСО");
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИсчисленныйОППВ

&НаКлиенте
Процедура ИсчисленныйОППВФизЛицоПриИзменении(Элемент)
	
	ЭтоРедактированиеСтроки = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОППВПриАктивизацииСтроки(Элемент)
	
	Если НЕ ЭтаФорма.ТекущийЭлемент = Элементы.ИсчисленныйОППВ Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОППВПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЭтоРедактированиеСтроки = Истина;
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.МесяцНалоговогоПериода = НачалоМесяца(Объект.ПериодРегистрации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОППВФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Истина);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
		
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("СписокСотрудниковОППВСписокЗавершениеВыбора", ЭтотОбъект);

	Если ЕжемесячныйРасчетВзносовИОтчисленийЗаИП Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбора", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);			
	Иначе  		
		ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
		ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
		
		ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОППВОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОППВПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	Если ЭтоРедактированиеСтроки Тогда
		ЭтоРедактированиеСтроки = Ложь;
		ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		ОППВПодробностиРасчетаПрочитаны = Ложь;
		Если ОтображатьПодробностиРасчетаОППВ Тогда
		   	РассчитатьДополнительныеСведенияНаСервере("ПодробноОППВ");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИсчисленныйОПВР

&НаКлиенте
Процедура ИсчисленныйОПВРФизЛицоПриИзменении(Элемент)
	
	ЭтоРедактированиеСтроки = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОПВРПриАктивизацииСтроки(Элемент)
	
	Если НЕ ЭтаФорма.ТекущийЭлемент = Элементы.ИсчисленныйОПВР Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОПВРПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЭтоРедактированиеСтроки = Истина;
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.МесяцНалоговогоПериода = НачалоМесяца(Объект.ПериодРегистрации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОПВРФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Истина);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
		
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("СписокСотрудниковОПВРСписокЗавершениеВыбора", ЭтотОбъект);

	Если ЕжемесячныйРасчетВзносовИОтчисленийЗаИП Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбора", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);			
	Иначе  		
		ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
		ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
		
		ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОПВРОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныйОПВРПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	Если ЭтоРедактированиеСтроки Тогда
		ЭтоРедактированиеСтроки = Ложь;
		ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		ОПВРПодробностиРасчетаПрочитаны = Ложь;
		Если ОтображатьПодробностиРасчетаОПВР Тогда
		   	РассчитатьДополнительныеСведенияНаСервере("ПодробноОПВР");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИсчисленныеООСМС

&НаКлиенте
Процедура ИсчисленныеООСМСФизЛицоПриИзменении(Элемент)
	
	ЭтоРедактированиеСтроки = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеООСМСПриАктивизацииСтроки(Элемент)
		
	Если НЕ ЭтаФорма.ТекущийЭлемент = Элементы.ИсчисленныеООСМС Тогда
		Возврат;
	КонецЕсли;

	ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеООСМСПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЭтоРедактированиеСтроки = Истина;
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.МесяцНалоговогоПериода = НачалоМесяца(Объект.ПериодРегистрации);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеООСМСФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Истина);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
		
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("СписокСотрудниковООСМССписокЗавершениеВыбора", ЭтотОбъект);

	Если ЕжемесячныйРасчетВзносовИОтчисленийЗаИП Тогда
		ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбора", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);			
	Иначе
		
		ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
		ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
		
		ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элемент,,,,ОбработчикОповещения, Режим);
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеООСМСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисленныеООСМСПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	Если ЭтоРедактированиеСтроки Тогда
		ЭтоРедактированиеСтроки = Ложь;
		ПодключитьОбработчикОжидания("УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти", 0.1, Истина);
		ООСМСПодробностиРасчетаПрочитаны = Ложь;
		Если ОтображатьПодробностиРасчетаООСМС Тогда
		   	РассчитатьДополнительныеСведенияНаСервере("ПодробноООСМС");
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура АвтозаполнениеПоВсемСотрудникам(Команда)
	
	Если Объект.Проведен Тогда
		
		ТекстВопроса = НСтр("ru= 'Автоматически заполнить документ можно только после отмены его проведения. Выполнить отмену проведения документа?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПередАвтоЗаполнениемТабличнойЧасти", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		
	ИначеЕсли Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru= 'Автоматически заполнить документ можно только после его записи. Записать?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПередАвтоЗаполнениемТабличнойЧасти", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
						
	Иначе
		
		ПослеЗакрытияВопросаПередАвтоЗаполнениемТабличнойЧасти(КодВозвратаДиалога.Да, Неопределено);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)

	ТекстВопроса = НСтр("ru= 'Табличные части будут очищены. Продолжить?'");
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОбОчисткеТабЧасти", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборОППВ(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элементы.ИсчисленныйОППВ, , , ,,Режим)

КонецПроцедуры

&НаКлиенте
Процедура ПодборОПВР(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элементы.ИсчисленныйОПВР, , , ,,Режим)

КонецПроцедуры

&НаКлиенте
Процедура ПодборСН(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элементы.ИсчисленныйСН, , , ,,Режим)

КонецПроцедуры

&НаКлиенте
Процедура ПодборСО(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элементы.ИсчисленныеСО, , , ,,Режим)

КонецПроцедуры

&НаКлиенте
Процедура ПодборООСМС(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);      
		
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, Элементы.ИсчисленныеООСМС, , , ,,Режим)

КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru= 'Перед расчетом необходимо сохранить документ. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПередРасчетом", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		 				
	Иначе
		
		РассчитатьНаСервере();

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСотрудника(Команда)
	
	Если Модифицированность ИЛИ Параметры.Ключ.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru= 'Перед расчетом необходимо сохранить документ. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		СтруктураПараметров = Новый Структура("ФизЛицоДляРасчета", ?(Элементы.ИсчисленныеСО.ТекущиеДанные <> Неопределено, Элементы.ИсчисленныеСО.ТекущиеДанные.ФизЛицо, Неопределено));
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПередРасчетом", ЭтотОбъект, СтруктураПараметров);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		 				
	Иначе
		
		РассчитатьНаСервере(?(Элементы.ИсчисленныеСО.ТекущиеДанные <> Неопределено, Элементы.ИсчисленныеСО.ТекущиеДанные.ФизЛицо, Неопределено));

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробноСО(Команда)
	
	ОтображатьПодробностиРасчетаСО = НЕ ОтображатьПодробностиРасчетаСО;
	
	ОбработкаИзмененияПереключенияПодробностейрасчета(ЭтаФорма);
	
	Если СОПодробностиРасчетаПрочитаны Тогда
	    Возврат;
	Иначе
		РассчитатьДополнительныеСведенияНаСервере("ПодробноСО");
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ПодробноСН(Команда)
	
	ОтображатьПодробностиРасчетаСН = НЕ ОтображатьПодробностиРасчетаСН;
	
	ОбработкаИзмененияПереключенияПодробностейрасчета(ЭтаФорма);
	Если СНПодробностиРасчетаПрочитаны Тогда
		Возврат;
	Иначе
		РассчитатьДополнительныеСведенияНаСервере("ПодробноСН");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробноОППВ(Команда)
	
	ОтображатьПодробностиРасчетаОППВ = НЕ ОтображатьПодробностиРасчетаОППВ;
	
	ОбработкаИзмененияПереключенияПодробностейрасчета(ЭтаФорма);
	Если ОППВПодробностиРасчетаПрочитаны Тогда
		Возврат;
	Иначе
		РассчитатьДополнительныеСведенияНаСервере("ПодробноОППВ");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробноОПВР(Команда)
	
	ОтображатьПодробностиРасчетаОПВР = НЕ ОтображатьПодробностиРасчетаОПВР;
	
	ОбработкаИзмененияПереключенияПодробностейрасчета(ЭтаФорма);
	Если ОПВРПодробностиРасчетаПрочитаны Тогда
		Возврат;
	Иначе
		РассчитатьДополнительныеСведенияНаСервере("ПодробноОПВР");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробноООСМС(Команда)
	
	ОтображатьПодробностиРасчетаООСМС = НЕ ОтображатьПодробностиРасчетаООСМС;
	
	ОбработкаИзмененияПереключенияПодробностейрасчета(ЭтаФорма);
	Если ООСМСПодробностиРасчетаПрочитаны Тогда
		Возврат;
	Иначе
		РассчитатьДополнительныеСведенияНаСервере("ПодробноООСМС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборомСотрудников(Команда)

	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",				Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",						Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",				Истина);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("ОтборОрганизация", Объект.Организация);
	ПараметрыФормы.Вставить("ВыбиратьФизЛицо", Истина);
	
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;

	ОткрытьФорму("Справочник.СотрудникиОрганизаций.Форма.ФормаСписка", ПараметрыФормы, ЭтаФорма, , , ,,Режим)

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	РаботаСДиалогамиКлиентСервер.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизация, Объект.СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	УправлениеФормой(ЭтаФорма);
	
	ОбщегоНазначенияБК.УстановитьТекстАвтора(НадписьАвтор, Объект.Автор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект		= Форма.Объект;
	Элементы	= Форма.Элементы;
	
	Элементы.ГруппаИсчисленныйСН.Видимость = Форма.ОрганизацияЯвляетсяПлательщикомСН;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБККлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
	
	ОрганизацияЯвляетсяВкладчикомОППВ = ПроцедурыНалоговогоУчета.ПолучитьПризнакВкладчикаПрофПенсионныхВзносов(Объект.Организация, Объект.Дата);
	
	ОрганизацияЯвляетсяПлательщикомСН = УчетнаяПолитикаСервер.ОрганизацияЯвляетсяПлательщикомСН(Объект.Организация, Объект.Дата);
	
	ЕжемесячныйРасчетВзносовИОтчисленийЗаИП = ПроцедурыНалоговогоУчета.ПолучитьПризнакЕжемесячногоРасчетаВзносовИОтчисленийЗаИП(Объект.Организация, Объект.Дата);

	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры 

&НаСервере
Процедура ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров)
	
	Если НЕ СтруктураПараметров.ИзмененаОрганизация И НЕ СтруктураПараметров.ИзмененоСтруктурноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	// Очистим некорректные значения Субконто с подразделениями не входящими в выбранное структурное подразделение
	РаботаСДиалогами.ПроверитьСоответствиеПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, Объект.ПодразделениеОрганизации); 

	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаСервере
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(СтруктураПараметров = Неопределено)
	
	Если СтруктураПараметров = Неопределено 
		ИЛИ (СтруктураПараметров.Свойство("НеобходимоИзменитьЗначенияРеквизитовОбъекта") 
			И СтруктураПараметров.НеобходимоИзменитьЗначенияРеквизитовОбъекта) Тогда 
		РаботаСДиалогами.СтруктурноеПодразделениеПриИзменении(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктураПараметров);
	КонецЕсли;
	
	ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	РаботаСДиалогамиКлиент.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
		Модифицированность = Истина;
		ПриИзмененииЗначенияОрганизацииСервер(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОбОчисткеТабЧасти(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;
	
	Объект.ИсчисленныеСО.Очистить();
	Объект.ИсчисленныйОППВ.Очистить();
	Объект.ИсчисленныйОПВР.Очистить();
	Объект.ИсчисленныйСН.Очистить();
	Объект.ИсчисленныеООСМС.Очистить();

КонецПроцедуры

&НаКлиенте  
Процедура ПослеЗакрытияВопросаПередАвтоЗаполнениемТабличнойЧасти(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	ИначеЕсли Модифицированность ИЛИ Объект.Ссылка.Пустая() Тогда
		ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
	КонецЕсли;
	
	Если Объект.ИсчисленныеСО.Количество() > 0
		 ИЛИ Объект.ИсчисленныйОППВ.Количество()> 0
		 ИЛИ Объект.ИсчисленныйОПВР.Количество()> 0
		 ИЛИ Объект.ИсчисленныеООСМС.Количество()> 0
		 ИЛИ Объект.ИсчисленныйСН.Количество()> 0 Тогда
		
		ТекстВопроса = НСтр("ru = 'Очистить перед заполнением существующие данные?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОчиститьПередАвтоЗаполнением", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим);
		
	Иначе
		
		АвтозаполнениеПоВсемСотрудникамНаСервере();
		
		Если Объект.ИсчисленныеСО.Количество() = 0
			И Объект.ИсчисленныйОППВ.Количество()= 0
			И Объект.ИсчисленныйОПВР.Количество()= 0
			И Объект.ИсчисленныеООСМС.Количество()= 0
			И Объект.ИсчисленныйСН.Количество()= 0 Тогда

			ТекстСообщения = НСтр("ru = 'Не обнаружены данные для записи в табличную часть документа'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, , "Объект");
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОчиститьПередАвтоЗаполнением(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;

	Объект.ИсчисленныеСО.Очистить();
	Объект.ИсчисленныйОППВ.Очистить();
	Объект.ИсчисленныйОПВР.Очистить();
	Объект.ИсчисленныйСН.Очистить();
	Объект.ИсчисленныеООСМС.Очистить();
	
	АвтозаполнениеПоВсемСотрудникамНаСервере();
	
	Если Объект.ИсчисленныеСО.Количество() = 0
		И Объект.ИсчисленныйОППВ.Количество()= 0
		И Объект.ИсчисленныйОПВР.Количество()= 0
		И Объект.ИсчисленныеООСМС.Количество()= 0
		И Объект.ИсчисленныйСН.Количество()= 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не обнаружены данные для записи в табличные части документа'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, , "Объект");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура АвтозаполнениеПоВсемСотрудникамНаСервере() 
	
	Если ОценкаПроизводительностиВызовСервераПовтИсп.ВыполнятьЗамерыПроизводительности() Тогда
		КлючеваяОперация 	= "Документ ""расчет налогов, взносов и отчислений сотрудников организаций"" (заполнение)";
		ВремяНачалаЗамера 	= ОценкаПроизводительности.НачатьЗамерВремени();
	КонецЕсли;
	
	Документы.РасчетСНиСО.Автозаполнение(Объект, ЭтотОбъект, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	Модифицированность = Истина;
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачалаЗамера);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаПередРасчетом(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	ИначеЕсли Модифицированность ИЛИ Объект.Ссылка.Пустая() Тогда
		ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
	КонецЕсли;
	
	Если Параметры <> Неопределено И Параметры.Свойство("ФизЛицоДляРасчета") Тогда
		РассчитатьНаСервере(Параметры.ФизЛицоДляРасчета);
	Иначе 
		РассчитатьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьНаСервере(ФизЛицоДляРасчета = Неопределено)
	
	Если ОценкаПроизводительностиВызовСервераПовтИсп.ВыполнятьЗамерыПроизводительности() Тогда
		КлючеваяОперация 	= "Документ ""расчет налогов, взносов и отчислений сотрудников организаций"" (расчет)";
		ВремяНачалаЗамера 	= ОценкаПроизводительности.НачатьЗамерВремени();
	КонецЕсли;
	
	СтруктураДополнительныхДанных = Новый Структура("РасчетСОДополнительныеДанные, РасчетСНДополнительныеДанные, РасчетОППВДополнительныеДанные, РасчетООСМСДополнительныеДанные, РасчетОПВРДополнительныеДанные"); 
	СтруктураДополнительныхДанных.РасчетСОДополнительныеДанные	 	= ПроведениеРасчетовСервер.РасчетСОДополнительныеДанныеОписаниеТаблицыЗначений();
	СтруктураДополнительныхДанных.РасчетСНДополнительныеДанные 		= ПроведениеРасчетовСервер.РасчетСНДополнительныеДанныеОписаниеТаблицыЗначений();
	СтруктураДополнительныхДанных.РасчетОППВДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетОППВДополнительныеДанныеОписаниеТаблицыЗначений();
	СтруктураДополнительныхДанных.РасчетОПВРДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетОПВРДополнительныеДанныеОписаниеТаблицыЗначений();
	СтруктураДополнительныхДанных.РасчетООСМСДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетООСМСДополнительныеДанныеОписаниеТаблицыЗначений();

	Документы.РасчетСНиСО.Рассчитать(Объект, ФизЛицоДляРасчета, Истина, СтруктураДополнительныхДанных);	
	Модифицированность = Истина;
	СОПодробностиРасчетаПрочитаны = Истина;
	СНПодробностиРасчетаПрочитаны = Истина;
	ОППВПодробностиРасчетаПрочитаны = Истина;
	ОПВРПодробностиРасчетаПрочитаны = Истина;
	ООСМСПодробностиРасчетаПрочитаны = Истина;
	
	ЗаполнитьДополнительныеДанные(СтруктураДополнительныхДанных.РасчетСОДополнительныеДанные, 	Объект.ИсчисленныеСО);
	ЗаполнитьДополнительныеДанные(СтруктураДополнительныхДанных.РасчетСНДополнительныеДанные, 	Объект.ИсчисленныйСН);
	ЗаполнитьДополнительныеДанные(СтруктураДополнительныхДанных.РасчетОППВДополнительныеДанные, Объект.ИсчисленныйОППВ);
	ЗаполнитьДополнительныеДанные(СтруктураДополнительныхДанных.РасчетОПВРДополнительныеДанные, Объект.ИсчисленныйОПВР);
	ЗаполнитьДополнительныеДанные(СтруктураДополнительныхДанных.РасчетООСМСДополнительныеДанные, Объект.ИсчисленныеООСМС);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачалаЗамера);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДополнительныеДанные(Источник,Приемник)

	Для Каждого СтрокаДанных Из Источник Цикл
		
		СтруктураПоиска = Новый Структура("ФизЛицо, МесяцНалоговогоПериода", СтрокаДанных.ФизЛицо, СтрокаДанных.МесяцНалоговогоПериода); 
		Строки = Приемник.НайтиСтроки(СтруктураПоиска);
		Если Строки.Количество() > 0 Тогда
			Строка = Строки[0];
		Иначе
			Строка = Приемник.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Строка, СтрокаДанных);
		
	КонецЦикла;   
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокСотрудниковСОСписокЗавершениеВыбора(ВыбранноеЗначение, Параметры) Экспорт

	ТекущаяСтрока = Элементы.ИсчисленныеСО.ТекущиеДанные;
	Если  ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекущаяСтрока.ФизЛицо = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковСНСписокЗавершениеВыбора(ВыбранноеЗначение, Параметры) Экспорт

	ТекущаяСтрока = Элементы.ИсчисленныйСН.ТекущиеДанные;
	Если  ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекущаяСтрока.ФизЛицо = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковОППВСписокЗавершениеВыбора(ВыбранноеЗначение, Параметры) Экспорт

	ТекущаяСтрока = Элементы.ИсчисленныйОППВ.ТекущиеДанные;
	Если  ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекущаяСтрока.ФизЛицо = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковОПВРСписокЗавершениеВыбора(ВыбранноеЗначение, Параметры) Экспорт

	ТекущаяСтрока = Элементы.ИсчисленныйОПВР.ТекущиеДанные;
	Если  ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекущаяСтрока.ФизЛицо = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковООСМССписокЗавершениеВыбора(ВыбранноеЗначение, Параметры) Экспорт

	ТекущаяСтрока = Элементы.ИсчисленныеООСМС.ТекущиеДанные;
	Если  ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекущаяСтрока.ФизЛицо = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИмяКнопкиСинхронизироватьТабличныеЧасти()
	
	Если ЭтоРедактированиеСтроки Тогда
		Возврат;
	КонецЕсли;
	
	КнопкаРассчитатьРаботника = Элементы.ФормаРассчитатьСотрудника;
	Если КнопкаРассчитатьРаботника = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТЧ = "";
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаИсчисленныйСО Тогда
		ТекущиеДанные	= Элементы.ИсчисленныеСО.ТекущиеДанные;
		ИмяТЧ = Элементы.ИсчисленныеСО.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаИсчисленныйСН Тогда
		ТекущиеДанные	= Элементы.ИсчисленныйСН.ТекущиеДанные;
		ИмяТЧ = Элементы.ИсчисленныйСН.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПрофессиональныеВзносы Тогда
		ТекущиеДанные	= Элементы.ИсчисленныйОППВ.ТекущиеДанные;
		ИмяТЧ = Элементы.ИсчисленныйОППВ.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПенсионныеВзносыРаботодателя Тогда
		ТекущиеДанные	= Элементы.ИсчисленныйОПВР.ТекущиеДанные;
		ИмяТЧ = Элементы.ИсчисленныйОПВР.Имя;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаОтчисленияОСМС Тогда
		ТекущиеДанные	= Элементы.ИсчисленныеООСМС.ТекущиеДанные;
		ИмяТЧ = Элементы.ИсчисленныеООСМС.Имя;
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда 
		ФизЛицоСтроки = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	Иначе
		ФизЛицоСтроки = ТекущиеДанные.ФизЛицо;
	КонецЕсли;
	
	Если ФизЛицоСтроки = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		Если НЕ КнопкаРассчитатьРаботника = Неопределено Тогда
			КнопкаРассчитатьРаботника.Заголовок = НСтр("ru = 'Рассчитать сотрудника'");
		КонецЕсли;
		
		ТекущееФизЛицо = ФизЛицоСтроки;
		
	Иначе
		
		Если ТекущееФизЛицо <> ФизЛицоСтроки Тогда
			ФИО = ФамилияИнициалыФизЛица(ФизЛицоСтроки);
			НовыйЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Рассчитать %1'"), ФИО);
			Если ВРег(КнопкаРассчитатьРаботника.Заголовок) <> ВРег(НовыйЗаголовок) Тогда 
				КнопкаРассчитатьРаботника.Заголовок = НовыйЗаголовок;
			КонецЕсли;
			ТекущееФизЛицо = ФизЛицоСтроки;
		КонецЕсли;
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ФизЛицоСтроки) И НЕ ИмяТЧ = "" Тогда
		СинхронизироватьСтроки(ЭтаФорма, Объект, Элементы[ИмяТЧ], СинхронизируемыеТабличныеЧасти, "ФизЛицо");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьСтроки(Форма, Объект, Элемент, СинхронизируемыеТабличныеЧасти, ИмяКолонки) Экспорт
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Имя = Элемент.Имя;
	
	Если СинхронизируемыеТабличныеЧасти[Имя] Тогда
		СинхронизируемыеТабличныеЧасти[Имя] = Ложь;
		Возврат;
	КонецЕсли;
	
	Для Каждого ЭлементСоответствия Из СинхронизируемыеТабличныеЧасти Цикл

		Если ЭлементСоответствия.Ключ = Имя Тогда 
			Продолжить;
		КонецЕсли;

		Попытка
			МассивСтрок = Объект[ЭлементСоответствия.Ключ].НайтиСтроки(Новый Структура(ИмяКолонки, Элемент.ТекущиеДанные[ИмяКолонки]));
		Исключение
			МассивСтрок = Форма[ЭлементСоответствия.Ключ].НайтиСтроки(Новый Структура(ИмяКолонки, Элемент.ТекущиеДанные[ИмяКолонки]));
		КонецПопытки;

		Если МассивСтрок.Количество() > 0 Тогда

			СинхронизируемыеТабличныеЧасти[ЭлементСоответствия.Ключ] = Истина;
			Форма.Элементы[ЭлементСоответствия.Ключ].ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();

		КонецЕсли;

	КонецЦикла;
	                            
КонецПроцедуры 

&НаСервере
Процедура РассчитатьДополнительныеСведенияНаСервере(ИмяКоманды = Неопределено) Экспорт
	
	Если ИмяКоманды = Неопределено
		ИЛИ ИмяКоманды = "ПодробноСО" Тогда
		
		СОДанныеДляРасчета 				= Объект.ИсчисленныеСО.Выгрузить();
		РасчетСОДополнительныеДанные	= ПроведениеРасчетовСервер.РасчетСОДополнительныеДанныеОписаниеТаблицыЗначений();
		ПроведениеРасчетовСервер.РассчитатьСОДополнительныеДанные(Объект, СОДанныеДляРасчета, РасчетСОДополнительныеДанные);	
		ЗаполнитьДополнительныеДанные(РасчетСОДополнительныеДанные, 	Объект.ИсчисленныеСО);
		СОПодробностиРасчетаПрочитаны = Истина;
		
	КонецЕсли;
	
	Если ИмяКоманды = Неопределено
		ИЛИ ИмяКоманды = "ПодробноСН" Тогда
		
		СНДанныеДляРасчета				= Объект.ИсчисленныйСН.Выгрузить();
		СОДанныеДляРасчета				= Объект.ИсчисленныеСО.Выгрузить();
		РасчетСНДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетСНДополнительныеДанныеОписаниеТаблицыЗначений();
		ПроведениеРасчетовСервер.РассчитатьСНДополнительныеДанные(Объект, СНДанныеДляРасчета, СОДанныеДляРасчета, РасчетСНДополнительныеДанные);	
		ЗаполнитьДополнительныеДанные(РасчетСНДополнительныеДанные, 	Объект.ИсчисленныйСН);
		СНПодробностиРасчетаПрочитаны = Истина;
		
	КонецЕсли;
	
	Если ИмяКоманды = Неопределено
		ИЛИ ИмяКоманды = "ПодробноОППВ" Тогда
		
		ОППВДанныеДляРасчета			= Объект.ИсчисленныйОППВ.Выгрузить();
		РасчетОППВДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетОППВДополнительныеДанныеОписаниеТаблицыЗначений();
		ПроведениеРасчетовСервер.РассчитатьОППВДополнительныеДанные(Объект, ОППВДанныеДляРасчета, РасчетОППВДополнительныеДанные);	
		ЗаполнитьДополнительныеДанные(РасчетОППВДополнительныеДанные, Объект.ИсчисленныйОППВ);
		ОППВПодробностиРасчетаПрочитаны = Истина;
		
	КонецЕсли;	
	
	Если ИмяКоманды = Неопределено
		ИЛИ ИмяКоманды = "ПодробноОПВР" Тогда
		
		ОПВРДанныеДляРасчета			= Объект.ИсчисленныйОПВР.Выгрузить();
		РасчетОПВРДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетОПВРДополнительныеДанныеОписаниеТаблицыЗначений();
		ПроведениеРасчетовСервер.РассчитатьОПВРДополнительныеДанные(Объект, ОПВРДанныеДляРасчета, РасчетОПВРДополнительныеДанные);	
		ЗаполнитьДополнительныеДанные(РасчетОПВРДополнительныеДанные, Объект.ИсчисленныйОПВР);
		ОПВРПодробностиРасчетаПрочитаны = Истина;
		
	КонецЕсли;	
	
	Если ИмяКоманды = Неопределено
		ИЛИ ИмяКоманды = "ПодробноООСМС" Тогда
		
		ООСМСДанныеДляРасчета			= Объект.ИсчисленныеООСМС.Выгрузить();
		РасчетООСМСДополнительныеДанные 	= ПроведениеРасчетовСервер.РасчетООСМСДополнительныеДанныеОписаниеТаблицыЗначений();
		ПроведениеРасчетовСервер.РассчитатьООСМСДополнительныеДанные(Объект, ООСМСДанныеДляРасчета, РасчетООСМСДополнительныеДанные);	
		ЗаполнитьДополнительныеДанные(РасчетООСМСДополнительныеДанные, Объект.ИсчисленныеООСМС);
		ООСМСПодробностиРасчетаПрочитаны = Истина;
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработкаИзмененияПереключенияПодробностейрасчета(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ПодробноСО.Пометка 	= Форма.ОтображатьПодробностиРасчетаСО;
	Элементы.ПодробноСН.Пометка 	= Форма.ОтображатьПодробностиРасчетаСН;	
	Элементы.ПодробноОППВ.Пометка	= Форма.ОтображатьПодробностиРасчетаОППВ;	
	Элементы.ПодробноОПВР.Пометка	= Форма.ОтображатьПодробностиРасчетаОПВР;	
	Элементы.ПодробноООСМС.Пометка	= Форма.ОтображатьПодробностиРасчетаООСМС;	
	
КонецПроцедуры

&НаКлиенте
Процедура  ОбработкаВыбораНаКлиенте(ВыбранноеЗначение, ИмяЭлементФормы)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица")Тогда
		
		Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныйСН" Тогда
			Если Объект.ИсчисленныйСН.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение)).Количество() = 0 Тогда
				НоваяСтрока 						= Объект.ИсчисленныйСН.Добавить();	
				НоваяСтрока.ФизЛицо 				= ВыбранноеЗначение;
				НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
			КонецЕсли;	
		КонецЕсли;
		
		Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныеСО" Тогда
			Если Объект.ИсчисленныеСО.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение)).Количество() = 0 Тогда
				НоваяСтрока 						= Объект.ИсчисленныеСО.Добавить();	
				НоваяСтрока.ФизЛицо 				= ВыбранноеЗначение;
				НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
			КонецЕсли;	
		КонецЕсли;
		
		Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныйОППВ" Тогда
			Если Объект.ИсчисленныйОППВ.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение)).Количество() = 0 Тогда
				НоваяСтрока 						= Объект.ИсчисленныйОППВ.Добавить();	
				НоваяСтрока.ФизЛицо 				= ВыбранноеЗначение;
				НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
			КонецЕсли;	
		КонецЕсли;
		
		Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныйОПВР" Тогда
			Если Объект.ИсчисленныйОПВР.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение)).Количество() = 0 Тогда
				НоваяСтрока 						= Объект.ИсчисленныйОПВР.Добавить();	
				НоваяСтрока.ФизЛицо 				= ВыбранноеЗначение;
				НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
			КонецЕсли;	
		КонецЕсли;
		
		Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныеООСМС" Тогда
			Если Объект.ИсчисленныеООСМС.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение)).Количество() = 0 Тогда
				НоваяСтрока 						= Объект.ИсчисленныеООСМС.Добавить();	
				НоваяСтрока.ФизЛицо 				= ВыбранноеЗначение;
				НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
			КонецЕсли;	
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого СтрокаМассива Из ВыбранноеЗначение Цикл
			
			Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныйСН" Тогда
				Если Объект.ИсчисленныйСН.НайтиСтроки(Новый Структура("ФизЛицо", СтрокаМассива)).Количество() = 0 Тогда
					НоваяСтрока 						= Объект.ИсчисленныйСН.Добавить();	
					НоваяСтрока.ФизЛицо 				= СтрокаМассива;
					НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
				КонецЕсли;	
			КонецЕсли;
			
			Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныеСО" Тогда
				Если Объект.ИсчисленныеСО.НайтиСтроки(Новый Структура("ФизЛицо", СтрокаМассива)).Количество() = 0 Тогда
					НоваяСтрока 						= Объект.ИсчисленныеСО.Добавить();	
					НоваяСтрока.ФизЛицо 				= СтрокаМассива;
					НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
				КонецЕсли;	
			КонецЕсли;
			
			Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныйОППВ" Тогда
				Если Объект.ИсчисленныйОППВ.НайтиСтроки(Новый Структура("ФизЛицо", СтрокаМассива)).Количество() = 0 Тогда
					НоваяСтрока 						= Объект.ИсчисленныйОППВ.Добавить();	
					НоваяСтрока.ФизЛицо 				= СтрокаМассива;
					НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
				КонецЕсли;	
			КонецЕсли;
			
			Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныйОПВР" Тогда
				Если Объект.ИсчисленныйОПВР.НайтиСтроки(Новый Структура("ФизЛицо", СтрокаМассива)).Количество() = 0 Тогда
					НоваяСтрока 						= Объект.ИсчисленныйОПВР.Добавить();	
					НоваяСтрока.ФизЛицо 				= СтрокаМассива;
					НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
				КонецЕсли;	
			КонецЕсли;
			
			Если ИмяЭлементФормы = Неопределено Или ИмяЭлементФормы = "ИсчисленныеООСМС" Тогда
				Если Объект.ИсчисленныеООСМС.НайтиСтроки(Новый Структура("ФизЛицо", СтрокаМассива)).Количество() = 0 Тогда
					НоваяСтрока 						= Объект.ИсчисленныеООСМС.Добавить();	
					НоваяСтрока.ФизЛицо 				= СтрокаМассива;
					НоваяСтрока.МесяцНалоговогоПериода 	= Объект.ПериодРегистрации;
				КонецЕсли;	
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	

СинхронизируемыеТабличныеЧасти = Новый Соответствие;
СинхронизируемыеТабличныеЧасти["ИсчисленныйСН"]  = Ложь;
СинхронизируемыеТабличныеЧасти["ИсчисленныеСО"]  = Ложь;
СинхронизируемыеТабличныеЧасти["ИсчисленныйОППВ"]  = Ложь;
СинхронизируемыеТабличныеЧасти["ИсчисленныйОПВР"]  = Ложь;
СинхронизируемыеТабличныеЧасти["ИсчисленныеООСМС"]  = Ложь;
ЭтоРедактированиеСтроки = Ложь;
