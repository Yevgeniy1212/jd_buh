#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область УправлениеДоступом

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	СписокФизЛиц = ФизическиеЛица.ВыгрузитьКолонку("ФизическоеЛицо");
	
	РасчетЗарплатыСервер.ЗаполнитьНаборыПоОрганизацииСтрутурномуПодразделениюСпискуФизЛиц(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделение", СписокФизЛиц);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда 
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			ДанныеЗаполнения.Удалить("Автор");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ЭтотОбъект.ИсчисленныеСО.Количество() > 0 
		ИЛИ ЭтотОбъект.ИсчисленныйОППВ.Количество() > 0
		ИЛИ ЭтотОбъект.ИсчисленныйОПВР.Количество() > 0
		ИЛИ ЭтотОбъект.ИсчисленныеООСМС.Количество() > 0
		    ИЛИ ЭтотОбъект.ИсчисленныйСН.Количество() > 0 Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ИсчисленныеСО");
		МассивНепроверяемыхРеквизитов.Добавить("ИсчисленныйОППВ");
		МассивНепроверяемыхРеквизитов.Добавить("ИсчисленныйОПВР");
		МассивНепроверяемыхРеквизитов.Добавить("ИсчисленныеООСМС");
		МассивНепроверяемыхРеквизитов.Добавить("ИсчисленныйСН");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ИсчисленныеСО);
	МассивТЧ.Добавить(ИсчисленныйСН);
 	МассивТЧ.Добавить(ИсчисленныйОППВ);
 	МассивТЧ.Добавить(ИсчисленныйОПВР);
 	МассивТЧ.Добавить(ИсчисленныеООСМС);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналомСервер.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект, Ложь);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.РасчетСНиСО.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	//УчетнаяПолитикаНУ = ПараметрыПроведения.УчетнаяПолитикаНУ[0];

	// СН
	ТаблицаСНСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																						ПараметрыПроведения.СНСведенияОДоходах, 
																						"Целиком", 
																						Движения.СНСведенияОДоходах.ВыгрузитьКолонки(),
																						Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаСНСведенияОДоходах,  	"СНСведенияОДоходах",	Движения, Отказ);
	ТаблицаИсчисленныйСН = РасчетЗарплатыСервер.ПодготовитьТаблицуИсчисленныхНалоговВзносовОтчислений(Реквизиты, 
																						ПараметрыПроведения.ИсчисленныйСН,
																						Движения.СНИсчисленный.ВыгрузитьКолонки(),
																						Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИсчисленныйСН,  	"СНИсчисленный", 		Движения, Отказ);
	
	// СО
	ТаблицаСОСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																						ПараметрыПроведения.СОСведенияОДоходах, 
																						"Целиком", 
																						Движения.СОСведенияОДоходах.ВыгрузитьКолонки(),
																						Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаСОСведенияОДоходах,  	"СОСведенияОДоходах",	Движения, Отказ);
	ТаблицаИсчисленныеСО = РасчетЗарплатыСервер.ПодготовитьТаблицуИсчисленныхНалоговВзносовОтчислений(Реквизиты, 
																						ПараметрыПроведения.ИсчисленныеСО,
																						Движения.СОРасчетыСФондами.ВыгрузитьКолонки(),
																						Отказ);
	РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИсчисленныеСО,  	"СОРасчетыСФондами",  	Движения, Отказ);
	
	// ОППВ
	Если Реквизиты.ОрганизацияЯвляетсяВкладчикомОППВ Тогда 
		ТаблицаОППВСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																							ПараметрыПроведения.ОППВСведенияОДоходах, 
																							"Целиком", 
																							Движения.СНСведенияОДоходах.ВыгрузитьКолонки(),
																							Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОППВСведенияОДоходах,  	"ОППВСведенияОДоходах",	Движения, Отказ);
		ТаблицаИсчисленныйОППВ = РасчетЗарплатыСервер.ПодготовитьТаблицуИсчисленныхНалоговВзносовОтчислений(Реквизиты, 
																						ПараметрыПроведения.ИсчисленныйОППВ,
																						Движения.ОППВРасчетыСФондами.ВыгрузитьКолонки(),
																						Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИсчисленныйОППВ,  	"ОППВРасчетыСФондами",  Движения, Отказ);
	КонецЕсли;
	
	// ОПВР
	Если Реквизиты.ПериодРегистрации >= Дата(2024,1,1) Тогда 
		ТаблицаОПВРСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																							ПараметрыПроведения.ОПВРСведенияОДоходах, 
																							"Целиком", 
																							Движения.ОПВРСведенияОДоходах.ВыгрузитьКолонки(),
																							Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОПВРСведенияОДоходах,  	"ОПВРСведенияОДоходах",	Движения, Отказ);
		ТаблицаИсчисленныйОПВР = РасчетЗарплатыСервер.ПодготовитьТаблицуИсчисленныхНалоговВзносовОтчислений(Реквизиты, 
																						ПараметрыПроведения.ИсчисленныйОПВР,
																						Движения.ОПВРРасчетыСФондами.ВыгрузитьКолонки(),
																						Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИсчисленныйОПВР,  	"ОПВРРасчетыСФондами",  Движения, Отказ);
	КонецЕсли;
	
	// ООСМС
	Если Реквизиты.ПериодРегистрации >= Дата(2017,7,1) Тогда
		ТаблицаООСМССведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(Реквизиты, 
																							ПараметрыПроведения.ООСМССведенияОДоходах, 
																							"Целиком", 
																							Движения.ООСМССведенияОДоходах.ВыгрузитьКолонки(),
																							Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаООСМССведенияОДоходах,  "ООСМССведенияОДоходах",	Движения, Отказ);
		ТаблицаИсчисленныеООСМС = РасчетЗарплатыСервер.ПодготовитьТаблицуИсчисленныхНалоговВзносовОтчислений(Реквизиты, 
																							ПараметрыПроведения.ИсчисленныеООСМС,
																							Движения.ООСМСРасчетыСФондами.ВыгрузитьКолонки(),
																							Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИсчисленныеООСМС,  	"ООСМСРасчетыСФондами",  	Движения, Отказ);
		
	КонецЕсли;
	

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли
