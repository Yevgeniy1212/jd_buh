////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Накладная на перемещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписания";
	КомандаПечати.Представление = НСтр("ru = 'Акт списания'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать накладной на перемещение
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписания") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктСписания",
			НСтр("ru = 'Акт списания'"),
			ПечатьАктСписания(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.СписаниеСпецОдеждыПоСрокуСлужбы.Макет");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАктСписания(МассивОбъектов, ОбъектыПечати) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктСписания";
	
	Для Каждого Элемент Из МассивОбъектов Цикл
		Документ = Элемент;
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписанияСОПоСрокуСлужбы.АктСписания");
		
		Шапка   = Макет.ПолучитьОбласть("Шапка");
		СтрокаТ = Макет.ПолучитьОбласть("Строка");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
					|	СписанияСОПоСрокуСлужбыТовары.Номенклатура,
					|	СписанияСОПоСрокуСлужбыТовары.Количество,
					|	СписанияСОПоСрокуСлужбыТовары.СрокСлужбы,
					|	СписанияСОПоСрокуСлужбыТовары.ДатаОкончания,
					|	СписанияСОПоСрокуСлужбыТовары.ДатаВыдачи,
					|	СписанияСОПоСрокуСлужбыТовары.Склад,
					|	СписанияСОПоСрокуСлужбыТовары.МОЛ,
					|	СписанияСОПоСрокуСлужбыТовары.Номенклатура.Код КАК Код,
					|	СписанияСОПоСрокуСлужбыТовары.Номенклатура.Наименование КАК Наименование,
					|	СписанияСОПоСрокуСлужбыТовары.НомерСтроки КАК НомерСтроки,
					|	СписанияСОПоСрокуСлужбыТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения
					|ИЗ
					|	Документ.СписанияСОПоСрокуСлужбы.Товары КАК СписанияСОПоСрокуСлужбыТовары
					|ГДЕ
					|	СписанияСОПоСрокуСлужбыТовары.Ссылка = &Ссылка
					|
					|УПОРЯДОЧИТЬ ПО
					|	НомерСтроки";
		
		Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
		Шапка.параметры.Организация	= Документ.Организация;
		Шапка.параметры.Номер		= Документ.Номер;
		Шапка.Параметры.Приказ      = Документ.Приказ;
		Шапка.параметры.Дата		= формат(Документ.Дата, "ДФ=""дд.ММ.гггг""");
		Шапка.параметры.Комментарий	= Документ.Комментарий;
		//Шапка.параметры.Основание	= Документ.Основание;
		ТабДокумент.Вывести(Шапка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		ПервыйРаз = истина;
		Счетчик = 0;
		Итого = 0;
		Пока Выборка.Следующий() цикл
			Счетчик = Счетчик + 1;
			Куда = "";
			Склад = выборка.Склад;
			СтрокаТ.Параметры.Заполнить(Выборка);
			СтрокаТ.параметры.ДатаВыдачи = формат(Выборка.ДатаВыдачи,"ДФ=""дд.ММ.гггг""");
			СтрокаТ.параметры.ДатаОкончания = формат(Выборка.ДатаОкончания,"ДФ=""дд.ММ.гггг""");
			Куда = Куда + ?(Куда = "", "", символы.ПС) + Выборка.Склад;
			Куда = Куда + ?(Куда = "", "", символы.ПС) + Выборка.МОЛ;
			СтрокаТ.Параметры.Куда = Куда;
			СтрокаТ.Параметры.нпп = Счетчик;
			ТабДокумент.Вывести(СтрокаТ);
		Конеццикла;
		
	/// Комиссия	
		ОбластьКомиссия = Макет.ПолучитьОбласть("Комиссия");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СписаниеСпецОдеждыПоСрокуСлужбыИнвентаризационнаяКомиссия.Председатель КАК Председатель,
		               |	СписаниеСпецОдеждыПоСрокуСлужбыИнвентаризационнаяКомиссия.ФизЛицо КАК ФизЛицо
		               |ИЗ
		               |	Документ.СписанияСОПоСрокуСлужбы.ИнвентаризационнаяКомиссия КАК СписаниеСпецОдеждыПоСрокуСлужбыИнвентаризационнаяКомиссия
		               |ГДЕ
		               |	СписаниеСпецОдеждыПоСрокуСлужбыИнвентаризационнаяКомиссия.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
		ТаблицаИнвентаризационнаяКомиссия = Запрос.Выполнить().Выгрузить();
		
		ЗаголовокРазделаКомиссии = Новый Структура();
		ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", "Председатель комиссии");
		ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии",        "Члены комиссии:");
		
		// Выведем подпись председателя инвентаризационной комиссии
		ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
		
		Если НЕ (ПредседательКомиссии = Неопределено) Тогда
			
			ДанныеПредседателя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Документ.Организация, ПредседательКомиссии.ФизЛицо, Документ.Дата);
	
			ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ОбластьКомиссия.Параметры.Должность                = ДанныеПредседателя.Должность;
			ОбластьКомиссия.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
		Иначе
			
			ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ОбластьКомиссия.Параметры.Должность                = "";
			ОбластьКомиссия.Параметры.РасшифровкаПодписи       = "";
			
		КонецЕсли;
			
		ТабДокумент.Вывести(ОбластьКомиссия);
		
		// Выведем подписи членов комиссии
		ВыводитьЗаголовок = Истина;
		
		// Сформируем список членов комиссии
		СписокЧленовКомиссии = Новый Массив();
		
		Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
			Если НЕ Строка.Председатель Тогда
				СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛиц(Документ.Организация, СписокЧленовКомиссии, Документ.Дата);
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьКомиссия) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
			
			КонецЕсли;
			
			ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, 
														   		 ЗаголовокРазделаКомиссии.ЧленыКомиссии,
														   		 "");
			ОбластьКомиссия.Параметры.Должность          = ЧленКомиссии.Должность;
			ОбластьКомиссия.Параметры.РасшифровкаПодписи = ЧленКомиссии.Представление;
			
			ТабДокумент.Вывести(ОбластьКомиссия);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьКомиссия) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
				
				ОбластьКомиссия.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, 
															   ЗаголовокРазделаКомиссии.ЧленыКомиссии,
															   "");
				ОбластьКомиссия.Параметры.Должность          = "";
				ОбластьКомиссия.Параметры.РасшифровкаПодписи = "";
				
				ТабДокумент.Вывести(ОбластьКомиссия);
				
				ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
				
			КонецЦикла; 
			
		КонецЕсли;
		
		//Печать данных об исполнителе
		ОбластьМакета = Макет.ПолучитьОбласть("Исполнитель");
		Если НЕ Документ.Подписант.Пустая() Тогда
			ДанныеИсполнителя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Документ.Организация, Документ.Подписант, Документ.Дата);
			
			ОбластьМакета.Параметры.Должность          = ДанныеИсполнителя.Должность;
			ОбластьМакета.Параметры.РасшифровкаПодписи = ДанныеИсполнителя.Представление;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции 

