
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	СформироватьЗаписиПоБУ(Отказ);
	СформироватьЗаписиПоСпецОдежде(Отказ);
	
КонецПроцедуры

Процедура СформироватьЗаписиПоБУ(Отказ)
	
	Движения.Типовой.Записывать = Истина;
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Типовой"));
	ТаблицаДвижений.Колонки.Добавить("Субконто1", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДвижений.Колонки.Добавить("Субконто2", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаДвижений.Колонки.Добавить("Субконто3", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	
	Для Каждого СтрокаТаб Из Товары Цикл
		Движение = Движения.Типовой.Добавить();
		Движение.Активность = Истина;
		Движение.Организация = Организация;
		Движение.Период = Дата;
		Движение.СчетКт = ПланыСчетов.Типовой.СписанныеПокупныеМатериалыКомплектующиеИзделия;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура] = СтрокаТаб.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады] = СтрокаТаб.Склад; 
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоТиповые.РаботникиОрганизаций] = СтрокаТаб.МОЛ;
		Движение.КоличествоКт = СтрокаТаб.Количество;
		Движение.Содержание = "Списание СО";
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Счет = СтрокаТаб.СчетУчетаБУ;
		НоваяСтрока.Субконто1 = СтрокаТаб.Номенклатура;
		НоваяСтрока.Субконто2 = СтрокаТаб.Склад;
		НоваяСтрока.Субконто3 = СтрокаТаб.МОЛ;
		
	КонецЦикла;
	
	Движения.Типовой.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДвижений.Счет КАК Счет,
	               |	ТаблицаДвижений.Субконто1 КАК Субконто1,
	               |	ТаблицаДвижений.Субконто2 КАК Субконто2,
	               |	ТаблицаДвижений.Субконто3 КАК Субконто3
	               |ПОМЕСТИТЬ ТаблицаДвижений
	               |ИЗ
	               |	&ТаблицаДвижений КАК ТаблицаДвижений
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаДвижений.Счет КАК Счет,
	               |	ТаблицаДвижений.Субконто1 КАК Субконто1,
	               |	ТаблицаДвижений.Субконто2 КАК Субконто2,
	               |	ТаблицаДвижений.Субконто3 КАК Субконто3,
	               |	ТиповойОстатки.КоличествоОстаток КАК КоличествоОстаток
	               |ИЗ
	               |	ТаблицаДвижений КАК ТаблицаДвижений
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатков, Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.СпецОдежда), , ) КАК ТиповойОстатки
	               |		ПО ТаблицаДвижений.Счет = ТиповойОстатки.Счет
	               |			И ТаблицаДвижений.Субконто1 = ТиповойОстатки.Субконто1
	               |			И ТаблицаДвижений.Субконто2 = ТиповойОстатки.Субконто2
	               |			И ТаблицаДвижений.Субконто3 = ТиповойОстатки.Субконто3
	               |ГДЕ
	               |	ТиповойОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("ДатаОстатков", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
	
	МинусовыеОстатки = Запрос.Выполнить().Выгрузить();
	Если МинусовыеОстатки.Количество() > 0 Тогда
		Отказ = Истина;
		Для Каждого СтрокаОстаток Из МинусовыеОстатки Цикл
			Для Каждого СтрокаТовар Из Ссылка.Товары Цикл
				Если СтрокаТовар.Номенклатура = СтрокаОстаток.Субконто1 И СтрокаТовар.Склад = СтрокаОстаток.Субконто2 И 
			    	 СтрокаТовар.МОЛ = СтрокаОстаток.Субконто3 Тогда
					 
					ТекстОшибки = НСтр("ru='Бух.учет. Строка: %1. Не списано %2 %3 товара <%4>, счет учета %5, склад %6, МОЛ %7' ");
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СтрокаТовар.НомерСтроки, СтрокаОстаток.КоличествоОстаток * (-1), СтрокаТовар.ЕдиницаИзмерения,
								СтрокаТовар.Номенклатура, СтрокаТовар.СчетУчетаБУ, СтрокаТовар.Склад, СтрокаТовар.МОЛ);
					ПолеКоличество	= "Товары[" + Формат(СтрокаТовар.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Количество";		
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка, ПолеКоличество, "Объект", Отказ);
				КонецЕсли;			
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьЗаписиПоСпецОдежде(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Мол", Товары.ВыгрузитьКолонку("МОЛ"));
	Запрос.УстановитьПараметр("Склад", Товары.ВыгрузитьКолонку("Склад"));
	Запрос.Текст =
	"ВЫБРАТЬ МОЛПолучатель, СкладПолучатель, Номенклатура, ДатаВыдачи, ДатаОкончания, КоличествоОстаток КАК Количество
	|ИЗ РегистрНакопления.СрокСлужбыСО.Остатки(&Дата, МОЛПолучатель В (&Мол) И СкладПолучатель В (&Склад)) КАК СрокСлужбыСООстатки";
	тзОстатки = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("МОЛПолучатель, СкладПолучатель, Номенклатура, ДатаВыдачи, ДатаОкончания", );
	
	ТаблицаДвижений = Движения.СрокСлужбыСО.Выгрузить();
	ТаблицаДвижений.Очистить();
	Движения.ВыданнаяСО.Очистить();
	
	Движения.СрокСлужбыСО.Записывать = Истина;
	Движения.ВыданнаяСО.Записывать = Истина;
	
	Для каждого текСтрока из Товары цикл
		Движение 					= ТаблицаДвижений.Добавить();
		Движение.Номенклатура 		= текСтрока.Номенклатура;
		Движение.СрокСлужбы 		= текстрока.СрокСлужбы;
		Движение.ДатаОкончания 		= текстрока.ДатаОкончания;
		Движение.СкладПолучатель 	= текстрока.Склад;
		Движение.МОЛПолучатель 		= текстрока.МОЛ;
		Движение.ДатаВыдачи 		= текстрока.ДатаВыдачи;
		Движение.Количество			= текстрока.Количество;
		
		ЗаполнитьЗначенияСвойств(Отбор, Движение);
		МасСтр = тзОстатки.НайтиСтроки(Отбор);
		Если МасСтр.Количество()=0 Тогда
			Сообщить("У МОЛа """+текстрока.МОЛ+""" нет остатка СО """+текСтрока.Номенклатура+""" (выдано "+Формат(текстрока.ДатаВыдачи, "ДФ=д.ММ.гггг")+")", СтатусСообщения.ОченьВажное);
		ИначеЕсли МасСтр.Получить(0).Количество<текстрока.Количество Тогда
			Сообщить("У МОЛа """+текстрока.МОЛ+""" не достаточно СО """+текСтрока.Номенклатура+""" (выдано "+Формат(текстрока.ДатаВыдачи, "ДФ=д.ММ.гггг")+"), есть "+МасСтр.Получить(0).Количество+", требуется "+текстрока.Количество, СтатусСообщения.ОченьВажное);
		КонецЕсли;
		
		Движение = Движения.ВыданнаяСО.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, текСтрока, "Номенклатура,ДатаВыдачи,СрокСлужбы,ДатаОкончания,Количество");
		Движение.Период 			= Дата;
		Движение.Склад 				= текстрока.Склад;
		Движение.МОЛ 				= текстрока.МОЛ;
		Движение.СнятоСУчета		= Истина;
		Движение.Списано			= Истина;
	Конеццикла;
	Движения.СрокСлужбыСО.мПериод          = Дата;
	Движения.СрокСлужбыСО.мТаблицаДвижений = ТаблицаДвижений;
	Движения.СрокСлужбыСО.ВыполнитьРасход();
		
КонецПроцедуры	

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	//МассивНепроверяемыхРеквизитов.Добавить("Товары.СчетУчетаНУ");
	//МассивНепроверяемыхРеквизитов.Добавить("Товары.НовыйСчетУчетаНУ"); 
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Коэффициент"); 
	МассивНепроверяемыхРеквизитов.Добавить("Товары.СчетУчетаБУ"); 
	//МассивНепроверяемыхРеквизитов.Добавить("Товары.НовыйСчетУчетаБУ"); 
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры


