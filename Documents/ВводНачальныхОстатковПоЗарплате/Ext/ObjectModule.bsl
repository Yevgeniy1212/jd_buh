#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область УправлениеДоступом

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	СписокФизЛиц = ФизическиеЛица.ВыгрузитьКолонку("ФизическоеЛицо");
	
	РасчетЗарплатыСервер.ЗаполнитьНаборыПоОрганизацииСтрутурномуПодразделениюСпискуФизЛиц(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделение", СписокФизЛиц);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения <> Неопределено И ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДанныеЗаполнения.Свойство("Дата", Дата);
		ДанныеЗаполнения.Свойство("Организация", Организация);
	КонецЕсли;
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ЗарплатаИНалоги);
	МассивТЧ.Добавить(ВзносыИОтчисления);
	МассивТЧ.Добавить(ОПВПодлежитПеречислению);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналомСервер.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ЭтотОбъект.ЗарплатаИНалоги.Количество() > 0 
		ИЛИ ЭтотОбъект.ВзносыИОтчисления.Количество() > 0
			ИЛИ ЭтотОбъект.ОПВПодлежитПеречислению.Количество() > 0 Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ЗарплатаИНалоги");
		МассивНепроверяемыхРеквизитов.Добавить("ВзносыИОтчисления");
		МассивНепроверяемыхРеквизитов.Добавить("ОПВПодлежитПеречислению");
		
	КонецЕсли;
	
	Если НЕ ЭтотОбъект.УчитыватьКПН Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидУчетаНУ");	
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ВводНачальныхОстатковПоЗарплате.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	УчетнаяПолитикаНУ = ПараметрыПроведения.УчетнаяПолитикаНУ[0];
	
	Если ОтражатьВБухгалтерскомУчете Тогда
		ТаблицаИПНРасчетыСБюджетом 					= ПараметрыПроведения.ИПНРасчетыСБюджетом;
		ТаблицаОПВПодлежитПеречислению 				= ПараметрыПроведения.ОПВПодлежитПеречислению;
		ТаблицаОПВРасчетыСФондами 					= ПараметрыПроведения.ОПВРасчетыСФондами;
		ТаблицаВзаиморасчетыСРаботниками            = ПараметрыПроведения.ВзаиморасчетыСРаботниками;
		ТаблицаВзаиморасчетыСДепонентамиОрганизаций = ПараметрыПроведения.ВзаиморасчетыСДепонентамиОрганизаций;
		ТаблицаСОРасчетыСФондами					= ПараметрыПроведения.СОРасчетыСФондами;
		ТаблицаВОСМСРасчетыСФондами 				= ПараметрыПроведения.ВОСМСРасчетыСФондами;
		ТаблицаВОСМСПодлежитПеречислению 			= ПараметрыПроведения.ВОСМСПодлежитПеречислению;
		ТаблицаООСМСРасчетыСФондами					= ПараметрыПроведения.ООСМСРасчетыСФондами;
		ТаблицаОПВРРасчетыСФондами					= ПараметрыПроведения.ОПВРРасчетыСФондами;
		
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаВзаиморасчетыСРаботниками,				"ВзаиморасчетыСРаботникамиОрганизаций", Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаВзаиморасчетыСДепонентамиОрганизаций,  "ВзаиморасчетыСДепонентамиОрганизаций", Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаИПНРасчетыСБюджетом,					"ИПНРасчетыСБюджетом",  				Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОПВРасчетыСФондами,  					"ОПВРасчетыСФондами",  					Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаСОРасчетыСФондами,  					"СОРасчетыСФондами",  					Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОПВПодлежитПеречислению,  				"ОПВПодлежитПеречислениюВФонды",  		Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаВОСМСРасчетыСФондами,  				"ВОСМСРасчетыСФондами",  				Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаВОСМСПодлежитПеречислению,  			"ВОСМСПодлежитПеречислениюВФонды",  	Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаООСМСРасчетыСФондами,  				"ООСМСРасчетыСФондами",  				Движения, Отказ);
		РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОПВРРасчетыСФондами,  					"ОПВРРасчетыСФондами",  				Движения, Отказ);
		
		Если УчетнаяПолитикаНУ.ОрганизацияЯвляетсяВкладчикомОППВ Тогда	
			
			ТаблицаОППВРасчетыСФондами					= ПараметрыПроведения.ОППВРасчетыСФондами;
			РасчетЗарплатыСервер.СформироватьДвижения(ТаблицаОППВРасчетыСФондами,  					"ОППВРасчетыСФондами",  				Движения, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Документы.ВводНачальныхОстатковПоЗарплате.СформироватьПроводкиБУ_НУ(Реквизиты, ПараметрыПроведения.ПроводкиБУ_НУ, Движения, Отказ);
	Документы.ВводНачальныхОстатковПоЗарплате.СвернутьДвиженияРегистровБухгалтерии(Движения, Отказ);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли


