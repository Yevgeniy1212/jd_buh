#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами.

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	Если ОбщегоНазначенияБККлиентСервер.ЭтоПростаяВерсияКонфигурации() Тогда
		БлокируемыеРеквизиты.Добавить("Дата");
		БлокируемыеРеквизиты.Добавить("Номер");
		БлокируемыеРеквизиты.Добавить("ОтражатьВБухгалтерскомУчете");
		БлокируемыеРеквизиты.Добавить("УчитыватьКПН");
		БлокируемыеРеквизиты.Добавить("Организация; СтруктурноеПодразделениеОрганизация");
		БлокируемыеРеквизиты.Добавить("СтруктурноеПодразделение");
		
		// таб. часть ЗарплатаИНалоги
		БлокируемыеРеквизиты.Добавить("ЗарплатаИНалоги;ЗарплатаИНалогиГруппаЗаполнить,ЗарплатаИНалогиПодборЗарплата");
		БлокируемыеРеквизиты.Добавить("ЗарплатаИНалоги.ФизЛицо; ЗарплатаИНалогиФизЛицо");
		БлокируемыеРеквизиты.Добавить("ЗарплатаИНалоги.ПериодРегистрации; ЗарплатаИНалогиПериодРегистрации");
		БлокируемыеРеквизиты.Добавить("ЗарплатаИНалоги.ВзаиморасчетыСРаботниками; ЗарплатаИНалогиВзаиморасчетыСРаботниками");
		БлокируемыеРеквизиты.Добавить("ЗарплатаИНалоги.ВзаиморасчетыСДепонентами; ЗарплатаИНалогиВзаиморасчетыСДепонентами");
		БлокируемыеРеквизиты.Добавить("ЗарплатаИНалоги.ИПНРасчетыСБюджетом; ЗарплатаИНалогиИПНРасчетыСБюджетом");

		// таб. часть ВзносыИОтчисления
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления;ВзносыИОтчисленияГруппаЗаполнить,ВзносыИОтчисленияПодборВзносы");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ФизЛицо; ВзносыИОтчисленияФизЛицо");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ПериодРегистрации; ВзносыИОтчисленияПериодРегистрации");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ВидПлатежа; ВзносыИОтчисленияВидПлатежа");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ОПВРасчетыСБюджетом; ВзносыИОтчисленияОПВРасчетыСБюджетом");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ОПВПодлежитПеречислениюВФонды; ВзносыИОтчисленияОПВПодлежитПеречислениюВФонды");		
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.СОРасчетыСФондами; ВзносыИОтчисленияСОРасчетыСФондами");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ОППВРасчетыСФондами; ВзносыИОтчисленияОППВРасчетыСФондами");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ВОСМСРасчетыСФондами; ВзносыИОтчисленияВОСМСРасчетыСФондами");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ООСМСРасчетыСФондами; ВзносыИОтчисленияООСМСРасчетыСФондами");
		БлокируемыеРеквизиты.Добавить("ВзносыИОтчисления.ОПВРРасчетыСФондами; ВзносыИОтчисленияОПВРРасчетыСФондами");
		
		// таб. часть ОПВПодлежитПеречислению
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению; ОПВПодлежитПеречислениюГруппаЗаполнить, ОПВПодлежитПеречислениюПодборОПВ");
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению.ФизЛицо; ОПВПодлежитПеречислениюФизЛицо");
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению.ПериодРегистрации; ОПВПодлежитПеречислениюПериодРегистрации");
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению.ВидПлатежа; ОПВПодлежитПеречислениюВидПлатежа");
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению.МесяцВыплатыДоходов; ОПВПодлежитПеречислениюМесяцВыплатыДоходов");
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению.ОПВПодлежитПеречислениюВФонды; ОПВПодлежитПеречислениюОПВПодлежитПеречислениюВФонды");
		БлокируемыеРеквизиты.Добавить("ОПВПодлежитПеречислению.ВОСМСПодлежитПеречислениюВФонды; ОПВПодлежитПеречислениюВОСМСПодлежитПеречислениюВФонды");
	     				
	КонецЕсли;
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура Автозаполнение(Объект, СпособЗаполнения, ИмяТабличнойЧасти) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамДата", Объект.Дата);
	Запрос.УстановитьПараметр("парамСсылка", Объект.Ссылка);
	
	Если СпособЗаполнения = "ПоРаботникам" Тогда
		
		Запрос.УстановитьПараметр("парамПодразделениеОрганизации", Объект.ПодразделениеОрганизации);		
		Запрос.УстановитьПараметр("парамСтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
		Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Объект.Организация));
		Запрос.УстановитьПараметр("парамОрганизация", Объект.Организация);
		Запрос.УстановитьПараметр("парамВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		       
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(&парамДата, МЕСЯЦ) КАК ПериодРегистрации
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&парамДата, 
		|			Организация = &парамГоловнаяОрганизация
		|			И Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) КАК РаботникиОрганизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатковПоЗарплате." + ИмяТабличнойЧасти + " КАК СтрокиТЧ
		|		ПО РаботникиОрганизации.Сотрудник.ФизЛицо = СтрокиТЧ.Физлицо
		|		И СтрокиТЧ.Ссылка.Проведен
		|ГДЕ
		|	РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация		
		|	И СтрокиТЧ.Физлицо ЕСТЬ NULL
		|";
		
		Если НЕ Объект.ПодразделениеОрганизации.Пустая() Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделениеОрганизации)
			|";
		КонецЕсли;
		
		Если НЕ Объект.СтруктурноеПодразделение.Пустая() Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И РаботникиОрганизации.СтруктурноеПодразделение = &парамСтруктурноеПодразделение
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	РаботникиОрганизации.Сотрудник.Физлицо.Наименование
		|";

	Иначе
	
		// из справочника ФизическиеЛица
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФизическиеЛица.Ссылка КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(&парамДата, МЕСЯЦ) КАК ПериодРегистрации
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводНачальныхОстатковПоЗарплате." + ИмяТабличнойЧасти + " КАК СтрокиТЧ
		|		ПО ФизическиеЛица.Ссылка = СтрокиТЧ.Физлицо
		|		И СтрокиТЧ.Ссылка.Проведен
		|
		|ГДЕ
		|	ФизическиеЛица.ЭтоГруппа = ЛОЖЬ
		|	И СтрокиТЧ.ФизЛицо ЕСТЬ NULL
		|		
		|УПОРЯДОЧИТЬ ПО
		|	ФизическиеЛица.Наименование
		|";
	
	КонецЕсли;		
	
	РезультатЗапроса  = Запрос.Выполнить();
	ТаблицаРезультата = РезультатЗапроса.Выгрузить();
	
	Для Каждого СтрокаТЗ Из ТаблицаРезультата Цикл
		
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	
	КонецЦикла;	

КонецПроцедуры // Автозаполнение()

&НаСервере
Процедура ЗаполнитьТабличнуюЧастьПоОстаткамБУ(Объект, ИмяТабличнойЧасти, СтруктураПоказателей, СтруктураСубконто, МассивСчетов) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокСчетов", МассивСчетов);
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ТиповойОстатки.СуммаОстатокКт, 0) КАК СуммаОстатокКт,
	               |	ТиповойОстатки.Субконто1,
	               |	ТиповойОстатки.Субконто2,
	               |	ТиповойОстатки.Счет,
				   |	ВЫБОР
	               |		КОГДА ТиповойОстатки.Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда)
	               |			ТОГДА ЕСТЬNULL(ТиповойОстатки.СуммаОстатокКт, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаЗП,  
				   |	ВЫБОР
	               |		КОГДА ТиповойОстатки.Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.КраткосрочнаяЗадолженностьПоДепонированнойЗаработнойПлате)
	               |			ТОГДА ЕСТЬNULL(ТиповойОстатки.СуммаОстатокКт, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаДепонентов, 
	               |	ВЫБОР
	               |		КОГДА ТиповойОстатки.Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям)
	               |			ТОГДА ЕСТЬNULL(ТиповойОстатки.СуммаОстатокКт, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаОПВ,
	               |	ВЫБОР
	               |		КОГДА ТиповойОстатки.Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию)
	               |			ТОГДА ЕСТЬNULL(ТиповойОстатки.СуммаОстатокКт, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СуммаОС
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатков, Счет В ИЕРАРХИИ (&СписокСчетов), , Организация = &Организация И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ТиповойОстатки
	               |ГДЕ
	               |	ЕСТЬNULL(ТиповойОстатки.СуммаОстатокКт, 0) <> 0";
				   
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();   		
		Для Каждого Элемент Из СтруктураПоказателей Цикл 			
			НоваяСтрока[Элемент.Ключ] = Выборка[Элемент.Значение]
		КонецЦикла; 		
		Для Каждого Элемент Из СтруктураСубконто Цикл
			НоваяСтрока[Элемент.Ключ] = Выборка[Элемент.Значение]
		КонецЦикла;  	
		НоваяСтрока.ПериодРегистрации = НачалоМесяца(Объект.Дата);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Реквизиты.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	//ДанныеУчетнойПолитикиНУ
	Запрос.Текст = РасчетЗарплатыСервер.ТекстЗапросаУчетнаяПолитикаНУ();
	Запрос.УстановитьПараметр("Организация", 			   Реквизиты.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение",  Реквизиты.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("Период",  			   Реквизиты.Дата);
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																							Реквизиты.Организация,
																							ПредопределенноеЗначение("Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты"));
	Иначе
		Налогоплательщик = Реквизиты.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("Налогоплательщик",  Налогоплательщик);
	
	Результат = Запрос.Выполнить();
	ТаблицаУчетнаяПолитикаНУ = Результат.Выгрузить();
	ПараметрыПроведения.Вставить("УчетнаяПолитикаНУ", ТаблицаУчетнаяПолитикаНУ);
	
	УчетнаяПолитикаНУ = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаУчетнаяПолитикаНУ[0]);
	Запрос.УстановитьПараметр("ОтражениеПоПериодуРегистрации", УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации);
	
	ПодготовитьТаблицыДокумента(Запрос, Реквизиты, УчетнаяПолитикаНУ);
	
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	Запрос.УстановитьПараметр("СтрокаСодержаниеЗП", 	НСтр("ru = 'Нач. сальдо по з/п за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеДепЗП", 	НСтр("ru = 'Нач. сальдо по деп. з/п за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеОПВ", 	НСтр("ru = 'Сальдо ОПВ за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеОППВ", 	НСтр("ru = 'Сальдо ОППВ за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеСО", 	НСтр("ru = 'Сальдо СО за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеВОСМС", 	НСтр("ru = 'Сальдо взносов ОСМС за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеООСМС", 	НСтр("ru = 'Сальдо отчислений ОСМС за %1'", КодОсновногоЯзыка));
	Запрос.УстановитьПараметр("СтрокаСодержаниеОПВР", 	НСтр("ru = 'Сальдо ОПВР за %1'", КодОсновногоЯзыка));
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаИПНРасчетыСБюджетом(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаВзаиморасчетыСРаботниками(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаОПВПодлежитПеречислению(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаОПВРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаСОРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаВзаиморасчетыСДепонентамиОрганизаций(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаОППВРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаВОСМСПодлежитПеречислению(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаВОСМСРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаООСМСРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаОПВРРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ)
					+ ТекстЗапросаПроводкиБУ(НомераТаблиц, Реквизиты, ПараметрыПроведения);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
			
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц) 
	
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Реквизиты.Дата,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.Ссылка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА Реквизиты.Организация
		|					ИНАЧЕ Реквизиты.Организация.ГоловнаяОрганизация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	Реквизиты.ОтражатьВБухгалтерскомУчете,
		|	Реквизиты.УчитыватьКПН,
		|	Реквизиты.ВидУчетаНУ
		|ИЗ
		|	Документ.ВводНачальныхОстатковПоЗарплате КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|		ПО Реквизиты.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокумента(Запрос, Реквизиты, УчетнаяПолитикаНУ)
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗарплатаИНалоги.НомерСтроки,
		|	ЗарплатаИНалоги.ФизЛицо,
		|	ЗарплатаИНалоги.ПериодРегистрации,
		|	ЗарплатаИНалоги.ВзаиморасчетыСРаботниками,
		|	ЗарплатаИНалоги.ВзаиморасчетыСДепонентами,
		|	ЗарплатаИНалоги.ИПНРасчетыСБюджетом
		|ПОМЕСТИТЬ ВТ_ЗарплатаИНалоги
		|ИЗ
		|	Документ.ВводНачальныхОстатковПоЗарплате.ЗарплатаИНалоги КАК ЗарплатаИНалоги
		|ГДЕ
		|	ЗарплатаИНалоги.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОПВПодлежитПеречислению.НомерСтроки,
		|	ОПВПодлежитПеречислению.ФизЛицо,
		|	ОПВПодлежитПеречислению.ПериодРегистрации,
		|	ОПВПодлежитПеречислению.ВидПлатежа,
		|	ОПВПодлежитПеречислению.МесяцВыплатыДоходов,
		|	ОПВПодлежитПеречислению.ОПВПодлежитПеречислениюВФонды,
		|	ОПВПодлежитПеречислению.ВОСМСПодлежитПеречислениюВФонды
		|ПОМЕСТИТЬ ВТ_ОПВПодлежитПеречислению
		|ИЗ
		|	Документ.ВводНачальныхОстатковПоЗарплате.ОПВПодлежитПеречислению КАК ОПВПодлежитПеречислению
		|ГДЕ
		|	ОПВПодлежитПеречислению.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзносыИОтчисления.НомерСтроки,
		|	ВзносыИОтчисления.ФизЛицо,
		|	ВзносыИОтчисления.ПериодРегистрации,
		|	ВзносыИОтчисления.ВидПлатежа,
		|	ВзносыИОтчисления.ОПВРасчетыСБюджетом,
		|	ВзносыИОтчисления.ОПВПодлежитПеречислениюВФонды,
		|	ВзносыИОтчисления.СОРасчетыСФондами,
		|	ВзносыИОтчисления.ОППВРасчетыСФондами,
		|	ВзносыИОтчисления.ВОСМСРасчетыСФондами,
		|	ВзносыИОтчисления.ООСМСРасчетыСФондами,
		|	ВзносыИОтчисления.ОПВРРасчетыСФондами
		|ПОМЕСТИТЬ ВТ_ВзносыИОтчисления
		|ИЗ
		|	Документ.ВводНачальныхОстатковПоЗарплате.ВзносыИОтчисления КАК ВзносыИОтчисления
		|ГДЕ
		|	ВзносыИОтчисления.Ссылка = &Ссылка";
		
	Результат = Запрос.Выполнить();
	
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ 
			|	ЗарплатаИНалоги.ФизЛицо,
			|	&Период КАК Период
			|ПОМЕСТИТЬ ВТ_ПериодыСотрудников
			|ИЗ 
			|	ВТ_ЗарплатаИНалоги КАК ЗарплатаИНалоги
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ 
			|	ОПВПодлежитПеречислению.ФизЛицо,
			|	&Период КАК Период
			|ИЗ 
			|	ВТ_ОПВПодлежитПеречислению КАК ОПВПодлежитПеречислению
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ 
			|	ВзносыИОтчисления.ФизЛицо,
			|	&Период КАК Период
			|ИЗ 
			|	ВТ_ВзносыИОтчисления КАК ВзносыИОтчисления
			|";
			
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
					 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина);
		Результат = Запрос.Выполнить();
		
	КонецЕсли;
	                                                 
КонецПроцедуры

Функция ТекстЗапросаИПНРасчетыСБюджетом(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ИПНРасчетыСБюджетом", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаЗарплатаИНалоги.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаЗарплатаИНалоги.ФизЛицо,
		|	СтрокаЗарплатаИНалоги.ИПНРасчетыСБюджетом КАК Налог,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаЗарплатаИНалоги.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ЗарплатаИНалоги КАК СтрокаЗарплатаИНалоги
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаЗарплатаИНалоги.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаЗарплатаИНалоги.ИПНРасчетыСБюджетом <>0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаЗарплатаИНалоги.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВзаиморасчетыСРаботниками(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ВзаиморасчетыСРаботниками", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаЗарплатаИНалоги.ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаЗарплатаИНалоги.ФизЛицо,
		|	СтрокаЗарплатаИНалоги.ВзаиморасчетыСРаботниками КАК СуммаВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаЗарплатаИНалоги.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ЗарплатаИНалоги КАК СтрокаЗарплатаИНалоги
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаЗарплатаИНалоги.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаЗарплатаИНалоги.ВзаиморасчетыСРаботниками <>0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаЗарплатаИНалоги.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВзаиморасчетыСДепонентамиОрганизаций(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ВзаиморасчетыСДепонентамиОрганизаций", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаЗарплатаИНалоги.ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаЗарплатаИНалоги.ФизЛицо,
		|	СтрокаЗарплатаИНалоги.ВзаиморасчетыСДепонентами КАК СуммаВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаЗарплатаИНалоги.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ЗарплатаИНалоги КАК СтрокаЗарплатаИНалоги
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаЗарплатаИНалоги.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаЗарплатаИНалоги.ВзаиморасчетыСДепонентами <> 0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаЗарплатаИНалоги.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОПВПодлежитПеречислению(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ОПВПодлежитПеречислению", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаОПВПодлежитПеречислению.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	СтрокаОПВПодлежитПеречислению.ПериодРегистрации КАК ПериодРегистрации,
		|	СтрокаОПВПодлежитПеречислению.ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаОПВПодлежитПеречислению.ФизЛицо,
		|	СтрокаОПВПодлежитПеречислению.ВидПлатежа,
		|	СтрокаОПВПодлежитПеречислению.МесяцВыплатыДоходов,
		|	СтрокаОПВПодлежитПеречислению.ОПВПодлежитПеречислениюВФонды КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаОПВПодлежитПеречислению.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ОПВПодлежитПеречислению КАК СтрокаОПВПодлежитПеречислению
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаОПВПодлежитПеречислению.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаОПВПодлежитПеречислению.ОПВПодлежитПеречислениюВФонды <> 0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаОПВПодлежитПеречислению.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОПВРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ОПВРасчетыСФондами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаВзносыИОтчисления.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаВзносыИОтчисления.ФизЛицо,
		|	СтрокаВзносыИОтчисления.ВидПлатежа,
		|	СтрокаВзносыИОтчисления.ОПВРасчетыСБюджетом КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СтрокаВзносыИОтчисления
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВзносыИОтчисления.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаВзносыИОтчисления.ОПВРасчетыСБюджетом <>0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСОРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("СОРасчетыСФондами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаВзносыИОтчисления.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаВзносыИОтчисления.ФизЛицо,
		|	СтрокаВзносыИОтчисления.ВидПлатежа,
		|	СтрокаВзносыИОтчисления.СОРасчетыСФондами КАК Отчисление,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СтрокаВзносыИОтчисления
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВзносыИОтчисления.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаВзносыИОтчисления.СОРасчетыСФондами <> 0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОППВРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ОППВРасчетыСФондами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаВзносыИОтчисления.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаВзносыИОтчисления.ФизЛицо,
		|	СтрокаВзносыИОтчисления.ВидПлатежа,
		|	СтрокаВзносыИОтчисления.ОППВРасчетыСФондами КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СтрокаВзносыИОтчисления
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВзносыИОтчисления.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаВзносыИОтчисления.ОППВРасчетыСФондами <> 0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВОСМСПодлежитПеречислению(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ВОСМСПодлежитПеречислению", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаОПВПодлежитПеречислению.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	СтрокаОПВПодлежитПеречислению.ПериодРегистрации КАК ПериодРегистрации,
		|	СтрокаОПВПодлежитПеречислению.ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаОПВПодлежитПеречислению.ФизЛицо,
		|	СтрокаОПВПодлежитПеречислению.ВидПлатежа,
		|	СтрокаОПВПодлежитПеречислению.МесяцВыплатыДоходов,
		|	СтрокаОПВПодлежитПеречислению.ВОСМСПодлежитПеречислениюВФонды КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаОПВПодлежитПеречислению.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ОПВПодлежитПеречислению КАК СтрокаОПВПодлежитПеречислению
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаОПВПодлежитПеречислению.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаОПВПодлежитПеречислению.ВОСМСПодлежитПеречислениюВФонды <> 0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаОПВПодлежитПеречислению.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВОСМСРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ВОСМСРасчетыСФондами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаВзносыИОтчисления.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаВзносыИОтчисления.ФизЛицо,
		|	СтрокаВзносыИОтчисления.ВидПлатежа,
		|	СтрокаВзносыИОтчисления.ВОСМСРасчетыСФондами КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СтрокаВзносыИОтчисления
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВзносыИОтчисления.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаВзносыИОтчисления.ВОСМСРасчетыСФондами <>0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаООСМСРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ООСМСРасчетыСФондами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаВзносыИОтчисления.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаВзносыИОтчисления.ФизЛицо,
		|	СтрокаВзносыИОтчисления.ВидПлатежа,
		|	СтрокаВзносыИОтчисления.ООСМСРасчетыСФондами КАК Отчисление,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СтрокаВзносыИОтчисления
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВзносыИОтчисления.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаВзносыИОтчисления.ООСМСРасчетыСФондами <>0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОПВРРасчетыСФондами(НомераТаблиц, Реквизиты, УчетнаяПолитикаНУ) 
	
	НомераТаблиц.Вставить("ОПВРРасчетыСФондами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	СтрокаВзносыИОтчисления.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	&Налогоплательщик КАК Налогоплательщик,
		|	&Организация КАК Организация,
		|	СтрокаВзносыИОтчисления.ФизЛицо,
		|	СтрокаВзносыИОтчисления.ВидПлатежа,
		|	СтрокаВзносыИОтчисления.ОПВРРасчетыСФондами КАК Взнос,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.НачальныйОстаток) КАК ВидСтроки,
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТекстЗапроса = ТекстЗапроса + ",
		|	ВЫБОР
		|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|			ТОГДА &СтруктурноеПодразделение
		|		ИНАЧЕ &ОбособленноеПодразделение
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
		|	&ОбособленноеПодразделение КАК СтруктурнаяЕдиница
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СтрокаВзносыИОтчисления
		|";
		
	Если Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда	
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВзносыИОтчисления.ФизЛицо = МестоРаботы.ФизЛицо";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ
		|	СтрокаВзносыИОтчисления.ОПВРРасчетыСФондами <> 0
		|
		|УПОРЯДОЧИТЬ ПО 
		|	СтрокаВзносыИОтчисления.НомерСтроки
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПроводкиБУ(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	ТекстЗапроса = "";
	
	Если НЕ Реквизиты.ОтражатьВБухгалтерскомУчете И НЕ Реквизиты.УчитыватьКПН Тогда
		ПараметрыПроведения.Вставить("ПроводкиБУ_НУ", Новый ТаблицаЗначений);
		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный) КАК СчетДт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда) КАК СчетКт,
		|	Зарплата.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВзаиморасчетыСРаботниками) КАК СчетКтНУПоУмолчанию,
		|	Зарплата.ВзаиморасчетыСРаботниками КАК Сумма,
		|	Зарплата.ПериодРегистрации,
		|	&СтрокаСодержаниеЗП КАК Содержание
		|ИЗ
		|	ВТ_ЗарплатаИНалоги КАК Зарплата
		|ГДЕ
		|	Зарплата.ВзаиморасчетыСРаботниками <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.КраткосрочнаяЗадолженностьПоДепонированнойЗаработнойПлате),
		|	Депоненты.ФизЛицо КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВзаиморасчетыСРаботниками) КАК СчетКтНУПоУмолчанию,
		|	Депоненты.ВзаиморасчетыСДепонентами,
		|	Депоненты.ПериодРегистрации,
		|	&СтрокаСодержаниеДепЗП
		|ИЗ
		|	ВТ_ЗарплатаИНалоги КАК Депоненты
		|ГДЕ
		|	Депоненты.ВзаиморасчетыСДепонентами <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям),
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК СубконтоКт1,
		|	ОПВ.ВидПлатежа КАК СубконтоКт2,
		|	ОПВ.ФизЛицо КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги) КАК СчетКтНУПоУмолчанию,
		|	ОПВ.ОПВРасчетыСБюджетом,
		|	ОПВ.ПериодРегистрации,
		|	&СтрокаСодержаниеОПВ
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК ОПВ
		|ГДЕ
		|	ОПВ.ОПВРасчетыСБюджетом <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию),
		|	СО.ВидПлатежа КАК СубконтоКт1,
		|	СО.ФизЛицо КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги) КАК СчетКтНУПоУмолчанию,
		|	СО.СОРасчетыСФондами,
		|	СО.ПериодРегистрации,
		|	&СтрокаСодержаниеСО
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК СО
		|ГДЕ
		|	СО.СОРасчетыСФондами <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям),
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы) КАК СубконтоКт1,
		|	ОППВ.ВидПлатежа КАК СубконтоКт2,
		|	ОППВ.ФизЛицо КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги) КАК СчетКтНУПоУмолчанию,
		|	ОППВ.ОППВРасчетыСФондами,
		|	ОППВ.ПериодРегистрации,
		|	&СтрокаСодержаниеОППВ
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК ОППВ
		|ГДЕ
		|	ОППВ.ОППВРасчетыСФондами <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоВзносамОСМС),
		|	ВОСМС.ВидПлатежа КАК СубконтоКт1,
		|	ВОСМС.ФизЛицо КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги) КАК СчетКтНУПоУмолчанию,
		|	ВОСМС.ВОСМСРасчетыСФондами,
		|	ВОСМС.ПериодРегистрации,
		|	&СтрокаСодержаниеВОСМС
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК ВОСМС
		|ГДЕ
		|	ВОСМС.ВОСМСРасчетыСФондами <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоОтчислениямОСМС),
		|	ООСМС.ВидПлатежа КАК СубконтоКт1,
		|	ООСМС.ФизЛицо КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги) КАК СчетКтНУПоУмолчанию,
		|	ООСМС.ООСМСРасчетыСФондами,
		|	ООСМС.ПериодРегистрации,
		|	&СтрокаСодержаниеООСМС
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК ООСМС
		|ГДЕ
		|	ООСМС.ООСМСРасчетыСФондами <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.Вспомогательный),
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоОбязательнымПенсионнымВзносамРаботодателя),
		|	ОПВР.ВидПлатежа КАК СубконтоКт1,
		|	ОПВР.ФизЛицо КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.Вспомогательный) КАК СчетДтНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги) КАК СчетКтНУПоУмолчанию,
		|	ОПВР.ОПВРРасчетыСФондами,
		|	ОПВР.ПериодРегистрации,
		|	&СтрокаСодержаниеОПВР
		|ИЗ
		|	ВТ_ВзносыИОтчисления КАК ОПВР
		|ГДЕ
		|	ОПВР.ОПВРРасчетыСФондами <> 0
		|";
		
		НомераТаблиц.Вставить("ПроводкиБУ_НУ", НомераТаблиц.Количество());
	КонецЕсли;
		
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьПроводкиБУ_НУ(Реквизиты, ТаблицаПроводок, Движения, Отказ) Экспорт
	
	
	Для Каждого СтрокаПроводки Из ТаблицаПроводок Цикл 
		
		Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПроводки.Содержание, Формат(СтрокаПроводки.ПериодРегистрации, "Л=" + ОбщегоНазначения.КодОсновногоЯзыка() + "; ДФ='МММ гг'"));
		
		Если Реквизиты.ОтражатьВБухгалтерскомУчете Тогда
			
			Проводка 						= Движения.Типовой.Добавить();
	    	// Свойства
	    	Проводка.Период					= Реквизиты.Дата;	
	    	// Измерения
	    	Проводка.Организация			= Реквизиты.Организация;
	    	// Счета
	    	Проводка.СчетДт					= СтрокаПроводки.СчетДт;
	    	Проводка.СчетКт					= СтрокаПроводки.СчетКт;
			Если СтрокаПроводки.СубконтоКт1 <> Неопределено Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СтрокаПроводки.СубконтоКт1);
			КонецЕсли;
			Если СтрокаПроводки.СубконтоКт2 <> Неопределено Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СтрокаПроводки.СубконтоКт2);
			КонецЕсли;
			Если СтрокаПроводки.СубконтоКт3 <> Неопределено Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СтрокаПроводки.СубконтоКт3);
			КонецЕсли;
			
	    	// Ресурсы
	    	Проводка.Сумма					= СтрокаПроводки.Сумма;
	    	// Реквизиты
	    	Проводка.Содержание				= Содержание;
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(Проводка, Реквизиты.СтруктурноеПодразделение, Реквизиты.СтруктурноеПодразделение);
		КонецЕсли;
		
		Если Реквизиты.УчитыватьКПН Тогда
	    	ПроводкаНУ 					= Движения.Налоговый.Добавить();
	    	// Свойства
	    	ПроводкаНУ.Период			= Реквизиты.Дата;	
	    	// Измерения
	    	ПроводкаНУ.Организация		= Реквизиты.Организация;
			ПроводкаНУ.СчетДт			= СтрокаПроводки.СчетДтНУ;
			ПроводкаНУ.СчетКт			= ПроцедурыБухгалтерскогоУчета.ЗаполнитьСчетНалоговогоУчетаПоУмолчанию(СтрокаПроводки.СчетКт, Реквизиты.Дата, СтрокаПроводки.СчетКтНУПоУмолчанию);
			Если СтрокаПроводки.СубконтоКт1 <> Неопределено Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 1, СтрокаПроводки.СубконтоКт1);
			КонецЕсли;
			Если СтрокаПроводки.СубконтоКт2 <> Неопределено Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 2, СтрокаПроводки.СубконтоКт2);
			КонецЕсли;
			Если СтрокаПроводки.СубконтоКт3 <> Неопределено Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 3, СтрокаПроводки.СубконтоКт3);
			КонецЕсли;
			// Ресурсы
			ПроводкаНУ.Сумма			= СтрокаПроводки.Сумма;
			// Реквизиты    	
			ПроводкаНУ.Содержание		= Содержание;
			ПроцедурыНалоговогоУчета.ВидУчетаНУ(ПроводкаНУ, Реквизиты.ВидУчетаНУ);    	
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(ПроводкаНУ, Реквизиты.СтруктурноеПодразделение, Реквизиты.СтруктурноеПодразделение);
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Типовой.Записывать = Истина;
	Движения.Налоговый.Записывать = Истина;
					
КонецПроцедуры

Процедура СвернутьДвиженияРегистровБухгалтерии(Движения, Отказ) Экспорт
	
	Если НЕ Движения.Типовой.Записывать И НЕ Движения.Налоговый.Записывать Тогда 
		Возврат;
	КонецЕсли;
	
	Если Движения.Типовой.Записывать Тогда 
		ТаблицаДвижений = Движения.Типовой.Выгрузить();
		КолонкиСуммирования = "Сумма";
		МассивКолонокСуммирования = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КолонкиСуммирования, ",", Истина, Истина);
		КолонкиГруппировки = "Период";
		Для Каждого Колонка Из ТаблицаДвижений.Колонки Цикл
			Если МассивКолонокСуммирования.Найти(Колонка.Имя) <> Неопределено ИЛИ Колонка.Имя = "НомерСтроки" ИЛИ Колонка.Имя = "Период" Тогда 
				Продолжить;
			КонецЕсли;
			КолонкиГруппировки = КолонкиГруппировки + "," + Колонка.Имя;
		КонецЦикла;
		ТаблицаДвижений.Свернуть(КолонкиГруппировки, КолонкиСуммирования);
		
		// удалим проводки с нулевыми показателями, могли образоваться при свертке
		Для Каждого СтрокаТаблицы Из ТаблицаДвижений Цикл
			Если СтрокаТаблицы.Сумма = 0 Тогда 
				ТаблицаДвижений.Удалить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
		
		Движения.Типовой.Загрузить(ТаблицаДвижений);
	КонецЕсли;
	
	Если Движения.Налоговый.Записывать Тогда 
		ТаблицаДвижений = Движения.Налоговый.Выгрузить();
		КолонкиСуммирования = "Сумма";
		МассивКолонокСуммирования = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КолонкиСуммирования, ",", Истина, Истина);
		КолонкиГруппировки = "Период";
		Для Каждого Колонка Из ТаблицаДвижений.Колонки Цикл
			Если МассивКолонокСуммирования.Найти(Колонка.Имя) <> Неопределено ИЛИ Колонка.Имя = "НомерСтроки" ИЛИ Колонка.Имя = "Период" Тогда 
				Продолжить;
			КонецЕсли;
			КолонкиГруппировки = КолонкиГруппировки + "," + Колонка.Имя;
		КонецЦикла;
		ТаблицаДвижений.Свернуть(КолонкиГруппировки, КолонкиСуммирования);
		
		// удалим проводки с нулевой суммой, могли образоваться при свертке
		Для Каждого СтрокаТаблицы Из ТаблицаДвижений Цикл
			Если СтрокаТаблицы.Сумма = 0 Тогда 
				ТаблицаДвижений.Удалить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
		
		Движения.Налоговый.Загрузить(ТаблицаДвижений);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
КонецПроцедуры

#КонецЕсли
