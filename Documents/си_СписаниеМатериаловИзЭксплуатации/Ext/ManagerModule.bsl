#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ПрограммныйИнтерфейс
	
	// Заполняет список команд печати.
	// 
	// Параметры:
	//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
	//
	Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
		// Списание материалов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьСписаниеМатериалов";
		КомандаПечати.Представление = НСтр("ru = 'Списание материалов'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
		КомандаПечати.Порядок = 51;
		
		// Акт на списание 3-6
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьСписаниеМатериалов36";
		КомандаПечати.Представление = НСтр("ru = '3-6 (Акт списания материалов)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
		КомандаПечати.Порядок = 52;
		
		// Акт на списание (количественный)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьСписаниеМатериаловАктНаСписаниеКоличественный";
		КомандаПечати.Представление = НСтр("ru = 'Акт списания (количественный)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
		КомандаПечати.Порядок = 53;
		
		// Акт списания (количественно-суммовой)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПечатьСписаниеМатериаловАктНаСписаниеКоличественноСуммовой";
		КомандаПечати.Представление = НСтр("ru = 'Акт списания (количественно-суммовой)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
		КомандаПечати.Порядок = 53;
		Возврат;	
	КонецПроцедуры
	
	// Формирует печатные формы.
	//
	// Параметры:
	//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
	//  ПараметрыПечати - Структура - дополнительные настройки печати;
	//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
	//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
	//                                            представление - имя области в которой был выведен объект (выходной параметр);
	//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
	//
	Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьСписаниеМатериалов") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьСписаниеМатериалов",
			НСтр("ru = 'Списание материалов'"),
			ПечатьСписаниеМатериалов(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_СписаниеМатериалов");
		КонецЕсли;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьСписаниеМатериалов36") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьСписаниеМатериалов36",
			НСтр("ru = '3-6 (Акт списания материалов)'"),
			ПечатьСписаниеМатериаловЗ6(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_З6");
		КонецЕсли;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьСписаниеМатериаловАктНаСписаниеКоличественный") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьСписаниеМатериаловАктНаСписаниеКоличественный",
			НСтр("ru = 'Акт списания (количественный)'"),
			ПечатьСписаниеМатериаловАктНаСписаниеКоличественный(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_АктНаСписание");
		КонецЕсли;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьСписаниеМатериаловАктНаСписаниеКоличественноСуммовой") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьСписаниеМатериаловАктНаСписаниеКоличественноСуммовой",
			НСтр("ru = 'Акт списания (количественно-суммовой)'"),
			ПечатьСписаниеМатериаловАктНаСписаниеКоличественноСуммовой(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_АктСписанияКоличественноСуммовой");
		КонецЕсли;
		
		ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
		
	КонецПроцедуры
	
	
	#КонецОбласти
	
	#Область СлужебныйПрограммныйИнтерфейс
	
	// Формирует запрос по таблице "Исполнители" документа
	//
	// Параметры: 
	//  Режим - режим проведения
	//
	// Возвращаемое значение:
	//  Результат запроса. В запросе данные документа дополняются значениями
	//  проверяемых параметров из связанного с
	//
	Функция СформироватьЗапросПоМатериалыПроверка(ТабличнаяЧасть) Экспорт
		
		Запрос = Новый Запрос;
		
		// Установим параметры запроса
		Запрос.УстановитьПараметр("ТабличнаяЧасть", 	 			 ТабличнаяЧасть);
		//
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ВТ_ТабличнаяЧасть.Номенклатура,
		|	ВТ_ТабличнаяЧасть.номерСтроки
		|ПОМЕСТИТЬ Материалы
		|ИЗ
		|	&ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Материалы.номерСтроки,
		|	Материалы.Номенклатура,
		|	НоменклатураСправочник.си_ЯвляетсяСпецодеждойИнвентарем КАК ЯвляетсяСпецодеждойИнвентарем
		|ИЗ
		|	Материалы КАК Материалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
		|		ПО Материалы.Номенклатура = НоменклатураСправочник.Ссылка";
		
		Запрос.Текст = ТекстЗапроса;
		
		Возврат Запрос.Выполнить();
		
	КонецФункции // СформироватьЗапросПоИсполнители()
	
	Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
		
		общ_ПереопределяемыеПроцедурыБКСервер.ЗаполнитьШапкуДокументаПоОснованию(Объект, ДокументОснование);
		
		Объект.ДокументОснование = ДокументОснование;
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПеремещениеМатериаловВЭксплуатации") Тогда
			ЗаполнитьПоПеремещению(Объект,"Заполнить", ДокументОснование);
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПередачаМатериаловВЭксплуатацию") Тогда
			ЗаполнитьПоПередачеВЭксплуатацию(Объект,"Заполнить", ДокументОснование);
		КонецЕсли;
		
	КонецПроцедуры   
	
	Процедура ЗаполнитьПоПеремещению(Объект, Режим, Основание) Экспорт 
		
		Если НЕ ЗначениеЗаполнено(Основание) Тогда
			Возврат;
		КонецЕсли;
		
		ТабличнаяЧасть = Объект.Материалы;
		
		Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
			ТабличнаяЧасть.Очистить();
		КонецЕсли;
		
		// Заполнение шапки
		Объект.ВидУчетаНУ 							= Основание.ВидУчетаНУ;
		Объект.ПодразделениеОрганизации 			= Основание.ПодразделениеОрганизацииПолучатель;
		Объект.Склад 								= Основание.СкладПолучатель;
		Объект.СтруктурноеПодразделение 			= Основание.СтруктурноеПодразделениеПолучатель;
		Объект.УчитыватьКПН 						= Основание.УчитыватьКПН;
		Объект.СостояниеМатериалов 					= Основание.СостояниеМатериалов;
		
		Для Каждого ВыборкаПоТоварам Из Основание.Материалы Цикл
			НоваяСтрока = Объект.Материалы.Добавить();
			НоваяСтрока.ЕдиницаИзмерения 		= ВыборкаПоТоварам.ЕдиницаИзмерения;
			НоваяСтрока.Количество 				= ВыборкаПоТоварам.Количество;
			НоваяСтрока.Коэффициент 			= ВыборкаПоТоварам.Коэффициент;
			НоваяСтрока.НазначениеИспользования	= ВыборкаПоТоварам.НазначениеИспользованияПолучатель;
			НоваяСтрока.Номенклатура 			= ВыборкаПоТоварам.Номенклатура;
			НоваяСтрока.Сотрудник 				= ВыборкаПоТоварам.СотрудникПолучатель;
			НоваяСтрока.ДокументПередачи 		= ВыборкаПоТоварам.ДокументПередачи;
			НоваяСтрока.ДокументВозврата 		= ВыборкаПоТоварам.ДокументВозврата;
			НоваяСтрока.Характеристика	 		= ВыборкаПоТоварам.Характеристика;
		КонецЦикла;
		
		
	КонецПроцедуры
	
	Процедура ЗаполнитьПоПередачеВЭксплуатацию(Объект, Режим, Основание) Экспорт 
		
		Если НЕ ЗначениеЗаполнено(Основание) Тогда
			Возврат;
		КонецЕсли;
		
		ТабличнаяЧасть = Объект.Материалы;
		
		Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
			ТабличнаяЧасть.Очистить();
		КонецЕсли;
		
		// Заполнение шапки
		Объект.ВидУчетаНУ 							= Основание.ВидУчетаНУ;
		Объект.ПодразделениеОрганизации 			= Основание.ПодразделениеОрганизации;
		Объект.Склад 								= Основание.Склад;
		Объект.УчитыватьКПН 						= Основание.УчитыватьКПН;
		Объект.СостояниеМатериалов					= Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации;
		
		Для Каждого ВыборкаПоТоварам Из Основание.Материалы Цикл
			НоваяСтрока = Объект.Материалы.Добавить();
			НоваяСтрока.ЕдиницаИзмерения 		= ВыборкаПоТоварам.ЕдиницаИзмерения;
			НоваяСтрока.Количество 				= ВыборкаПоТоварам.Количество;
			НоваяСтрока.Коэффициент 			= ВыборкаПоТоварам.Коэффициент;
			НоваяСтрока.НазначениеИспользования	= ВыборкаПоТоварам.НазначениеИспользования;
			НоваяСтрока.Номенклатура 			= ВыборкаПоТоварам.Номенклатура;
			НоваяСтрока.Сотрудник 				= ВыборкаПоТоварам.Сотрудник;
			НоваяСтрока.ДокументПередачи 		= ?(Основание.ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача,Основание.Ссылка,ВыборкаПоТоварам.ДокументПередачи);
			НоваяСтрока.ДокументВозврата 		= ВыборкаПоТоварам.ДокументВозврата;
			НоваяСтрока.Характеристика			= ВыборкаПоТоварам.Характеристика;
		КонецЦикла;
		
		
	КонецПроцедуры
	
	Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
		
		ДополнительныеПараметрыЗапросов = Новый Структура();
		ДополнительныеПараметрыЗапросов.Вставить("СодержаниеСписаныТМЗ", 		НСтр("ru='Списаны ТМЗ'"));
		ДополнительныеПараметрыЗапросов.Вставить("Организация", 				ДокументСсылка.Организация);
		ДополнительныеПараметрыЗапросов.Вставить("ВидУчетаНУ", 					ДокументСсылка.ВидУчетаНУ);
		ДополнительныеПараметрыЗапросов.Вставить("Склад", 						ДокументСсылка.Склад);
		ДополнительныеПараметрыЗапросов.Вставить("Ссылка", 						ДокументСсылка);
		ДополнительныеПараметрыЗапросов.Вставить("СтруктурноеПодразделение", 	ДокументСсылка.СтруктурноеПодразделение);
		ДополнительныеПараметрыЗапросов.Вставить("МоментВремени", 				Новый МоментВремени(ДокументСсылка.Дата,ДокументСсылка));
		ДополнительныеПараметрыЗапросов.Вставить("СкладОстатков", 				ДокументСсылка.Склад);
		ДополнительныеПараметрыЗапросов.Вставить("ПодразделениеОстатков", 		ДокументСсылка.ПодразделениеОрганизации);
		
		
		ДополнительныеЗапросы = Новый Массив;
		ДополнительныеЗапросы.Добавить("ОстаткиМатериалов");
		ДополнительныеЗапросы.Добавить("СписаниеТоваров");
		ДополнительныеЗапросы.Добавить("СпособыОтраженияРасходов");
		
		Если ДокументСсылка.СпособСписанияРасходов = Перечисления.си_СпособыСписанияРасходов.ПоПараметрамДокумента Тогда
			Если ДокументСсылка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
				ДополнительныеЗапросы.Добавить("СпецодеждаВЭксплуатации");
			Иначе
				ДополнительныеЗапросы.Добавить("СпецодеждаБУ");
			КонецЕсли;
			ДополнительныеПараметрыЗапросов.Вставить("НачалоПериода", 				НачалоМесяца(ДокументСсылка.Дата));
			ДополнительныеПараметрыЗапросов.Вставить("КонецПериода", 				КонецМесяца(ДокументСсылка.Дата));
			ДополнительныеПараметрыЗапросов.Вставить("НачалоПериодаВозврата",		НачалоМесяца(ДокументСсылка.Дата));
			ДополнительныеПараметрыЗапросов.Вставить("КонецПериодаВозврата",		КонецМесяца(ДокументСсылка.Дата));
		КонецЕсли;
		
		ПараметрыПроведения = си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ,Истина,Истина,,,,,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
		
		Возврат ПараметрыПроведения;
		
	КонецФункции 
	
	Функция ТекстЗапросаОстаткиМатериалов(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
		
		НомераТаблиц.Вставить("ОстаткиМатериалов", НомераТаблиц.Количество());
		
		//ТекстЗапроса = ?(Реквизиты.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации,си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловВЭксплуатации(),си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловБУ());
		
		ТекстЗапроса = ?(Реквизиты.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации,си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловВЭксплуатации(),си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловНаСкладе());
		
		Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
	КонецФункции
	
	Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
		
		НомераТаблиц.Вставить("СписаниеТоваровРеквизиты", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	""Списание"" КАК ТипСписания,
		|	Реквизиты.Ссылка КАК ДокументРеализации,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	Реквизиты.СтруктурноеПодразделение КАК КорСтруктурноеПодразделение,
		|	Реквизиты.УчитыватьКПН КАК УчитыватьКПН,
		|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
		|	НЕОПРЕДЕЛЕНО КАК Контрагент,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
		|	&СодержаниеСписаныТМЗ КАК Содержание,
		|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
		|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		|	&ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль
		|ИЗ
		|	Реквизиты КАК Реквизиты";
		
		Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
	КонецФункции
	
	Функция ТекстЗапросаСпособыОтраженияРасходов(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
		//Если Реквизиты.СпособСписанияРасходов = Перечисления.си_СпособыСписанияРасходов.ПоПараметрамДокумента Тогда
		//	НомераТаблиц.Вставить("СпособыОтраженияРасходов", Неопределено);
		//	Возврат "";
		//КонецЕсли;
		
		НомераТаблиц.Вставить("СпособыОтраженияРасходовСписокНазначений", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("СпособыОтраженияРасходовСписокНазначенийИСпособов", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("СпособыОтраженияРасходов", НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаМатериалы.НазначениеИспользования КАК НазначениеИспользования
		|ПОМЕСТИТЬ ВТ_СписокНазначений
		|ИЗ
		|	ТаблицаМатериалы КАК ТаблицаМатериалы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СписокНазначений.НазначениеИспользования,
		|	си_НазначенияИспользования.СпособОтраженияРасходов
		|ПОМЕСТИТЬ ВТ_СпособыОтражения
		|ИЗ
		|	ВТ_СписокНазначений КАК ВТ_СписокНазначений
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
		|		ПО ВТ_СписокНазначений.НазначениеИспользования = си_НазначенияИспользования.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.НомерСтроки,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3,
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|ГДЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_СпособыОтражения.СпособОтраженияРасходов
		|			ИЗ
		|				ВТ_СпособыОтражения КАК ВТ_СпособыОтражения)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
		
		Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
	КонецФункции
	
	Функция ТекстЗапросаСпецодеждаВЭксплуатации(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт
		
		//ЭтоБСО = си_УчетСпецодеждыСерверПовтИсп.ПроверкаНаБСО();
		//Если ЭтоБСО Тогда 
		//	
		//Иначе
		ТекстЗапроса = "";
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументПередачи,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ЕдиницаИзмерения,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Количество,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НазначениеИспользования,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Номенклатура,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Сотрудник,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Характеристика,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументВозврата,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.ПодразделениеОрганизации,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Коэффициент,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ТабДок
		|ИЗ
		|	Документ.си_СписаниеМатериаловИзЭксплуатации.Материалы КАК си_ПеремещениеМатериаловВЭксплуатацииМатериалы
		|ГДЕ
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	си_МатериалыВЭксплуатацииОстатки.ВидУчетаНУ,
		|	си_МатериалыВЭксплуатацииОстатки.ОстаточныйСрокИспользования,
		|	си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	си_МатериалыВЭксплуатацииОстатки.СтоимостьОстаток КАК СтоимостьОстаток,
		|	си_МатериалыВЭксплуатацииОстатки.СписаннаяСтоимостьОстаток КАК СписаннаяСтоимость,
		|	ВТ_ТабДок.ДокументПередачи КАК ДокументПередачи,
		|	ВТ_ТабДок.ЕдиницаИзмерения,
		|	ВТ_ТабДок.Количество КАК Количество,
		|	ВТ_ТабДок.НазначениеИспользования КАК НазначениеИспользования,
		|	ВТ_ТабДок.Номенклатура КАК Номенклатура,
		|	ВТ_ТабДок.Сотрудник КАК Сотрудник,
		|	ВТ_ТабДок.Характеристика КАК Характеристика,
		|	ВТ_ТабДок.ДокументВозврата,
		|	ВТ_ТабДок.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА НЕ си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток = 0
		|			ТОГДА си_МатериалыВЭксплуатацииОстатки.СписаннаяСтоимостьОстаток / си_МатериалыВЭксплуатацииОстатки.КоличествоОстаток * ВТ_ТабДок.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Стоимость,
		|	ВТ_ТабДок.Коэффициент,
		|	ВТ_ТабДок.НомерСтроки
		|ПОМЕСТИТЬ ВТ_Материалы
		|ИЗ
		|	ВТ_ТабДок КАК ВТ_ТабДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(
		|				&МоментВремени,
		|				Организация = &Организация
		|					И СтруктурноеПодразделение = &СтруктурноеПодразделение
		|					И (Номенклатура, Характеристика, НазначениеИспользования, Сотрудник, ДокументПередачи, ПодразделениеОрганизации) В
		|						(ВЫБРАТЬ
		|							ВТ_ТабДок.Номенклатура,
		|							ВТ_ТабДок.Характеристика,
		|							ВТ_ТабДок.НазначениеИспользования,
		|							ВТ_ТабДок.Сотрудник,
		|							ВТ_ТабДок.ДокументПередачи,
		|							ВТ_ТабДок.ПодразделениеОрганизации
		|						ИЗ
		|							ВТ_ТабДок КАК ВТ_ТабДок)) КАК си_МатериалыВЭксплуатацииОстатки
		|		ПО ВТ_ТабДок.Номенклатура = си_МатериалыВЭксплуатацииОстатки.Номенклатура
		|			И ВТ_ТабДок.Характеристика = си_МатериалыВЭксплуатацииОстатки.Характеристика
		|			И ВТ_ТабДок.ДокументПередачи = си_МатериалыВЭксплуатацииОстатки.ДокументПередачи
		|			И ВТ_ТабДок.НазначениеИспользования = си_МатериалыВЭксплуатацииОстатки.НазначениеИспользования
		|			И ВТ_ТабДок.Сотрудник = си_МатериалыВЭксплуатацииОстатки.Сотрудник
		|			И ВТ_ТабДок.ПодразделениеОрганизации = си_МатериалыВЭксплуатацииОстатки.ПодразделениеОрганизации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	си_НазначенияИспользования.СпособПогашенияСтоимости,
		|	СпособыОтраженияРасходовПоАмортизации.Способы.(
		|		Ссылка,
		|		НомерСтроки,
		|		СчетЗатрат,
		|		Субконто1,
		|		Субконто2,
		|		Субконто3,
		|		Коэффициент
		|	),
		|	МатериалыВЭксплуатации.ВидУчетаНУ,
		|	МатериалыВЭксплуатации.ЕдиницаИзмерения,
		|	МатериалыВЭксплуатации.Номенклатура,
		|	МатериалыВЭксплуатации.Характеристика,
		|	МатериалыВЭксплуатации.Сотрудник,
		|	МатериалыВЭксплуатации.Количество,
		|	МатериалыВЭксплуатации.НазначениеИспользования,
		|	МатериалыВЭксплуатации.ПодразделениеОрганизации,
		|	МатериалыВЭксплуатации.ДокументПередачи,
		|	МатериалыВЭксплуатации.Коэффициент,
		|	МатериалыВЭксплуатации.ДокументВозврата,
		//|	МатериалыВЭксплуатации.ОстаточныйСрокИспользования,
		|	МатериалыВЭксплуатации.НомерСтроки
		|ИЗ
		|	ВТ_Материалы КАК МатериалыВЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
		|			ПО си_НазначенияИспользования.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизации.Ссылка
		|		ПО МатериалыВЭксплуатации.НазначениеИспользования = си_НазначенияИспользования.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Материалы.Сотрудник
		|ПОМЕСТИТЬ ВТ_Сотрудники
		|ИЗ
		|	ВТ_Материалы КАК ВТ_Материалы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Материалы.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыработкаМатериалов.ПодразделениеОрганизации,
		|	ВыработкаМатериалов.Номенклатура,
		|	ВыработкаМатериалов.Характеристика КАК Характеристика,
		|	ВыработкаМатериалов.ДокументПередачи,
		|	ВыработкаМатериалов.Сотрудник,
		|	ВыработкаМатериалов.НазначениеИспользования,
		|	ВыработкаМатериалов.ОбъектСтроительства,
		|	ВыработкаМатериалов.КоличествоОборотовОборот * ВыработкаМатериалов.КоличествоОборот КАК Оборотов,
		|	ВыработкаМатериалов.Регистратор
		|ИЗ
		|	РегистрНакопления.си_ВыработкаМатериаловВЭксплуатации.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Организация = &Организация
		|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ВыработкаМатериалов"
		+ общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
		НомераТаблиц.Вставить("ТаблицаВспомогательнаяТабДок",	НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаВспомогательнаяМатериалы",	НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаСпецодежда", 					НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаВспомогательнаяСотрудники",	НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаВыработкаМатериалов", 		НомераТаблиц.Количество());
		//КонецЕсли;
		
		Возврат ТекстЗапроса;	
	КонецФункции 
	
	Функция ТекстЗапросаСпецодеждаБУ(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт
		
		//ЭтоБСО = си_УчетСпецодеждыСерверПовтИсп.ПроверкаНаБСО();
		//Если ЭтоБСО Тогда 
		//	
		//Иначе
		ТекстЗапроса = "";
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументПередачи,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ЕдиницаИзмерения,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Количество,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НазначениеИспользования,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Номенклатура,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Сотрудник,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Характеристика,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.ДокументВозврата,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка.ПодразделениеОрганизации,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Коэффициент,
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ТабДок
		|ИЗ
		|	Документ.си_СписаниеМатериаловИзЭксплуатации.Материалы КАК си_ПеремещениеМатериаловВЭксплуатацииМатериалы
		|ГДЕ
		|	си_ПеремещениеМатериаловВЭксплуатацииМатериалы.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	си_МатериалыНаСкладеОстатки.ВидУчетаНУ,
		|	си_МатериалыНаСкладеОстатки.ОстаточныйСрокИспользования,
		|	си_МатериалыНаСкладеОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	си_МатериалыНаСкладеОстатки.СтоимостьОстаток КАК СтоимостьОстаток,
		|	си_МатериалыНаСкладеОстатки.СписаннаяСтоимостьОстаток КАК СписаннаяСтоимость,
		|	ВТ_ТабДок.ДокументПередачи КАК ДокументПередачи,
		|	ВТ_ТабДок.ЕдиницаИзмерения,
		|	ВТ_ТабДок.Количество КАК Количество,
		|	ВТ_ТабДок.НазначениеИспользования КАК НазначениеИспользования,
		|	ВТ_ТабДок.Номенклатура КАК Номенклатура,
		|	ВТ_ТабДок.Сотрудник КАК Сотрудник,
		|	ВТ_ТабДок.Характеристика КАК Характеристика,
		|	ВТ_ТабДок.ДокументВозврата,
		|	ВТ_ТабДок.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ВЫБОР
		|		КОГДА НЕ си_МатериалыНаСкладеОстатки.КоличествоОстаток = 0
		|			ТОГДА си_МатериалыНаСкладеОстатки.СписаннаяСтоимостьОстаток / си_МатериалыНаСкладеОстатки.КоличествоОстаток * ВТ_ТабДок.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Стоимость,
		|	ВТ_ТабДок.Коэффициент,
		|	ВТ_ТабДок.НомерСтроки
		|ПОМЕСТИТЬ ВТ_Материалы
		|ИЗ
		|	ВТ_ТабДок КАК ВТ_ТабДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыНаСкладе.Остатки(, ) КАК си_МатериалыНаСкладеОстатки
		|		ПО ВТ_ТабДок.Номенклатура = си_МатериалыНаСкладеОстатки.Номенклатура
		|			И ВТ_ТабДок.Характеристика = си_МатериалыНаСкладеОстатки.Характеристика
		|			И ВТ_ТабДок.ДокументПередачи = си_МатериалыНаСкладеОстатки.ДокументПередачи
		|			И ВТ_ТабДок.НазначениеИспользования = си_МатериалыНаСкладеОстатки.НазначениеИспользования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	си_НазначенияИспользования.СпособПогашенияСтоимости,
		|	СпособыОтраженияРасходовПоАмортизации.Способы.(
		|		Ссылка,
		|		НомерСтроки,
		|		СчетЗатрат,
		|		Субконто1,
		|		Субконто2,
		|		Субконто3,
		|		Коэффициент
		|	),
		|	МатериалыВЭксплуатации.ВидУчетаНУ,
		|	МатериалыВЭксплуатации.ЕдиницаИзмерения,
		|	МатериалыВЭксплуатации.Номенклатура,
		|	МатериалыВЭксплуатации.Характеристика,
		|	МатериалыВЭксплуатации.Сотрудник,
		|	МатериалыВЭксплуатации.Количество,
		|	МатериалыВЭксплуатации.НазначениеИспользования,
		|	МатериалыВЭксплуатации.ПодразделениеОрганизации,
		|	МатериалыВЭксплуатации.ДокументПередачи,
		|	МатериалыВЭксплуатации.Коэффициент,
		|	МатериалыВЭксплуатации.ДокументВозврата,
		//|	МатериалыВЭксплуатации.ОстаточныйСрокИспользования,
		|	МатериалыВЭксплуатации.НомерСтроки
		|ИЗ
		|	ВТ_Материалы КАК МатериалыВЭксплуатации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
		|			ПО си_НазначенияИспользования.СпособОтраженияРасходов = СпособыОтраженияРасходовПоАмортизации.Ссылка
		|		ПО МатериалыВЭксплуатации.НазначениеИспользования = си_НазначенияИспользования.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Материалы.Сотрудник
		|ПОМЕСТИТЬ ВТ_Сотрудники
		|ИЗ
		|	ВТ_Материалы КАК ВТ_Материалы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Материалы.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыработкаМатериалов.ПодразделениеОрганизации,
		|	ВыработкаМатериалов.Номенклатура,
		|	ВыработкаМатериалов.Характеристика КАК Характеристика,
		|	ВыработкаМатериалов.ДокументПередачи,
		|	ВыработкаМатериалов.Сотрудник,
		|	ВыработкаМатериалов.НазначениеИспользования,
		|	ВыработкаМатериалов.ОбъектСтроительства,
		|	ВыработкаМатериалов.КоличествоОборотовОборот * ВыработкаМатериалов.КоличествоОборот КАК Оборотов,
		|	ВыработкаМатериалов.Регистратор
		|ИЗ
		|	РегистрНакопления.си_ВыработкаМатериаловВЭксплуатации.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Организация = &Организация
		|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ВыработкаМатериалов"
		+ общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
		НомераТаблиц.Вставить("ТаблицаВспомогательнаяТабДок",	НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаВспомогательнаяМатериалы",	НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаСпецодежда", 					НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаВспомогательнаяСотрудники",	НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаВыработкаМатериалов", 		НомераТаблиц.Количество());
		//КонецЕсли;
		
		Возврат ТекстЗапроса;	
	КонецФункции 
	
	// Функция формирования печатной формы документа СписаниеМатериалов
	//
	Функция ПечатьСписаниеМатериалов(МассивОбъектов, ОбъектыПечати) Экспорт
		УстановитьПривилегированныйРежим(Истина);
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_СписаниеМатериалов");
		УчетПоФизЛицам = си_УчетСпецодеждыСервер.ПолучитьВедениеУчетаПоФизЛицам();
		
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериалов_СписаниеМатериалов";
		
		Для Каждого ДокументСсылка Из МассивОбъектов Цикл	
			
			Если ТабДок.ВысотаТаблицы > 0 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ТекущийДокумент", ДокументСсылка);
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СписаниеМатериаловИзЭксплуатации.Ссылка,
			|	СписаниеМатериаловИзЭксплуатации.Организация,
			|	СписаниеМатериаловИзЭксплуатации.Организация.НаименованиеПолное КАК ПечОрганизация,
			|	СписаниеМатериаловИзЭксплуатации.ПодразделениеОрганизации КАК Подразделение,
			|	СписаниеМатериаловИзЭксплуатации.ПодразделениеОрганизации.Представление КАК ПечПодразделение,
			|	СписаниеМатериаловИзЭксплуатации.Склад.Представление КАК ПечСклад,
			|	СписаниеМатериаловИзЭксплуатации.Номер,
			|	СписаниеМатериаловИзЭксплуатации.Дата
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации КАК СписаниеМатериаловИзЭксплуатации
			|ГДЕ
			|	СписаниеМатериаловИзЭксплуатации.Ссылка = &ТекущийДокумент";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СписаниеМатериаловИзЭксплуатации.Номенклатура КАК Номенклатура,
			|	СписаниеМатериаловИзЭксплуатации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	СписаниеМатериаловИзЭксплуатации.ДокументПередачи КАК ДокументПередачи,
			|	СписаниеМатериаловИзЭксплуатации.НазначениеИспользования КАК НазначениеИспользования,
			|	СписаниеМатериаловИзЭксплуатации.Сотрудник КАК ФизЛицо,
			|	СУММА(СписаниеМатериаловИзЭксплуатации.Количество) КАК Количество
			|ПОМЕСТИТЬ ВТ_Таблица
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации.Материалы КАК СписаниеМатериаловИзЭксплуатации
			|ГДЕ
			|	СписаниеМатериаловИзЭксплуатации.Ссылка = &ТекущийДокумент
			|
			|СГРУППИРОВАТЬ ПО
			|	СписаниеМатериаловИзЭксплуатации.Номенклатура,
			|	СписаниеМатериаловИзЭксплуатации.ЕдиницаИзмерения,
			|	СписаниеМатериаловИзЭксплуатации.ДокументПередачи,
			|	СписаниеМатериаловИзЭксплуатации.НазначениеИспользования,
			|	СписаниеМатериаловИзЭксплуатации.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВТ_Таблица.Номенклатура КАК Товар,
			|	ВЫРАЗИТЬ(ВТ_Таблица.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
			|	ВТ_Таблица.Номенклатура.Код КАК Код,
			|	ВТ_Таблица.Номенклатура.Артикул КАК Артикул,
			|	ВТ_Таблица.ЕдиницаИзмерения.Представление КАК ПечЕдИзм,
			|	ВТ_Таблица.ДокументПередачи,
			|	ВТ_Таблица.НазначениеИспользования,
			|	ВТ_Таблица.ФизЛицо КАК Сотрудник,
			|	ВТ_Таблица.ФизЛицо.Представление КАК ПечФИО,
			|	СУММА(ВТ_Таблица.Количество) КАК Количество,
			|	ВТ_Таблица.ФизЛицо.Код КАК КодСотрудника
			|ИЗ
			|	ВТ_Таблица КАК ВТ_Таблица
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Таблица.Номенклатура,
			|	ВТ_Таблица.ЕдиницаИзмерения,
			|	ВТ_Таблица.ДокументПередачи,
			|	ВТ_Таблица.НазначениеИспользования,
			|	ВТ_Таблица.ФизЛицо,
			|	ВТ_Таблица.Номенклатура.Код,
			|	ВТ_Таблица.Номенклатура.Артикул,
			|	ВТ_Таблица.ЕдиницаИзмерения.Представление,
			|	ВТ_Таблица.ФизЛицо.Представление,
			|	ВЫРАЗИТЬ(ВТ_Таблица.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))";
			
			
			ЗапросПоТоварам = Новый Запрос;
			ЗапросПоТоварам.Текст = ТекстЗапроса;
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ДокументСсылка);
			
			РезультатЗапроса = ЗапросПоТоварам.Выполнить();
			
			// Параметры вывода
			ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
			КолАртикул = ?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул, "Артикул",
			?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код,     "Код", ""));
			ФлагВыводКода = НЕ ПустаяСтрока(КолАртикул);
			
			// Вывод заголовка
			Область = Макет.ПолучитьОбласть("Заголовок|Данные");
			//Область.Параметры.Заголовок = "Списание материалов из эксплуатации № "+Шапка.Номер + " от " + Шапка.Дата;
			НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Ссылка);
			Область.Параметры.Заголовок = "Списание материалов из эксплуатации № "+НомерДокумента + " от " + Шапка.Дата;
			Область.Параметры.Заполнить(Шапка);
			
			ТабДок.Вывести(Область);
			
			// Вывод шапки табличной части
			Если ФлагВыводКода Тогда
				Область = Макет.ПолучитьОбласть("ТабШапка|Данные");
				Область.Параметры.ПечАртикул = КолАртикул;
				Область.Параметры.Сотрудник = ?(УчетПоФизЛицам,"Физическое лицо","Сотрудник");
				ТабДок.Вывести(Область);
				
			Иначе
				Область = Макет.ПолучитьОбласть("ТабШапкаБезАртикула|Данные");
				Область.Параметры.Сотрудник = ?(УчетПоФизЛицам,"Физическое лицо","Сотрудник");
				ТабДок.Вывести(Область);
			КонецЕсли;
			
			// Вывод табличной части
			Если ФлагВыводКода Тогда
				Область     = Макет.ПолучитьОбласть("ТабСтрока|Данные");
				ОбластьСумм = Макет.ПолучитьОбласть("ТабСтрока|Суммы");
			Иначе
				Область     = Макет.ПолучитьОбласть("ТабСтрокаБезАртикула|Данные");
				ОбластьСумм = Макет.ПолучитьОбласть("ТабСтрокаБезАртикула|Суммы");
			КонецЕсли;
			
			ТабЧасть = РезультатЗапроса.Выбрать();
			СуммаИтого = 0;
			ПечНомер = 0;
			
			Пока ТабЧасть.Следующий() Цикл
				
				ПечНомер = ПечНомер + 1;
				Область.Параметры.ПечНомер = ПечНомер;
				
				Если ФлагВыводКода Тогда
					Область.Параметры.ПечАртикул = ТабЧасть[КолАртикул];
				КонецЕсли;
				
				Область.Параметры.Заполнить(ТабЧасть);
				Область.Параметры.ПечМатериал = СокрЛП( ТабЧасть.Товар);
				Область.Параметры.Материал    = ТабЧасть.Товар;
				Область.Параметры.ПечТабНомер = ТабЧасть.КодСотрудника;
				Область.Параметры.ПечКол      = ТабЧасть.Количество;
				
				
				Область.Области[?(ФлагВыводКода,"ОблЕдИзм","ОблЕдИзмБезАртикула")].ГраницаСправа = Новый Линия( ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);
				ТабДок.Вывести(Область);
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("Подвал|Данные");
			Область.Параметры.СтрокаИтог = "Всего наименований: " + ТабЧасть.Количество();
			ТабДок.Вывести( Область);
			Область = Макет.ПолучитьОбласть("НизДокументаБезАртикула|Данные");
			ТабДок.Вывести( Область);	
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		КонецЦикла;
		
		Возврат ТабДок;
	КонецФункции //	ПечатьСписаниеМатериалов()
	
	// Функция формирования печатной формы документа СписаниеМатериалов
	//
	Функция ПечатьСписаниеМатериаловЗ6(МассивОбъектов, ОбъектыПечати) Экспорт
		УстановитьПривилегированныйРежим(Истина);
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_З6");
		
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПроизводстваЗаСмену_З9";
		
		Для Каждого ДокументСсылка Из МассивОбъектов Цикл
			
			Если ТабДок.ВысотаТаблицы > 0 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
			
			ЗапросРеквизитыДокумента = Новый Запрос();
			ЗапросРеквизитыДокумента.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СписаниеМатериаловИзЭксплуатации.Дата,
			|	СписаниеМатериаловИзЭксплуатации.Организация,
			|	СписаниеМатериаловИзЭксплуатации.Ответственный.ФизЛицо КАК Ответственный,
			|	СписаниеМатериаловИзЭксплуатации.ПодразделениеОрганизации,
			|	СписаниеМатериаловИзЭксплуатации.ПричинаСписания КАК ПричинаСписания,
			|	СписаниеМатериаловИзЭксплуатации.Склад,
			|	СписаниеМатериаловИзЭксплуатации.СостояниеМатериалов
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации КАК СписаниеМатериаловИзЭксплуатации
			|ГДЕ
			|	СписаниеМатериаловИзЭксплуатации.Ссылка = &Ссылка";
			ЗапросРеквизитыДокумента.УстановитьПараметр("Ссылка", ДокументСсылка);
			ВыборкаРеквизитыДокумента = ЗапросРеквизитыДокумента.Выполнить().Выбрать();
			ВыборкаРеквизитыДокумента.Следующий();
			
			ПараметрОрганизация = ВыборкаРеквизитыДокумента.Организация;
			ПараметрОтветственный = ВыборкаРеквизитыДокумента.Ответственный;
			
			ПараметрПодразделение = ВыборкаРеквизитыДокумента.ПодразделениеОрганизации;	
			
			// Получаем данные для заполнения количества и суммы в строках табличной части
			ЗапросДляРасчетаСтоимости = Новый Запрос();
			РегистрДляРасчетаСтоимости = ?(ВыборкаРеквизитыДокумента.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации, "си_МатериалыВЭксплуатации","си_МатериалыНаСкладе");
			ТекстЗапросаСКомментариями = "ВЫБРАТЬ
			|	РегистрМатериалов.Номенклатура,
			|	СУММА(РегистрМатериалов.Стоимость) КАК Стоимость,
			|	РегистрМатериалов.ДокументПередачи,
			|	РегистрМатериалов.НазначениеИспользования,
			|	РегистрМатериалов.ВидУчетаНУ,
			|	РегистрМатериалов.ОстаточныйСрокИспользования
			|ПОМЕСТИТЬ ВТ_ТаблицаРегистра
			|ИЗ
			|	РегистрНакопления."+РегистрДляРасчетаСтоимости+" КАК РегистрМатериалов
			|ГДЕ
			|	РегистрМатериалов.Регистратор = &Регистратор
			|	И РегистрМатериалов.КодОперации = &КодОперации
			|
			|СГРУППИРОВАТЬ ПО
			|	РегистрМатериалов.Номенклатура,
			|	РегистрМатериалов.ДокументПередачи,
			|	РегистрМатериалов.НазначениеИспользования,
			|	РегистрМатериалов.ВидУчетаНУ,
			|	РегистрМатериалов.ОстаточныйСрокИспользования
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Материалы.Номенклатура КАК Номенклатура,
			|	Материалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	Материалы.ДокументПередачи КАК ДокументПередачи,
			|	Материалы.НазначениеИспользования КАК НазначениеИспользования,
			|	СУММА(Материалы.Количество) КАК Количество,
			|	Материалы.Ссылка.Склад,
			|	Материалы.Ссылка.СостояниеМатериалов,
			|	Материалы.Ссылка.ПричинаСписания,
			|	Материалы.Ссылка.ДокументОснование.Дата,
			|	Материалы.Ссылка.ДокументОснование.Номер,
			|	Материалы.Ссылка.ДокументОснование,
			|	СУММА(ЕСТЬNULL(ВТ_ТаблицаРегистра.Стоимость, 0)) КАК Стоимость,
			|	СУММА(ЕСТЬNULL(ВТ_ТаблицаРегистра.ОстаточныйСрокИспользования, 0)) КАК ОстаточныйСрокИспользования
			|ПОМЕСТИТЬ ТаблицаДокумента
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации.Материалы КАК Материалы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРегистра КАК ВТ_ТаблицаРегистра
			|		ПО Материалы.Номенклатура = ВТ_ТаблицаРегистра.Номенклатура
			|			И Материалы.ДокументПередачи = ВТ_ТаблицаРегистра.ДокументПередачи
			|			И Материалы.НазначениеИспользования = ВТ_ТаблицаРегистра.НазначениеИспользования
			|ГДЕ
			|	Материалы.Ссылка = &СписаниеМатериаловИзЭксплуатации
			|
			|СГРУППИРОВАТЬ ПО
			|	Материалы.Номенклатура,
			|	Материалы.ЕдиницаИзмерения,
			|	Материалы.ДокументПередачи,
			|	Материалы.НазначениеИспользования,
			|	Материалы.Ссылка.Склад,
			|	Материалы.Ссылка.СостояниеМатериалов,
			|	Материалы.Ссылка.ПричинаСписания,
			|	Материалы.Ссылка.ДокументОснование.Дата,
			|	Материалы.Ссылка.ДокументОснование.Номер,
			|	Материалы.Ссылка.ДокументОснование
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаДокумента.Номенклатура,
			|	СУММА(ТаблицаДокумента.Количество) КАК Количество,
			|	ТаблицаДокумента.Номенклатура.Код КАК НоменклатурныйНомер,
			|	ТаблицаДокумента.НазначениеИспользования.СрокПолезногоИспользования КАК СрокСлужбы,
			|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ОтветственныйЗаСклад,
			|	ТаблицаДокумента.Склад,
			|	ТаблицаДокумента.СостояниеМатериалов,
			|	ТаблицаДокумента.ПричинаСписания,
			|	ТаблицаДокумента.ДокументОснованиеДата,
			|	ТаблицаДокумента.ДокументОснованиеНомер,
			|	ТаблицаДокумента.ДокументОснование,
			|	СУММА(ТаблицаДокумента.Стоимость) КАК Стоимость,
			|	ТаблицаДокумента.ОстаточныйСрокИспользования
			|ИЗ
			|	ТаблицаДокумента КАК ТаблицаДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаДокумента, ) КАК ОтветственныеЛицаСрезПоследних
			|		ПО ТаблицаДокумента.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаДокумента.Номенклатура,
			|	ТаблицаДокумента.Номенклатура.Код,
			|	ТаблицаДокумента.НазначениеИспользования.СрокПолезногоИспользования,
			|	ТаблицаДокумента.ЕдиницаИзмерения,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
			|	ТаблицаДокумента.Склад,
			|	ТаблицаДокумента.СостояниеМатериалов,
			|	ТаблицаДокумента.ПричинаСписания,
			|	ТаблицаДокумента.ДокументОснованиеДата,
			|	ТаблицаДокумента.ДокументОснованиеНомер,
			|	ТаблицаДокумента.ДокументОснование,
			|	ТаблицаДокумента.ОстаточныйСрокИспользования";
			
			
			ВидОтраженияВУчете = Неопределено;
			ЗапросДляРасчетаСтоимости.Текст = ЗаменитьКомментарииВТекстеЗапроса(ТекстЗапросаСКомментариями,ВидОтраженияВУчете);
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("СписаниеМатериаловИзЭксплуатации", ДокументСсылка);
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("ДатаДокумента", ДокументСсылка.МоментВремени());
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("НачДата", Новый Граница(НачалоМесяца(ДокументСсылка.Дата)));
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("КонДата", Новый Граница(КонецМесяца(ДокументСсылка.Дата)));
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("Подразделение", ПараметрПодразделение);
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("Организация", ПараметрОрганизация);
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("Регистратор", ДокументСсылка);
			ЗапросДляРасчетаСтоимости.УстановитьПараметр("КодОперации", Перечисления.си_КодыОперацийМатериалыВЭксплуатации.СписаниеИзЭксплуатации);
			
			ТабЗначДляРасчетаСтоимости = ВыполнитьЗапросВПривилегированномМодуле(ЗапросДляРасчетаСтоимости.Текст, ЗапросДляРасчетаСтоимости.Параметры);
			ДеревоТовары = ТабЗначДляРасчетаСтоимости.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			МассивТабличныхДокументов = ТабДок;
			
			Запрос = Новый Запрос;
			Если Метаданные.Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()].Реквизиты.Найти("ТекущаяДолжностьОрганизации")<>Неопределено Тогда
				Запрос.Текст = "ВЫБРАТЬ
				|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Ссылка,
				|	ПРЕДСТАВЛЕНИЕ(си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник) КАК СотрудникПредставление,
				|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Председатель,
				|	ПРЕДСТАВЛЕНИЕ(си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник.ТекущаяДолжностьОрганизации) КАК ДолжностьПредставление
				|ИЗ
				|	Документ.си_СписаниеМатериаловИзЭксплуатации.ИнвентаризационнаяКомиссия КАК си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия
				|ГДЕ
				|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Ссылка = &Ссылка";
			Иначе
				Запрос.Текст = "ВЫБРАТЬ
				|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Ссылка,
				|	ПРЕДСТАВЛЕНИЕ(си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник) КАК СотрудникПредставление,
				|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Председатель,
				|	ПРЕДСТАВЛЕНИЕ(КадроваяИстория.Должность) КАК ДолжностьПредставление
				|ИЗ
				|	Документ.си_СписаниеМатериаловИзЭксплуатации.ИнвентаризационнаяКомиссия КАК си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ) ) КАК КадроваяИстория
				|		ПО си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник = КадроваяИстория.Сотрудник
				|ГДЕ
				|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Ссылка = &Ссылка";
			КонецЕсли;	
			Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
			Запрос.УстановитьПараметр("Период",ДокументСсылка.Дата);
			Результат = ВыполнитьЗапросВПривилегированномМодуле(Запрос.Текст, Запрос.Параметры);
			ТаблицаКомиссия = Результат.Выгрузить();
			
			
			НомерСтроки = 0;
			
			НомерСтроки = НомерСтроки + 1;
			ВывестиПечатнуюФормуЗ6(МассивТабличныхДокументов, Макет, ВыборкаРеквизитыДокумента, ДеревоТовары.Строки, ,ДокументСсылка,ТаблицаКомиссия);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
			
		КонецЦикла;
		
		Возврат ТабДок;
	КонецФункции
	
	Функция ВывестиПечатнуюФормуЗ6(ТабДокумент, Макет, ВыборкаРеквизитыДокумента, СтрокиФизЛиц, ФизЛицо, ДокументСсылка,ТаблицаКомиссия)
		Если Не СтрокиФизЛиц.Количество()=0 Тогда
			//ТабДокумент = Новый ТабличныйДокумент();
			
			// Зададим параметры макета
			ТабДокумент.ПолеСверху          = 0;
			ТабДокумент.ПолеСлева           = 0;
			ТабДокумент.ПолеСнизу           = 0;
			ТабДокумент.ПолеСправа          = 0;
			ТабДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
			
			// Выводим общие реквизиты шапки
			Шапка = Макет.ПолучитьОбласть("Шапка");
			
			СведенияОбОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(ДокументСсылка.Организация, ДокументСсылка.Дата);
			
			Шапка.Параметры.ПредставлениеОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
			Шапка.Параметры.РасшифровкаПодписи = общ_ПереопределяемыеПроцедурыБКВызовСервера.ОтветственныеЛицаОрганизаций(ДокументСсылка.Организация, ДокументСсылка.Дата).Руководитель;
			//МОЛ = ?(СтрокиФизЛиц[0].СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе,СтрокиФизЛиц[0].ОтветственныйЗаСклад,?(ЗначениеЗаполнено(СтрокиФизЛиц[0].ФизЛицо),СтрокиФизЛиц[0].КонФизЛицо,СтрокиФизЛиц[0].ФизЛицо));
			Если СтрокиФизЛиц[0].СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе 
				ИЛИ СтрокиФизЛиц[0].СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладеНовая Тогда
				МОЛ = СтрокиФизЛиц[0].ОтветственныйЗаСклад;
			Иначе
				МОЛ = Справочники.ФизическиеЛица.ПустаяСсылка();
			КонецЕсли;
			
			
			ДанныеМОЛ = общ_ПереопределяемыеПроцедурыБКВызовСервера.ДанныеФизЛица(ДокументСсылка.Организация, МОЛ, ДокументСсылка.Дата);
			//Шапка.Параметры.МОЛ = ?(СтрокиФизЛиц[0].СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе,ДанныеМОЛ.Представление,СтрокиФизЛиц[0].ФизЛицо);
			Шапка.Параметры.МОЛ = ДанныеМОЛ.Представление;
			Шапка.Параметры.СкладПредставление = ?(СтрокиФизЛиц[0].СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяНаСкладе,СтрокиФизЛиц[0].Склад,ВыборкаРеквизитыДокумента.ПодразделениеОрганизации);
			//Шапка.Параметры.ДокОснованиеНаименование = ?(ЗначениеЗаполнено(СтрокиФизЛиц[0].ДокументОснование),ТипЗнч(СтрокиФизЛиц[0].ДокументОснование),"");
			//Шапка.Параметры.ДокОснованиеДата = Формат(СтрокиФизЛиц[0].ДокументОснованиеДата, "ДФ=dd.MM.yyyy");
			
			СтруктураДокумент = си_ПривилегированныеПроцедуры.СтруктураДанныхДокументаДляПечати(СтрокиФизЛиц[0].ДокументОснование);
			//НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(СтруктураДокумент.Номер, СтрокиФизЛиц[0].ДокументОснование);
			НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(ДокументСсылка.Номер, СтрокиФизЛиц[0].ДокументОснование);
			
			//Шапка.Параметры.ДокОснованиеНомер = НомерДокумента;
			ТекстРНН_БИН = "";
			Шапка.Параметры.ОрганизацияРНН_БИН = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(СведенияОбОрганизации, ДокументСсылка.Дата, Ложь, ТекстРНН_БИН);
			Шапка.Параметры.ДатаДокумента = Формат(ДокументСсылка.Дата, "ДФ=dd.MM.yyyy");
			Шапка.Параметры.ДатаДок		  = Формат(ДокументСсылка.Дата, "ДЛФ=DD");
			НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(ДокументСсылка.Номер, ДокументСсылка.Ссылка);
			Шапка.Параметры.НомерДокумента  =  НомерДокумента;
			
			ТабДокумент.Вывести(Шапка);
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			
			ВалютаПечати = общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
			ЗаголовокТаблицы.Параметры.Валюта = ВалютаПечати;	
			
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
			
			// Вывод строк таблицы и накопление итогов
			НомерСтроки = 1;
			ИтогоКоличество = 0;
			ИтогоСумма = 0;	
			Для Каждого СтрокаТаблицыМатериалы Из СтрокиФизЛиц Цикл
				
				СтрокаТабДок = Макет.ПолучитьОбласть("СтрокаТаблицы");
				
				// Формирование значения для заполнения поля ТоварНаименование
				Наименование_   = СтрокаТаблицыМатериалы.Номенклатура.Наименование;
				Представление = Наименование_ ;
				
				СтрокаТабДок.Параметры.НомерПП	           = НомерСтроки;
				СтрокаТабДок.Параметры.ТоварНаименование   = Представление;
				СтрокаТабДок.Параметры.НоменклатурныйНомер = СтрокаТаблицыМатериалы.НоменклатурныйНомер;
				
				СтрокаТабДок.Параметры.ЕдиницаИзмеренияНаименование    = СтрокаТаблицыМатериалы.ЕдиницаИзмерения;
				СтрокаТабДок.Параметры.Количество          = Формат(СтрокаТаблицыМатериалы.Количество, "ЧДЦ=3");
				СтрокаТабДок.Параметры.СуммаСНДС = СтрокаТаблицыМатериалы.Стоимость;
				СтрокаТабДок.Параметры.Цена = ?(СтрокаТаблицыМатериалы.Количество=0,0,СтрокаТаблицыМатериалы.Стоимость / СтрокаТаблицыМатериалы.Количество);
				СтрокаТабДок.Параметры.СрокСлужбы    = СтрокаТаблицыМатериалы.ОстаточныйСрокИспользования;
				
				СтрокаТабДок.Параметры.ПричинаСписания    = СтрокаТаблицыМатериалы.ПричинаСписания;
				НомерСтроки = НомерСтроки + 1;
				ИтогоКоличество = ИтогоКоличество + СтрокаТаблицыМатериалы.Количество;
				ИтогоСумма = ИтогоСумма + СтрокаТабДок.Параметры.СуммаСНДС;
				СтрокаПомещаетсяНаСтраницу = ПроверитьВыводДляТабличногоДокумента(ТабДокумент, СтрокаТабДок);
				Если СтрокаПомещаетсяНаСтраницу Тогда 
					ТабДокумент.Вывести(СтрокаТабДок);
				Иначе
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ЗаголовокТаблицы);
					ТабДокумент.Вывести(СтрокаТабДок);
				КонецЕсли;
				
			КонецЦикла;
			
			// Выводим итоги	
			Итого = Макет.ПолучитьОбласть("Итого");
			Итого.Параметры.ИтогоКоличество = Формат(ИтогоКоличество, "ЧДЦ=3");
			Итого.Параметры.ИтогоСуммаСНДС = Формат(ИтогоСумма, "ЧДЦ=2");
			
			ИтогиПомещаютсяНаСтраницу = ПроверитьВыводДляТабличногоДокумента(ТабДокумент, Итого);	
			Если ИтогиПомещаютсяНаСтраницу Тогда 
				ТабДокумент.Вывести(Итого);
			Иначе
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				ТабДокумент.Вывести(Итого);
			КонецЕсли;
			
			// Выводим оборотную сторону
			ОборотнаяСторона = Макет.ПолучитьОбласть("ОборотнаяСторона");
			ОборотнаяСторона.Параметры.Валюта = ВалютаПечати;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ОборотнаяСторона);
			
			// Выводим данные о комисси
			Комиссия = Макет.ПолучитьОбласть("Комиссия");
			ВыводитьЗаголовок = Истина;
			
			// Варианты заголовков разделов с подписями печатной формы	
			ЗаголовокРазделаКомиссии = Новый Структура();
			ЗаголовокРазделаКомиссии.Вставить("МОЛ",                  "Материально-ответственное лицо");
			ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", "Председатель комиссии");
			ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии",        "Члены комиссии");
			
			//// сначала выведем председателя комиссии
			//Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			//ТабДокумент.Вывести(Комиссия);
			
			// затем выведем членов комиссии
			//Для ЧленКомиссии = 1 По 3 Цикл		
			//	Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ЧленыКомиссии;		
			//	ТабДокумент.Вывести(Комиссия);
			//КонецЦикла;
			
			
			Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ПредседательНайденныеСтроки = ТаблицаКомиссия.НайтиСтроки(Новый Структура("Председатель",Истина));
			Если Не ПредседательНайденныеСтроки.Количество() = 0 Тогда
				Комиссия.Параметры.РасшифровкаПодписи = ПредседательНайденныеСтроки[0].СотрудникПредставление;
				Комиссия.Параметры.Должность = ПредседательНайденныеСтроки[0].ДолжностьПредставление;
			КонецЕсли;
			ТабДокумент.Вывести(Комиссия);
			
			ЧленыКомиссииНайденныеСтроки = ТаблицаКомиссия.НайтиСтроки(Новый Структура("Председатель",Ложь));
			Для Каждого СтрокаТЧ Из ЧленыКомиссииНайденныеСтроки Цикл
				Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ЧленыКомиссии;
				Комиссия.Параметры.РасшифровкаПодписи = СтрокаТЧ.СотрудникПредставление;
				Комиссия.Параметры.Должность = СтрокаТЧ.ДолжностьПредставление;
				ТабДокумент.Вывести(Комиссия);
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ДанныеМОЛ) Тогда
				
				Комиссия.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.МОЛ;
				Комиссия.Параметры.Должность = ДанныеМОЛ.Должность;
				Комиссия.Параметры.РасшифровкаПодписи = ДанныеМОЛ.Представление;
				
				ТабДокумент.Вывести(Комиссия);
			КонецЕсли;
		КонецЕсли;	
		Возврат ТабДокумент;
		
	КонецФункции
	
	// Функция формирует табличный документ с печатной формой окна на
	// списание спецодежды и инвентаря
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма акта
	//
	Функция ПечатьСписаниеМатериаловАктНаСписаниеКоличественный(МассивОбъектов, ОбъектыПечати) Экспорт
		
		УстановитьПривилегированныйРежим(Истина);
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_АктНаСписание");
		
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериалов_СписаниеМатериалов";
		
		ВедетсяУчетПоХарактеристикам 	= Константы.си_УчетСпецодеждыПоХарактеристикам.Получить();
		
		ВедетсяУчетПоФизлицам			= Константы.си_ВестиУчетПоФизическимЛицам.Получить();
		Для Каждого ДокументСсылка Из МассивОбъектов Цикл	
			
			Если ТабДок.ВысотаТаблицы > 0 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Момент"		, ДокументСсылка.МоментВремени());
			Запрос.УстановитьПараметр("Ссылка"		, ДокументСсылка);
			Запрос.УстановитьПараметр("Организация"	, ДокументСсылка.Организация);
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	си_СписаниеМатериаловИзЭксплуатации.Организация,
			|	си_СписаниеМатериаловИзЭксплуатации.СтруктурноеПодразделение,
			|	си_СписаниеМатериаловИзЭксплуатации.Дата,
			|	си_СписаниеМатериаловИзЭксплуатации.Ссылка,
			|	си_СписаниеМатериаловИзЭксплуатации.Номер,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК Руководитель,
			|	си_СписаниеМатериаловИзЭксплуатации.Склад,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК МОЛСклада,
			|	си_СписаниеМатериаловИзЭксплуатации.СостояниеМатериалов,
			|	ФИОФизЛицСрезПоследних.Фамилия,
			|	ФИОФизЛицСрезПоследних.Имя,
			|	ФИОФизЛицСрезПоследних.Отчество,
			|	ФИОФизЛицСрезПоследних.УдалитьНеСклонятьФамилию КАК НеСклонятьФамилию
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации КАК си_СписаниеМатериаловИзЭксплуатации
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&Момент, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|		ПО си_СписаниеМатериаловИзЭксплуатации.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Момент, ) КАК ОтветственныеЛицаСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Момент, ) КАК ФИОФизЛицСрезПоследних
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
			|		ПО си_СписаниеМатериаловИзЭксплуатации.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
			|ГДЕ
			|	си_СписаниеМатериаловИзЭксплуатации.Ссылка = &Ссылка";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник,
			|	ФИОФизЛицСрезПоследних.Фамилия,
			|	ФИОФизЛицСрезПоследних.Имя,
			|	ФИОФизЛицСрезПоследних.Отчество,
			|	ФИОФизЛицСрезПоследних.УдалитьНеСклонятьФамилию КАК НеСклонятьФамилию
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации.ИнвентаризационнаяКомиссия КАК си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Момент, ) КАК ФИОФизЛицСрезПоследних 
			|		ПО си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
			|ГДЕ
			|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Ссылка = &Ссылка";
			
			ВыборкаПоКомиссии = Запрос.Выполнить().Выбрать();
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РаботникиОрганизацийСрезПоследних.Сотрудник"+?(ВедетсяУчетПоФизлицам,".ФизЛицо","") + " КАК Сотрудник,
			|	РаботникиОрганизацийСрезПоследних.Должность,
			|	РаботникиОрганизацийСрезПоследних.Сотрудник.Код КАК ТабельныйНомер
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Момент, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних";
			
			ТаблицаРаботников = Запрос.Выполнить().Выгрузить();
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Сотрудник КАК Сотрудник,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Номенклатура КАК Номенклатура,
			//|	си_СписаниеМатериаловИзЭксплуатацииТовары.СрокСлужбы КАК СрокСлужбы,
			//|	си_СписаниеМатериаловИзЭксплуатацииТовары.ДатаОкончанияСлужбы КАК ДатаОкончанияСлужбы,
			//|	си_СписаниеМатериаловИзЭксплуатацииТовары.СрокОтслуживший КАК СрокОтслуживший,
			|	ФИОФизЛицСрезПоследних.Фамилия,
			|	ФИОФизЛицСрезПоследних.Имя,
			|	ФИОФизЛицСрезПоследних.Отчество,
			|	ФИОФизЛицСрезПоследних.УдалитьНеСклонятьФамилию КАК НеСклонятьФамилию,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.ДокументПередачи.Дата КАК ДатаНачалаСлужбы,
			//|	ДОБАВИТЬКДАТЕ(си_СписаниеМатериаловИзЭксплуатацииТовары.ДатаОкончанияСлужбы, МЕСЯЦ, -си_СписаниеМатериаловИзЭксплуатацииТовары.СрокСлужбы) КАК ДатаНачалаСлужбы,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Характеристика,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Количество,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдИзмерения
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации.Материалы КАК си_СписаниеМатериаловИзЭксплуатацииТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Момент, ) КАК ФИОФизЛицСрезПоследних
			|		ПО си_СписаниеМатериаловИзЭксплуатацииТовары.Сотрудник"+?(ВедетсяУчетПоФизлицам,"",".ФизЛицо") + " = ФИОФизЛицСрезПоследних.ФизЛицо
			|ГДЕ
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Ссылка = &Ссылка
			|ИТОГИ
			|	МАКСИМУМ(Номенклатура)
			//|	СУММА(СрокОтслуживший)
			|ПО
			|	Сотрудник,
			|	ДатаНачалаСлужбы
			|";
			
			РезультатЗапросаПоТоварам 	= Запрос.Выполнить();
			ВыборкаСтрокТовараров 		= РезультатЗапросаПоТоварам.Выбрать();
			ВыборкаПоФизЛицам 			= РезультатЗапросаПоТоварам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Сотрудник");
			
			СтруктурнаяЕдиницаОрганизация = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСтруктурнуюЕдиницу(Шапка.Организация, Шапка.СтруктурноеПодразделение);
			
			Пока ВыборкаПоФизЛицам.Следующий() Цикл
				
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
				
				ПредставлениеОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.ОписаниеОрганизации(общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Шапка.Дата), "ПолноеНаименование,");
				
				ОбластьМакета.Параметры.Организация  = ПредставлениеОрганизации;
				ОбластьМакета.Параметры.Руководитель = общ_ПереопределяемыеПроцедурыБКСервер.ФамилияИнициалыФизЛица(Шапка.Руководитель);
				ОбластьМакета.Параметры.Номер		 = Шапка.Номер;
				ОбластьМакета.Параметры.Дата 		 = Формат(Шапка.Дата, "ДЛФ=ДД");
				
				ТабДок.Вывести(ОбластьМакета);
				
				СтрокаЧленовКомиссии = "";
				ВыборкаПоКомиссии.Сбросить();
				Пока ВыборкаПоКомиссии.Следующий() Цикл
					
					СтруктураФИО = Новый Структура;
					СтруктураФИО.Вставить("Фамилия"	, ВыборкаПоКомиссии.Фамилия);
					СтруктураФИО.Вставить("Имя"     , ВыборкаПоКомиссии.Имя);
					СтруктураФИО.Вставить("Отчество", ВыборкаПоКомиссии.Отчество);
					
					СтрокаЧленовКомиссии = СтрокаЧленовКомиссии + общ_ПереопределяемыеПроцедурыБКСервер.ПреобразоватьФИОВРодительныйПадеж(СтруктураФИО, ВыборкаПоКомиссии.НеСклонятьФамилию) + ", ";
					
				КонецЦикла;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Комиссия");
				ОбластьМакета.Параметры.Комиссия = Лев(СтрокаЧленовКомиссии, СтрДлина(СтрокаЧленовКомиссии) - 2);
				ТабДок.Вывести(ОбластьМакета);
				
				ТабДок.Вывести(Макет.ПолучитьОбласть("СпецодеждаЗаголовок"));
				
				ВыборкаПоДате = ВыборкаПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДатаНачалаСлужбы");
				
				Пока ВыборкаПоДате.Следующий() Цикл 
					
					ВыборкаПоНоменклатуре 	= ВыборкаПоДате.Выбрать();
					СтрокаНоменклатуры 		= "";
					
					Пока ВыборкаПоНоменклатуре.Следующий()Цикл
						
						СтрокаНоменклатуры = СтрокаНоменклатуры + Строка(ВыборкаПоНоменклатуре.Номенклатура);
						Если ВедетсяУчетПоХарактеристикам Тогда
							СтрокаНоменклатуры = СтрокаНоменклатуры + " (" + Строка(ВыборкаПоНоменклатуре.Характеристика);
							Если ВыборкаПоНоменклатуре.Количество > 1 Тогда
								СтрокаНоменклатуры = СтрокаНоменклатуры + " в количестве " + Строка(ВыборкаПоНоменклатуре.Количество) + " " + Строка(ВыборкаПоНоменклатуре.ЕдИзмерения);
							КонецЕсли;
							СтрокаНоменклатуры = СтрокаНоменклатуры + ")";
						ИначеЕсли ВыборкаПоНоменклатуре.Количество > 1 Тогда
							СтрокаНоменклатуры = СтрокаНоменклатуры + " (в количестве " + Строка(ВыборкаПоНоменклатуре.Количество) + " " + Строка(ВыборкаПоНоменклатуре.ЕдИзмерения) + ")";
						КонецЕсли;
						СтрокаНоменклатуры = СтрокаНоменклатуры + ", ";
						
						СтруктураФИО = Новый Структура;
						Если Шапка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
							
							СтруктураФИО.Вставить("Фамилия"	, ВыборкаПоНоменклатуре.Фамилия);
							СтруктураФИО.Вставить("Имя"     , ВыборкаПоНоменклатуре.Имя);
							СтруктураФИО.Вставить("Отчество", ВыборкаПоНоменклатуре.Отчество);
							
							НеСклонятьФамилию 	= ВыборкаПоНоменклатуре.НеСклонятьФамилию;
							
						Иначе 
							
							СтруктураФИО.Вставить("Фамилия"	, Шапка.Фамилия);
							СтруктураФИО.Вставить("Имя"     , Шапка.Имя);
							СтруктураФИО.Вставить("Отчество", Шапка.Отчество);
							
							НеСклонятьФамилию 	= Шапка.НеСклонятьФамилию;
							
						КонецЕсли;
						
					КонецЦикла;
					
					ОбластьМакета = Макет.ПолучитьОбласть("Спецодежда");
					ОбластьМакета.Параметры.Спецодежда = Лев(СтрокаНоменклатуры, СтрДлина(СтрокаНоменклатуры) - 2);
					ТабДок.Вывести(ОбластьМакета);
					
					Если Шапка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ДатаВыдачи");
						ОбластьМакета.Параметры.ДатаВыдачи = Формат(ВыборкаПоДате.ДатаНачалаСлужбы, "ДЛФ=ДД");
					Иначе 
						ОбластьМакета = Макет.ПолучитьОбласть("СкладХранения");
						ОбластьМакета.Параметры.Склад = Шапка.Склад;
					КонецЕсли;
					ТабДок.Вывести(ОбластьМакета);
					
				КонецЦикла;
				Если Шапка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
					Работник = ТаблицаРаботников.Найти(ВыборкаПоФизЛицам.Сотрудник, "Сотрудник");
				Иначе
					Работник = ТаблицаРаботников.Найти(Шапка.МОЛСклада, "Сотрудник");
				КонецЕсли;
				
				Если Работник <> Неопределено Тогда
					Должность 		= Работник.Должность;
					ТабельныйНомер 	= Работник.ТабельныйНомер;
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Работник");
				ОбластьМакета.Параметры.ФИО 		= общ_ПереопределяемыеПроцедурыБКСервер.ПреобразоватьФИОВДательныйПадеж(СтруктураФИО, НеСклонятьФамилию);
				ОбластьМакета.Параметры.Должность 	= Должность;
				ОБластьМакета.Параметры.ТабНомер	= ТабельныйНомер;
				ТабДок.Вывести(ОбластьМакета);
				
				ТабДок.Вывести(Макет.ПолучитьОбласть("ЗаголовокПодписи"));	
				
				ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
				ВыборкаПоКомиссии.Сбросить();
				Пока ВыборкаПоКомиссии.Следующий() Цикл
					
					Работник = ТаблицаРаботников.Найти(ВыборкаПоКомиссии.Сотрудник, "Сотрудник");
					Если Работник <> Неопределено Тогда
						ОбластьМакета.Параметры.Должность = Работник.Должность;
					КонецЕсли;
					
					ОбластьМакета.Параметры.РасшифровкаПодписи 	= общ_ПереопределяемыеПроцедурыБКСервер.ФамилияИнициалыФизЛица(ВыборкаПоКомиссии.Сотрудник);
					
					ТабДок.Вывести(ОбластьМакета);
					
				КонецЦикла;
				
				Если ВыборкаПоКомиссии.Количество() = 0 Тогда
					ТабДок.Вывести(ОбластьМакета);
				КонецЕсли;
				
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
			КонецЦикла;
		КонецЦикла;
		
		Возврат ТабДок;
		
	КонецФункции // ПечатьСписаниеСпецодежды()
	
	// Функция формирует табличный документ с печатной формой окна на
	// списание спецодежды и инвентаря
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма акта
	//
	Функция ПечатьСписаниеМатериаловАктНаСписаниеКоличественноСуммовой(МассивОбъектов, ОбъектыПечати) Экспорт
		УстановитьПривилегированныйРежим(Истина);
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_СписаниеМатериаловИзЭксплуатации.ПФ_MXL_АктСписанияКоличественноСуммовой");
		
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериалов_СписаниеМатериалов";
		
		ВедетсяУчетПоХарактеристикам = Константы.си_УчетСпецодеждыПоХарактеристикам.Получить();
		
		ВедетсяУчетПоФизлицам			= Константы.си_ВестиУчетПоФизическимЛицам.Получить();
		
		Для Каждого ДокументСсылка Из МассивОбъектов Цикл	
			
			Если ТабДок.ВысотаТаблицы > 0 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
			
			ИзЭксплуатации = (ДокументСсылка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации);
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Момент"  , ДокументСсылка.МоментВремени());
			Запрос.УстановитьПараметр("Документ", ДокументСсылка);
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	си_СписаниеМатериаловИзЭксплуатации.Организация,
			|	си_СписаниеМатериаловИзЭксплуатации.СтруктурноеПодразделение,
			|	си_СписаниеМатериаловИзЭксплуатации.Дата,
			|	си_СписаниеМатериаловИзЭксплуатации.Ссылка,
			|	си_СписаниеМатериаловИзЭксплуатации.Номер,
			|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК Руководитель,
			|	си_СписаниеМатериаловИзЭксплуатации.Склад,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК МОЛСклада,
			|	си_СписаниеМатериаловИзЭксплуатации.СостояниеМатериалов,
			|	Константы.ВалютаРегламентированногоУчета КАК Валюта
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации КАК си_СписаниеМатериаловИзЭксплуатации
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&Момент, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|		ПО си_СписаниеМатериаловИзЭксплуатации.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Момент, ) КАК ОтветственныеЛицаСрезПоследних
			|		ПО си_СписаниеМатериаловИзЭксплуатации.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница,
			|	Константы КАК Константы
			|ГДЕ
			|	си_СписаниеМатериаловИзЭксплуатации.Ссылка = &Документ";
			
			Шапка = Запрос.Выполнить().Выбрать();
			Шапка.Следующий();
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Сотрудник
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации.ИнвентаризационнаяКомиссия КАК си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия
			|ГДЕ
			|	си_СписаниеМатериаловИзЭксплуатацииИнвентаризационнаяКомиссия.Ссылка = &Документ";
			
			ТаблицаКомисси = Запрос.Выполнить().Выгрузить();
			
			МассивФизЛиц = ТаблицаКомисси.ВыгрузитьКолонку("Сотрудник");
			общ_ПереопределяемыеПроцедурыБКСервер.УдалитьПовторяющиесяЭлементыМассива(МассивФизЛиц);
			
			Запрос.УстановитьПараметр("Организация" , Шапка.Организация);
			Запрос.УстановитьПараметр("МассивФизЛиц", МассивФизЛиц);
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РаботникиОрганизацийСрезПоследних.Период КАК Период,
			|	РаботникиОрганизацийСрезПоследних.Сотрудник"+?(ВедетсяУчетПоФизлицам,".ФизЛицо","") + " КАК Сотрудник,
			|	РаботникиОрганизацийСрезПоследних.Должность КАК Должность
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|			&Момент,
			|			Организация = &Организация
			|				И Сотрудник В (&МассивФизЛиц)) КАК РаботникиОрганизацийСрезПоследних
			|ГДЕ
			|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период УБЫВ";
			
			ТаблицаРаботников = Запрос.Выполнить().Выгрузить();
			
			Запрос.УстановитьПараметр("МОЛСклада", Шапка.МОЛСклада);
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.НомерСтроки КАК НомерСтроки,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Номенклатура,
			|	" + ?(ИзЭксплуатации, "си_СписаниеМатериаловИзЭксплуатацииТовары.Сотрудник", "&МОЛСклада") + " КАК Сотрудник,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Количество КАК Количество,
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.ЕдиницаИзмерения КАК ЕдИзмерения
			//|	си_СписаниеМатериаловИзЭксплуатацииТовары.СчетУчетаБУ
			|ИЗ
			|	Документ.си_СписаниеМатериаловИзЭксплуатации.Материалы КАК си_СписаниеМатериаловИзЭксплуатацииТовары
			|ГДЕ
			|	си_СписаниеМатериаловИзЭксплуатацииТовары.Ссылка = &Документ
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки
			|ИТОГИ ПО
			|	Сотрудник";
			
			ВыборкаПоСотрудникам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Сотрудник");
			
			СчетМатериалов         = ПланыСчетов.Типовой.СырьеИМатериалы;
			СчетаУчетаСпецодежды   = си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды();
			//СчетУчетаНаСкладе      = си_ОбщегоНазначения.ПолучитьСчетаУчетаСпецодеждыИИнвентаря().СчетУчетаНаСкладеБУ;
			//СчетУчетаВЭксплуатации = си_ОбщегоНазначения.ПолучитьСчетаУчетаСпецодеждыИИнвентаря().СчетУчетаВЭксплуатацииБУ;
			СчетУчетаНаСкладе      = СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе;
			СчетУчетаВЭксплуатации = СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаВЭксплуатации;
			МассивСчетовКт = Новый Массив;
			МассивСчетовКт.Добавить(СчетМатериалов);
			МассивСчетовКт.Добавить(СчетУчетаНаСкладе);
			МассивСчетовКт.Добавить(СчетУчетаВЭксплуатации);
			
			Запрос.УстановитьПараметр("СчетаКт", МассивСчетовКт);
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТиповойДвиженияССубконто.НомерСтроки КАК НомерСтроки,
			|	ТиповойДвиженияССубконто.СчетКт,
			|	ТиповойДвиженияССубконто.СубконтоКт1 КАК Номенклатура,
			|	ТиповойДвиженияССубконто.КоличествоКт КАК Количество,
			|	ТиповойДвиженияССубконто.Сумма
			|ИЗ
			|	РегистрБухгалтерии.Типовой.ДвиженияССубконто(
			|			,
			|			,
			|			Регистратор = &Документ
			|				И СчетКт В (&СчетаКт)) КАК ТиповойДвиженияССубконто
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
			
			СтруктурнаяЕдиницаОрганизация = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСтруктурнуюЕдиницу(Шапка.Организация, Шапка.СтруктурноеПодразделение);
			
			Пока ВыборкаПоСотрудникам.Следующий() Цикл
				
				ПредставлениеОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.ОписаниеОрганизации(общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Шапка.Дата), "ПолноеНаименование,");
				
				// Вывод заголовка
				Область = Макет.ПолучитьОбласть("Заголовок");
				Область.Параметры.Организация  = ПредставлениеОрганизации;
				Область.Параметры.Руководитель = общ_ПереопределяемыеПроцедурыБКСервер.ФамилияИнициалыФизЛица(Шапка.Руководитель);
				Область.Параметры.Номер		   = Шапка.Номер;
				Область.Параметры.Дата 		   = Формат(Шапка.Дата, "ДЛФ=ДД");
				Область.Параметры.Сотрудник    = ВыборкаПоСотрудникам.Сотрудник;
				
				ТабДок.Вывести(Область);
				
				// Вывод шапки табличной части
				Область = Макет.ПолучитьОбласть("Шапка");
				ТабДок.Вывести(Область);
				
				// Вывод строк табличной
				Область = Макет.ПолучитьОбласть("Строка");
				
				НомерСтроки = 0;
				Итого       = 0;
				Отбор       = Новый Структура("СчетКт, Номенклатура");
				Выборка     = ВыборкаПоСотрудникам.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					
					НомерСтроки = НомерСтроки + 1;
					
					КоличествоДляСписания = Выборка.Количество;
					Сумма                 = 0;
					Отбор.СчетКт          = ?(Шапка.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации,СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаВЭксплуатации,СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе);
					Отбор.Номенклатура    = Выборка.Номенклатура;
					СтрокиДвижений        = ТаблицаДвижений.НайтиСтроки(Отбор);
					
					Для Каждого ТекСтрока Из СтрокиДвижений Цикл
						
						Если КоличествоДляСписания < ТекСтрока.Количество Тогда
							Сумма                 = Сумма + (ТекСтрока.Сумма / ТекСтрока.Количество) * КоличествоДляСписания;
							ТекСтрока.Количество  = ТекСтрока.Количество - КоличествоДляСписания;
							КоличествоДляСписания = 0;
						Иначе 
							Сумма                 = Сумма + ТекСтрока.Сумма;
							КоличествоДляСписания = КоличествоДляСписания - ТекСтрока.Количество;
							ТаблицаДвижений.Удалить(ТекСтрока);
						КонецЕсли;
						
						Если КоличествоДляСписания = 0 Тогда
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
					
					Область.Параметры.Заполнить(Выборка);
					Область.Параметры.НомерСтроки = НомерСтроки;
					Область.Параметры.Цена        = Окр(Сумма / Выборка.Количество, 2);
					Область.Параметры.Сумма       = Сумма;
					
					ТабДок.Вывести(Область);
					
					Итого = Итого + Сумма;
					
				КонецЦикла;
				
				// Вывод итогов документа
				Область = Макет.ПолучитьОбласть("Итого");
				Область.Параметры.Сумма = Итого;
				ТабДок.Вывести(Область);
				
				Область = Макет.ПолучитьОбласть("СуммаПрописью");
				Область.Параметры.СтрокаИтог = "Всего наименований: " + Выборка.Количество()
				+ ", на сумму " + общ_ПереопределяемыеПроцедурыБКСервер.ФорматСумм(Итого, Шапка.Валюта);
				Область.Параметры.СуммаПрописью  = общ_ПереопределяемыеПроцедурыБКСервер.СформироватьСуммуПрописью(Итого, Шапка.Валюта);
				ТабДок.Вывести(Область);
				
				ТабДок.Вывести(Макет.ПолучитьОбласть("ЗаголовокПодписи"));	
				
				ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
				Для Каждого ТекСтрокаКомиссии Из ТаблицаКомисси Цикл
					
					Работник = ТаблицаРаботников.Найти(ТекСтрокаКомиссии.Сотрудник, "Сотрудник");
					Если Работник <> Неопределено Тогда
						ОбластьМакета.Параметры.Должность = Работник.Должность;
					КонецЕсли;
					
					ОбластьМакета.Параметры.РасшифровкаПодписи = общ_ПереопределяемыеПроцедурыБКСервер.ФамилияИнициалыФизЛица(ТекСтрокаКомиссии.Сотрудник);
					
					ТабДок.Вывести(ОбластьМакета);
					
				КонецЦикла;
				
				Если ТаблицаКомисси.Количество() = 0 Тогда
					ТабДок.Вывести(ОбластьМакета);
				КонецЕсли;
				
				Область = Макет.ПолучитьОбласть("ПодписьМОЛ");
				//Область.Параметры.МОЛ = Шапка.МОЛСклада;
				ТабДок.Вывести(Область);
				
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
			КонецЦикла;
		КонецЦикла;
		
		Возврат ТабДок;
		
	КонецФункции // ПечатьСписанияКоличественноСуммовой()
	
	// Функция возвращает значение "Истина" или "Ложь" в зависимости от 
	//  результата вызова метода табличного документа ПроверитВывод() с учетом 
	//   наличия или отсутствия в системе принтера по умолчанию.
	//
	// Параметры
	//  ТабличныйДокумент  - табличный документ
	//  ВыводимыеОбласти   - массив выводимых областей
	//                 
	// Возвращаемое значение:
	//   Булево
	//
	Функция ПроверитьВыводДляТабличногоДокумента(ТабличныйДокумент, ВыводимыеОбласти) Экспорт
		Попытка
			// Проверяет, умещаются ли переданные табличные документы на страницу при печати.
			Возврат ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
		Исключение
			// При возникновении проблем с получением информации о текущем принтере возвращает значение "ИСТИНА".
			Возврат Истина;
		КонецПопытки;
	КонецФункции // ПроверитьВыводДляТабличногоДокумента()
	
	// Предназначена для выполнения запроса в привилегированном модуле. Чаще используется для исключения ошибок 
	// доступа к данным. 
	//
	// Параметры:
	//  ТекстЗапроса - Строка, содержащая текст запроса.
	//  СтруктураПараметровЗапроса - Структура, содержащая параметры запроса. Данный модуль всегда
	//                               выполняется на сервере, поэтому в структуре не должны быть мутабельные значения.
	//                               
	// Возвращаемое значение:
	//  РезультатЗапроса - результат запроса.
	//
	Функция ВыполнитьЗапросВПривилегированномМодуле(ТекстЗапроса, СтруктураПараметровЗапроса) Экспорт	
		
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		Для Каждого ЭлемСтр Из СтруктураПараметровЗапроса Цикл
			Запрос.УстановитьПараметр(ЭлемСтр.Ключ, ЭлемСтр.Значение);
		КонецЦикла;	
		
		РезультатЗапроса = Неопределено;
		Попытка
			РезультатЗапроса = Запрос.Выполнить();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
		
		Возврат РезультатЗапроса;
		
	КонецФункции	
	
	// Функция заменяет комментарии в тексте запроса в зависимости от отражения документа в учете.
	//
	// Параметры
	//  ИсходныйТекстЗапроса – Строка – Текст запроса.
	//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
	//
	// Возвращаемое значение
	//   Строка – Текст запроса, в котором заменены комментарии.
	//
	Функция ЗаменитьКомментарииВТекстеЗапроса(ИсходныйТекстЗапроса,ВидОтраженияВУчете) Экспорт
		//Если ВидОтраженияВУчете = "Упр" ИЛИ ВидОтраженияВУчете =
		//Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксОрганизаций%", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксРегл%", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляУпрУчета", "");
		//ИначеЕсли ВидОтраженияВУчете = "Бух" ИЛИ ВидОтраженияВУчете =
		//Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете Тогда ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "БухгалтерскийУчет");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксОрганизаций%", "Организаций");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксРегл%", "Регл");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяПланаСчетов%", "Типовой");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляБухУчета", "");
		//ИначеЕсли ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВНалоговомУчете Тогда
		//	ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "НалоговыйУчет");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксОрганизаций%", "Организаций");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%СуффиксРегл%", "Регл");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяПланаСчетов%", "Налоговый");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляНалУчета", "");
		//КонецЕсли;
		Возврат ТекстЗапроса;
	КонецФункции // ЗаменитьКомментарииВТекстеЗапроса()
	
	#КонецОбласти
	
#КонецЕсли
