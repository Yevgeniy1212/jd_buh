#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура Рассчитать(Объект, КомментироватьРасчет = Ложь) Экспорт
	
	Отказ = Ложь;
	
	// проверим заполненность регл производственного календаря перед расчетов
	Если Не ПроцедурыУправленияПерсоналомСервер.РегламентированныйКалендарьЗаполнен(НачалоМесяца(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации)) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не заполнен регламентированный производственный календарь за %1 год'"),
						Формат(Объект.ПериодРегистрации, "ДФ='гггг'"));
		Возврат;
	КонецЕсли;

	// расчет связан с записью документа и его движений, поэтому выполняется в транзакции
	НачатьТранзакцию();
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	
	//Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
	//	ОтменитьТранзакцию();
	//	Возврат;
	//КонецЕсли;
		
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Объект.Организация, 
																		Объект.Организация, 
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = Объект.Организация;
	КонецЕсли;

	// определим является ли организация плательщиком СН по общеустановленному порядку
	ОрганизацияЯвляетсяПлательщикомСН = УчетнаяПолитикаСервер.ОрганизацияЯвляетсяПлательщикомСН(Объект.Организация, Объект.ПериодРегистрации);
	
	ПризнакиРаспределенияНалогов = УчетнаяПолитикаСервер.ПолучитьПризнакиРаспределенияНалогов(Объект.Организация, Объект.ПериодРегистрации);
	РаспределятьНалогиПоСтруктурнымЕдиницам = ПризнакиРаспределенияНалогов.РаспределятьНалогиПоСтруктурнымЕдиницам; 
	РаспределятьНалогиПоПодразделениямОрганизаций = ПризнакиРаспределенияНалогов.РаспределятьНалогиПоПодразделениямОрганизаций;
	ОтражениеПоПериодуРегистрации = УчетнаяПолитикаСервер.ОтражениеПоПериодуРегистрации(Объект.Организация, Объект.ПериодРегистрации);
	ГоловнаяОрганизация = ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Объект.Организация);
	
	// запишем доход в регистры ИПНСведенияОДоходах и СНСведенияОДоходах и ВОСМССведенияОДоходах
	ПараметрыРасчета = ПодготовитьПараметрыРасчета(Объект.Ссылка, Отказ);
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	
	Движения = ДокументОбъект.Движения;
	
	Если Объект.УчитыватьОПВ Тогда
		
		ТаблицаОПВСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(ПараметрыРасчета.Реквизиты, 
																				ПараметрыРасчета.ОПВСведенияОДоходах, 
																				"ОПВ", 
																				Движения.ОПВСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ);
		Движения.ОПВСведенияОДоходах.Загрузить(ТаблицаОПВСведенияОДоходах);
		Движения.ОПВСведенияОДоходах.Записать(Истина);
	КонецЕсли;
	
	Если Объект.УчитыватьИПН Тогда
		
		ТаблицаИПНСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(ПараметрыРасчета.Реквизиты, 
																				ПараметрыРасчета.ИПНСведенияОДоходах, 
																				"ИПН", 
																				Движения.ИПНСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ);
		Движения.ИПНСведенияОДоходах.Загрузить(ТаблицаИПНСведенияОДоходах);
		Движения.ИПНСведенияОДоходах.Записать(Истина);
	КонецЕсли;
	
	Если Объект.УчитыватьВОСМС Тогда
		
		ТаблицаВОСМССведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(ПараметрыРасчета.Реквизиты, 
																				ПараметрыРасчета.ВОСМССведенияОДоходах, 
																				"ВОСМС", 
																				Движения.ВОСМССведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ);
		Движения.ВОСМССведенияОДоходах.Загрузить(ТаблицаВОСМССведенияОДоходах);
		Движения.ВОСМССведенияОДоходах.Записать(Истина);
	КонецЕсли;
	
	Если ОрганизацияЯвляетсяПлательщикомСН И Объект.УчитыватьСН Тогда
		ТаблицаСНСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(ПараметрыРасчета.Реквизиты, 
																						ПараметрыРасчета.СНСведенияОДоходах, 
																						"СН", 
																						Движения.СНСведенияОДоходах.ВыгрузитьКолонки(),
																						Отказ);
		Движения.СНСведенияОДоходах.Загрузить(ТаблицаСНСведенияОДоходах);
		Движения.СНСведенияОДоходах.Записать(Истина);
	КонецЕсли; 
	
	Если Объект.УчитыватьСО Тогда
		
		ТаблицаСОСведенияОДоходах = РасчетЗарплатыСервер.ПодготовитьТаблицуСведенияОДоходах(ПараметрыРасчета.Реквизиты, 
																				ПараметрыРасчета.СОСведенияОДоходах, 
																				"СО", 
																				Движения.СОСведенияОДоходах.ВыгрузитьКолонки(),
																				Отказ);
		Движения.СОСведенияОДоходах.Загрузить(ТаблицаСОСведенияОДоходах);
		Движения.СОСведенияОДоходах.Записать(Истина);
	КонецЕсли;

	
	// Сначала удалим существующие движения
	// ИПНРасчетыСБюджетом
	НаборОПВРасчетыСФондами = РегистрыНакопления.ОПВРасчетыСФондами.СоздатьНаборЗаписей();
	НаборОПВРасчетыСФондами.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборОПВРасчетыСФондами.Записать();
	
	// ИПНРасчетыСБюджетом
	НаборИПНРасчетыСБюджетом = РегистрыНакопления.ИПНРасчетыСБюджетом.СоздатьНаборЗаписей();
	НаборИПНРасчетыСБюджетом.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборИПНРасчетыСБюджетом.Записать();

	// ВОСМСРасчетыСФондами
	НаборВОСМСРасчетыСФондами = РегистрыНакопления.ВОСМСРасчетыСФондами.СоздатьНаборЗаписей();
	НаборВОСМСРасчетыСФондами.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборВОСМСРасчетыСФондами.Записать();

	// СНИсчисленный
	НаборСНИсчисленный = РегистрыНакопления.СНИсчисленный.СоздатьНаборЗаписей();
	НаборСНИсчисленный.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборСНИсчисленный.Записать();
	
	// СведенияОбИсчисленииВычетовИПН
	НаборСведенияОбИсчисленииВычетовИПН = РегистрыНакопления.СведенияОбИсчисленииВычетовИПН.СоздатьНаборЗаписей();
	НаборСведенияОбИсчисленииВычетовИПН.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборСведенияОбИсчисленииВычетовИПН.Записать();
	
	// СОРасчетыСФондами
	НаборСОРасчетыСФондами = РегистрыНакопления.СОРасчетыСФондами.СоздатьНаборЗаписей();
	НаборСОРасчетыСФондами.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборСОРасчетыСФондами.Записать();
	КомментарийИПН = Неопределено;
	 	
	Если Объект.УчитыватьОПВ Тогда
		// Составим текст запроса для выбора списка физлиц, по которым надо считать ВОСМС
		СписокФизлицТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныйОПВ КАК Работники
		|
		|ГДЕ
		|	Работники.Ссылка = &парамРегистратор";
		
		// получение результата ВОСМС по прогрессивной шкале ставок
		ДанныеОПВ = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаОПВ(Неопределено, Объект.ПериодРегистрации, Налогоплательщик, Объект.Ссылка, СписокФизлицТекст,, ОтражениеПоПериодуРегистрации);
		Если ДанныеОПВ <> НеОпределено Тогда
			ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымОПВ(Объект.ИсчисленныйОПВ, Объект.ПериодРегистрации, НаборОПВРасчетыСФондами, ДанныеОПВ, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанный ОПВ для расчета ИПН и удержаний
			НаборОПВРасчетыСФондами.Записать();
		Иначе 
			Объект.ИсчисленныйОПВ.Очистить();
		КонецЕсли;
	ИначеЕсли Объект.ИсчисленныйОПВ.Количество() > 0 Тогда
		Объект.ИсчисленныйОПВ.Очистить();
	КонецЕсли;
	
	Если Объект.УчитыватьВОСМС Тогда
		// Составим текст запроса для выбора списка физлиц, по которым надо считать ВОСМС
		СписокФизлицТекстВОСМС = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныеВОСМС КАК Работники
		|
		|ГДЕ
		|	Работники.Ссылка = &парамРегистратор";
		
	ИначеЕсли Объект.ИсчисленныеВОСМС.Количество() > 0 Тогда
		Объект.ИсчисленныеВОСМС.Очистить();
	КонецЕсли;

	Если Объект.УчитыватьИПН Тогда
		// Составим текст запроса для выбора списка физлиц, по которым надо считать ИПН
		СписокФизлицТекстИПН = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныйИПН КАК Работники
		|
		|ГДЕ
		|	Работники.Ссылка = &парамРегистратор";
	КонецЕсли;

	Если Объект.УчитыватьИПН И Объект.УчитыватьВОСМС Тогда
		
		
		Если ПроведениеРасчетовСервер.ПрименятьКорректировкуПрочихНалоговВзносовОтчислений(Объект.Организация, Объект.ПериодРегистрации) Тогда
            
            ДополнительныеПараметрыЗапроса = Новый Структура;
            Если ПроведениеРасчетовСервер.ПрименятьВычетОПВиВОСМСДляГПХ(Объект.Организация, Объект.ПериодРегистрации) Тогда
                ДополнительныеПараметрыЗапроса.Вставить("ТолькоДоходОтНалоговогоАгента", Истина);
                // получение результата ВОСМС по прогрессивной шкале ставок
                ДанныеВОСМС = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, Объект.Ссылка, СписокФизлицТекстВОСМС, ОтражениеПоПериодуРегистрации);
                Если ДанныеВОСМС <> НеОпределено Тогда
                    ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВОСМС(Объект.ИсчисленныеВОСМС, Объект.ПериодРегистрации, НаборВОСМСРасчетыСФондами, ДанныеВОСМС, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
                    // Запишем расчитанный ВОСМС для расчета ИПН 
                    НаборВОСМСРасчетыСФондами.Записать();
                Иначе 
                    Объект.ИсчисленныеВОСМС.Очистить();
                КонецЕсли;
            КонецЕсли;

			// получение результата вычетов ИПН
			ДанныеВычетовИПН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВычетовИПН(Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекстИПН);
			Если ДанныеВычетовИПН <> НеОпределено Тогда
				ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(Объект.ВычетыИПН, Объект.ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, , НЕ РаспределятьНалогиПоСтруктурнымЕдиницам);
				// Запишем расчитанные вычеты для расчета ИПН
				НаборСведенияОбИсчисленииВычетовИПН.Записать();
			КонецЕсли;
            НаборВОСМСРасчетыСФондами.Очистить();
            
			// получение результата ИПН 
			ДанныеИПН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаИПН(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекстИПН);
			Если ДанныеИПН <> НеОпределено Тогда
				ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымИПН(Объект.ИсчисленныйИПН, Объект.ПериодРегистрации, Неопределено, ДанныеИПН, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
			КонецЕсли;
            
            ДополнительныеПараметрыЗапроса.Удалить("ТолькоДоходОтНалоговогоАгента");
			// получение результата ВОСМС по прогрессивной шкале ставок
			ДанныеВОСМС = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, Объект.Ссылка, СписокФизлицТекстВОСМС, ОтражениеПоПериодуРегистрации);
			Если ДанныеВОСМС <> НеОпределено Тогда
				ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВОСМС(Объект.ИсчисленныеВОСМС, Объект.ПериодРегистрации, НаборВОСМСРасчетыСФондами, ДанныеВОСМС, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
				// Запишем расчитанный ВОСМС для расчета ИПН 
				НаборВОСМСРасчетыСФондами.Записать();
			Иначе 
				Объект.ИсчисленныеВОСМС.Очистить();
			КонецЕсли;
			
		Иначе
			
			// получение результата ВОСМС по прогрессивной шкале ставок
			ДанныеВОСМС = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, Объект.Ссылка, СписокФизлицТекстВОСМС, ОтражениеПоПериодуРегистрации);
			Если ДанныеВОСМС <> НеОпределено Тогда
				ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВОСМС(Объект.ИсчисленныеВОСМС, Объект.ПериодРегистрации, НаборВОСМСРасчетыСФондами, ДанныеВОСМС, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
				// Запишем расчитанный ВОСМС для расчета ИПН 
				НаборВОСМСРасчетыСФондами.Записать();
			Иначе 
				Объект.ИсчисленныеВОСМС.Очистить();
			КонецЕсли;
			
			// получение результата вычетов ИПН
			ДанныеВычетовИПН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВычетовИПН(Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекстИПН);
			Если ДанныеВычетовИПН <> НеОпределено Тогда
				ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(Объект.ВычетыИПН, Объект.ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, , НЕ РаспределятьНалогиПоСтруктурнымЕдиницам);
				// Запишем расчитанные вычеты для расчета ИПН
				НаборСведенияОбИсчисленииВычетовИПН.Записать();
			КонецЕсли;
			
			// получение результата ИПН 
			ДанныеИПН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаИПН(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекстИПН);
			Если ДанныеИПН <> НеОпределено Тогда
				ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымИПН(Объект.ИсчисленныйИПН, Объект.ПериодРегистрации, Неопределено, ДанныеИПН, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
			КонецЕсли;
			
		КонецЕсли;
			
	ИначеЕсли Объект.УчитыватьИПН Тогда
		
		// получение результата вычетов ИПН
		ДанныеВычетовИПН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВычетовИПН(Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекстИПН);
		Если ДанныеВычетовИПН <> НеОпределено Тогда
			ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(Объект.ВычетыИПН, Объект.ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, , НЕ РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанные вычеты для расчета ИПН
			НаборСведенияОбИсчисленииВычетовИПН.Записать();
		КонецЕсли;
		
		// получение результата ИПН 
		ДанныеИПН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаИПН(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекстИПН);
		Если ДанныеИПН <> НеОпределено Тогда
			ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымИПН(Объект.ИсчисленныйИПН, Объект.ПериодРегистрации, Неопределено, ДанныеИПН, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
		
		
	ИначеЕсли Объект.УчитыватьВОСМС Тогда
		
		// получение результата ВОСМС по прогрессивной шкале ставок
		ДанныеВОСМС = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, Объект.Ссылка, СписокФизлицТекстВОСМС, ОтражениеПоПериодуРегистрации);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымВОСМС(Объект.ИсчисленныеВОСМС, Объект.ПериодРегистрации, НаборВОСМСРасчетыСФондами, ДанныеВОСМС, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанный ВОСМС для расчета ИПН 
			НаборВОСМСРасчетыСФондами.Записать();
		Иначе 
			Объект.ИсчисленныеВОСМС.Очистить();
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если ОрганизацияЯвляетсяПлательщикомСН И Объект.УчитыватьСН
			И Объект.ВидРасчета.ОблагаетсяСН <> Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом Тогда
		// Составим текст запроса для выбора списка физлиц, по которым надо считать СН
		СписокФизлицТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.Физлицо КАК Физлицо
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныйСН КАК Работники
		|
		|ГДЕ
		|	Работники.Ссылка = &парамРегистратор";
		
		// получение результата СН по регрессивной шкале ставок
		ДанныеСН = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаСН(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, ГоловнаяОрганизация, Объект.Ссылка, СписокФизлицТекст);
		Если ДанныеСН <> НеОпределено Тогда
			ПроведениеРасчетовСервер.ЗаполнитьТабличнуюЧастьПоДаннымСН(Объект.ИсчисленныйСН, Объект.ПериодРегистрации, ДанныеСН, Налогоплательщик, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.УчитыватьСО
			И Объект.ВидРасчета.ОблагаетсяСО <> Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом Тогда
		// Составим текст запроса для выбора списка физлиц, по которым надо считать СО
		СписокФизлицТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.Физлицо КАК Физлицо
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныеСО КАК Работники
		|
		|ГДЕ
		|	Работники.Ссылка = &парамРегистратор";
		
		// получение результата СО
		ДанныеСО = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаСО(Неопределено, Объект.ПериодРегистрации,  Налогоплательщик, Объект.Ссылка, СписокФизлицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
		Если ДанныеСО <> НеОпределено Тогда
			ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымСО(Объект.ИсчисленныеСО, Объект.ПериодРегистрации, НаборСОРасчетыСФондами, ДанныеСО, Налогоплательщик, Объект.Организация, ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, , Не РаспределятьНалогиПоСтруктурнымЕдиницам);
		    НаборСОРасчетыСФондами.Записать();
		Иначе 
			Объект.ИсчисленныеСО.Очистить();
		КонецЕсли;
	ИначеЕсли Объект.ИсчисленныеСО.Количество() > 0 Тогда
		Объект.ИсчисленныеСО.Очистить();
	КонецЕсли;
	
	
	// Очистим движения по регистру ОПВСведенияОДоходах
	Движения.ОПВСведенияОДоходах.Очистить();
	Движения.ОПВСведенияОДоходах.Записать();
	
	// Очистим движения по регистру ИПНСведенияОДоходах
	Движения.ИПНСведенияОДоходах.Очистить();
	Движения.ИПНСведенияОДоходах.Записать();
	
	// Очистим движения по регистру ВОСМССведенияОДоходах
	Движения.ВОСМССведенияОДоходах.Очистить();
	Движения.ВОСМССведенияОДоходах.Записать();
	
	// Очистим движения по регистру СОСведенияОДоходах
	Движения.СОСведенияОДоходах.Очистить();
	Движения.СОСведенияОДоходах.Записать();
	
	НаборОПВРасчетыСФондами.Очистить();
	НаборОПВРасчетыСФондами.Записать();
	
	НаборВОСМСРасчетыСФондами.Очистить();
	НаборВОСМСРасчетыСФондами.Записать();

	// Очистим движения по регистру СНСведенияОДоходах
	Движения.СНСведенияОДоходах.Очистить();
	Движения.СНСведенияОДоходах.Записать();
	
	// Очистим движения по регистру ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами
	Движения.ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами.Очистить();
	Движения.ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами.Записать();

	// Очистим движения по регистру СведенияОбИсчисленииВычетовИПН
	НаборСведенияОбИсчисленииВычетовИПН.Очистить();
	НаборСведенияОбИсчисленииВычетовИПН.Записать();
	
	// Очистим движения по регистру СОРасчетыСФондам
	НаборСОРасчетыСФондами.Очистить();
	НаборСОРасчетыСФондами.Записать();

	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();	
	
КонецПроцедуры

// Заполняет счета расчетов с контрагентом в документе
//
Процедура ЗаполнитьСчетаУчетаРасчетов(Объект) Экспорт
	
	СчетаУчета = УправлениеВзаиморасчетамиСервер.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
	Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПоДокументуОснования(Объект, Основание) Экспорт
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, "ВалютаДокумента, Контрагент, Ссылка, Дата");
	
	Если Основание.Пустая() Тогда
		Основание = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ВидОперации");
		Если ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия 
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПоступлениеОтНерезидента 
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары 
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Услуги 
			И ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства Тогда
			ТекстСообщения = НСтр("ru='Для документов с видом операции, отличным от ""Покупка"", ""Товары"", ""Услуги"", ""Основные средства"" или ""Поступление от нерезидента"" ввод на основании не поддерживается!'");
			ВызватьИсключение(ТекстСообщения);
			Основание = Неопределено;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	     	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыОснования.Контрагент, "ЮрФизЛицо");
		Если ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru='Контрагент <%1> не является физическим лицом, ввод документа ""Расчет налогов при поступлении активов и услуг"" для него не предусмотрен!'"), 
								РеквизитыОснования.Контрагент) ;
			ВызватьИсключение(ТекстСообщения);
			Основание = Неопределено;
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если РеквизитыОснования.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='У документа %1 установлена валюта, отличная от валюты регл. учета, расчет налогов не поддерживается!'"),
							Основание.Ссылка);
		ВызватьИсключение(ТекстСообщения);
		Основание = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если НЕ Справочники.Контрагенты.ВозможноИспользованиеКонтрагента(РеквизитыОснования.Контрагент, Объект) Тогда 
		Возврат;
	КонецЕсли;
	
	// заполним прочие реквизиты
	Если ОбщегоНазначенияБК.ЕстьПредопределенныйЭлемент("ПрочиеДоходыОблагаемыеУИсточника", Метаданные.ПланыВидовРасчета.ОсновныеНачисленияОрганизаций) Тогда
		Объект.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПрочиеДоходыОблагаемыеУИсточника;
	Иначе
		Объект.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	Объект.ДокументОснование = РеквизитыОснования.Ссылка;
	Объект.ПериодРегистрации = НачалоМесяца(РеквизитыОснования.Дата);
	
	// очистим договор если он валютный
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда 
		Если НЕ Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда 
			Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			ТекстСообщения = НСтр("ru='Договор контрагента должен быть в валюте регламентированного учета'");
			ВызватьИсключение(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	// подсчитаем сумму по документу
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Объект.СуммаДокумента = Основание.Товары.Итог("Сумма") + Основание.Услуги.Итог("Сумма") + Основание.ОС.Итог("Сумма");
		Если Основание.УчитыватьНДС И Основание.СуммаВключаетНДС Тогда
			Объект.СуммаДокумента = Объект.СуммаДокумента - Основание.Товары.Итог("СуммаНДС") - Основание.Услуги.Итог("СуммаНДС") - Основание.ОС.Итог("СуммаНДС");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
		Объект.СуммаДокумента = Основание.Сумма + Основание.Товары.Итог("Сумма") + Основание.ОС.Итог("Сумма");
		Если Основание.УчитыватьНДС И Основание.СуммаВключаетНДС Тогда
			Объект.СуммаДокумента = Объект.СуммаДокумента - Основание.СуммаНДС - Основание.Товары.Итог("СуммаНДС") - Основание.ОС.Итог("СуммаНДС");
		КонецЕсли;
	Иначе
		Объект.СуммаДокумента = Основание.НМА.Итог("Сумма");
		Если Основание.УчитыватьНДС И Основание.СуммаВключаетНДС Тогда
			Объект.СуммаДокумента = Объект.СуммаДокумента - Основание.НМА.Итог("СуммаНДС");
		КонецЕсли;
	КонецЕсли;
	
	Справочники.ФизическиеЛица.ПроверитьИСоздатьФизЛицоПоКонтрагенту(Объект);
	
	Объект.ИсчисленныйОПВ.Очистить();
	
	НоваяСтрока = Объект.ИсчисленныйОПВ.Добавить();
	НоваяСтрока.ФизЛицо = Объект.Контрагент;
	НоваяСтрока.МесяцНалоговогоПериода = Объект.ПериодРегистрации;
	
	Объект.ИсчисленныйИПН.Очистить();
	
	НоваяСтрока = Объект.ИсчисленныйИПН.Добавить();
	НоваяСтрока.ФизЛицо = Объект.Контрагент;
	НоваяСтрока.МесяцНалоговогоПериода = Объект.ПериодРегистрации;
	
	Объект.ИсчисленныеВОСМС.Очистить();
	
	НоваяСтрока = Объект.ИсчисленныеВОСМС.Добавить();
	НоваяСтрока.ФизЛицо = Объект.Контрагент;
	НоваяСтрока.МесяцНалоговогоПериода = Объект.ПериодРегистрации;
	
	Объект.ИсчисленныеСО.Очистить();

	Если Объект.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПрочиеДоходыОблагаемыеУИсточника 
		И Объект.ВидРасчета.ОблагаетсяСО = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом
		И Объект.Дата >= Дата(2025,1,1) Тогда 
		Объект.УчитыватьСО = Истина;
		НоваяСтрока = Объект.ИсчисленныеСО.Добавить();
		НоваяСтрока.ФизЛицо = Объект.Контрагент;
		НоваяСтрока.МесяцНалоговогоПериода = Объект.ПериодРегистрации; 
	КонецЕсли;

	// Заполнить СчетУчетаРасчетовПоАвансам и СчетУчетаРасчетовСКонтрагентом значениями по умолчанию.
	ЗаполнитьСчетаУчетаРасчетов(Объект);
	
	// Заполнить СчетУчетаРасчетовПоАвансам и СчетУчетаРасчетовСКонтрагентом значениями основания, если они есть в основании.
	МетаданныеОснования = Основание.Метаданные();
	Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента("СчетУчетаРасчетовПоАвансам", МетаданныеОснования) Тогда
		Объект.СчетУчетаРасчетовПоАвансам = Основание.СчетУчетаРасчетовПоАвансам; 	
	КонецЕсли;
	Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента("СчетУчетаРасчетовСКонтрагентом", МетаданныеОснования) Тогда
		Объект.СчетУчетаРасчетовСКонтрагентом = Основание.СчетУчетаРасчетовСКонтрагентом;	
	КонецЕсли;
		
	Объект.ДокументОснование = Основание;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Расчет

Функция ПодготовитьПараметрыРасчета(Ссылка, Отказ)
	
	ПараметрыРасчета = Новый Структура;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.ПериодРегистрации);
		
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Реквизиты.Дата,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Контрагент,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации КАК ПериодРегистрации,
		|	Реквизиты.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ВидРасчета,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяОПВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВ,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяИПН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяИПН,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяВОСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяВОСМС,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяСН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСН,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяСО, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСО,
		|	Реквизиты.СуммаДокумента КАК СуммаДохода,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.Контрагент.ФизЛицо КАК ФизЛицо,
		|	Реквизиты.УчитыватьОПВ,
		|	Реквизиты.УчитыватьИПН,
		|	Реквизиты.УчитыватьВОСМС,
		|	Реквизиты.УчитыватьСН,
		|	Реквизиты.УчитыватьСО
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Период,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.СтруктурноеПодразделение,
		|	ДанныеДокумента.ПериодРегистрации,
		|	ДанныеДокумента.МесяцНалоговогоПериода,
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.ВидРасчета,
		|	ДанныеДокумента.ОблагаетсяОПВ,
		|	ДанныеДокумента.ОблагаетсяИПН,
		|	ДанныеДокумента.ОблагаетсяВОСМС,
		|	ДанныеДокумента.ОблагаетсяСН,
		|	ДанныеДокумента.ОблагаетсяСО,
		|	ДанныеДокумента.СуммаДохода,
		|	ДанныеДокумента.ПодразделениеОрганизации,
		|	ДанныеДокумента.ФизЛицо,
		|	ДанныеДокумента.УчитыватьОПВ,
		|	ДанныеДокумента.УчитыватьИПН,
		|	ДанныеДокумента.УчитыватьВОСМС,
		|	ДанныеДокумента.УчитыватьСН,
		|	ДанныеДокумента.УчитыватьСО,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА ДанныеДокумента.Организация
		|					ИНАЧЕ ДанныеДокумента.Организация.ГоловнаяОрганизация
		|				КОНЕЦ
		|		ИНАЧЕ ДанныеДокумента.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомСН, ЛОЖЬ) КАК ОрганизацияЯвляетсяПлательщикомСН,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УпрощенныйУчетИПНиОПВ, ЛОЖЬ) КАК УпрощенныйУчетИПНиОПВ
		|ПОМЕСТИТЬ ВТ_Реквизиты
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ДанныеДокумента
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&Период, ) КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Период,
		|	Реквизиты.Контрагент,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.МесяцНалоговогоПериода,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.ОблагаетсяОПВ,
		|	Реквизиты.ОблагаетсяИПН,
		|	Реквизиты.ОблагаетсяВОСМС,
		|	Реквизиты.ОблагаетсяСН,
		|	Реквизиты.ОблагаетсяСО,
		|	Реквизиты.СуммаДохода,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.ФизЛицо,
		|	Реквизиты.УчитыватьОПВ,
		|	Реквизиты.УчитыватьИПН,
		|	Реквизиты.УчитыватьВОСМС,
		|	Реквизиты.УчитыватьСН,
		|	Реквизиты.УчитыватьСО,
		|	Реквизиты.ГоловнаяОрганизация,
		|	Реквизиты.ОрганизацияЯвляетсяПлательщикомСН,
		|	Реквизиты.ОтражениеПоПериодуРегистрации,
		|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций,
		|	Реквизиты.УпрощенныйУчетИПНиОПВ
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";

	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Результат.Выгрузить()[0]);
	
	ПараметрыРасчета.Вставить("Реквизиты", Реквизиты);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Реквизиты.ПериодРегистрации КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	Реквизиты.Организация КАК Налогоплательщик,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Организация КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
		|	Реквизиты.Контрагент КАК ФизЛицо,
		|	Реквизиты.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.СуммаДохода
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.ПериодРегистрации КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	Реквизиты.Организация КАК Налогоплательщик,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Организация КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
		|	Реквизиты.Контрагент КАК ФизЛицо,
		|	Реквизиты.ОблагаетсяИПН КАК ОблагаетсяИПН,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.СуммаДохода
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.ПериодРегистрации КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	Реквизиты.Организация КАК Налогоплательщик,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Организация КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
		|	Реквизиты.ФизЛицо КАК ФизЛицо,
		|	Реквизиты.ОблагаетсяСН КАК ОблагаетсяСН,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.СуммаДохода
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|;
		|  
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.ПериодРегистрации КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	Реквизиты.Организация КАК Налогоплательщик,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Организация КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
		|	Реквизиты.Контрагент КАК ФизЛицо,
		|	Реквизиты.ОблагаетсяВОСМС КАК ОблагаетсяВОСМС,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.СуммаДохода
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.ПериодРегистрации КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	Реквизиты.Организация КАК Налогоплательщик,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Организация КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации,
		|	Реквизиты.Контрагент КАК ФизЛицо,
		|	Реквизиты.ОблагаетсяСО КАК ОблагаетсяСО,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.СуммаДохода
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";
	Результат = Запрос.ВыполнитьПакет();
	
	ПараметрыРасчета.Вставить("ОПВСведенияОДоходах", Результат[0].Выгрузить());
	ПараметрыРасчета.Вставить("ИПНСведенияОДоходах", Результат[1].Выгрузить());
	ПараметрыРасчета.Вставить("СНСведенияОДоходах", Результат[2].Выгрузить());
	ПараметрыРасчета.Вставить("ВОСМССведенияОДоходах", Результат[3].Выгрузить());
	ПараметрыРасчета.Вставить("СОСведенияОДоходах", Результат[4].Выгрузить());
	
	Возврат ПараметрыРасчета;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	НомераТаблиц = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка["ПериодРегистрации"]);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Запрос.УстановитьПараметр("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	//ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Реквизиты.Организация, Реквизиты.Период);	
	Реквизиты.Вставить("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль, "ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль");
	
	// НеобходимостьОтраженияВНУ
	НеобходимостьОтраженияВНУ 						= ОрганизацияПлательщикНалогаНаПрибыль И Реквизиты.УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ Реквизиты.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	Реквизиты.Вставить("НеобходимостьОтраженияВНУ", НеобходимостьОтраженияВНУ);
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(НеобходимостьОтраженияВНУ, "НеобходимостьОтраженияВНУ");
	
	Запрос.УстановитьПараметр("Организация", 			   		Реквизиты.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", 		Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение",  		Реквизиты.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("ФизЛицо", 			        	Реквизиты.ФизЛицо);
	Запрос.УстановитьПараметр("НеобходимостьОтраженияВНУ", 		НеобходимостьОтраженияВНУ);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаКонтроляИПН",                Дата(2015, 07, 01));
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																							Реквизиты.Организация,
																							Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = Реквизиты.Организация;   
	КонецЕсли;

	Запрос.УстановитьПараметр("Налогоплательщик",  Налогоплательщик);
	
	ВедетсяУчетПоСотрудникам = ОбщегоНазначенияБК.ПолучитьПризнакВеденияУчетаПоСотрудникам();
	Запрос.УстановитьПараметр("ВедетсяУчетПоСотрудникам",  ВедетсяУчетПоСотрудникам);
	Запрос.УстановитьПараметр("парамВидСубконтоКонтрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	
	ПодготовитьТаблицыДокумента(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаИсчисленныйИПН(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаИсчисленныйСН(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаИсчисленныйОПВ(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаИсчисленныеВОСМС(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаОПВСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаИсчисленныйОПВПодлежитПеречислениюВФонды(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаИПНСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаВОСМССведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаСНСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами(НомераТаблиц, Реквизиты)
				+ ТекстЗапросаПогашениеЗадолженности(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаОтражениеЗатратПоСоцНалогу(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаСведенияОбИсчисленииВычетовИПН(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаИсчисленныеСО(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаСОСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
				+ ТекстЗапросаОтражениеЗатратПоСоцОтчислениям(НомераТаблиц, Реквизиты, ПараметрыПроведения);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
		
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВременнаяТаблица_ДанныеДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблица_Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Реквизиты.Дата,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Контрагент,
		|	Реквизиты.Контрагент.ЮрФизЛицо КАК ЮрФизЛицо,
		|	Реквизиты.Сделка,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации КАК ПериодРегистрации,
		|	Реквизиты.ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ВидРасчета,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяОПВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВ,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяИПН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяИПН,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяВОСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяВОСМС,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяСН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСН,
		|	ЕСТЬNULL(Реквизиты.ВидРасчета.ОблагаетсяСО, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСО,
		|	Реквизиты.СуммаДокумента КАК СуммаДокумента,
		|	Реквизиты.ПодразделениеОрганизации,
		|	ЕСТЬNULL(Реквизиты.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ) КАК ЯвляетсяСтруктурнымПодразделением,
		|	Реквизиты.СубконтоДт1,
		|	Реквизиты.СубконтоДт2,
		|	Реквизиты.СубконтоДт3,
		|	Реквизиты.СубконтоДтНУ1,
		|	Реквизиты.СубконтоДтНУ2,
		|	Реквизиты.СубконтоДтНУ3,
		|	Реквизиты.СчетЗатрат,
		|	Реквизиты.СчетЗатратНУ,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам,
		|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
		|	Реквизиты.ДоговорКонтрагента,
		|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
		|	Реквизиты.Контрагент.ФизЛицо КАК ФизЛицо,
		|	Реквизиты.УчитыватьКПН,
		|	Реквизиты.УчитыватьОПВ,
		|	Реквизиты.УчитыватьИПН,
		|	Реквизиты.УчитыватьВОСМС,
		|	Реквизиты.УчитыватьСН,
		|	Реквизиты.УчитыватьСО,
		|	Реквизиты.ВидУчетаНУ,
		|	Реквизиты.ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.РасчетНалоговПриПоступленииАктивовУслуг КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Период,
		|	ДанныеДокумента.Контрагент,
		|	ДанныеДокумента.ЮрФизЛицо,
		|	ДанныеДокумента.Сделка,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.СтруктурноеПодразделение,
		|	ДанныеДокумента.ПериодРегистрации,
		|	ДанныеДокумента.МесяцНалоговогоПериода,
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.ВидРасчета,
		|	ДанныеДокумента.ОблагаетсяОПВ,
		|	ДанныеДокумента.ОблагаетсяИПН,
		|	ДанныеДокумента.ОблагаетсяВОСМС,
		|	ДанныеДокумента.ОблагаетсяСН,
		|	ДанныеДокумента.ОблагаетсяСО,
		|	ДанныеДокумента.СуммаДокумента,
		|	ДанныеДокумента.ПодразделениеОрганизации,
		|	ДанныеДокумента.ЯвляетсяСтруктурнымПодразделением,
		|	ДанныеДокумента.СубконтоДт1,
		|	ДанныеДокумента.СубконтоДт2,
		|	ДанныеДокумента.СубконтоДт3,
		|	ДанныеДокумента.СубконтоДтНУ1,
		|	ДанныеДокумента.СубконтоДтНУ2,
		|	ДанныеДокумента.СубконтоДтНУ3,
		|	ДанныеДокумента.СчетЗатрат, 
		|	ДанныеДокумента.СчетЗатратНУ,
		|	ДанныеДокумента.СчетУчетаРасчетовПоАвансам,
		|	ДанныеДокумента.СчетУчетаРасчетовСКонтрагентом,
		|	ДанныеДокумента.ДоговорКонтрагента,
		|	ДанныеДокумента.ВалютаВзаиморасчетов,
		|	ДанныеДокумента.ВедениеВзаиморасчетов,
		|	ДанныеДокумента.ФизЛицо,
		|	ДанныеДокумента.УчитыватьКПН,
		|	ДанныеДокумента.УчитыватьОПВ,
		|	ДанныеДокумента.УчитыватьИПН,
		|	ДанныеДокумента.УчитыватьВОСМС,
		|	ДанныеДокумента.УчитыватьСН,
		|	ДанныеДокумента.УчитыватьСО,
		|	ДанныеДокумента.ВидУчетаНУ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА ДанныеДокумента.Организация
		|					ИНАЧЕ ДанныеДокумента.Организация.ГоловнаяОрганизация
		|				КОНЕЦ
		|		ИНАЧЕ ДанныеДокумента.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ЛОЖЬ КАК НеобходимостьОтраженияВНУ,
		|	ЛОЖЬ КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОрганизацияЯвляетсяПлательщикомСН, ЛОЖЬ) КАК ОрганизацияЯвляетсяПлательщикомСН,
		|	&ПоддержкаРаботыСоСтруктурнымиПодразделениями КАК ПоддержкаРаботыСоСтруктурнымиПодразделениями,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.УпрощенныйУчетИПНиОПВ, ЛОЖЬ) КАК УпрощенныйУчетИПНиОПВ,
		|	ДанныеДокумента.ДокументОснование
		|ПОМЕСТИТЬ ВТ_Реквизиты
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ДанныеДокумента
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&Период, ) КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Период,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ЮрФизЛицо,
		|	Реквизиты.Сделка,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.МесяцНалоговогоПериода,
		|	Реквизиты.Ссылка,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.ВидРасчета,
		|	Реквизиты.ОблагаетсяОПВ,
		|	Реквизиты.ОблагаетсяИПН,
		|	Реквизиты.ОблагаетсяВОСМС,
		|	Реквизиты.ОблагаетсяСН,
		|	Реквизиты.ОблагаетсяСО,
		|	Реквизиты.СуммаДокумента,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.ЯвляетсяСтруктурнымПодразделением,
		|	Реквизиты.СубконтоДт1,
		|	Реквизиты.СубконтоДт2,
		|	Реквизиты.СубконтоДт3,
		|	Реквизиты.СубконтоДтНУ1,
		|	Реквизиты.СубконтоДтНУ2,
		|	Реквизиты.СубконтоДтНУ3,
		|	Реквизиты.СчетЗатрат,
		|	Реквизиты.СчетЗатратНУ,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам,
		|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
		|	Реквизиты.ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов,
		|	Реквизиты.ВедениеВзаиморасчетов,
		|	Реквизиты.ФизЛицо,
		|	Реквизиты.УчитыватьКПН,
		|	Реквизиты.УчитыватьОПВ,
		|	Реквизиты.УчитыватьИПН,
		|	Реквизиты.УчитыватьВОСМС,
		|	Реквизиты.УчитыватьСН,
		|	Реквизиты.УчитыватьСО,
		|	Реквизиты.ВидУчетаНУ,
		|	Реквизиты.ГоловнаяОрганизация,
		|	Реквизиты.НеобходимостьОтраженияВНУ,
		|	Реквизиты.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
		|	Реквизиты.ОрганизацияЯвляетсяПлательщикомСН,
		|   Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями,
		|	Реквизиты.ОтражениеПоПериодуРегистрации,
		|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций,
		|	Реквизиты.УпрощенныйУчетИПНиОПВ,
		|	Реквизиты.ДокументОснование
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицыДокумента(Запрос, Реквизиты)
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсчисленныйИПН.НомерСтроки,
	|	ИсчисленныйИПН.Ссылка,
	|	ИсчисленныйИПН.ФизЛицо КАК ФизЛицо,
	|	ИсчисленныйИПН.Налог,
	|	ИсчисленныйИПН.ПримененныйВычет,
	|	ИсчисленныйИПН.ПримененнаяЛьгота,
	|	ИсчисленныйИПН.РазрешенныйВычет,
	|	ИсчисленныйИПН.ОблагаемаяБаза,
	|	ИсчисленныйИПН.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТ_ИсчисленныйИПН
	|ИЗ
	|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныйИПН КАК ИсчисленныйИПН
	|ГДЕ
	|	ИсчисленныйИПН.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсчисленныйОПВ.НомерСтроки,
	|	ИсчисленныйОПВ.Ссылка,
	|	ИсчисленныйОПВ.ФизЛицо КАК ФизЛицо,
	|	ИсчисленныйОПВ.ОблагаемаяБаза,
	|	ИсчисленныйОПВ.МесяцНалоговогоПериода,
	|	ИсчисленныйОПВ.Взнос
	|ПОМЕСТИТЬ ВТ_ИсчисленныйОПВ
	|ИЗ
	|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныйОПВ КАК ИсчисленныйОПВ
	|ГДЕ
	|	ИсчисленныйОПВ.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсчисленныеВОСМС.НомерСтроки,
	|	ИсчисленныеВОСМС.Ссылка,
	|	ИсчисленныеВОСМС.ФизЛицо КАК ФизЛицо,
	|	ИсчисленныеВОСМС.ОблагаемаяБаза,
	|	ИсчисленныеВОСМС.МесяцНалоговогоПериода,
	|	ИсчисленныеВОСМС.Взнос
	|ПОМЕСТИТЬ ВТ_ИсчисленныеВОСМС
	|ИЗ
	|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныеВОСМС КАК ИсчисленныеВОСМС
	|ГДЕ
	|	ИсчисленныеВОСМС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсчисленныйСН.НомерСтроки,
	|	ИсчисленныйСН.ФизЛицо,
	|	ИсчисленныйСН.Налог,
	|	ИсчисленныйСН.ОблагаемаяБаза,
	|	ИсчисленныйСН.МесяцНалоговогоПериода
	|ПОМЕСТИТЬ ВТ_ИсчисленныйСН
	|ИЗ
	|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныйСН КАК ИсчисленныйСН
	|ГДЕ
	|	ИсчисленныйСН.Ссылка = &Ссылка 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсчисленныеСО.НомерСтроки,
	|	ИсчисленныеСО.Ссылка,
	|	ИсчисленныеСО.ФизЛицо КАК ФизЛицо,
	|	ИсчисленныеСО.ОблагаемаяБаза,
	|	ИсчисленныеСО.МесяцНалоговогоПериода,
	|	ИсчисленныеСО.Отчисление,
	|	Реквизиты.СчетЗатрат
	|ПОМЕСТИТЬ ВТ_ИсчисленныеСО
	|ИЗ
	|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ИсчисленныеСО КАК ИсчисленныеСО
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ИсчисленныеСО.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВычетыИПН.НомерСтроки,
	|	ВычетыИПН.Ссылка,
	|	ВычетыИПН.ФизЛицо КАК ФизЛицо,
	|	ВычетыИПН.ПримененныйВычет,
	|	ВычетыИПН.РазрешенныйВычет,
	|	ВычетыИПН.ВидВычета КАК ВидВычета
	|ПОМЕСТИТЬ ВТ_ВычетыИПН
	|ИЗ
	|	Документ.РасчетНалоговПриПоступленииАктивовУслуг.ВычетыИПН КАК ВычетыИПН
	|ГДЕ
	|	ВычетыИПН.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсчисленныйИПН.ФизЛицо,
	|	Реквизиты.ПериодРегистрации КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыСотрудников
	|ИЗ
	|	ВТ_ИсчисленныйИПН КАК ИсчисленныйИПН
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсчисленныйСН.ФизЛицо,
	|	Реквизиты.ПериодРегистрации
	|ИЗ
	|	ВТ_ИсчисленныйСН КАК ИсчисленныйСН
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ИсчисленныеВОСМС.ФизЛицо,
	|	Реквизиты.ПериодРегистрации
	|ИЗ
	|	ВТ_ИсчисленныеВОСМС КАК ВТ_ИсчисленныеВОСМС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВычетыИПН.ФизЛицо,
	|	Реквизиты.ПериодРегистрации
	|ИЗ
	|	ВТ_ВычетыИПН КАК ВТ_ВычетыИПН
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)";
			
	Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
				 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина, Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ НЕ Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам);
	Результат = Запрос.Выполнить();
	                                                 
КонецПроцедуры

Функция ТекстЗапросаВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами(НомераТаблиц, Реквизиты) 
	
	НомераТаблиц.Вставить("ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами", НомераТаблиц.Количество());
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Реквизиты.ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ФизЛицо,
		|	СУММА(Реквизиты.СуммаДокумента -
		|			ВЫБОР
		|				КОГДА Реквизиты.УчитыватьОПВ 
		|					ТОГДА ЕСТЬNULL(ИсчисленныйОПВ.Взнос, 0)
		|				ИНАЧЕ 0
		|			КОНЕЦ - 
		|			ВЫБОР
		|				КОГДА Реквизиты.УчитыватьИПН 
		|					ТОГДА ЕСТЬNULL(ИсчисленныйИПН.Налог, 0)
		|				ИНАЧЕ 0
		|			КОНЕЦ - 
		|			ВЫБОР
		|				КОГДА Реквизиты.УчитыватьВОСМС 
		|					ТОГДА ЕСТЬNULL(ИсчисленныеВОСМС.Взнос, 0)
		|				ИНАЧЕ 0
		|			КОНЕЦ -
		|			ВЫБОР
		|				КОГДА Реквизиты.УчитыватьСО И ВидыСубконтоКонтрагенты.ВидСубконто = &парамВидСубконтоКонтрагенты
		|					ТОГДА ЕСТЬNULL(ИсчисленныеСО.Отчисление, 0)
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК СуммаВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
		|				И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL 
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсчисленныйОПВ КАК ИсчисленныйОПВ
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсчисленныйИПН КАК ИсчисленныйИПН
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсчисленныеВОСМС КАК ИсчисленныеВОСМС
		|		ПО (ИСТИНА) 
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсчисленныеСО КАК ИсчисленныеСО
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоКонтрагенты
		|			ПО (Реквизиты.СчетЗатрат = ВидыСубконтоКонтрагенты.Ссылка)
		|			И (ВидыСубконтоКонтрагенты.ВидСубконто = &парамВидСубконтоКонтрагенты)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
		|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.Дата,
		|	Реквизиты.Контрагент,
		|	Реквизиты.ФизЛицо, 
		|	Реквизиты.СчетЗатрат,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
		|				И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL 
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаИсчисленныйИПН(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьИПН Тогда
	
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НАЧАЛОПЕРИОДА(ВЫБОР КОГДА Реквизиты.ОтражениеПоПериодуРегистрации ТОГДА Реквизиты.ПериодРегистрации ИНАЧЕ СтрокаИсчисленныйИПН.МесяцНалоговогоПериода КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
			|	СтрокаИсчисленныйИПН.ФизЛицо,
			|	СтрокаИсчисленныйИПН.Налог,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	СтрокаИсчисленныйИПН.НомерСтроки,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныйИПН КАК СтрокаИсчисленныйИПН
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйИПН.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|УПОРЯДОЧИТЬ ПО 
			|	СтрокаИсчисленныйИПН.НомерСтроки
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ИсчисленныйИПН", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ИсчисленныйИПН", Неопределено);		
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсчисленныеВОСМС(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьВОСМС Тогда
	
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НАЧАЛОПЕРИОДА(ВЫБОР КОГДА Реквизиты.ОтражениеПоПериодуРегистрации ТОГДА Реквизиты.ПериодРегистрации ИНАЧЕ СтрокаИсчисленныеВОСМС.МесяцНалоговогоПериода КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
			|	СтрокаИсчисленныеВОСМС.ФизЛицо,
			|	СтрокаИсчисленныеВОСМС.Взнос,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
			|	СтрокаИсчисленныеВОСМС.НомерСтроки,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныеВОСМС КАК СтрокаИсчисленныеВОСМС
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныеВОСМС.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|УПОРЯДОЧИТЬ ПО 
			|	СтрокаИсчисленныеВОСМС.НомерСтроки
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ИсчисленныеВОСМС", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ИсчисленныеВОСМС", Неопределено);		
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсчисленныйОПВ(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьОПВ Тогда
	
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НАЧАЛОПЕРИОДА(ВЫБОР
			|			КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|				ТОГДА Реквизиты.ПериодРегистрации
			|			ИНАЧЕ СтрокаИсчисленныйОПВ.МесяцНалоговогоПериода
			|		КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК МесяцВыплатыДоходов,
			|	СтрокаИсчисленныйОПВ.ФизЛицо КАК ФизЛицо,
			|	СтрокаИсчисленныйОПВ.Взнос КАК Взнос,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
			|	СтрокаИсчисленныйОПВ.НомерСтроки КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление) КАК ВидСтроки,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
			|				И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|ИЗ
			|	ВТ_ИсчисленныйОПВ КАК СтрокаИсчисленныйОПВ
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйОПВ.ФизЛицо = МестоРаботы.ФизЛицо
			|			И (Реквизиты.ПериодРегистрации = МестоРаботы.Период)
			|
			|УПОРЯДОЧИТЬ ПО
			|	СтрокаИсчисленныйОПВ.НомерСтроки" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ИсчисленныйОПВ", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ИсчисленныйОПВ", Неопределено);		
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсчисленныйОПВПодлежитПеречислениюВФонды(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьОПВ Тогда
	
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НАЧАЛОПЕРИОДА(ВЫБОР
			|			КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|				ТОГДА Реквизиты.ПериодРегистрации
			|			ИНАЧЕ СтрокаИсчисленныйОПВ.МесяцНалоговогоПериода
			|		КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК МесяцВыплатыДоходов,
			|	СтрокаИсчисленныйОПВ.ФизЛицо КАК ФизЛицо,
			|	СтрокаИсчисленныйОПВ.Взнос КАК Взнос,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
			|	СтрокаИсчисленныйОПВ.НомерСтроки КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание) КАК ВидСтроки,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
			|				И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|ИЗ
			|	ВТ_ИсчисленныйОПВ КАК СтрокаИсчисленныйОПВ
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйОПВ.ФизЛицо = МестоРаботы.ФизЛицо
			|			И (Реквизиты.ПериодРегистрации = МестоРаботы.Период)
			|
			|УПОРЯДОЧИТЬ ПО
			|	СтрокаИсчисленныйОПВ.НомерСтроки" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ОПВПодлежитПеречислениюВФонды", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ОПВПодлежитПеречислениюВФонды", Неопределено);		
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИПНСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьИПН Тогда
		
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА Реквизиты.ПериодРегистрации
			|		ИНАЧЕ СтрокаИсчисленныйИПН.МесяцНалоговогоПериода
			|	КОНЕЦ КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	СтрокаИсчисленныйИПН.ФизЛицо,
			|	СтрокаИсчисленныйИПН.Налог,
			|	СтрокаИсчисленныйИПН.ПримененныйВычет,
			|	СтрокаИсчисленныйИПН.ПримененнаяЛьгота,
			|	СтрокаИсчисленныйИПН.РазрешенныйВычет,
			|	СтрокаИсчисленныйИПН.ОблагаемаяБаза,
			|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	СтрокаИсчисленныйИПН.НомерСтроки,
			|	NULL КАК Контрагент,
			|	NULL КАК ВидРасчета,
			|	NULL КАК СуммаДохода,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныйИПН КАК СтрокаИсчисленныйИПН
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйИПН.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|ГДЕ 
			|	СтрокаИсчисленныйИПН.ОблагаемаяБаза <> 0
			|	ИЛИ СтрокаИсчисленныйИПН.ПримененныйВычет <> 0
			|	ИЛИ СтрокаИсчисленныйИПН.ПримененнаяЛьгота <> 0
			|	ИЛИ СтрокаИсчисленныйИПН.РазрешенныйВычет <> 0

			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Реквизиты.ПериодРегистрации КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	Реквизиты.Контрагент,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	Реквизиты.ОблагаетсяИПН,
			|	NULL,
			|	NULL,
			|	Реквизиты.Контрагент,
			|	Реквизиты.ВидРасчета,
			|	Реквизиты.СуммаДокумента,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|				
			|ИЗ
			|	ВТ_Реквизиты КАК Реквизиты
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
				
		НомераТаблиц.Вставить("ИПНСведенияОДоходах", НомераТаблиц.Количество());
		
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ИПНСведенияОДоходах", Неопределено);
	КонецЕсли;

	Возврат ТекстЗапроса ;
	
КонецФункции

Функция ТекстЗапросаВОСМССведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьВОСМС Тогда
		
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА Реквизиты.ПериодРегистрации
			|		ИНАЧЕ СтрокаИсчисленныеВОСМС.МесяцНалоговогоПериода
			|	КОНЕЦ КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	СтрокаИсчисленныеВОСМС.ФизЛицо,
			|	СтрокаИсчисленныеВОСМС.Взнос,
			|	СтрокаИсчисленныеВОСМС.ОблагаемаяБаза,
			|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	СтрокаИсчисленныеВОСМС.НомерСтроки,
			|	NULL КАК Контрагент,
			|	NULL КАК ВидРасчета,
			|	NULL КАК СуммаДохода,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныеВОСМС КАК СтрокаИсчисленныеВОСМС
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныеВОСМС.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|ГДЕ 
			|	СтрокаИсчисленныеВОСМС.ОблагаемаяБаза <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Реквизиты.ПериодРегистрации КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	Реквизиты.Контрагент,
			|	NULL,
			|	NULL,
			|	Реквизиты.ОблагаетсяВОСМС,
			|	NULL,
			|	NULL,
			|	Реквизиты.Контрагент,
			|	Реквизиты.ВидРасчета,
			|	Реквизиты.СуммаДокумента,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|				
			|ИЗ
			|	ВТ_Реквизиты КАК Реквизиты
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
				
		НомераТаблиц.Вставить("ВОСМССведенияОДоходах", НомераТаблиц.Количество());
		
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ВОСМССведенияОДоходах", Неопределено);
	КонецЕсли;

	Возврат ТекстЗапроса ;
	
КонецФункции

Функция ТекстЗапросаОПВСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьОПВ Тогда
		
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА Реквизиты.ПериодРегистрации
			|		ИНАЧЕ СтрокаИсчисленныйОПВ.МесяцНалоговогоПериода
			|	КОНЕЦ КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	СтрокаИсчисленныйОПВ.ФизЛицо,
			|	СтрокаИсчисленныйОПВ.Взнос,
			|	СтрокаИсчисленныйОПВ.ОблагаемаяБаза,
			|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	СтрокаИсчисленныйОПВ.НомерСтроки,
			|	NULL КАК Контрагент,
			|	NULL КАК ВидРасчета,
			|	NULL КАК СуммаДохода,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныйОПВ КАК СтрокаИсчисленныйОПВ
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйОПВ.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|ГДЕ 
			|	СтрокаИсчисленныйОПВ.ОблагаемаяБаза <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Реквизиты.ПериодРегистрации КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	Реквизиты.Контрагент,
			|	NULL,
			|	NULL,
			|	Реквизиты.ОблагаетсяОПВ,
			|	NULL,
			|	NULL,
			|	Реквизиты.Контрагент,
			|	Реквизиты.ВидРасчета,
			|	Реквизиты.СуммаДокумента,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|				
			|ИЗ
			|	ВТ_Реквизиты КАК Реквизиты
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
				
		НомераТаблиц.Вставить("ОПВСведенияОДоходах", НомераТаблиц.Количество());
		
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ОПВСведенияОДоходах", Неопределено);
	КонецЕсли;

	Возврат ТекстЗапроса ;
	
КонецФункции

Функция ТекстЗапросаИсчисленныйСН(НомераТаблиц, Реквизиты, ПараметрыПроведения) 
	
	Если Реквизиты.ОрганизацияЯвляетсяПлательщикомСН И Реквизиты.УчитыватьСН Тогда
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА Реквизиты.ПериодРегистрации
			|		ИНАЧЕ СтрокаИсчисленныйСН.МесяцНалоговогоПериода
			|	КОНЕЦ КАК МесяцНалоговогоПериода,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
			|	СтрокаИсчисленныйСН.ФизЛицо,
			|	СтрокаИсчисленныйСН.Налог,
			|	СтрокаИсчисленныйСН.ОблагаемаяБаза,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	СтрокаИсчисленныйСН.НомерСтроки,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныйСН КАК СтрокаИсчисленныйСН
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйСН.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|ГДЕ 
			|	СтрокаИсчисленныйСН.Налог <> 0
			|
			|УПОРЯДОЧИТЬ ПО 
			|	СтрокаИсчисленныйСН.НомерСтроки
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();

		НомераТаблиц.Вставить("ИсчисленныйСН", НомераТаблиц.Количество());
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ИсчисленныйСН", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСНСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения) 
	
	Если Реквизиты.ОрганизацияЯвляетсяПлательщикомСН И Реквизиты.УчитыватьСН Тогда
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА Реквизиты.ПериодРегистрации
			|		ИНАЧЕ СтрокаИсчисленныйСН.МесяцНалоговогоПериода
			|	КОНЕЦ КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	СтрокаИсчисленныйСН.ФизЛицо,
			|	СтрокаИсчисленныйСН.ОблагаемаяБаза,
			|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
			|	СтрокаИсчисленныйСН.НомерСтроки,
			|	NULL КАК ВидРасчета,
			|	NULL КАК СуммаДохода,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныйСН КАК СтрокаИсчисленныйСН
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныйСН.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|ГДЕ 
			|	СтрокаИсчисленныйСН.ОблагаемаяБаза <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Реквизиты.ПериодРегистрации,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ),
			|	Реквизиты.ФизЛицо,
			|	NULL,
			|	Реквизиты.ОблагаетсяСН,
			|	NULL,
			|	Реквизиты.ВидРасчета,
			|	Реквизиты.СуммаДокумента,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА 
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ
			|	
			|ИЗ
			|	ВТ_Реквизиты КАК Реквизиты
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|ГДЕ 
			|	(Реквизиты.ЮрФизЛицо <> ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо) 
			|		ИЛИ Реквизиты.ОблагаетсяСН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом))
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("СНСведенияОДоходах", НомераТаблиц.Количество());
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("СНСведенияОДоходах", Неопределено);
	КонецЕсли;
			
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПогашениеЗадолженности(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	ТекстЗапроса = "";
	ТекстЗапросаРеквизиты = 
		"ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.ДокументОснование КАК Регистратор,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
		|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями КАК ПоддержкаРаботыСоСтруктурнымиПодразделениями,
		|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
		|	Реквизиты.ФизЛицо КАК ФизЛицо,
		|	""Выбытие"" КАК НаправлениеДвижения,
		|	ЛОЖЬ КАК ЭтоВозврат
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
	Если Реквизиты.УчитыватьИПН Тогда
		ТекстЗапроса = ТекстЗапросаРеквизиты + "
		|ВЫБРАТЬ
		|	1 КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА Реквизиты.Дата < &ДатаКонтроляИПН
		|			  И ЕСТЬNULL(ГражданствоФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)) <> ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
		|	КОНЕЦ Налог,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
		|	ЛОЖЬ КАК РасчетыВВалюте,
		|	Реквизиты.Сделка КАК ДокументРасчетов,
		|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
		|	ВЫБОР
		|		КОГДА Типовой.СчетНУ ЕСТЬ NULL 
		|				ИЛИ Типовой.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав)
		|		ИНАЧЕ Типовой.СчетНУ
		|	КОНЕЦ КАК СчетРасчетовНУ,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ
		|	ИНАЧЕ  
		|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ИндивидуальныйПодоходныйНалог)	
		|	КОНЕЦ КАК КорСчет,
		|	ВЫБОР
		|		КОГДА Реквизиты.Дата < &ДатаКонтроляИПН
		|			  И ЕСТЬNULL(ГражданствоФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)) <> ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
		|	КОНЕЦ КАК КорСубконто1,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК КорСубконто2,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КорСубконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ
		|	ИНАЧЕ
		|		ВЫБОР
		|			КОГДА ТиповойКорСчет.СчетНУ ЕСТЬ NULL 
		|					ИЛИ ТиповойКорСчет.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги)
		|			ИНАЧЕ ТиповойКорСчет.СчетНУ
		|		КОНЕЦ
		|	КОНЕЦ КАК КорСчетНУ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Дата < &ДатаКонтроляИПН
		|			  И ЕСТЬNULL(ГражданствоФизЛиц.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)) <> ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
		|	КОНЕЦ КАК КорСубконтоНУ1,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК КорСубконтоНУ2,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КорСубконтоНУ3,
		|	""Индивидуальный подоходный налог"" КАК Содержание,
		|	ЕСТЬNULL(ИсчисленныйИПН.СуммаИПН, 0) КАК СуммаВзаиморасчетов,
		|	ЕСТЬNULL(ИсчисленныйИПН.СуммаИПН, 0) КАК СуммаРегл
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК ТиповойКорСчет
		|			ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|			ПО Реквизиты.СчетУчетаРасчетовСКонтрагентом = Типовой.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(КОНЕЦПЕРИОДА(&Период, МЕСЯЦ), ФизЛицо = &ФизЛицо) КАК ГражданствоФизЛиц
		|			ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СУММА(ИсчисленныйИПН.Налог) КАК СуммаИПН
		|						ИЗ ВТ_ИсчисленныйИПН КАК ИсчисленныйИПН) КАК ИсчисленныйИПН
		|			ПО ИСТИНА
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|			ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
		|				И Реквизиты.ПериодРегистрации = МестоРаботы.Период
		|ГДЕ
		|	ТиповойКорСчет.Ссылка = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ИндивидуальныйПодоходныйНалог)
		|	И ЕСТЬNULL(ИсчисленныйИПН.СуммаИПН, 0) <> 0 ";
		
	КонецЕсли;
	
	Если Реквизиты.УчитыватьОПВ Тогда
		
		Если ТекстЗапроса <> "" Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ
			| ";
			
		Иначе
			ТекстЗапроса = ТекстЗапросаРеквизиты;			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	1 КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК Налог,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
		|	ЛОЖЬ КАК РасчетыВВалюте,
		|	Реквизиты.Сделка КАК ДокументРасчетов,
		|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
		|	ВЫБОР
		|		КОГДА Типовой.СчетНУ ЕСТЬ NULL 
		|				ИЛИ Типовой.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав)
		|		ИНАЧЕ Типовой.СчетНУ
		|	КОНЕЦ КАК СчетРасчетовНУ,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ
		|	ИНАЧЕ  
		|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям)	
		|	КОНЕЦ КАК КорСчет,
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК КорСубконто1,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК КорСубконто2,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПоСотрудникам 
		|			ТОГДА Реквизиты.Контрагент.ФизЛицо
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК КорСубконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ
		|	ИНАЧЕ
		|		ВЫБОР
		|			КОГДА ТиповойКорСчет.СчетНУ ЕСТЬ NULL 
		|					ИЛИ ТиповойКорСчет.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ОбязательстваПоПенсионнымОтчислениям)
		|			ИНАЧЕ ТиповойКорСчет.СчетНУ
		|		КОНЕЦ
		|	КОНЕЦ КАК КорСчетНУ,
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы) КАК КорСубконтоНУ1,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК КорСубконтоНУ2,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПоСотрудникам 
		|			ТОГДА Реквизиты.Контрагент.ФизЛицо
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК КорСубконтоНУ3,
		|	""Обязательные пенсионные взносы"" КАК Содержание,
		|	ЕСТЬNULL(ИсчисленныйОПВ.СуммаОПВ, 0) КАК СуммаВзаиморасчетов,
		|	ЕСТЬNULL(ИсчисленныйОПВ.СуммаОПВ, 0) КАК СуммаРегл
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК ТиповойКорСчет
		|			ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|			ПО Реквизиты.СчетУчетаРасчетовСКонтрагентом = Типовой.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СУММА(ИсчисленныйОПВ.Взнос) КАК СуммаОПВ
		|						ИЗ ВТ_ИсчисленныйОПВ КАК ИсчисленныйОПВ) КАК ИсчисленныйОПВ
		|			ПО ИСТИНА
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|			ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
		|				И Реквизиты.ПериодРегистрации = МестоРаботы.Период
		|ГДЕ
		|	ТиповойКорСчет.Ссылка = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям)
		|	И ЕСТЬNULL(ИсчисленныйОПВ.СуммаОПВ, 0) <> 0
		|";
		
	КонецЕсли;
	
	Если Реквизиты.УчитыватьВОСМС Тогда
		
		Если ТекстЗапроса <> "" Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ
			| ";
			
		Иначе
			ТекстЗапроса = ТекстЗапросаРеквизиты;			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	1 КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоВзносамОСМС) КАК Налог,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ВедениеВзаиморасчетов КАК ВедениеВзаиморасчетов,
		|	ЛОЖЬ КАК РасчетыВВалюте,
		|	Реквизиты.Сделка КАК ДокументРасчетов,
		|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
		|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
		|	ВЫБОР
		|		КОГДА Типовой.СчетНУ ЕСТЬ NULL 
		|				ИЛИ Типовой.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав)
		|		ИНАЧЕ Типовой.СчетНУ
		|	КОНЕЦ КАК СчетРасчетовНУ,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ
		|	ИНАЧЕ  
		|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоВзносамОСМС)	
		|	КОНЕЦ КАК КорСчет,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)КАК КорСубконто1,
		|	Реквизиты.Контрагент.ФизЛицо КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ
		|	ИНАЧЕ
		|		ВЫБОР
		|			КОГДА ТиповойКорСчет.СчетНУ ЕСТЬ NULL 
		|					ИЛИ ТиповойКорСчет.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ОбязательстваПоВзносамОСМС)
		|			ИНАЧЕ ТиповойКорСчет.СчетНУ
		|		КОНЕЦ
		|	КОНЕЦ КАК КорСчетНУ,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК КорСубконтоНУ1,
		|	Реквизиты.Контрагент.ФизЛицо КАК КорСубконтоНУ2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконтоНУ3,
		|	""Взносы на обязательное социальное медицинское страхование"" КАК Содержание,
		|	ЕСТЬNULL(ИсчисленныеВОСМС.СуммаВОСМС, 0) КАК СуммаВзаиморасчетов,
		|	ЕСТЬNULL(ИсчисленныеВОСМС.СуммаВОСМС, 0) КАК СуммаРегл
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК ТиповойКорСчет
		|			ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК Типовой
		|			ПО Реквизиты.СчетУчетаРасчетовСКонтрагентом = Типовой.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СУММА(ИсчисленныеВОСМС.Взнос) КАК СуммаВОСМС
		|						ИЗ ВТ_ИсчисленныеВОСМС КАК ИсчисленныеВОСМС) КАК ИсчисленныеВОСМС
		|			ПО ИСТИНА
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|			ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
		|				И Реквизиты.ПериодРегистрации = МестоРаботы.Период
		|ГДЕ
		|	ТиповойКорСчет.Ссылка = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоВзносамОСМС)
		|	И ЕСТЬNULL(ИсчисленныеВОСМС.СуммаВОСМС, 0) <> 0
		|";
		
	КонецЕсли;
	
	Если ТекстЗапроса <> "" Тогда 		
		ТекстЗапроса = ТекстЗапроса + "УПОРЯДОЧИТЬ ПО
										|	НомерСтроки 
										|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
		НомераТаблиц.Вставить("РеквизитыПогашенияЗадолженности", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаПогашенияЗадолженности", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("РеквизитыПогашенияЗадолженности", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаПогашенияЗадолженности", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаОтражениеЗатратПоСоцНалогу(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.ОрганизацияЯвляетсяПлательщикомСН И Реквизиты.УчитыватьСН Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(СтрокиТЧ.Налог) КАК СуммаСН
		|ПОМЕСТИТЬ ИсчисленныйСН
		|ИЗ
		|	ВТ_ИсчисленныйСН КАК СтрокиТЧ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СуммаСН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
		|	Реквизиты.СчетЗатрат КАК СчетДт,
		|	Реквизиты.СубконтоДт1 КАК СубконтоДт1,
		|	Реквизиты.СубконтоДт2 КАК СубконтоДт2,
		|	Реквизиты.СубконтоДт3 КАК СубконтоДт3,
		|	Реквизиты.СчетЗатратНУ КАК СчетДтНУ,
		|	Реквизиты.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	Реквизиты.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	Реквизиты.СубконтоДтНУ3 КАК СубконтоДтНУ3, 
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.СоциальныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.СоциальныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ
		|	ИНАЧЕ  
		|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.СоциальныйНалог)	
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.СоциальныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.СоциальныйНалог) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ
		|	ИНАЧЕ
		|		ВЫБОР
		|			КОГДА ТиповойКорСчет.СчетНУ ЕСТЬ NULL 
		|					ИЛИ ТиповойКорСчет.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПрочиеНалоги)
		|			ИНАЧЕ ТиповойКорСчет.СчетНУ
		|		КОНЕЦ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.СоциальныйНалог) КАК Налог,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежаВБюджет,
		|	НЕОПРЕДЕЛЕНО КАК НалоговыйКомитет,
		|	ИсчисленныйСН.СуммаСН КАК Сумма,
		|	Реквизиты.Контрагент.Наименование КАК Содержание,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК ТиповойКорСчет
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИсчисленныйСН КАК ИсчисленныйСН
		|		ПО (ИСТИНА)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
		|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
		|ГДЕ
		|	ТиповойКорСчет.Ссылка = ЗНАЧЕНИЕ(ПланСчетов.Типовой.СоциальныйНалог)
		|	И ИсчисленныйСН.СуммаСН <> 0
		|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();					   
		
		НомераТаблиц.Вставить("ВТ_ИсчисленныйСН", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаЗатратПоСоциальномуНалогу", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ВТ_ИсчисленныйСН", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаЗатратПоСоциальномуНалогу", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСведенияОбИсчисленииВычетовИПН(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьИПН Тогда
		
		ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Реквизиты.Организация,
		|	Реквизиты.ПериодРегистрации КАК Период,
		|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
		|				И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL 
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА Реквизиты.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	СтрокаВычетыИПН.ФизЛицо КАК ФизическоеЛицо,
		|	СтрокаВычетыИПН.ВидВычета,
		|	СтрокаВычетыИПН.РазрешенныйВычет,
		|	СтрокаВычетыИПН.ПримененныйВычет,
		|	СтрокаВычетыИПН.НомерСтроки
		|ИЗ
		|	ВТ_ВычетыИПН КАК СтрокаВычетыИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаВычетыИПН.ФизЛицо = МестоРаботы.ФизЛицо
		|			И (Реквизиты.ПериодРегистрации = МестоРаботы.Период)
		|ГДЕ
		|	(СтрокаВычетыИПН.РазрешенныйВычет <> 0
		|			ИЛИ СтрокаВычетыИПН.ПримененныйВычет <> 0)" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
				
		НомераТаблиц.Вставить("СведенияОбИсчисленииВычетовИПН", НомераТаблиц.Количество());
		
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("СведенияОбИсчисленииВычетовИПН", Неопределено);
	КонецЕсли;

	Возврат ТекстЗапроса ;
	
КонецФункции

Функция ТекстЗапросаИсчисленныеСО(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьСО Тогда
	
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НАЧАЛОПЕРИОДА(ВЫБОР
			|			КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|				ТОГДА Реквизиты.ПериодРегистрации
			|			ИНАЧЕ СтрокаИсчисленныеСО.МесяцНалоговогоПериода
			|		КОНЕЦ, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК Период,
			|	КОНЕЦПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК МесяцВыплатыДоходов,
			|	СтрокаИсчисленныеСО.ФизЛицо КАК ФизЛицо,
			|	СтрокаИсчисленныеСО.Отчисление КАК Отчисление,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
			|	СтрокаИсчисленныеСО.НомерСтроки КАК НомерСтроки,
			|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление) КАК ВидСтроки,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам
			|				И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|ИЗ
			|	ВТ_ИсчисленныеСО КАК СтрокаИсчисленныеСО
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныеСО.ФизЛицо = МестоРаботы.ФизЛицо
			|			И (Реквизиты.ПериодРегистрации = МестоРаботы.Период)
			|
			|УПОРЯДОЧИТЬ ПО
			|	СтрокаИсчисленныеСО.НомерСтроки" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
			
		НомераТаблиц.Вставить("ИсчисленныеСО", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ИсчисленныеСО", Неопределено);		
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСОСведенияОДоходах(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьСО Тогда
		
		ТекстЗапроса =  
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
			|			ТОГДА Реквизиты.ПериодРегистрации
			|		ИНАЧЕ СтрокаИсчисленныеСО.МесяцНалоговогоПериода
			|	КОНЕЦ КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	СтрокаИсчисленныеСО.ФизЛицо,
			|	СтрокаИсчисленныеСО.Отчисление,
			|	СтрокаИсчисленныеСО.ОблагаемаяБаза,
			|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
			|	ИСТИНА КАК НеОтражатьВРеглУчете,
			|	СтрокаИсчисленныеСО.НомерСтроки,
			|	NULL КАК Контрагент,
			|	NULL КАК ВидРасчета,
			|	NULL КАК СуммаДохода,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ КАК СтруктурнаяЕдиница,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|	
			|ИЗ
			|	ВТ_ИсчисленныеСО КАК СтрокаИсчисленныеСО
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
			|		ПО ИСТИНА
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО СтрокаИсчисленныеСО.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|
			|ГДЕ 
			|	СтрокаИсчисленныеСО.ОблагаемаяБаза <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Реквизиты.ПериодРегистрации КАК Период,
			|	НАЧАЛОПЕРИОДА(Реквизиты.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
			|	Реквизиты.Контрагент,
			|	NULL,
			|	NULL,
			|	Реквизиты.ОблагаетсяСО,
			|	NULL,
			|	NULL,
			|	Реквизиты.Контрагент,
			|	Реквизиты.ВидРасчета,
			|	Реквизиты.СуммаДокумента,
			|	ВЫБОР
			|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
			|						ТОГДА Реквизиты.ПодразделениеОрганизации
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
			|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
			|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
			|						ТОГДА Реквизиты.СтруктурноеПодразделение
			|					ИНАЧЕ Реквизиты.Организация
			|				КОНЕЦ
			|		ИНАЧЕ Реквизиты.Организация
			|	КОНЕЦ,
			|	ВЫБОР 
			|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
			|			ТОГДА Реквизиты.ПодразделениеОрганизации
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК ПодразделениеОрганизации
			|				
			|ИЗ
			|	ВТ_Реквизиты КАК Реквизиты
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
			|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
			|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
			|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
				
		НомераТаблиц.Вставить("СОСведенияОДоходах", НомераТаблиц.Количество());
		
	Иначе 
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("СОСведенияОДоходах", Неопределено);
	КонецЕсли;

	Возврат ТекстЗапроса ;
	
КонецФункции

Функция ТекстЗапросаОтражениеЗатратПоСоцОтчислениям(НомераТаблиц, Реквизиты, ПараметрыПроведения)
	
	Если Реквизиты.УчитыватьСО Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(СтрокиТЧ.Отчисление) КАК СуммаСО
		|ПОМЕСТИТЬ ИсчисленныеСО
		|ИЗ
		|	ВТ_ИсчисленныеСО КАК СтрокиТЧ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СуммаСО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация КАК Организация,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
		|	Реквизиты.СчетЗатрат КАК СчетДт,
		|	Реквизиты.СубконтоДт1 КАК СубконтоДт1,
		|	Реквизиты.СубконтоДт2 КАК СубконтоДт2,
		|	Реквизиты.СубконтоДт3 КАК СубконтоДт3,
		|	Реквизиты.СчетЗатратНУ КАК СчетДтНУ,
		|	Реквизиты.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|	Реквизиты.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|	Реквизиты.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомБУ
		|	ИНАЧЕ  
		|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию)	
		|	КОНЕЦ КАК СчетКт,
		|	ВЫБОР КОГДА НЕ ВЫРАЗИТЬ (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|		ТОГДА ВЫРАЗИТЬ(ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления) КАК Справочник.НалогиСборыОтчисления).СчетУчетаРасчетовСКонтрагентомНУ
		|	ИНАЧЕ
		|		ВЫБОР
		|			КОГДА ТиповойКорСчет.СчетНУ ЕСТЬ NULL 
		|					ИЛИ ТиповойКорСчет.СчетНУ = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяССылка)
		|				ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ОбязательстваПоСоциальномуСтрахованию)
		|			ИНАЧЕ ТиповойКорСчет.СчетНУ
		|		КОНЕЦ
		|	КОНЕЦ КАК СчетКтНУ,
		|	ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления) КАК Налог,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежаВБюджет,
		|	НЕОПРЕДЕЛЕНО КАК НалоговыйКомитет,
		|	ИсчисленныеСО.СуммаСО КАК Сумма,
		|	""Социальные отчисления"" КАК Содержание,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам И Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА Реквизиты.ЯвляетсяСтруктурнымПодразделением
		|						ТОГДА Реквизиты.ПодразделениеОрганизации
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		КОГДА Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (Реквизиты.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА Реквизиты.СтруктурноеПодразделение
		|					ИНАЧЕ Реквизиты.Организация
		|				КОНЕЦ
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой КАК ТиповойКорСчет
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИсчисленныеСО КАК ИсчисленныеСО
		|		ПО (ИСТИНА)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО Реквизиты.ФизЛицо = МестоРаботы.ФизЛицо
		|			И Реквизиты.ПериодРегистрации = МестоРаботы.Период
		|ГДЕ
		|	ТиповойКорСчет.Ссылка = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию)
		|	И ИсчисленныеСО.СуммаСО <> 0
		|" + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();					   
		
		НомераТаблиц.Вставить("ВТ_ИсчисленныеСО", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаЗатратПоСоциальнымОтчислениям", НомераТаблиц.Количество());
	Иначе
		ТекстЗапроса = "";
		ПараметрыПроведения.Вставить("ВТ_ИсчисленныеСО", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаЗатратПоСоциальнымОтчислениям", Неопределено);
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецЕсли