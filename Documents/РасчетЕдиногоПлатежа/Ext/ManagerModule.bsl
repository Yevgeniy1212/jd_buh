#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Процедура Автозаполнение(Объект) Экспорт

	ГоловнаяОрганизация = ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Объект.Организация);
	
    ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Объект.СтруктурноеПодразделение,
								Объект.Организация,
								Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = Объект.Организация;
	КонецЕсли;
	
	РасчетДляИП = (Налогоплательщик.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо);
	
	// узнаем учетную политику по налоговому учету
	ОрганизацияЯвляетсяПлательщикомСН = УчетнаяПолитикаСервер.ОрганизацияЯвляетсяПлательщикомСН(Объект.Организация, Объект.ПериодРегистрации);
	
	// При автозаполнении будем исключать физлицо, если организация является ИП на основе СНР
	ИсключитьДанныеИП = (РасчетДляИП И НЕ ОрганизацияЯвляетсяПлательщикомСН);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("парамНачало" , Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонец" , КонецМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОрганизация" , Объект.Организация);
	Запрос.УстановитьПараметр("парамСтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПодразделение" , Объект.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамРегистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("парамПустаяДата", '00010101');
	Запрос.УстановитьПараметр("парамСписокСпособовРасчетовФиксированнойСуммой", ПроведениеРасчетовСервер.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	Запрос.УстановитьПараметр("парамНалогоплательщик", Налогоплательщик);
    Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", Налогоплательщик.ИндивидуальныйПредприниматель);
	Запрос.УстановитьПараметр("парамДействиеПрекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
   	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	УчетнаяПолитикаПоПерсоналуОрганизацииТекст = УчетнаяПолитикаСервер.ПолучитьТекстЗапросаУчетнойПолитикиПоПерсоналу();
	УчетнаяПолитикаПоПерсоналуОрганизацииТекст = СтрЗаменить(УчетнаяПолитикаПоПерсоналуОрганизацииТекст,"РАЗРЕШЕННЫЕ","");
	
	ПустоеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
	Если Объект.ПодразделениеОрганизации = ПустоеПодразделение Тогда
		ПоВсемПодразделениямОрганизации = Истина;
		УсловиеНаПодразделение = "РаботникиОрганизации.ПодразделениеОрганизации.Владелец = &парамОрганизация";
	Иначе
		ПоВсемПодразделениямОрганизации = Ложь;
		УсловиеНаПодразделение = "РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)";
	КонецЕсли;
	
	//СписокРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и принятых за месяц,
	//  а также переведенных в середине месяца из других обособленных подразделений
	СписокРаботниковТекст = "
	|		// срез работников на начало месяца
	|		ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо
	|		ПОМЕСТИТЬ ВТ_СписокРаботников
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(РаботникиОрганизацийСрезПоследних.Регистратор) = ТИП(Документ.ПриемНаРаботуВОрганизацию)
	|						ТОГДА РаботникиОрганизацийСрезПоследних.Регистратор
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК Регистратор,
	|				РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
	|				РаботникиОрганизацийСрезПоследних.Организация КАК Организация
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамНачало, Организация = &парамГоловнаяОрганизация И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизацийСрезПоследних
	|
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо,
	|				РаботникиОрганизацийСрезПоследних.Организация) КАК АктуальныйСписокРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|					&парамНачало, 
	|					Организация = &парамГоловнаяОрганизация 
	|					И (Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))) КАК РаботникиОрганизации
	|				ПО АктуальныйСписокРаботников.Физлицо = РаботникиОрганизации.Сотрудник.Физлицо
	|					И АктуальныйСписокРаботников.Организация = РаботникиОрганизации.Организация
	|					И (ВЫБОР
	|						КОГДА АктуальныйСписокРаботников.Регистратор <> ЛОЖЬ
	|							ТОГДА РаботникиОрганизации.Регистратор = АктуальныйСписокРаботников.Регистратор
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ)
	|		ГДЕ
	|			РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|			И РаботникиОрганизации.СтруктурноеПодразделение = &парамСтруктурноеПодразделение
	|			И РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|		" + ?(ПоВсемПодразделениямОрганизации, "", " И " + УсловиеНаПодразделение) + "
	|		
	|		ОБЪЕДИНИТЬ
	|
	|		// движения работников за месяц
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки,
	|									МАКСИМУМ(ПредыдущееНазначение.Период) КАК ДатаПредыдущегоНазначения
	|								ИЗ
	|									РегистрСведений.РаботникиОрганизаций КАК ТекущееНазначение
	|									ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущееНазначение
	|										ПО ТекущееНазначение.Сотрудник = ПредыдущееНазначение.Сотрудник
	|											И ПредыдущееНазначение.Организация = &парамГоловнаяОрганизация
	|											И ПредыдущееНазначение.Период < ТекущееНазначение.Период
	|											И ПредыдущееНазначение.Активность
	|								ГДЕ
	|									ТекущееНазначение.Период > &парамНачало
	|									И ТекущееНазначение.Период <= &парамКонец
	|									И ТекущееНазначение.Организация = &парамГоловнаяОрганизация
	|									И ТекущееНазначение.ОбособленноеПодразделение = &парамОрганизация
	|									И ТекущееНазначение.Активность
	|								СГРУППИРОВАТЬ ПО
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки) КАК ДатыПредыдущихНазначений
	|				ПО РаботникиОрганизации.Регистратор = ДатыПредыдущихНазначений.Регистратор
	|					И РаботникиОрганизации.НомерСтроки = ДатыПредыдущихНазначений.НомерСтроки
	|					
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущиеНазначения
	|				ПО РаботникиОрганизации.Сотрудник = ПредыдущиеНазначения.Сотрудник
	|					И ПредыдущиеНазначения.Организация = &парамГоловнаяОрганизация
	|					И ДатыПредыдущихНазначений.ДатаПредыдущегоНазначения = ПредыдущиеНазначения.Период
	|					И ПредыдущиеНазначения.Активность
	|		
	|		ГДЕ
	|			РаботникиОрганизации.Период > &парамНачало
	|			И РаботникиОрганизации.Период <= &парамКонец
	|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|					ИЛИ РаботникиОрганизации.ОбособленноеПодразделение <> ПредыдущиеНазначения.ОбособленноеПодразделение
	|					ИЛИ РаботникиОрганизации.СтруктурноеПодразделение <> ПредыдущиеНазначения.СтруктурноеПодразделение)
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|			И РаботникиОрганизации.СтруктурноеПодразделение = &парамСтруктурноеПодразделение
	|			И РаботникиОрганизации.Активность
	|			" + ?(ПоВсемПодразделениямОрганизации, "", " И " + УсловиеНаПодразделение) + "
	|";
	Запрос.Текст = СписокРаботниковТекст;
	Запрос.Выполнить();
	СписокРаботниковТекст = "ВТ_СписокРаботников";
    
    // заполнение табличной части "Удержания"
	//Основной текст запроса
	УдержанияТекст = "
    | ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	РасчетЕдиногоПлатежа.Ссылка КАК Ссылка,
    |	РасчетЕдиногоПлатежа.Ссылка.Организация КАК Организация,
    |	РасчетЕдиногоПлатежа.ФизЛицо КАК ФизЛицо,
    |	РасчетЕдиногоПлатежа.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
    |	РасчетЕдиногоПлатежа.ДокументОснование КАК ДокументОснование,
    |   РасчетЕдиногоПлатежа.ВидРасчета КАК ВидРасчета 
    |ПОМЕСТИТЬ ВТ_РанееСделанныеУдержания
    |ИЗ
    |	Документ.РасчетЕдиногоПлатежа.Удержания КАК РасчетЕдиногоПлатежа
    |ГДЕ
    |	РасчетЕдиногоПлатежа.Ссылка <> &парамРегистратор
    |	И РасчетЕдиногоПлатежа.Ссылка.Проведен
    |	И РасчетЕдиногоПлатежа.Ссылка.ПериодРегистрации = &парамНачало
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |	РасчетУдержанийРаботниковОрганизаций.Ссылка,
    |	РасчетУдержанийРаботниковОрганизаций.Ссылка.Организация,
    |	РасчетУдержанийРаботниковОрганизаций.ФизЛицо,
    |	РасчетУдержанийРаботниковОрганизаций.Ссылка.ПериодРегистрации,
    |	РасчетУдержанийРаботниковОрганизаций.ДокументОснование,
    |   РасчетУдержанийРаботниковОрганизаций.ВидРасчета КАК ВидРасчета 
    |ИЗ
    |	Документ.РасчетУдержанийРаботниковОрганизаций.Удержания КАК РасчетУдержанийРаботниковОрганизаций
    |ГДЕ
    |	РасчетУдержанийРаботниковОрганизаций.Ссылка.Проведен
    |	И РасчетУдержанийРаботниковОрганизаций.Ссылка.ПериодРегистрации = &парамНачало
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ПлановыеУдержания.Размер КАК Размер,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.Период < &парамНачало ТОГДА &парамНачало
	|		ИНАЧЕ ПлановыеУдержания.Период
	|	КОНЕЦ КАК ДатаНачала,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонец
	|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
	|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонец))
	|	КОНЕЦ КАК ДатаОкончания,
	|
	|	ПлановыеУдержания.ДокументОснование
	|ПОМЕСТИТЬ ВТ_ДанныеПлановыхУдержаний
	|ИЗ
	|	" + СписокРаботниковТекст + " КАК Работники
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
	|		ПО Работники.ФизЛицо = ПлановыеУдержания.ФизЛицо
	|			И ПлановыеУдержания.Активность
	|
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамКонец, ) КАК УчетнаяПолитикаНУ
    |		ПО (ПлановыеУдержания.Организация = УчетнаяПолитикаНУ.Организация)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
	|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
	|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
	|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
	|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
	|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
	|			И СледующиеПлановыеУдержания.Период <= &парамКонец
	|			И СледующиеПлановыеУдержания.Активность
	|
	|	// для предотвращения дублирования удержаний за один период регистрации в одном и том же ОбособленномПодразделении,
	|	// а для расчетов фиксированной суммой - один раз в целом по головной организации
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РанееСделанныеУдержания КАК РанееСделанныеУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + УчетнаяПолитикаПоПерсоналуОрганизацииТекст + ") КАК ВТ_УчетнаяПолитикаПоПерсоналуОрганизации
	|			ПО РанееСделанныеУдержания.Организация = ВТ_УчетнаяПолитикаПоПерсоналуОрганизации.Организация
	|		ПО ВЫБОР
	|				КОГДА ПлановыеУдержания.ВидРасчета.СпособРасчета В (&парамСписокСпособовРасчетовФиксированнойСуммой)
	|					ТОГДА ВЫБОР
	|							КОГДА ВТ_УчетнаяПолитикаПоПерсоналуОрганизации.ВедениеУчетаПоГоловнойОрганизации = ИСТИНА ТОГДА
	|								ВЫБОР
	|									КОГДА РанееСделанныеУдержания.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	|										ТОГДА РанееСделанныеУдержания.Организация
	|									ИНАЧЕ РанееСделанныеУдержания.Организация.ГоловнаяОрганизация
	|								КОНЕЦ
	|							ИНАЧЕ РанееСделанныеУдержания.Организация
	|						  КОНЕЦ = &парамГоловнаяОрганизация
	|				ИНАЧЕ РанееСделанныеУдержания.Организация = &парамОрганизация
	|			КОНЕЦ
	|			И РанееСделанныеУдержания.ФизЛицо = ПлановыеУдержания.ФизЛицо 
	|			И РанееСделанныеУдержания.ВидРасчета = ПлановыеУдержания.ВидРасчета 
	|			И ВЫБОР
	|				КОГДА НЕ (РанееСделанныеУдержания.ДокументОснование.Ссылка ЕСТЬ NULL)
	|					ТОГДА РанееСделанныеУдержания.ДокументОснование = ПлановыеУдержания.ДокументОснование
	|				ИНАЧЕ ИСТИНА
	|			  КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец, ) КАК ГражданствоФизЛиц
	|		ПО Работники.Физлицо = ГражданствоФизЛиц.Физлицо
	|
	|ГДЕ
	|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
	|	И ПлановыеУдержания.Период <= &парамКонец
	|	И ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало ТОГДА ПлановыеУдержания.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеУдержания.Действие
	|	  КОНЕЦ <> &парамДействиеПрекратить                          
	|	И РанееСделанныеУдержания.ФизЛицо ЕСТЬ NULL
	|	И НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
    |	И УчетнаяПолитикаНУ.ПорядокОбложенияДоходовРаботников = ЗНАЧЕНИЕ(Перечисление.ПорядокОбложенияДоходовРаботников.ЕдиныйПлатеж)
    |
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.Размер,
	|
	|	ПлановыеУдержания.Период,
	|	ПлановыеУдержания.ПериодЗавершения,
	|	ПлановыеУдержания.ДокументОснование
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонец)) >= &парамНачало
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПлановыхУдержаний.ФизЛицо,
	|	ВТ_ДанныеПлановыхУдержаний.ВидРасчета,
	|	ВТ_ДанныеПлановыхУдержаний.СпособРасчета,
	|	МАКСИМУМ(ВТ_ДанныеПлановыхУдержаний.ДатаНачала) КАК ДатаНачала,
	|	ВТ_ДанныеПлановыхУдержаний.ДокументОснование
	|ПОМЕСТИТЬ ВТ_ПериодыПлановыхУдержаний
	|ИЗ
	|	ВТ_ДанныеПлановыхУдержаний КАК ВТ_ДанныеПлановыхУдержаний
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеПлановыхУдержаний.ФизЛицо,
	|	ВТ_ДанныеПлановыхУдержаний.СпособРасчета,
	|	ВТ_ДанныеПлановыхУдержаний.ВидРасчета,
	|	ВТ_ДанныеПлановыхУдержаний.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПлановыхУдержаний.ФизЛицо,
	|	ДанныеПлановыхУдержаний.ВидРасчета,
	|	ДанныеПлановыхУдержаний.СпособРасчета,
	|	ДанныеПлановыхУдержаний.Размер,
	|	ДанныеПлановыхУдержаний.ДатаНачала,
	|	ДанныеПлановыхУдержаний.ДатаОкончания,
	|	ДанныеПлановыхУдержаний.ДокументОснование
	|ИЗ
	|	ВТ_ДанныеПлановыхУдержаний КАК ДанныеПлановыхУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПлановыхУдержаний КАК ВТ_ПериодыПлановыхУдержаний
	|		ПО ДанныеПлановыхУдержаний.ФизЛицо = ВТ_ПериодыПлановыхУдержаний.ФизЛицо
	|			И ДанныеПлановыхУдержаний.ВидРасчета = ВТ_ПериодыПлановыхУдержаний.ВидРасчета
	|			И ДанныеПлановыхУдержаний.СпособРасчета = ВТ_ПериодыПлановыхУдержаний.СпособРасчета
	|			И ДанныеПлановыхУдержаний.ДокументОснование = ВТ_ПериодыПлановыхУдержаний.ДокументОснование
	|			И ДанныеПлановыхУдержаний.ДатаНачала = ВТ_ПериодыПлановыхУдержаний.ДатаНачала
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеПлановыхУдержаний.Физлицо.Наименование,
	|	ДанныеПлановыхУдержаний.ДокументОснование,
	|	ДанныеПлановыхУдержаний.ВидРасчета,
	|	ДанныеПлановыхУдержаний.ДатаНачала
	|";	
	
	Запрос.Текст = УдержанияТекст;
	ТЗУдержания = Запрос.Выполнить().Выгрузить();
	
	// Удалим из таблицы удержаний удержания почтового сбора, если для соответствующего документа-основания нет удержаний алиментов.
	// Такое может быть, если удержание по ИЛ фикс. суммой и уже было удержано в текущем месяце в другой обособленной организации.

	ТЗУдержания.Индексы.Добавить("ДокументОснование");
	ТЗУдержания.Индексы.Добавить("СпособРасчета");
	
	СтруктураПоиска = Новый Структура("СпособРасчета");
	СтруктураПоиска.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор;
	НайденныеСтрокиПочтовогоСбора = ТЗУдержания.НайтиСтроки(СтруктураПоиска);
	
	МассивУдаляемыхСтрок = Новый Массив();
	
	СтруктураПоиска.Очистить();
	СтруктураПоиска.Вставить("ДокументОснование");
	Для Каждого СтрокаПочтовогоСбора Из НайденныеСтрокиПочтовогоСбора Цикл
		СтруктураПоиска.ДокументОснование = СтрокаПочтовогоСбора.ДокументОснование;
		НайденныеСтрокиДокумента = ТЗУдержания.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтрокиДокумента.Количество() = 1 Тогда // только одна строка с таким документом-основанием - сам почтовый сбор
			// запоминаем, что надо удалить такую строку из таблицы значений
			МассивУдаляемыхСтрок.Добавить(СтрокаПочтовогоСбора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТЗУдержания.Удалить(УдаляемаяСтрока);
	КонецЦикла;	
	
	Объект.Удержания.Загрузить(ТЗУдержания);
	
	СписокРаботниковТекст = "
	|ВЫБРАТЬ
	|	РаботникиОрганизации.ФизЛицо
	|ПОМЕСТИТЬ ВТ_Работники
	|ИЗ
	|	" + СписокРаботниковТекст + " КАК РаботникиОрганизации
	|
	|";	
	Запрос.Текст = СписокРаботниковТекст;
	Запрос.Выполнить();
	СписокРаботниковТекст = "ВТ_Работники";
	
	ИсчисленныйЕПТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Работники.ФизЛицо,
	|	&парамНачало КАК МесяцНалоговогоПериода
	|ИЗ
	|	РегистрНакопления.ЕПСведенияОДоходах КАК ЕПСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
	|		ПО ЕПСведенияОДоходах.ФизЛицо = Работники.ФизЛицо
	|
	|ГДЕ
	|	ЕПСведенияОДоходах.ПериодРегистрации = &парамНачало И
	|	ЕПСведенияОДоходах.Организация = &парамОрганизация И
	|	ЕПСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Работники.ФизЛицо.Наименование
	|";
	
	Запрос.Текст = ИсчисленныйЕПТекст;
	ТЗИсчисленныйЕП = Запрос.Выполнить().Выгрузить();
	Объект.ИсчисленныйЕП.Загрузить(ТЗИсчисленныйЕП);
	
КонецПроцедуры

// Процедура рассчитывает все табличные части документа.
//
Процедура Рассчитать(Объект, Физлицо = Неопределено, КомментироватьРасчет = Ложь, СтруктураДополнительныхДанных = Неопределено) Экспорт
	
	Если Не ПроцедурыУправленияПерсоналомСервер.РегламентированныйКалендарьЗаполнен(НачалоМесяца(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации)) Тогда
		Возврат;
	КонецЕсли;

	Отказ = Ложь;

	// расчет связан с записью документа и его движений, поэтому выполняется в транзакции
	НачатьТранзакцию();
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Объект.Организация, 
																		Объект.Организация, 
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = Объект.Организация;
	КонецЕсли;

	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	
	Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	
	Движения = ДокументОбъект.Движения;
	
	// ЕПРасчетыСФондами
	НаборЕПРасчетыСФондами = РегистрыНакопления.ЕПРасчетыСФондами.СоздатьНаборЗаписей();
	НаборЕПРасчетыСФондами.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборЕПРасчетыСФондами.Записать();
	
	// ЕПКомпоненты
	НаборЕПКомпонентыПлатежа = РегистрыНакопления.ЕПКомпоненты.СоздатьНаборЗаписей();
	НаборЕПКомпонентыПлатежа.Отбор.Регистратор.Значение = Объект.Ссылка;
	НаборЕПКомпонентыПлатежа.Записать();
	
	КомментарийИПН = Неопределено;
	// чтобы налоговые вычеты попали в ветку комментария ИПН - создадим ее уже сейчас
	                                          
	ПараметрыРасчета = ПодготовитьПараметрыРасчета(Объект, Отказ);
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	
	Реквизиты = ПараметрыРасчета.Реквизиты;

	// Расчет ЕП
	
	СписокФизлицТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетЕдиногоПлатежа.ИсчисленныйЕП КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор
	|	" + ?(ФизЛицо <> Неопределено, "И Работники.ФизЛицо В (&парамФизЛицо)", "");
	
	ДополнительныеПараметрыЗапроса = Новый Структура();
	ДополнительныеПараметрыЗапроса.Вставить("парамФизЛицо", ФизЛицо);
	
	ДанныеЕП = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаЕП(Неопределено, Объект.ПериодРегистрации, Налогоплательщик, Объект.Ссылка, СписокФизлицТекст, ДополнительныеПараметрыЗапроса);
	Если ДанныеЕП <> НеОпределено Тогда
		ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымЕП(Объект.ИсчисленныйЕП, Объект.ПериодРегистрации, НаборЕПРасчетыСФондами, НаборЕПКомпонентыПлатежа, ДанныеЕП, Налогоплательщик, Объект.Организация, Реквизиты.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, ФизЛицо, НЕ Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам, ?(СтруктураДополнительныхДанных = Неопределено, Неопределено, Неопределено));//СтруктураДополнительныхДанных.РасчетЕПДополнительныеДанные));
		// Запишем расчитанные компоненты ЕП для расчета удержаний
		НаборЕПКомпонентыПлатежа.Записать();
	КонецЕсли;
    
   	// удержания - в последнюю очередь
	РассчитатьУдержания(Объект, Истина, ФизЛицо, КомментироватьРасчет);

	// Удаляем движения
	Движения.ЕПСведенияОДоходах.Очистить();
	Движения.ЕПСведенияОДоходах.Записать();
	
	НаборЕПРасчетыСФондами.Очистить();
	НаборЕПРасчетыСФондами.Записать();
	
	НаборЕПКомпонентыПлатежа.Очистить();
	НаборЕПКомпонентыПлатежа.Записать();
	
	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();	
	
КонецПроцедуры // Рассчитать()

// Процедура рассчитывает ресурсы удержаний. 
//
Процедура РассчитатьУдержания(Объект, ЕПРассчитан = Ложь, Физлицо = Неопределено, КомментироватьРасчет = Ложь, СтруктураДополнительныхДанных = Неопределено) Экспорт
    
    Отказ = Ложь;
    
    НачатьТранзакцию();
    
    ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
    Движения = ДокументОбъект.Движения;
    
    Если Не ЕПРассчитан Тогда
        // сначала удалим существующие движения
        Движения.ЕПСведенияОДоходах.Очистить();
        Движения.ЕПСведенияОДоходах.Записать();
        
        Движения.ЕПРасчетыСФондами.Очистить();
        Движения.ЕПРасчетыСФондами.Записать();
        
        Движения.ЕПКомпоненты.Очистить();
        Движения.ЕПКомпоненты.Записать();  
        
        ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
        
        Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
            Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Объект.Организация, 
            Объект.Организация, 
            Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
        Иначе
            Налогоплательщик = Объект.Организация;
        КонецЕсли;
        
        ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
        
        Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
            ОтменитьТранзакцию();
            Возврат;
        КонецЕсли;
        
        Движения = ДокументОбъект.Движения;
        
        // ЕПРасчетыСФондами
        НаборЕПРасчетыСФондами = РегистрыНакопления.ЕПРасчетыСФондами.СоздатьНаборЗаписей();
        НаборЕПРасчетыСФондами.Отбор.Регистратор.Значение = Объект.Ссылка;
        НаборЕПРасчетыСФондами.Записать();
        
        // ЕПРасчетыСФондами
        НаборЕПКомпонентыПлатежа = РегистрыНакопления.ЕПКомпоненты.СоздатьНаборЗаписей();
        НаборЕПКомпонентыПлатежа.Отбор.Регистратор.Значение = Объект.Ссылка;
        НаборЕПКомпонентыПлатежа.Записать();
        
        КомментарийИПН = Неопределено;
        // чтобы налоговые вычеты попали в ветку комментария ИПН - создадим ее уже сейчас
        
        ПараметрыРасчета = ПодготовитьПараметрыРасчета(Объект, Отказ);
        
        Если Отказ Тогда
            ОтменитьТранзакцию();
            Возврат;
        КонецЕсли;
        
        Реквизиты = ПараметрыРасчета.Реквизиты;
        
        // Расчет ЕП
        
        СписокФизлицТекст = 
        "ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	Работники.Физлицо КАК Физлицо
        |ИЗ
        |	Документ.РасчетЕдиногоПлатежа.ИсчисленныйЕП КАК Работники
        |
        |ГДЕ
        |	Работники.Ссылка = &парамРегистратор
        |	" + ?(ФизЛицо <> Неопределено, "И Работники.ФизЛицо В (&парамФизЛицо)", "");
        
        ДополнительныеПараметрыЗапроса = Новый Структура();
        ДополнительныеПараметрыЗапроса.Вставить("парамФизЛицо", ФизЛицо);
        
        ДанныеЕП = ПроведениеРасчетовСервер.ПолучитьДанныеДляРасчетаЕП(Неопределено, Объект.ПериодРегистрации, Налогоплательщик, Объект.Ссылка, СписокФизлицТекст, ДополнительныеПараметрыЗапроса);
        Если ДанныеЕП <> НеОпределено Тогда
            ПроведениеРасчетовСервер.ЗаполнитьНаборЗаписейПоДаннымЕП(Объект.ИсчисленныйЕП, Объект.ПериодРегистрации, НаборЕПРасчетыСФондами, НаборЕПКомпонентыПлатежа, ДанныеЕП, Налогоплательщик, Объект.Организация, Реквизиты.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, ФизЛицо, НЕ Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам, ?(СтруктураДополнительныхДанных = Неопределено, Неопределено, Неопределено));//СтруктураДополнительныхДанных.РасчетЕПДополнительныеДанные));
        КонецЕсли;
    КонецЕсли;
    
    Если Отказ Тогда
    	ОтменитьТранзакцию();
    	Возврат;
    КонецЕсли; 

    ПроведениеРасчетовСервер.РассчитатьДокумент("УдержанияОрганизаций", 
    											"РасчетЕдиногоПлатежа",
    											"Удержания", 
    											Объект, 
    											ФизЛицо,
    											КомментироватьРасчет);
    
    Если Не ЕПРассчитан Тогда
    	// Удаляем движения
        Движения.ЕПСведенияОДоходах.Очистить();
        Движения.ЕПСведенияОДоходах.Записать();
        
        НаборЕПРасчетыСФондами.Очистить();
        НаборЕПРасчетыСФондами.Записать();
        
        НаборЕПКомпонентыПлатежа.Очистить();
        НаборЕПКомпонентыПлатежа.Записать();
    КонецЕсли;
    
    // Завершаем транзакцию
    ЗафиксироватьТранзакцию();
	
КонецПроцедуры // РассчитатьУдержания()

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(Ссылка, Отказ) Экспорт
	
   ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(Ссылка.ПериодРегистрации));
	Запрос.УстановитьПараметр("Период", Ссылка.ПериодРегистрации);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
    ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	Реквизиты.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаРаботыСоСтруктурнымиПодразделениями, "ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Запрос.УстановитьПараметр("Организация", 			   Реквизиты.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделение", Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение",  Реквизиты.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("ОкончаниеПериодаРегистрации", КонецМесяца(Реквизиты.ПериодРегистрации));
	Запрос.УстановитьПараметр("Начало", 				   НачалоМесяца(Реквизиты.ПериодРегистрации));
	Запрос.УстановитьПараметр("Окончание", 				   КонецМесяца(Реквизиты.ПериодРегистрации));
	Запрос.УстановитьПараметр("ПоддержкаРаботыСоСтруктурнымиПодразделениями", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	Запрос.УстановитьПараметр("ИндивидуальныйПредприниматель", Реквизиты.ИндивидуальныйПредприниматель);
	Запрос.УстановитьПараметр("ЕжемесячныйРасчетВзносовИОтчисленийЗаИП", Реквизиты.ЕжемесячныйРасчетВзносовИОтчисленийЗаИП);
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																							Реквизиты.Организация,
																							ПредопределенноеЗначение("Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты"));
	Иначе
		Налогоплательщик = Реквизиты.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("Налогоплательщик",  Налогоплательщик);
	
	НомераТаблиц = Новый Структура;
	
	Если НЕ Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
		
		ПодготовитьТаблицыДокумента(Запрос, Реквизиты);

		Запрос.Текст = ТекстЗапросаИсчисленныйЕП(НомераТаблиц)
						+ ТекстЗапросаЕПСведенияОДоходах(НомераТаблиц)
                        + ТекстЗапросаЕПКомпонентыПлатежа(НомераТаблиц)
						+ ТекстЗапросаВзаиморасчетыСРаботникамиОрганизаций(НомераТаблиц)
                        + ТекстЗапросаВзаиморасчетыСПолучателямиИЛ(НомераТаблиц)
						+ ТекстЗапросаВыплаченныеДоходыНУ(НомераТаблиц);
	Иначе
		Запрос.Текст = РаспределитьРезультатыПоСтруктурнымЕдиницам(НомераТаблиц, Реквизиты, Запрос);
	КонецЕсли;
				
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ Реквизиты.ПорядокОбложенияДоходовРаботников = Перечисления.ПорядокОбложенияДоходовРаботников.ЕдиныйПлатеж Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'В учетной политике не установлен порядок обложения доходов работников ""Единый платеж""'"));
		Отказ = Истина;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ	

Процедура ПодготовитьТаблицыДокумента(Запрос, Реквизиты)
	
    СписокСпособыРасчетаИЛ = Новый СписокЗначений;
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
	Запрос.УстановитьПараметр("СписокСпособыРасчетаИЛ", СписокСпособыРасчетаИЛ);

    Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ИсчисленныйЕП.НомерСтроки КАК НомерСтроки,
        |   ИсчисленныйЕП.ФизЛицо КАК ФизЛицо,
        |   ИсчисленныйЕП.СуммаПлатежа КАК СуммаПлатежа,
        |   ИсчисленныйЕП.СуммаОПВ КАК СуммаОПВ,
        |   ИсчисленныйЕП.СуммаВОСМС КАК СуммаВОСМС,
        |   ИсчисленныйЕП.СуммаИПН КАК СуммаИПН,
        |   ИсчисленныйЕП.СуммаСО КАК СуммаСО,
        |   ИсчисленныйЕП.СуммаООСМС КАК СуммаООСМС,
        |   ИсчисленныйЕП.СуммаОПВР КАК СуммаОПВР,
        |   ИсчисленныйЕП.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
        |   ИсчисленныйЕП.ОблагаемаяБаза КАК ОблагаемаяБаза
        |ПОМЕСТИТЬ ВТ_ИсчисленныйЕП
        |ИЗ
        |   Документ.РасчетЕдиногоПлатежа.ИсчисленныйЕП КАК ИсчисленныйЕП
        |ГДЕ
        |   ИсчисленныйЕП.Ссылка = &Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   Удержания.НомерСтроки КАК НомерСтроки,
        |   Удержания.ФизЛицо КАК ФизЛицо,
        |   Удержания.Размер КАК Размер,
        |   Удержания.ВидРасчета КАК ВидРасчета,
        |   Удержания.ДокументОснование КАК ДокументОснование,
        |   Удержания.Результат КАК Результат,
        |   ВЫБОР
        |       КОГДА Реквизиты.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ
        |           ТОГДА Удержания.Результат
        |       ИНАЧЕ ВЫБОР
        |               КОГДА Удержания.ДокументОснование.Ссылка ЕСТЬ NULL
        |                       ИЛИ НЕ Удержания.ДокументОснование.Ссылка ЕСТЬ NULL
        |                           И НЕ Удержания.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
        |                   ТОГДА Удержания.Результат
        |               ИНАЧЕ 0
        |           КОНЕЦ
        |   КОНЕЦ КАК СуммаДохода,
        |   ВЫБОР
        |       КОГДА Удержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ)
        |               ИЛИ Удержания.ДокументОснование.СпособПеречисления = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
        |           ТОГДА Удержания.Результат
        |       ИНАЧЕ 0
        |   КОНЕЦ КАК СуммаУдержанияИЛ,
        |   ВЫБОР
        |       КОГДА НЕ Удержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ)
        |               И Удержания.ДокументОснование.СпособПеречисления <> ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
        |           ТОГДА Удержания.Результат
        |       ИНАЧЕ 0
        |   КОНЕЦ КАК СуммаСборов,
        |   Удержания.ДокументОснование.Получатель КАК Получатель
        |ПОМЕСТИТЬ ВТ_Удержания
        |ИЗ
        |   Документ.РасчетЕдиногоПлатежа.Удержания КАК Удержания
        |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
        |       ПО (ИСТИНА)
        |ГДЕ
        |   Удержания.Ссылка = &Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   &ОкончаниеПериодаРегистрации КАК Период,
        |   &ПериодРегистрации КАК ПериодВзаиморасчетов,
        |   ВЫБОР
        |       КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
        |           ТОГДА Реквизиты.ПериодРегистрации
        |       ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
        |   КОНЕЦ КАК ПериодРаботника,
        |   &Налогоплательщик КАК Налогоплательщик,
        |   &ОбособленноеПодразделение КАК Организация,
        |   СтрокаИсчисленныйЕП.ФизЛицо КАК ФизЛицо,
        |   -(СтрокаИсчисленныйЕП.СуммаОПВ + СтрокаИсчисленныйЕП.СуммаВОСМС + СтрокаИсчисленныйЕП.СуммаИПН) КАК СуммаВзаиморасчетов,
        |   СтрокаИсчисленныйЕП.НомерСтроки КАК НомерСтроки
        |ПОМЕСТИТЬ ВТ_ВзаиморасчетыОрганизаций
        |ИЗ
        |   ВТ_ИсчисленныйЕП КАК СтрокаИсчисленныйЕП
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
        |       ПО (ИСТИНА)
        |ГДЕ
        |   СтрокаИсчисленныйЕП.ФизЛицо <> &ИндивидуальныйПредприниматель
   		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ОкончаниеПериодаРегистрации,
		|	&ПериодРегистрации,
		|	&ПериодРегистрации,
		|	&Налогоплательщик,
		|	&ОбособленноеПодразделение,
		|	СтрокаУдержания.ФизЛицо,
		|	-СтрокаУдержания.Результат,
		|	СтрокаУдержания.НомерСтроки
		|ИЗ
		|	ВТ_Удержания КАК СтрокаУдержания
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗЛИЧНЫЕ
        |   ИсчисленныйЕП.ФизЛицо КАК ФизЛицо,
        |   ВЫБОР
        |       КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
        |           ТОГДА &ПериодРегистрации
        |       ИНАЧЕ ИсчисленныйЕП.МесяцНалоговогоПериода
        |   КОНЕЦ КАК Период
        |ПОМЕСТИТЬ ВТ_ПериодыСотрудников
        |ИЗ
        |   ВТ_ИсчисленныйЕП КАК ИсчисленныйЕП
        |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
        |       ПО (ИСТИНА)
        |
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Удержания.ФизЛицо,
		|	&ПериодРегистрации
		|ИЗ
		|	ВТ_Удержания КАК Удержания";
			
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
					 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина, Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями И Не Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам);
					 
		Результат = Запрос.Выполнить();
	                                                 
КонецПроцедуры

Функция ТекстЗапросаВзаиморасчетыСПолучателямиИЛ(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВзаиморасчетыСПолучателямиИЛ", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ОкончаниеПериодаРегистрации КАК Период,
		|	&ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	СтрокаУдержания.Размер,
		|	СтрокаУдержания.ВидРасчета,
		|	СтрокаУдержания.Получатель,
		|	СтрокаУдержания.ДокументОснование,
		|	СУММА(СтрокаУдержания.СуммаУдержанияИЛ) КАК СуммаВзаиморасчетов,
		|	СУММА(СтрокаУдержания.СуммаСборов),
		|
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		|	// ПодразделениеОрганизации
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации
		|
		|ИЗ
		|	ВТ_Удержания КАК СтрокаУдержания
		|
		|   ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаУдержания.ФизЛицо = МестоРаботы.ФизЛицо
		|			И &ПериодРегистрации = МестоРаботы.Период
		|
		|ГДЕ
		|	СтрокаУдержания.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО 
		|	СтрокаУдержания.Размер,
		|	СтрокаУдержания.ВидРасчета,
		|	СтрокаУдержания.Получатель,
		|	СтрокаУдержания.ДокументОснование,
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ		
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВыплаченныеДоходыНУ(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВыплаченныеДоходыНУ", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ОкончаниеПериодаРегистрации КАК Период,
		|	&ПериодРегистрации КАК МесяцНалоговогоПериода,
		|	СтрокаУдержания.ФизЛицо,
		|	СУММА(СтрокаУдержания.СуммаДохода),
		|
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		|	// ПодразделениеОрганизации
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации
		|
		|ИЗ
		|	ВТ_Удержания КАК СтрокаУдержания
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаУдержания.ФизЛицо = МестоРаботы.ФизЛицо
		|			И &ПериодРегистрации = МестоРаботы.Период
		|
		|ГДЕ
		|	СтрокаУдержания.СуммаДохода <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СтрокаУдержания.ФизЛицо,
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПодготовитьПараметрыРасчета(Объект, Отказ)
	
	ПараметрыРасчета = Новый Структура;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.ПериодРегистрации);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Реквизиты.Дата,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.РасчетЕдиногоПлатежа КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.СтруктурноеПодразделение,
		|	ДанныеДокумента.ПериодРегистрации,
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.ПодразделениеОрганизации,
		|	ДанныеДокумента.ПодразделениеОрганизацииЯвляетсяСтруктурнымПодразделением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА ДанныеДокумента.Организация
		|					ИНАЧЕ ДанныеДокумента.Организация.ГоловнаяОрганизация
		|				КОНЕЦ
		|		ИНАЧЕ ДанныеДокумента.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		//|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ, ЛОЖЬ) КАК ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,
		|	ЛОЖЬ КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ПорядокОбложенияДоходовРаботников, ЗНАЧЕНИЕ(Перечисление.ПорядокОбложенияДоходовРаботников.Общеустановленный)) КАК ПорядокОбложенияДоходовРаботников
		|ПОМЕСТИТЬ ВТ_Реквизиты
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&Период, ) КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО ДанныеДокумента.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.ПодразделениеОрганизацииЯвляетсяСтруктурнымПодразделением,
		|	Реквизиты.ГоловнаяОрганизация,
		|	Реквизиты.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,
		|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций,
		|	Реквизиты.ОтражениеПоПериодуРегистрации,
		|	Реквизиты.ПорядокОбложенияДоходовРаботников
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";
		
	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Результат.Выгрузить()[0]);
	ПараметрыРасчета.Вставить("Реквизиты", Реквизиты);
	
	Возврат ПараметрыРасчета;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВременнаяТаблица_ДанныеДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблица_Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетЕдиногоПлатежа.Дата,
		|	РасчетЕдиногоПлатежа.Организация,
		|	РасчетЕдиногоПлатежа.СтруктурноеПодразделение,
		|	РасчетЕдиногоПлатежа.ПериодРегистрации,
		|	РасчетЕдиногоПлатежа.Ссылка,
		|	РасчетЕдиногоПлатежа.ПодразделениеОрганизации,
		|	ЕСТЬNULL(РасчетЕдиногоПлатежа.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением, ЛОЖЬ) КАК ЯвляетсяСтруктурнымПодразделением
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.РасчетЕдиногоПлатежа КАК РасчетЕдиногоПлатежа
		|ГДЕ
		|	РасчетЕдиногоПлатежа.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетУдержаний.Дата,
		|	РасчетУдержаний.Организация,
		|	РасчетУдержаний.СтруктурноеПодразделение,
		|	РасчетУдержаний.ПериодРегистрации,
		|	РасчетУдержаний.Ссылка,
		|	РасчетУдержаний.ПодразделениеОрганизации,
		|	РасчетУдержаний.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(УчетнаяПолитикаПоПерсоналуОрганизаций.ВестиУчетПоГоловнойОрганизации, ИСТИНА)
		|			ТОГДА ВЫБОР
		|					КОГДА РасчетУдержаний.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА РасчетУдержаний.Организация
		|					ИНАЧЕ РасчетУдержаний.Организация.ГоловнаяОрганизация
		|				КОНЕЦ
		|		ИНАЧЕ РасчетУдержаний.Организация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.УпрощенныйУчетИПНиОПВ, ЛОЖЬ) КАК УпрощенныйУчетИПНиОПВ,
        |	ЕСТЬNULL(УчетнаяПолитикаНУ.ПорядокОбложенияДоходовРаботников, ЗНАЧЕНИЕ(Перечисление.ПорядокОбложенияДоходовРаботников.Общеустановленный)) КАК ПорядокОбложенияДоходовРаботников, 
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ, ЛОЖЬ) КАК ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,
		|	ЛОЖЬ КАК ПоддержкаРаботыСоСтруктурнымиПодразделениями,
		|   ВЫБОР
		|		КОГДА РасчетУдержаний.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо) И ЕСТЬNULL(УчетнаяПолитикаНУ.ЕжемесячныйРасчетВзносовИОтчисленийЗаИП, ЛОЖЬ)
		|			ТОГДА РасчетУдержаний.Организация.ИндивидуальныйПредприниматель 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ИндивидуальныйПредприниматель,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ЕжемесячныйРасчетВзносовИОтчисленийЗаИП, ЛОЖЬ) КАК ЕжемесячныйРасчетВзносовИОтчисленийЗаИП
		|ПОМЕСТИТЬ ВТ_Реквизиты
		|ИЗ
		|	ВТ_ДанныеДокумента КАК РасчетУдержаний
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций КАК УчетнаяПолитикаПоПерсоналуОрганизаций
		|			ПО РасчетУдержаний.Организация = УчетнаяПолитикаПоПерсоналуОрганизаций.Организация
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ПериодРегистрации, ) КАК УчетнаяПолитикаНУ
		|			ПО РасчетУдержаний.Организация = УчетнаяПолитикаНУ.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реквизиты.Дата,
		|	Реквизиты.Организация,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.Ссылка,
		|	Реквизиты.ПодразделениеОрганизации,
		|	Реквизиты.РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций,
		|	Реквизиты.ПорядокОбложенияДоходовРаботников,
		|	Реквизиты.ПоддержкаРаботыСоСтруктурнымиПодразделениями,
		|	Реквизиты.ПодразделениеОрганизацииЯвляетсяСтруктурнымПодразделением,
        |	Реквизиты.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,
		|	Реквизиты.ГоловнаяОрганизация,
		|	Реквизиты.ОтражениеПоПериодуРегистрации,
		|	Реквизиты.УпрощенныйУчетИПНиОПВ,
		|	Реквизиты.ИндивидуальныйПредприниматель,
		|	Реквизиты.ЕжемесячныйРасчетВзносовИОтчисленийЗаИП
		|ИЗ
		|	ВТ_Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаИсчисленныйЕП(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ИсчисленныйЕП", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ОкончаниеПериодаРегистрации КАК Период,
		|	ВЫБОР
		|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|	КОНЕЦ КАК МесяцНалоговогоПериода,
		|	СтрокаИсчисленныйЕП.ФизЛицо,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
		|	СУММА(СтрокаИсчисленныйЕП.СуммаПлатежа) КАК СуммаПлатежа,
		|
		|	// СтруктурнаяЕдиница
		|	ВЫБОР 
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ 
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		|	// ПодразделениеОрганизации
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации
		|
		|ИЗ
		|	ВТ_ИсчисленныйЕП КАК СтрокаИсчисленныйЕП
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаИсчисленныйЕП.ФизЛицо = МестоРаботы.ФизЛицо
		|			И (ВЫБОР
		|				КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|					ТОГДА &ПериодРегистрации
		|				ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|			КОНЕЦ) = МестоРаботы.Период
		|
		|ГДЕ 
		|	СтрокаИсчисленныйЕП.СуммаПлатежа <> 0
		|
		|СГРУППИРОВАТЬ ПО 
		|	ВЫБОР
		|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|	КОНЕЦ,
		|	СтрокаИсчисленныйЕП.ФизЛицо,
		|	ВЫБОР 
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ 
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ
		|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЕПСведенияОДоходах(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ЕПСведенияОДоходах", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|	КОНЕЦ КАК Период,
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	СтрокаИсчисленныйЕП.ФизЛицо,
		|	СтрокаИсчисленныйЕП.ОблагаемаяБаза,
		|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
		|	
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		|	// ПодразделениеОрганизации
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации
		|	
		|ИЗ
		|	ВТ_ИсчисленныйЕП КАК СтрокаИсчисленныйЕП
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаИсчисленныйЕП.ФизЛицо = МестоРаботы.ФизЛицо
		|			И (ВЫБОР
		|				КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|					ТОГДА &ПериодРегистрации
		|				ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|			КОНЕЦ)  = МестоРаботы.Период
		|
		|ГДЕ 
		|	СтрокаИсчисленныйЕП.ОблагаемаяБаза <> 0
		|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЕПКомпонентыПлатежа(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ЕПКомпоненты", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ОкончаниеПериодаРегистрации КАК Период,
		|	ВЫБОР
		|		КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|	КОНЕЦ КАК МесяцНалоговогоПериода,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
		|	СтрокаИсчисленныйЕП.ФизЛицо,
		|	СтрокаИсчисленныйЕП.СуммаПлатежа,
		|	СтрокаИсчисленныйЕП.СуммаОПВ,
		|	СтрокаИсчисленныйЕП.СуммаВОСМС,
		|	СтрокаИсчисленныйЕП.СуммаИПН,
		|	СтрокаИсчисленныйЕП.СуммаООСМС,
		|	СтрокаИсчисленныйЕП.СуммаСО,
		|	СтрокаИсчисленныйЕП.СуммаОПВР,
		|	
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА 
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		|	// ПодразделениеОрганизации
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации
		|	
		|ИЗ
		|	ВТ_ИсчисленныйЕП КАК СтрокаИсчисленныйЕП
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокаИсчисленныйЕП.ФизЛицо = МестоРаботы.ФизЛицо
		|			И (ВЫБОР
		|				КОГДА Реквизиты.ОтражениеПоПериодуРегистрации
		|					ТОГДА &ПериодРегистрации
		|				ИНАЧЕ СтрокаИсчисленныйЕП.МесяцНалоговогоПериода
		|			КОНЕЦ)  = МестоРаботы.Период
		|
		|ГДЕ 
		|	СтрокаИсчисленныйЕП.СуммаПлатежа <> 0
		|	ИЛИ СтрокаИсчисленныйЕП.СуммаОПВ <> 0
		|	ИЛИ СтрокаИсчисленныйЕП.СуммаВОСМС <> 0
		|	ИЛИ СтрокаИсчисленныйЕП.СуммаООСМС <> 0
		|	ИЛИ СтрокаИсчисленныйЕП.СуммаСО <> 0
		|	ИЛИ СтрокаИсчисленныйЕП.СуммаОПВР <> 0
		|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВзаиморасчетыСРаботникамиОрганизаций(НомераТаблиц) 
	
	НомераТаблиц.Вставить("ВзаиморасчетыСРаботникамиОрганизаций", НомераТаблиц.Количество());
	
	ТекстЗапроса =  
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтрокиВзаиморасчетыОрганизаций.Период,
		|	СтрокиВзаиморасчетыОрганизаций.ПериодВзаиморасчетов,
		|	СтрокиВзаиморасчетыОрганизаций.ФизЛицо,
		|	СУММА(СтрокиВзаиморасчетыОрганизаций.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание) КАК ВидСтроки,
		|	
		|	// СтруктурнаяЕдиница
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|
		| 	// ПодразделениеОрганизации
		| 	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации
		|
		|ИЗ
		|	ВТ_ВзаиморасчетыОрганизаций КАК СтрокиВзаиморасчетыОрганизаций
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестоРаботы
		|		ПО СтрокиВзаиморасчетыОрганизаций.ФизЛицо = МестоРаботы.ФизЛицо
		|			И СтрокиВзаиморасчетыОрганизаций.ПериодРаботника = МестоРаботы.Период
		|
		|ГДЕ
		|	СтрокиВзаиморасчетыОрганизаций.СуммаВзаиморасчетов <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СтрокиВзаиморасчетыОрганизаций.Период,
		|	СтрокиВзаиморасчетыОрганизаций.ПериодВзаиморасчетов,
		|	СтрокиВзаиморасчетыОрганизаций.ФизЛицо,
		|	ВЫБОР
		|		КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|						ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|					КОГДА НЕ (&СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|						ТОГДА &СтруктурноеПодразделение
		|					ИНАЧЕ &ОбособленноеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ &ОбособленноеПодразделение 
		|	КОНЕЦ
		|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Выполняет распределение результатов по структурым единицам и подразделениям
//
Функция РаспределитьРезультатыПоСтруктурнымЕдиницам(НомераТаблиц, Реквизиты, Запрос)
	
    ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	РаспределятьНалогиПоПодразделениямОрганизаций = Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций;
	
	ЗапросРаспределения = Новый Запрос;
	
	ЗапросРаспределения.УстановитьПараметр("Организация", 			   	Реквизиты.ГоловнаяОрганизация);
	ЗапросРаспределения.УстановитьПараметр("ОбособленноеПодразделение",	Реквизиты.Организация);
	ЗапросРаспределения.УстановитьПараметр("СтруктурноеПодразделение", 	Реквизиты.СтруктурноеПодразделение);
	ЗапросРаспределения.УстановитьПараметр("Период",  			   	   	Реквизиты.ПериодРегистрации);
	ЗапросРаспределения.УстановитьПараметр("Ссылка", 					Реквизиты.Ссылка);
	ЗапросРаспределения.УстановитьПараметр("Начало", 					НачалоМесяца(Реквизиты.ПериодРегистрации));
	ЗапросРаспределения.УстановитьПараметр("Окончание", 				КонецМесяца(Реквизиты.ПериодРегистрации));
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда   			
		Налогоплательщик = ПроцедурыНалоговогоУчетаВызовСервераПовтИсп.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Реквизиты.СтруктурноеПодразделение,
																													Реквизиты.Организация,
																													ПредопределенноеЗначение("Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты"));
	Иначе
		Налогоплательщик = Реквизиты.Организация;
	КонецЕсли;
	ЗапросРаспределения.УстановитьПараметр("Налогоплательщик",  Налогоплательщик);
	
	ЗапросРаспределения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
		
	// ТАБЛИЧНЫЕ ЧАСТИ
	
	ЗапросРаспределения.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсчисленныйЕП.Ссылка,
		|	ИсчисленныйЕП.НомерСтроки,
		|	ИсчисленныйЕП.ФизЛицо,
		|	ИсчисленныйЕП.СуммаПлатежа КАК СуммаПлатежа,
		|	ИсчисленныйЕП.МесяцНалоговогоПериода,
		|	ИсчисленныйЕП.ОблагаемаяБаза,
		|	ИсчисленныйЕП.СуммаОПВ,
		|	ИсчисленныйЕП.СуммаВОСМС,
		|	ИсчисленныйЕП.СуммаИПН,
		|	ИсчисленныйЕП.СуммаСО,
		|	ИсчисленныйЕП.СуммаООСМС,
		|	ИсчисленныйЕП.СуммаОПВР,
		|	Реквизиты.Организация,
		|	Реквизиты.ПериодРегистрации,
		|	Реквизиты.ОтражениеПоПериодуРегистрации,
		|	Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьЕП
		|ИЗ
		|	Документ.РасчетЕдиногоПлатежа.ИсчисленныйЕП КАК ИсчисленныйЕП
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|		ПО ИСТИНА
		|ГДЕ
		|	ИсчисленныйЕП.Ссылка = &Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Удержания.Ссылка,
		|	Удержания.НомерСтроки,
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.Размер,
		|	Удержания.ДокументОснование,
		|	Удержания.Результат,
		|	Удержания.Ссылка.Организация,
		|	Удержания.Ссылка.ПериодРегистрации,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БазовыеВидыРасчета.ВидРасчета) КАК КоличествоБазовыхРасчетов
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьУдержания
		|ИЗ
		|	Документ.РасчетЕдиногоПлатежа.Удержания КАК Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО Удержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|ГДЕ
		|	Удержания.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.Ссылка,
		|	Удержания.НомерСтроки,
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.Размер,
		|	Удержания.ДокументОснование,
		|	Удержания.Результат,
		|	Удержания.Ссылка.Организация,
		|	Удержания.Ссылка.ПериодРегистрации
        |;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьЕП.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	ВТ_ТабличнаяЧастьЕП КАК ТабличнаяЧастьЕП 
		|
   		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьУдержания.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания КАК ТабличнаяЧастьУдержания
		|";		
	ЗапросРаспределения.Выполнить();
	
	// Ранее исчисленные налоги и взносы
	ЗапросРаспределения.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РанееИсчисленныйЕП.НомерСтроки,
		|	РанееИсчисленныйЕП.ФизЛицо,
		|	РанееИсчисленныйЕП.МесяцНалоговогоПериода,
		|	РанееИсчисленныйЕП.ПериодРегистрации,
		|	РанееИсчисленныйЕП.Организация,
		|	РанееИсчисленныйЕП.СтруктурнаяЕдиница,
		|	РанееИсчисленныйЕП.ПодразделениеОрганизации,
		|	СУММА(РанееИсчисленныйЕП.СуммаПлатежа) КАК СуммаПлатежа,
		|	СУММА(РанееИсчисленныйЕП.ОблагаемаяБаза) КАК ОблагаемаяБаза,
		|	СУММА(РанееИсчисленныйЕП.СуммаОПВ) КАК СуммаОПВ,
		|	СУММА(РанееИсчисленныйЕП.СуммаВОСМС) КАК СуммаВОСМС,
		|	СУММА(РанееИсчисленныйЕП.СуммаИПН) КАК СуммаИПН,
		|	СУММА(РанееИсчисленныйЕП.СуммаООСМС) КАК СуммаООСМС,
		|	СУММА(РанееИсчисленныйЕП.СуммаСО) КАК СуммаСО,
		|	СУММА(РанееИсчисленныйЕП.СуммаОПВР) КАК СуммаОПВР
		|ПОМЕСТИТЬ ВТ_РанееИсчисленныйЕП
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧастьЕП.НомерСтроки КАК НомерСтроки,
		|		ЕПРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		ЕПРасчетыСФондами.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ТабличнаяЧастьЕП.Организация КАК Организация,
		|		ЕПРасчетыСФондами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|		ВЫБОР
		|			КОГДА ТабличнаяЧастьЕП.РаспределятьНалогиПоПодразделениямОрганизаций
		|				ТОГДА ЕПРасчетыСФондами.ПодразделениеОрганизации 
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		КОНЕЦ КАК ПодразделениеОрганизации,
		|		ЕПРасчетыСФондами.СуммаПлатежа КАК СуммаПлатежа,
		|		0 КАК ОблагаемаяБаза,
		|		0 КАК СуммаОПВ,
		|		0 КАК СуммаВОСМС,
		|		0 КАК СуммаИПН,
		|		0 КАК СуммаООСМС,
		|		0 КАК СуммаСО,
		|		0 КАК СуммаОПВР
		|	ИЗ
		|		РегистрНакопления.ЕПРасчетыСФондами КАК ЕПРасчетыСФондами
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ТабличнаяЧастьЕП
		|			ПО ЕПРасчетыСФондами.ФизЛицо = ТабличнаяЧастьЕП.ФизЛицо
		|				И (НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьЕП.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ЕПРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВЫБОР КОГДА ТабличнаяЧастьЕП.ОтражениеПоПериодуРегистрации ТОГДА ТабличнаяЧастьЕП.ПериодРегистрации ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода КОНЕЦ, МЕСЯЦ))
		|               И ЕПРасчетыСФондами.Налогоплательщик = &Налогоплательщик 
		|				И ЕПРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
		|				И ЕПРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) 
		|				И ЕПРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|
		|	ГДЕ
		|		ЕПРасчетыСФондами.Активность
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьЕП.НомерСтроки,
		|		ЕПСведенияОДоходах.ФизЛицо,
		|		ЕПСведенияОДоходах.Период,
		|		ЕПСведенияОДоходах.ПериодРегистрации,
		|		ТабличнаяЧастьЕП.Организация,
		|		ЕПСведенияОДоходах.СтруктурнаяЕдиница,
		|		ВЫБОР 
		|			КОГДА ТабличнаяЧастьЕП.РаспределятьНалогиПоПодразделениямОрганизаций
		|				ТОГДА ЕПСведенияОДоходах.ПодразделениеОрганизации
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		КОНЕЦ,
		|		0,
		|		ЕПСведенияОДоходах.ОблагаемаяБазаОборот,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		РегистрНакопления.ЕПСведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Налогоплательщик = &Налогоплательщик
		|					И ПериодРегистрации = &Период
		|					И СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)) КАК ЕПСведенияОДоходах
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ТабличнаяЧастьЕП
		|			ПО ЕПСведенияОДоходах.ФизЛицо = ТабличнаяЧастьЕП.ФизЛицо
		|				И (НАЧАЛОПЕРИОДА(ЕПСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьЕП.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ЕПСведенияОДоходах.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВЫБОР КОГДА ТабличнаяЧастьЕП.ОтражениеПоПериодуРегистрации ТОГДА ТабличнаяЧастьЕП.ПериодРегистрации ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода КОНЕЦ, МЕСЯЦ))
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьЕП.НомерСтроки,
		|		ЕПКомпонентыПлатежаОбороты.ФизЛицо,
		|		ЕПКомпонентыПлатежаОбороты.Период,
		|		ЕПКомпонентыПлатежаОбороты.МесяцНалоговогоПериода,
		|		ТабличнаяЧастьЕП.Организация,
		|		ЕПКомпонентыПлатежаОбороты.СтруктурнаяЕдиница,
		|		ВЫБОР 
		|			КОГДА ТабличнаяЧастьЕП.РаспределятьНалогиПоПодразделениямОрганизаций
		|				ТОГДА ЕПКомпонентыПлатежаОбороты.ПодразделениеОрганизации
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		КОНЕЦ,
		|		0,
		|		0,
		|		ЕПКомпонентыПлатежаОбороты.СуммаОПВОборот,
		|		ЕПКомпонентыПлатежаОбороты.СуммаВОСМСОборот,
		|		ЕПКомпонентыПлатежаОбороты.СуммаИПНОборот,
		|		ЕПКомпонентыПлатежаОбороты.СуммаООСМСОборот,
		|		ЕПКомпонентыПлатежаОбороты.СуммаСООборот,
		|		ЕПКомпонентыПлатежаОбороты.СуммаОПВРОборот
		|	ИЗ
		|		РегистрНакопления.ЕПКомпоненты.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Налогоплательщик = &Налогоплательщик
		|					И МесяцНалоговогоПериода = &Период) КАК ЕПКомпонентыПлатежаОбороты
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ТабличнаяЧастьЕП
		|			ПО ЕПКомпонентыПлатежаОбороты.ФизЛицо = ТабличнаяЧастьЕП.ФизЛицо
		|				И (НАЧАЛОПЕРИОДА(ЕПКомпонентыПлатежаОбороты.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьЕП.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ЕПКомпонентыПлатежаОбороты.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВЫБОР КОГДА ТабличнаяЧастьЕП.ОтражениеПоПериодуРегистрации ТОГДА ТабличнаяЧастьЕП.ПериодРегистрации ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода КОНЕЦ, МЕСЯЦ))) КАК РанееИсчисленныйЕП
		|		
		|СГРУППИРОВАТЬ ПО
		|	РанееИсчисленныйЕП.НомерСтроки,
		|	РанееИсчисленныйЕП.ФизЛицо,
		|	РанееИсчисленныйЕП.МесяцНалоговогоПериода,
		|	РанееИсчисленныйЕП.ПериодРегистрации,
		|	РанееИсчисленныйЕП.Организация,
		|	РанееИсчисленныйЕП.СтруктурнаяЕдиница,
		|	РанееИсчисленныйЕП.ПодразделениеОрганизации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсчисленныйЕП.НомерСтроки,
		|	ИсчисленныйЕП.ФизЛицо,
		|	ИсчисленныйЕП.МесяцНалоговогоПериода,
		|	ИсчисленныйЕП.ПериодРегистрации,
		|	ИсчисленныйЕП.Организация,
		|	СУММА(ИсчисленныйЕП.СуммаПлатежа) КАК СуммаПлатежа,
		|	СУММА(ИсчисленныйЕП.ОблагаемаяБаза) КАК ОблагаемаяБаза,
		|	СУММА(ИсчисленныйЕП.СуммаОПВ) КАК СуммаОПВ,
		|	СУММА(ИсчисленныйЕП.СуммаВОСМС) КАК СуммаВОСМС,
		|	СУММА(ИсчисленныйЕП.СуммаИПН) КАК СуммаИПН,
		|	СУММА(ИсчисленныйЕП.СуммаООСМС) КАК СуммаООСМС,
		|	СУММА(ИсчисленныйЕП.СуммаСО) КАК СуммаСО,
		|	СУММА(ИсчисленныйЕП.СуммаОПВР) КАК СуммаОПВР
		|ПОМЕСТИТЬ ВТ_ИсчисленныйЕП
		|ИЗ
		|	(ВЫБРАТЬ
		|		РанееИсчисленныйЕП.НомерСтроки КАК НомерСтроки,
		|		РанееИсчисленныйЕП.ФизЛицо КАК ФизЛицо,
		|		РанееИсчисленныйЕП.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		РанееИсчисленныйЕП.ПериодРегистрации КАК ПериодРегистрации,
		|		РанееИсчисленныйЕП.Организация КАК Организация,
		|		РанееИсчисленныйЕП.СуммаПлатежа КАК СуммаПлатежа,
		|		РанееИсчисленныйЕП.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|		РанееИсчисленныйЕП.СуммаОПВ КАК СуммаОПВ,
		|		РанееИсчисленныйЕП.СуммаВОСМС КАК СуммаВОСМС,
		|		РанееИсчисленныйЕП.СуммаИПН КАК СуммаИПН,
		|		РанееИсчисленныйЕП.СуммаООСМС КАК СуммаООСМС,
		|		РанееИсчисленныйЕП.СуммаСО КАК СуммаСО,
		|		РанееИсчисленныйЕП.СуммаОПВР КАК СуммаОПВР
		|	ИЗ
		|		ВТ_РанееИсчисленныйЕП КАК РанееИсчисленныйЕП
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьЕП.НомерСтроки,
		|		ТабличнаяЧастьЕП.ФизЛицо,
		|		ТабличнаяЧастьЕП.МесяцНалоговогоПериода,
		|		ТабличнаяЧастьЕП.ПериодРегистрации,
		|		ТабличнаяЧастьЕП.Организация,
		|		ТабличнаяЧастьЕП.СуммаПлатежа,
		|		ТабличнаяЧастьЕП.ОблагаемаяБаза,
		|		ТабличнаяЧастьЕП.СуммаОПВ КАК СуммаОПВ,
		|		ТабличнаяЧастьЕП.СуммаВОСМС КАК СуммаВОСМС,
		|		ТабличнаяЧастьЕП.СуммаИПН КАК СуммаИПН,
		|		ТабличнаяЧастьЕП.СуммаООСМС КАК СуммаООСМС,
		|		ТабличнаяЧастьЕП.СуммаСО КАК СуммаСО,
		|		ТабличнаяЧастьЕП.СуммаОПВР КАК СуммаОПВР
		|	ИЗ
		|		ВТ_ТабличнаяЧастьЕП КАК ТабличнаяЧастьЕП) КАК ИсчисленныйЕП
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсчисленныйЕП.НомерСтроки,
		|	ИсчисленныйЕП.ФизЛицо,
		|	ИсчисленныйЕП.МесяцНалоговогоПериода,
		|	ИсчисленныйЕП.ПериодРегистрации,
		|	ИсчисленныйЕП.Организация
		|";
		
	ЗапросРаспределения.Выполнить();
	
	ЗапросРаспределения.Текст = "
		|ВЫБРАТЬ
		|	ВТ_ТабличнаяЧастьЕП.ФизЛицо,
		|	ВЫБОР
		|		КОГДА ВТ_ТабличнаяЧастьЕП.ОтражениеПоПериодуРегистрации
		|			ТОГДА ВТ_ТабличнаяЧастьЕП.ПериодРегистрации
		|		ИНАЧЕ ВТ_ТабличнаяЧастьЕП.МесяцНалоговогоПериода
		|	КОНЕЦ КАК Период
		|ПОМЕСТИТЬ ВТ_ПериодыСотрудников
		|ИЗ
		|	ВТ_ТабличнаяЧастьЕП 
        |
        |ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ВТ_ТабличнаяЧастьУдержания.ФизЛицо,
		|	ВТ_ТабличнаяЧастьУдержания.ПериодРегистрации КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания
		|";
		
	ЗапросРаспределения.Текст = ЗапросРаспределения.Текст 
				 + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета()
				 + РасчетЗарплатыСервер.СформироватьТекстЗапросаСтруктурныеЕдиницы("ВТ_ПериодыСотрудников", Истина) 
				 + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	ЗапросРаспределения.Выполнить();
	
	// ЕДИНЫЙ ПЛАТЕЖ
	
	ЗапросРаспределения.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабличнаяЧастьЕП.НомерСтроки,
		|	ТабличнаяЧастьЕП.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьЕП.ПериодРегистрации,
		|	ТабличнаяЧастьЕП.МесяцНалоговогоПериода,
     	|	ЕПСведенияОДоходахОбороты.ВидРасчета,
		|	ВЫБОР 
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода
		|	КОНЕЦ КАК ПериодДоходов,
		|	ВЫБОР 
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьЕП.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьЕП.Организация
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций 
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ (ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации
		|					КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА МестаРаботы.ПодразделениеОрганизации
		|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	СУММА(ЕСТЬNULL(ЕПСведенияОДоходахОбороты.СуммаДоходаОборот, 0)) КАК ОблагаемыйДоход
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахЕП
		|ИЗ
		|	ВТ_ИсчисленныйЕП КАК ТабличнаяЧастьЕП
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|			ПО ИСТИНА
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЕПСведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				ПериодРегистрации = &Период
		|					И ФизЛицо В (ВЫБРАТЬ СписокФизЛиц.ФизЛицо ИЗ ВТ_СписокФизЛиц КАК СписокФизЛиц)
		|					И Налогоплательщик = &Налогоплательщик
		|					И СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)) КАК ЕПСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьЕП.ФизЛицо = ЕПСведенияОДоходахОбороты.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(ВЫБОР КОГДА Реквизиты.ОтражениеПоПериодуРегистрации ТОГДА ТабличнаяЧастьЕП.ПериодРегистрации ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода КОНЕЦ, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЕПСведенияОДоходахОбороты.Период, МЕСЯЦ))
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьЕП.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЕПСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестаРаботы
		|		ПО ТабличнаяЧастьЕП.ФизЛицо = МестаРаботы.ФизЛицо
		|			И (ВЫБОР КОГДА Реквизиты.ОтражениеПоПериодуРегистрации ТОГДА ТабличнаяЧастьЕП.ПериодРегистрации ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода КОНЕЦ) = МестаРаботы.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьЕП.НомерСтроки,
		|	ТабличнаяЧастьЕП.ФизЛицо,
		|	ТабличнаяЧастьЕП.ПериодРегистрации,
		|	ТабличнаяЧастьЕП.МесяцНалоговогоПериода,
      	|	ЕПСведенияОДоходахОбороты.ВидРасчета,
		|	ВЫБОР 
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьЕП.МесяцНалоговогоПериода
		|	КОНЕЦ,
		|	ВЫБОР 
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьЕП.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьЕП.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций 
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ (ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации
		|					КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА МестаРаботы.ПодразделениеОрганизации
		|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьЕП.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьЕП.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьЕП.СуммаПлатежа КАК СуммаПлатежа,
		|	ТабличнаяЧастьЕП.СуммаОПВ КАК СуммаОПВ,
		|	ТабличнаяЧастьЕП.СуммаВОСМС КАК СуммаВОСМС,
		|	ТабличнаяЧастьЕП.СуммаИПН КАК СуммаИПН,
		|	ТабличнаяЧастьЕП.СуммаООСМС КАК СуммаООСМС,
		|	ТабличнаяЧастьЕП.СуммаСО КАК СуммаСО,
		|	ТабличнаяЧастьЕП.СуммаОПВР КАК СуммаОПВР,
		|	ТабличнаяЧастьЕП.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ТабличнаяЧастьЕП.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	СведенияОДоходахЕП.СтруктурнаяЕдиница,
		|	СведенияОДоходахЕП.Организация КАК Организация,
		|	СведенияОДоходахЕП.ПодразделениеОрганизации,
		|	СведенияОДоходахЕП.ОблагаемыйДоход,
		|	ОбщаяСуммаДоходов.ОблагаемыйДоход КАК ОблагаемыйДоходВсего,
		// правила округления не установлены законодательством
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.ПорядокОкругления, ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругления.Окр0_01)) КАК ПорядокОкругления,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.МетодОкругления, ЗНАЧЕНИЕ(Перечисление.МетодыОкругления.ПоАрифметическимПравилам)) КАК МетодОкругления
		|ИЗ
		|	ВТ_ИсчисленныйЕП КАК ТабличнаяЧастьЕП
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахЕП.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахЕП.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахЕП.ПериодРегистрации КАК ПериодРегистрации,
		|			СведенияОДоходахЕП.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|			СведенияОДоходахЕП.ПериодДоходов КАК ПериодДоходов,
		|			СУММА(СведенияОДоходахЕП.ОблагаемыйДоход) КАК ОблагаемыйДоход
		|		ИЗ
		|			ВТ_СведенияОДоходахЕП КАК СведенияОДоходахЕП
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахЕП.НомерСтроки,
		|			СведенияОДоходахЕП.ФизЛицо,
		|			СведенияОДоходахЕП.ПериодРегистрации,
		|			СведенияОДоходахЕП.МесяцНалоговогоПериода,
		|			СведенияОДоходахЕП.ПериодДоходов) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьЕП.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьЕП.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахЕП КАК СведенияОДоходахЕП
		|		ПО ТабличнаяЧастьЕП.ФизЛицо = СведенияОДоходахЕП.ФизЛицо
		|			И ТабличнаяЧастьЕП.НомерСтроки = СведенияОДоходахЕП.НомерСтроки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&Период, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО (ИндивидуальныйПорядокОкругления.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ЕдиныйПлатеж))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо,
		|	МесяцНалоговогоПериода
		|ИТОГИ
		|	МАКСИМУМ(СуммаПлатежа),
		|	МАКСИМУМ(ОблагаемаяБаза),
		|	МАКСИМУМ(СуммаОПВ),
		|	МАКСИМУМ(СуммаВОСМС),
		|	МАКСИМУМ(СуммаИПН),
		|	МАКСИМУМ(СуммаООСМС),
		|	МАКСИМУМ(СуммаСО),
		|	МАКСИМУМ(СуммаОПВР),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";
	
	РезультатЗапросаЕП = ЗапросРаспределения.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ЕП
	ТаблицаРаспределенияЕП = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Дата"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаПлатежа", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаОПВ", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаВОСМС", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаИПН", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаООСМС", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаСО", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("СуммаОПВР", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияЕП.Колонки.Добавить("ОблагаемаяБаза", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("СуммаПлатежа");
	КолонкиДляРаспределения.Добавить("ОблагаемаяБаза");
	КолонкиДляРаспределения.Добавить("СуммаОПВ");
	КолонкиДляРаспределения.Добавить("СуммаВОСМС");
	КолонкиДляРаспределения.Добавить("СуммаИПН");
	КолонкиДляРаспределения.Добавить("СуммаООСМС");
	КолонкиДляРаспределения.Добавить("СуммаСО");
	КолонкиДляРаспределения.Добавить("СуммаОПВР");
	
	КолонкаКоэффициентов = "ОблагаемыйДоход";
	ПроведениеРасчетовСервер.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияЕП, РезультатЗапросаЕП, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	

	ТаблицаРаспределенияЕП.Свернуть("НомерСтроки, ФизЛицо, СтруктурнаяЕдиница, Организация, ПодразделениеОрганизации, МесяцНалоговогоПериода", 
									 "СуммаПлатежа, ОблагаемаяБаза, СуммаОПВ, СуммаВОСМС, СуммаИПН, СуммаООСМС, СуммаСО, СуммаОПВР");
									 
									 
    // УДЕРЖАНИЯ ОРГАНИЗАЦИЙ
	ЗапросРаспределения.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	ТабличнаяЧастьУдержания.НомерСтроки,
		|	ТабличнаяЧастьУдержания.ФизЛицо,
		|	ТабличнаяЧастьУдержания.ВидРасчета,
		|	ТабличнаяЧастьУдержания.ДокументОснование,
		|	ТабличнаяЧастьУдержания.Результат,
		|	ТабличнаяЧастьУдержания.Организация,
		|	ТабличнаяЧастьУдержания.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ (ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации
		|					КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА МестаРаботы.ПодразделениеОрганизации
		|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,
		|	СУММА(ЕСТЬNULL(ЕПСведенияОДоходахОбороты.ОблагаемыйДоход, 0)) КАК СуммаДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахУдержания
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания КАК ТабличнаяЧастьУдержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
		|			ПО ИСТИНА
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахЕП КАК ЕПСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьУдержания.ФизЛицо = ЕПСведенияОДоходахОбороты.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьУдержания.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ЕПСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
 		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестоРаботы КАК МестаРаботы
		|		ПО ТабличнаяЧастьУдержания.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьУдержания.ПериодРегистрации = МестаРаботы.Период
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеРасчетыУдержаний
		|			ПО ТабличнаяЧастьУдержания.ВидРасчета = БазовыеРасчетыУдержаний.Ссылка
		|				И (ВЫБОР 
		|					КОГДА ТабличнаяЧастьУдержания.КоличествоБазовыхРасчетов > 0 
		|						ТОГДА ЕПСведенияОДоходахОбороты.ВидРасчета = БазовыеРасчетыУдержаний.ВидРасчета
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьУдержания.НомерСтроки,
		|	ТабличнаяЧастьУдержания.ФизЛицо,
		|	ТабличнаяЧастьУдержания.ВидРасчета,
		|	ТабличнаяЧастьУдержания.ДокументОснование,
		|	ТабличнаяЧастьУдержания.Результат,
		|	ТабличнаяЧастьУдержания.Организация,
		|	ТабличнаяЧастьУдержания.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ЕПСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ЕПСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.РаспределятьНалогиПоПодразделениямОрганизаций
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА НЕ (ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА ЕПСведенияОДоходахОбороты.ПодразделениеОрганизации
		|					КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|						ТОГДА МестаРаботы.ПодразделениеОрганизации
		|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьУдержания.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьУдержания.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьУдержания.ВидРасчета КАК ВидРасчета,
		|	ТабличнаяЧастьУдержания.ДокументОснование КАК ДокументОснование,
		|	ТабличнаяЧастьУдержания.Результат КАК Результат,
		|	СведенияОДоходахУдержания.СтруктурнаяЕдиница,
		|	СведенияОДоходахУдержания.Организация КАК Организация,
		|	СведенияОДоходахУдержания.ПодразделениеОрганизации,
		|	СведенияОДоходахУдержания.СуммаДохода,
		|	ОбщаяСуммаДоходов.СуммаДохода КАК СуммаДоходаВсего,
		|	ОбщийПорядокОкругления.ПорядокОкругления КАК ПорядокОкругления,
		|	ОбщийПорядокОкругления.МетодОкругления КАК МетодОкругления
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания КАК ТабличнаяЧастьУдержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахУдержания.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахУдержания.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахУдержания.ВидРасчета КАК ВидРасчета,
		|			СведенияОДоходахУдержания.ДокументОснование КАК ДокументОснование,
		|			СУММА(СведенияОДоходахУдержания.СуммаДохода) КАК СуммаДохода
		|		ИЗ
		|			ВТ_СведенияОДоходахУдержания КАК СведенияОДоходахУдержания
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахУдержания.НомерСтроки,
		|			СведенияОДоходахУдержания.ФизЛицо,
		|			СведенияОДоходахУдержания.ВидРасчета,
		|			СведенияОДоходахУдержания.ДокументОснование) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьУдержания.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьУдержания.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахУдержания КАК СведенияОДоходахУдержания
		|		ПО ТабличнаяЧастьУдержания.ФизЛицо = СведенияОДоходахУдержания.ФизЛицо
		|			И ТабличнаяЧастьУдержания.НомерСтроки = СведенияОДоходахУдержания.НомерСтроки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&Период, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&Период, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО ТабличнаяЧастьУдержания.ВидРасчета = ИндивидуальныйПорядокОкругления.ВидРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо
		|ИТОГИ
		|	МАКСИМУМ(Результат),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";

	РезультатЗапросаУдержания = ЗапросРаспределения.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияУдержаний = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("ДокументСсылка.ИсполнительныйЛист"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("ПланВидовРасчетаСсылка.УдержанияОрганизаций"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ВидРасчета", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("Результат", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("Результат");
	
	КолонкаКоэффициентов = "СуммаДохода";
	ПроведениеРасчетовСервер.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияУдержаний, РезультатЗапросаУдержания, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	
	ТаблицаРаспределенияУдержаний.Свернуть("НомерСтроки, ФизЛицо, ДокументОснование, ВидРасчета, СтруктурнаяЕдиница, Организация, ПодразделениеОрганизации", 
										   "Результат");
									   
	// ФИНАЛЬНЫЙ ЗАПРОС
	СписокСпособыРасчетаИЛ = Новый СписокЗначений;
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой);	
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
	Запрос.УстановитьПараметр("СписокСпособыРасчетаИЛ", СписокСпособыРасчетаИЛ);

	Запрос.УстановитьПараметр("ТаблицаЕП", ТаблицаРаспределенияЕП);
	Запрос.УстановитьПараметр("ТаблицаУдержания", ТаблицаРаспределенияУдержаний);	
	
	Запрос.МенеджерВременныхТаблиц = ЗапросРаспределения.МенеджерВременныхТаблиц;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаЕП.НомерСтроки,
	|	ТаблицаЕП.ФизЛицо,
	|	ТаблицаЕП.СтруктурнаяЕдиница,
	|	ТаблицаЕП.Организация,
	|	ТаблицаЕП.ПодразделениеОрганизации,
	|	ТаблицаЕП.СтруктурнаяЕдиница,
	|	ТаблицаЕП.МесяцНалоговогоПериода,
	|	ТаблицаЕП.СуммаПлатежа,
	|	ТаблицаЕП.СуммаОПВ,
	|	ТаблицаЕП.СуммаВОСМС,
	|	ТаблицаЕП.СуммаИПН,
	|	ТаблицаЕП.СуммаООСМС,
	|	ТаблицаЕП.СуммаСО,
	|	ТаблицаЕП.СуммаОПВР,
	|	ТаблицаЕП.ОблагаемаяБаза
	|ПОМЕСТИТЬ ВТ_ТаблицаЕП
	|ИЗ
	|	&ТаблицаЕП КАК ТаблицаЕП
	|;
	|
   	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУдержания.НомерСтроки,
	|	ТаблицаУдержания.ФизЛицо,
	|	ТаблицаУдержания.СтруктурнаяЕдиница,
	|	ТаблицаУдержания.Организация,
	|	ТаблицаУдержания.ПодразделениеОрганизации,
	|	ТаблицаУдержания.ВидРасчета,
	|	ТаблицаУдержания.ДокументОснование,
	|	ТаблицаУдержания.Результат
	|ПОМЕСТИТЬ ВТ_ТаблицаУдержаний
	|ИЗ
	|	&ТаблицаУдержания КАК ТаблицаУдержания
	|;   
    |
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Окончание КАК Период,
	|	&Начало КАК ПериодВзаиморасчетов,
	|	ЕСТЬNULL(ТаблицаЕП.ФизЛицо, РанееИсчисленныйЕП.ФизЛицо) КАК ФизЛицо,
	|	- ((ЕСТЬNULL(ТаблицаЕП.СуммаОПВ, 0)+ ЕСТЬNULL(ТаблицаЕП.СуммаВОСМС, 0) + ЕСТЬNULL(ТаблицаЕП.СуммаИПН, 0)) 
	|		- (ЕСТЬNULL(РанееИсчисленныйЕП.СуммаОПВ, 0) + ЕСТЬNULL(РанееИсчисленныйЕП.СуммаВОСМС, 0) + ЕСТЬNULL(РанееИсчисленныйЕП.СуммаИПН, 0))) КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(ТаблицаЕП.СтруктурнаяЕдиница, РанееИсчисленныйЕП.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(ТаблицаЕП.ПодразделениеОрганизации, РанееИсчисленныйЕП.ПодразделениеОрганизации )КАК ПодразделениеОрганизации
	|ПОМЕСТИТЬ ВТ_ВзаиморасчетыОрганизаций
	|ИЗ
	|	ВТ_ТаблицаЕП КАК ТаблицаЕП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = ИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.ФизЛицо = ИсчисленныйЕП.ФизЛицо
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныйЕП КАК РанееИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = РанееИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.СтруктурнаяЕдиница = РанееИсчисленныйЕП.СтруктурнаяЕдиница
	|			И ТаблицаЕП.ПодразделениеОрганизации = РанееИсчисленныйЕП.ПодразделениеОрганизации 
   	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Окончание,
	|	&Начало,
	|	ВТ_ТаблицаУдержаний.ФизЛицо, 
   	|	-ВТ_ТаблицаУдержаний.Результат,
	|	ВТ_ТаблицаУдержаний.СтруктурнаяЕдиница,
	|	ВТ_ТаблицаУдержаний.ПодразделениеОрганизации
	|ИЗ
	|	ВТ_ТаблицаУдержаний КАК ВТ_ТаблицаУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьУдержания КАК Удержания
	|		ПО ВТ_ТаблицаУдержаний.НомерСтроки = Удержания.НомерСтроки
	|			И ВТ_ТаблицаУдержаний.ФизЛицо = Удержания.ФизЛицо
	|";
	
	Запрос.Выполнить();
	
	НомераТаблиц.Вставить("ИсчисленныйЕП", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВзаиморасчетыСРаботникамиОрганизаций", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЕПСведенияОДоходах", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЕПКомпоненты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВзаиморасчетыСПолучателямиИЛ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВыплаченныеДоходыНУ", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""ИсчисленныйЕП"" КАК ВидСтрокиЗапроса,
	|	&Окончание КАК Период,
	|	ЕСТЬNULL(ТаблицаЕП.НомерСтроки, РанееИсчисленныйЕП.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(ТаблицаЕП.ФизЛицо, РанееИсчисленныйЕП.ФизЛицо) КАК ФизЛицо,
	|	ЕСТЬNULL(ТаблицаЕП.МесяцНалоговогоПериода, РанееИсчисленныйЕП.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаПлатежа, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаПлатежа, 0) КАК СуммаПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
	|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление) КАК ВидСтроки,
	|	ЕСТЬNULL(ТаблицаЕП.СтруктурнаяЕдиница, РанееИсчисленныйЕП.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|	ЛОЖЬ КАК НеОтражатьВРеглУчете,
	|	ЕСТЬNULL(ТаблицаЕП.ПодразделениеОрганизации, РанееИсчисленныйЕП.ПодразделениеОрганизации) КАК ПодразделениеОрганизации
	|ИЗ
	|	ВТ_ТаблицаЕП КАК ТаблицаЕП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = ИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.ФизЛицо = ИсчисленныйЕП.ФизЛицо
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныйЕП КАК РанееИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = РанееИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.СтруктурнаяЕдиница = РанееИсчисленныйЕП.СтруктурнаяЕдиница
	|			И ТаблицаЕП.ПодразделениеОрганизации = РанееИсчисленныйЕП.ПодразделениеОрганизации
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаЕП.СуммаПлатежа, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаПлатежа, 0) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ВзаиморасчетыСРаботникамиОрганизаций"" КАК ВидСтрокиЗапроса,
	|	СтрокиВзаиморасчетыОрганизаций.Период КАК Период,
	|	СтрокиВзаиморасчетыОрганизаций.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|	СтрокиВзаиморасчетыОрганизаций.ФизЛицо КАК ФизЛицо,
	|	СУММА(СтрокиВзаиморасчетыОрганизаций.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Удержание) КАК ВидСтроки,
	|	СтрокиВзаиморасчетыОрганизаций.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СтрокиВзаиморасчетыОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	|ИЗ
	|	ВТ_ВзаиморасчетыОрганизаций КАК СтрокиВзаиморасчетыОрганизаций
	|ГДЕ
	|	СтрокиВзаиморасчетыОрганизаций.СуммаВзаиморасчетов <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	СтрокиВзаиморасчетыОрганизаций.Период,
	|	СтрокиВзаиморасчетыОрганизаций.ПериодВзаиморасчетов,
	|	СтрокиВзаиморасчетыОрганизаций.ФизЛицо,
	|	СтрокиВзаиморасчетыОрганизаций.СтруктурнаяЕдиница,
	|	СтрокиВзаиморасчетыОрганизаций.ПодразделениеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ЕПСведенияОДоходах"" КАК ВидСтрокиЗапроса,
	|	&Начало КАК ПериодРегистрации,
	|	ЕСТЬNULL(ТаблицаЕП.НомерСтроки, ИсчисленныйЕП.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ИсчисленныйЕП.ОтражениеПоПериодуРегистрации
	|				ТОГДА ИсчисленныйЕП.ПериодРегистрации
	|			ИНАЧЕ ИсчисленныйЕП.МесяцНалоговогоПериода
	|		КОНЕЦ, ИсчисленныйЕП.МесяцНалоговогоПериода) КАК Период,
	|	ЕСТЬNULL(ТаблицаЕП.ФизЛицо, РанееИсчисленныйЕП.ФизЛицо) КАК ФизЛицо,
	|	ЕСТЬNULL(ТаблицаЕП.ОблагаемаяБаза, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.ОблагаемаяБаза, 0) КАК ОблагаемаяБаза,
	|	ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом) КАК ОблагаетсяЦеликом,
	|	ЕСТЬNULL(ТаблицаЕП.СтруктурнаяЕдиница, РанееИсчисленныйЕП.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(ТаблицаЕП.ПодразделениеОрганизации, РанееИсчисленныйЕП.ПодразделениеОрганизации) КАК ПодразделениеОрганизации
	|ИЗ
	|	ВТ_ТаблицаЕП КАК ТаблицаЕП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = ИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.ФизЛицо = ИсчисленныйЕП.ФизЛицо
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныйЕП КАК РанееИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = РанееИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.СтруктурнаяЕдиница = РанееИсчисленныйЕП.СтруктурнаяЕдиница
	|			И ТаблицаЕП.ПодразделениеОрганизации = РанееИсчисленныйЕП.ПодразделениеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""ЕПКомпонентыПлатежа"" КАК ВидСтрокиЗапроса,
	|	&ОкончаниеПериодаРегистрации КАК Период,
	|	ЕСТЬNULL(ТаблицаЕП.НомерСтроки, РанееИсчисленныйЕП.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(ТаблицаЕП.МесяцНалоговогоПериода, РанееИсчисленныйЕП.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) КАК ВидПлатежа,
	|	ЕСТЬNULL(ТаблицаЕП.ФизЛицо, РанееИсчисленныйЕП.ФизЛицо) КАК ФизЛицо,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаПлатежа, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаПлатежа, 0) КАК СуммаПлатежа,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаОПВ, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаОПВ, 0) КАК СуммаОПВ,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаВОСМС, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаВОСМС, 0) КАК СуммаВОСМС,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаИПН, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаИПН, 0) КАК СуммаИПН,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаООСМС, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаООСМС, 0) КАК СуммаООСМС,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаСО, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаСО, 0) КАК СуммаСО,
	|	ЕСТЬNULL(ТаблицаЕП.СуммаОПВР, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаОПВР, 0) КАК СуммаОПВР,
	|	
	|	// СтруктурнаяЕдиница
	|	ЕСТЬNULL(ТаблицаЕП.СтруктурнаяЕдиница, РанееИсчисленныйЕП.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|
	|	// ПодразделениеОрганизации
	|	ЕСТЬNULL(ТаблицаЕП.ПодразделениеОрганизации, РанееИсчисленныйЕП.ПодразделениеОрганизации) КАК ПодразделениеОрганизации
	|	
	|ИЗ
	|	ВТ_ТаблицаЕП КАК ТаблицаЕП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьЕП КАК ИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = ИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.ФизЛицо = ИсчисленныйЕП.ФизЛицо
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныйЕП КАК РанееИсчисленныйЕП
	|		ПО ТаблицаЕП.НомерСтроки = РанееИсчисленныйЕП.НомерСтроки
	|			И ТаблицаЕП.СтруктурнаяЕдиница = РанееИсчисленныйЕП.СтруктурнаяЕдиница
	|			И ТаблицаЕП.ПодразделениеОрганизации = РанееИсчисленныйЕП.ПодразделениеОрганизации
	|
	|ГДЕ 
	|	ЕСТЬNULL(ТаблицаЕП.СуммаПлатежа, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаПлатежа, 0) <> 0
	|	ИЛИ ЕСТЬNULL(ТаблицаЕП.СуммаОПВ, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаОПВ, 0) <> 0
	|	ИЛИ ЕСТЬNULL(ТаблицаЕП.СуммаВОСМС, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаВОСМС, 0) <> 0
	|	ИЛИ ЕСТЬNULL(ТаблицаЕП.СуммаИПН, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаИПН, 0) <> 0
	|	ИЛИ ЕСТЬNULL(ТаблицаЕП.СуммаООСМС, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаООСМС, 0) <> 0
	|	ИЛИ ЕСТЬNULL(ТаблицаЕП.СуммаСО, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаСО, 0) <> 0
	|	ИЛИ ЕСТЬNULL(ТаблицаЕП.СуммаОПВР, 0) - ЕСТЬNULL(РанееИсчисленныйЕП.СуммаОПВР, 0) <> 0
   	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ВзаиморасчетыСПолучателямиИЛ"" КАК Поле1,
	|	ВТ_ТаблицаУдержаний.НомерСтроки КАК НомерСтроки,
	|	&Окончание КАК Период,
	|	&Период КАК ПериодВзаиморасчетов,
	|	ВТ_ТаблицаУдержаний.ФизЛицо КАК ФизЛицо,
	|	ЛОЖЬ КАК ЯвляетсяКонтрагентом,
	|	ВЫБОР
	|		КОГДА Реквизиты.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ
	|			ТОГДА ВТ_ТаблицаУдержаний.Результат
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ТаблицаУдержаний.ДокументОснование.Ссылка ЕСТЬ NULL
	|						ИЛИ НЕ ВТ_ТаблицаУдержаний.ДокументОснование.Ссылка ЕСТЬ NULL
	|							И НЕ ВТ_ТаблицаУдержаний.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|					ТОГДА ВТ_ТаблицаУдержаний.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаВыплаченногоДохода,
	|	ВЫБОР
	|		КОГДА Удержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ)
	|				ИЛИ Удержания.ДокументОснование.СпособПеречисления = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
	|			ТОГДА ВТ_ТаблицаУдержаний.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА НЕ Удержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ)
	|				И Удержания.ДокументОснование.СпособПеречисления <> ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
	|			ТОГДА ВТ_ТаблицаУдержаний.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСборов,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	Удержания.ДокументОснование.Получатель КАК Получатель,
	|	ВТ_ТаблицаУдержаний.ВидРасчета КАК ВидРасчета,
	|	Удержания.Размер КАК Размер,
	|	ВТ_ТаблицаУдержаний.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТ_ТаблицаУдержаний.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	|ИЗ
	|	ВТ_ТаблицаУдержаний КАК ВТ_ТаблицаУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьУдержания КАК Удержания
	|		ПО ВТ_ТаблицаУдержаний.НомерСтроки = Удержания.НомерСтроки
	|			И ВТ_ТаблицаУдержаний.ФизЛицо = Удержания.ФизЛицо
	|ГДЕ
	|	Удержания.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ВыплаченныеДоходыНУ"" КАК Поле1,
	|	ВТ_ТаблицаУдержаний.НомерСтроки КАК НомерСтроки,
	|	&Окончание КАК Период,
	|	&Период КАК МесяцНалоговогоПериода,
	|	ВТ_ТаблицаУдержаний.ФизЛицо КАК ФизЛицо,
	|	ВТ_ТаблицаУдержаний.Результат КАК СуммаУдержания,
	|	ВЫБОР
	|		КОГДА Реквизиты.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ
	|			ТОГДА ВТ_ТаблицаУдержаний.Результат
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ТаблицаУдержаний.ДокументОснование.Ссылка ЕСТЬ NULL
	|						ИЛИ НЕ ВТ_ТаблицаУдержаний.ДокументОснование.Ссылка ЕСТЬ NULL
	|							И НЕ ВТ_ТаблицаУдержаний.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|					ТОГДА ВТ_ТаблицаУдержаний.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаДохода,
	|	ВТ_ТаблицаУдержаний.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТ_ТаблицаУдержаний.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	|ИЗ
	|	ВТ_ТаблицаУдержаний КАК ВТ_ТаблицаУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьУдержания КАК Удержания
	|		ПО ВТ_ТаблицаУдержаний.НомерСтроки = Удержания.НомерСтроки
	|			И ВТ_ТаблицаУдержаний.ФизЛицо = Удержания.ФизЛицо
	|ГДЕ
	|	ВТ_ТаблицаУдержаний.Результат <> 0
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецЕсли
