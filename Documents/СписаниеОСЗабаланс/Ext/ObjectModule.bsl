
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область УправлениеДоступом

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ОбщегоНазначенияБК.ЗаполнитьНаборыПоОрганизацииСтурктурномуПодразделению(ЭтотОбъект, Таблица, "Организация", "СтруктурноеПодразделение");
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснования(ДанныеЗаполнения);
		Возврат;
	ИначеЕсли ТипДанныхЗаполнения = Тип("Структура") Тогда 
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ УчитыватьКПН Тогда
		ВидУчетаНУ = Справочники.ВидыУчетаНУ.ПустаяСсылка();
	КонецЕсли;
	              	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация,Дата);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Организация, Дата);
	ВедениеУчетаВременныхразницБалансовымМетодом    = УчетнаяПолитикаСервер.ВедетсяУчетВременныхРазницБалансовымМетодом(Организация, Дата);
	
	НеобходимостьОтраженияВНУ 						= ОрганизацияПлательщикНалогаНаПрибыль И УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	УправлениеВнеоборотнымиАктивамиСервер.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
	
	Если Товары.Количество() > 0 
		ИЛИ ОС.Количество() > 0 Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Товары");
		МассивНепроверяемыхРеквизитов.Добавить("ОС");		
		
	КонецЕсли;
	
	Если НЕ НеобходимостьОтраженияВНУ Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВидУчетаНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетДоходовНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетЗатратНУ");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.СчетУчетаНУ");
		
	КонецЕсли;

	Если Товары.Количество()= 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетДоходовБУ");
		МассивНепроверяемыхРеквизитов.Добавить("СчетДоходовНУ");
	КонецЕсли;	                                                                                                             	
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	//Проверим на виды операций, которые не будут полностью отработаны в данном документе
	Если СобытиеОС.ВидСобытияОС = Перечисления.ВидыСобытийОС.ПринятиеКУчету Тогда
		ТекстСообщения = НСтр("ru = 'События с основными средствами с видом <%1>
			|не могут отражаться данным документом!'");
			                                                                                                                                   
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СобытиеОС.ВидСобытияОС),
														,"СобытиеОС", "ЭтотОбъект", Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект, Ложь);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.СписаниеОСЗабаланс.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	//проверяем только, если заполнена табличная часть ОС
	Если ПараметрыПроведения.Реквизиты[0].ЕстьОС Тогда 
		
		УчетОС.ПроверитьСоответствиеОСОрганизации(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.Реквизиты, Отказ);
		
		УчетОС.ПроверитьЗаполнениеСчетаУчетаОС(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.Реквизиты, Отказ);
		
		УчетОС.ПроверитьВозможностьИзмененияСостоянияОС(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.Реквизиты, Отказ);
		
		УчетОС.ПроверитьЗаполнениеСпособаОтраженияРасходовПоАмортизации(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.Реквизиты, Отказ);
			
		ТаблицаАмортизации = УправлениеВнеоборотнымиАктивамиСервер.ПодготовитьТаблицуРаспределениеАмортизацииПоНаправлениямРегл(ПараметрыПроведения.ТаблицаОСРаспределениеАмортизацииПоНаправлениямРегл, ПараметрыПроведения.Реквизиты, Отказ);
		
	КонецЕсли;     	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	    		
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.РеквизитыСтоимостьОС, "НомерЖурнала", НСтр("ru = 'ОС'"));
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.ОприходованиеТоваровТаблицаТовары, "Содержание", НСтр("ru = 'Оприходование ТМЗ'"));
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.ОприходованиеТоваровРеквизиты, "НомерЖурнала", НСтр("ru = 'ОС'"));   	
	ОбщегоНазначенияБКВызовСервера.ДобавитьКолонкуВТаблицуЗначений(ПараметрыПроведения.Реквизиты, "НомерЖурнала", НСтр("ru = 'ОС'"));   	
	                		
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ	
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияАмортизацииПоНаправлениямРегл(ТаблицаАмортизации, ПараметрыПроведения.Реквизиты,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияИзменениеСостоянияОС(ПараметрыПроведения.ТаблицаСостоянияОС,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияРегистрацияСобытияОС(ПараметрыПроведения.ТаблицаСобытияОС,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОС(ПараметрыПроведения.ТаблицаНачислениеАмортизацииОСБухгалтерскийУчет,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияСоставОС(ПараметрыПроведения.ТаблицаСоставОС, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
				
	УчетОС.СформироватьДвиженияИзменениеЗемельногоНалога(ПараметрыПроведения.ТаблицаОбъектыЗемельногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
				
	УчетОС.СформироватьДвиженияОбъектыИмущественногоНалога(ПараметрыПроведения.ТаблицаОбъектыИмущественногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);
								
	УчетОС.СформироватьДвиженияИзменениеТранспортногоНалога(ПараметрыПроведения.ТаблицаОбъектыТранспортногоНалога, ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
				Движения, Отказ);            
				
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияОбъектыНалоговогоУчетаФА(ПараметрыПроведения.ТаблицаОбъектыНалоговогоУчетаФА,ПараметрыПроведения.РеквизитыДляИзмененияСостояний,
		 Движения, Отказ);
		 
	УправлениеВнеоборотнымиАктивамиСервер.СформироватьДвиженияФАУчитываемыхОтдельно(ПараметрыПроведения.ТаблицаФАУчитываемыеОтдельно,ПараметрыПроведения.РеквизитыДляИзмененияСостояний, 
		 Движения, Отказ);
		 
	УчетОС.СформироватьДвиженияСписаниеОС(ПараметрыПроведения.ТаблицаСписаниеОС,ПараметрыПроведения.РеквизитыСтоимостьОС,
	    Движения, Отказ);

	УчетОС.СформироватьДвижениеСписанияСтоимостиВыбытияОСНУ(ПараметрыПроведения.ТаблицаСтоимостьОСНУ, ПараметрыПроведения.РеквизитыСтоимостьОС,
		Движения, Отказ);
			
	УчетОС.СформироватьДвижениеЗакрытиеПереоценкиОС(ПараметрыПроведения.ТаблицаПереоценкиВА, ПараметрыПроведения.ТаблицаПереоценкиВАРегистр,ПараметрыПроведения.РеквизитыСтоимостьОС,
	    Движения, Отказ); 			
		
	УчетТоваров.СформироватьДвиженияОприходованиеТоваров(ПараметрыПроведения.ОприходованиеТоваровТаблицаТовары,
        ПараметрыПроведения.ОприходованиеТоваровРеквизиты, Движения, Отказ);
		
	// Товары организаций
	НомераГТДСервер.СформироватьДвиженияТоварыОрганизаций(ПараметрыПроведения.ТаблицаТоварыОрганизаций,ПараметрыПроведения.Реквизиты, Движения, Отказ);

	ПроцедурыНалоговогоУчета.ОтразитьПостоянныеРазницыВНУ(ПараметрыПроведения.Реквизиты, Движения, Отказ);  
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьПоДокументуОснования(Основание) Экспорт
	Документы.СписаниеОСЗабаланс.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, Основание);	
КонецПроцедуры

#КонецЕсли

