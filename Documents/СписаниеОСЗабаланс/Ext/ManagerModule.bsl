#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект) Экспорт
	
	ТабличнаяЧасть = Объект.Товары;
		
	ДанныеОбъекта = Новый Структура("Дата, Организация, УчитыватьКПН");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаСпискаНоменклатуры(ДанныеОбъекта.Организация, 
		ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Дата);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СчетаУчета);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаБУ) Тогда
		СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНУ) Тогда
		СтрокаТабличнойЧасти.СчетУчетаНУ = СчетаУчета.СчетУчетаНУ;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Объект, Основание) Экспорт
		
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
		
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект, ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(), , , , Основание);

		Если Основание.ЭтоГруппа Тогда
			ТекстСообщения = НСтр("ru='Нельзя списать группу основных средств'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, , "Объект"); 
			Возврат;
		КонецЕсли; 
		
		СтрокаТабличнойЧасти = Объект.ОС.Добавить();
		СтрокаТабличнойЧасти.ОсновноеСредство = Основание.Ссылка;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, Основание);
		
		Объект.ДокументОснование 		= Основание;
		Объект.Организация 			    = Основание.Организация;
		Объект.СтруктурноеПодразделение = Основание.СтруктурноеПодразделение;
		
		Для Каждого ТекСтрокаОС Из Основание.ОС Цикл
			Если ТекСтрокаОС.НаличиеПоДаннымУчета И НЕ ТекСтрокаОС.НаличиеФактическое Тогда
				НоваяСтрока = Объект.ОС.Добавить();
				НоваяСтрока.ОсновноеСредство = ТекСтрокаОС.ОсновноеСредство;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;                       
	
КонецПроцедуры

Процедура ЗаполнитьДляСпискаОСНаСервере(Объект) Экспорт
	
	СписокОС        = Объект.ОС.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	МоментДокумента = Новый МоментВремени(Объект.Дата, Объект.Ссылка);
	
	ТЗ = УправлениеВнеоборотнымиАктивамиСервер.ОпределитьСтоимостьПоСпискуОС(Объект.Организация, СписокОС, МоментДокумента, КонецМесяца(Объект.Дата));
	
	ТаблицаАмортизацииБУ = Новый ТаблицаЗначений();

	Если ТЗ.Количество() > 0 Тогда

		// Построение списка ОС, по которым начисляется амортизация, и расчет амортизации по ним для БУ
		СписокОС_НачислениеАмортизацииБУ = Новый Массив();
		
		Для Каждого СтрокаОС Из ТЗ Цикл
			СписокОС_НачислениеАмортизацииБУ.Добавить(СтрокаОС.ОС_БУ);
		КонецЦикла;	
		
		Если СписокОС_НачислениеАмортизацииБУ.Количество() > 0 Тогда
			ТаблицаАмортизацииБУ = УправлениеВнеоборотнымиАктивамиСервер.РасчетАмортизацииБухРегл(Объект.Дата, Объект.Организация, Объект.СтруктурноеПодразделение, СписокОС_НачислениеАмортизацииБУ);
		КонецЕсли;
		
		Для Каждого Строка Из Объект.ОС Цикл
			
			СтрокаТЗ = ТЗ.Найти(Строка.ОсновноеСредство, "ОС_БУ");
			
			Если ?(СтрокаТЗ = Неопределено, Истина, СтрокаТЗ.СнятоСУчета) Тогда
				
				Если СтрокаТЗ = Неопределено Тогда
					ТекстСообщения = НСтр("ru='Основное средство <%1> код <%2> не отражалось в учете по указанной организации.'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка.ОсновноеСредство, СокрЛП(Строка.ОсновноеСредство.Код));
					Поле = "ОС[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект"); 
				Иначе
					ТекстСообщения = НСтр("ru='Основное средство <%1> код <%2> снято с учета в указанной организации.'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка.ОсновноеСредство, СокрЛП(Строка.ОсновноеСредство.Код));
					Поле = "ОС[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект");
				КонецЕсли;

				Строка.СтоимостьБУ          = 0;
				Строка.АмортизацияБУ        = 0;
				Строка.АмортизацияЗаМесяцБУ = 0;

			Иначе
				Строка.СтоимостьБУ          = СтрокаТЗ.СтоимостьБУ;
				Строка.АмортизацияБУ        = СтрокаТЗ.АмортизацияБУ;
				СтрокаТаблицаАмортизацииБУ  = ТаблицаАмортизацииБУ.Найти(Строка.ОсновноеСредство, "ОС");
				Строка.АмортизацияЗаМесяцБУ = ?(СтрокаТаблицаАмортизацииБУ = Неопределено, 0, СтрокаТаблицаАмортизацииБУ.Бух);
 			КонецЕсли; 

		КонецЦикла;

	Иначе
		ТекстСообщения = НСтр("ru='Данные для заполнения отсутствуют.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
	КонецЕсли;
	
КонецПроцедуры    

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка"						  , ДокументСсылка);
	Запрос.УстановитьПараметр("СинонимОС"				      , НСтр("ru = 'ОС'"));	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НачалоПериода"                 , ДокументСсылка.Дата);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "БУ", Истина, ДокументСсылка) 
		ИЛИ НЕ УчетнаяПолитикаСервер.Существует(Реквизиты.Организация, Реквизиты.Период, "НУ", Истина, ДокументСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;           	
	
	
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль И ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	
	НеобходимостьОтраженияВНУ 						= ОрганизацияПлательщикНалогаНаПрибыль И Реквизиты.УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ Реквизиты.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ);
	ВедениеУчетаВременныхразницБалансовымМетодом    = УчетнаяПолитикаСервер.ВедетсяУчетВременныхРазницБалансовымМетодом(Реквизиты.Организация, Реквизиты.Период);	
	ВедетсяАналитическийУчетОСПоМОЛ 				= УправлениеВнеоборотнымиАктивамиСервер.ВедетсяАналитическийУчетОСПоМОЛ(Реквизиты.Период); 
	ВедетсяАналитическийУчетОСПоПодразделениям 		= УправлениеВнеоборотнымиАктивамиСервер.ВедетсяАналитическийУчетОСПоПодразделениям(Реквизиты.Период);

	Реквизиты.Вставить("ОрганизацияПлательщикНалогаНаПрибыль", 			 ОрганизацияПлательщикНалогаНаПрибыль);
	Реквизиты.Вставить("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
	Реквизиты.Вставить("НеобходимостьОтраженияВНУ", 					 НеобходимостьОтраженияВНУ);
	
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");	
	
		          	
	Запрос.УстановитьПараметр("НеобходимостьОтраженияВНУ", НеобходимостьОтраженияВНУ);
	Запрос.УстановитьПараметр("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
	Запрос.УстановитьПараметр("ПоддержкаРаботыСоСтруктурнымиПодразделениями",ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	Запрос.УстановитьПараметр("ВедениеУчетаВременныхразницБалансовымМетодом",ВедениеУчетаВременныхразницБалансовымМетодом);	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", Реквизиты.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("СубконтоВА",		ПланыВидовХарактеристик.ВидыСубконтоТиповые.ВнеоборотныеАктивы);
	Запрос.УстановитьПараметр("СубконтоОС",       ПланыВидовХарактеристик.ВидыСубконтоТиповые.ОсновныеСредства);
	Запрос.УстановитьПараметр("Период",	         Реквизиты.Период);
	Запрос.УстановитьПараметр("СчетУчетаВА",	ПланыСчетов.Налоговый.ВнеоборотныеАктивы);
	Запрос.УстановитьПараметр("СинонимТовары"   , НСтр("ru = 'Товары'"));
	                                                                      	
	СостоянияФА = Новый СписокЗначений();	
	СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.ПринятКУчету);
	СостоянияФА.Добавить(Перечисления.ВидыСостоянийФА.Выбыл);	
	Запрос.УстановитьПараметр("СостоянияФА", СостоянияФА);	
	Запрос.УстановитьПараметр("СчетАрендованныеОС", ПланыСчетов.Типовой.АрендованныеОсновныеСредства);  //Кибернетика 03.10.2023 Корыткин А.А. списание на 9011
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст =   ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)
					+ ТекстЗапросаСписаниеОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)									
					+ ТекстЗапросаСостоянияОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаСобытияОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаСоставОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)					
					+ ТекстЗапросаНачислениеАмортизацииОСБухгалтерскийУчет(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаПоМестнымНалогам(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаОбъектыНалоговогоУчетаФА(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаФАУчитываемыеОтдельно(НомераТаблиц, ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаСписаниеСтоимостиОСНУ(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаТаблицыПереоценкиОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
					+ ТекстЗапросаОприходованиеТоваров(НомераТаблиц,ПараметрыПроведения, Реквизиты) 
					+ ТекстЗапросаТоварыОрганизаций(НомераТаблиц, ПараметрыПроведения, Реквизиты);
					Если  Реквизиты.ЕстьОС Тогда
						Запрос.Текст  = Запрос.Текст + УчетОС.ТекстЗапросаРаспределениеАмортизацииПоНаправлениямРегл(НомераТаблиц);
					КонецЕсли;
								
	         	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ВедетсяАналитическийУчетОСПоМОЛ				   , "ВедетсяАналитическийУчетОСПоМОЛ");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ВедетсяАналитическийУчетОСПоПодразделениям	   , "ВедетсяАналитическийУчетОСПоПодразделениям");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(НеобходимостьОтраженияВНУ					   , "НеобходимостьОтраженияВНУ");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ВедениеУчетаВременныхРазницБалансовымМетодом   , "ВедениеУчетаВременныхРазницБалансовымМетодом");
	ПараметрыПроведения.Реквизиты.ЗаполнитьЗначения(ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль  , "ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль");
		

	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("СоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьОС) КАК ЕстьОС,
	|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьОС,
	|		ЛОЖЬ КАК ЕстьТовары
	|	ИЗ
	|		Документ.СписаниеОСЗабаланс.ОС КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.СписаниеОСЗабаланс.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""СписаниеОС"" КАК ВидДокумента,
	|	&СинонимОС КАК ИмяСписка,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	&ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	Реквизиты.Организация,
	|	Реквизиты.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	Реквизиты.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	|	Реквизиты.ПричинаСписания КАК ПричинаСписания,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	Реквизиты.СубконтоДоходовБУ1,
	|	Реквизиты.СубконтоДоходовБУ2,
	|	Реквизиты.СубконтоДоходовБУ3,
	|	Реквизиты.СубконтоЗатратБУ1,
	|	Реквизиты.СубконтоЗатратБУ2,
	|	Реквизиты.СубконтоЗатратБУ3,
	|	Реквизиты.СубконтоДоходовНУ1,
	|	Реквизиты.СубконтоДоходовНУ2,
	|	Реквизиты.СубконтоДоходовНУ3,
	|	Реквизиты.СубконтоЗатратНУ1,
	|	Реквизиты.СубконтоЗатратНУ2,
	|	Реквизиты.СубконтоЗатратНУ3,
	|	Реквизиты.ВидУчетаНУ,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.СтруктурноеПодразделение КАК КорСтруктурноеПодразделение,
	|	Реквизиты.СчетДоходовБУ,
	|	Реквизиты.СчетДоходовНУ,
	|	Реквизиты.СчетЗатратБУ,
	|	Реквизиты.СчетЗатратНУ,
	|	Реквизиты.УчитыватьКПН,
	|	ЛОЖЬ КАК НеобходимостьОтраженияВНУ,
	|	ЛОЖЬ КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
	|	ЛОЖЬ КАК ВедениеУчетаВременныхРазницБалансовымМетодом,
	|	ЛОЖЬ КАК ВедетсяАналитическийУчетОСПоПодразделениям,
	|	ЛОЖЬ КАК ВедетсяАналитическийУчетОСПоМОЛ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета) КАК Состояние,
	|	НЕОПРЕДЕЛЕНО КАК ВидРегламентнойОперации,
	|	"""" КАК Содержание,
	|	Реквизиты.Номер
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.СписаниеОСЗабаланс КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.ВидДокумента,
	|	Реквизиты.ИмяСписка,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.ДокументОснованиеВид,
	|	Реквизиты.ВалютаРегламентированногоУчета,
	|	Реквизиты.Организация,
	|	Реквизиты.ДокументОснованиеДата,
	|	Реквизиты.ДокументОснованиеНомер,
	|	Реквизиты.ПричинаСписания,
	|	Реквизиты.СобытиеОС,
	|	Реквизиты.СубконтоДоходовБУ1,
	|	Реквизиты.СубконтоДоходовБУ2,
	|	Реквизиты.СубконтоДоходовБУ3,
	|	Реквизиты.СубконтоЗатратБУ1,
	|	Реквизиты.СубконтоЗатратБУ2,
	|	Реквизиты.СубконтоЗатратБУ3,
	|	Реквизиты.СубконтоДоходовНУ1,
	|	Реквизиты.СубконтоДоходовНУ2,
	|	Реквизиты.СубконтоДоходовНУ3,
	|	Реквизиты.СубконтоЗатратНУ1,
	|	Реквизиты.СубконтоЗатратНУ2,
	|	Реквизиты.СубконтоЗатратНУ3,
	|	Реквизиты.ВидУчетаНУ,
	|	Реквизиты.СтруктурноеПодразделение,
	|	Реквизиты.СчетДоходовБУ,
	|	Реквизиты.СчетДоходовНУ,
	|	Реквизиты.СчетЗатратБУ,
	|	Реквизиты.СчетЗатратНУ,
	|	Реквизиты.УчитыватьКПН,
	|	Реквизиты.НеобходимостьОтраженияВНУ,
	|	Реквизиты.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
	|	Реквизиты.Состояние,
	|	Реквизиты.Номер,
	|	СоставДокумента.ЕстьОС,
	|	СоставДокумента.ЕстьТовары,
	|	Реквизиты.ВедетсяАналитическийУчетОСПоПодразделениям,
	|	Реквизиты.ВедетсяАналитическийУчетОСПоМОЛ,
	|	Реквизиты.ВедениеУчетаВременныхРазницБалансовымМетодом,
	|	Реквизиты.ВидРегламентнойОперации,
	|	Реквизиты.Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)
	
	ТекстЗапроса = "";
	Если Реквизиты.ЕстьОС Тогда 
		НомераТаблиц.Вставить("ВТТаблицаОС", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("СчетаБУ", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ОсновнаяТаблицаОС", НомераТаблиц.Количество());
		//Кибернетика Корыткин А.А. списание на 9011, определение контрагента.
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.Ссылка КАК Ссылка,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.ОсновноеСредство.Код КАК Код,
		|	ТаблицаОС.СтоимостьБУ КАК СтоимостьБУ,
		|	ТаблицаОС.СтоимостьНУ КАК СтоимостьНУ,
		|	ТаблицаОС.СнятьСУчетаПоНалогам КАК СнятьСУчетаПоНалогам,
		|	ТаблицаОС.АмортизацияБУ КАК АмортизацияБУ,
		|	ТаблицаОС.АмортизацияЗаМесяцБУ КАК АмортизацияЗаМесяцБУ
		|ПОМЕСТИТЬ ВТ_ТаблицаОС
		|ИЗ
		|	Документ.СписаниеОСЗабаланс.ОС КАК ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаБУ.Период КАК Период,
		|	СчетаБУ.ОсновноеСредство КАК ОсновноеСредство,
		|	СчетаБУ.Организация КАК Организация,
		|	СчетаБУ.СчетУчетаБУ КАК СчетУчетаБУ,
		|	СчетаБУ.СчетНачисленияАмортизацииБУ КАК СчетНачисленияАмортизацииБУ
		|ПОМЕСТИТЬ СчетаБУ
		|ИЗ
		|	РегистрСведений.СчетаУчетаОС.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ВТ_ТаблицаОС КАК ТаблицаОС)) КАК СчетаБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.Ссылка КАК Ссылка,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.ОсновноеСредство.Код КАК Код,
		|	ТаблицаОС.СтоимостьБУ КАК СтоимостьБУ,
		|	ТаблицаОС.СтоимостьНУ КАК СтоимостьНУ,
		|	СчетаБУ.СчетУчетаБУ КАК СчетУчетаБУ,
		|	СчетаБУ.СчетНачисленияАмортизацииБУ КАК СчетНачисленияАмортизацииБУ,
		|	ТаблицаОС.СнятьСУчетаПоНалогам КАК СнятьСУчетаПоНалогам,
		|	ТаблицаОС.АмортизацияБУ КАК АмортизацияБУ,
		|	ТаблицаОС.АмортизацияЗаМесяцБУ КАК АмортизацияЗаМесяцБУ,
		|	МестонахождениеОССрезПоследних.МОЛ КАК МОЛОрганизации,
		|	МестонахождениеОССрезПоследних.Местонахождение КАК ПодразделениеОрганизации,
		|	ТиповойОстатки.Субконто2 КАК Контрагент
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	ВТ_ТаблицаОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБУ КАК СчетаБУ
		|		ПО ТаблицаОС.ОсновноеСредство = СчетаБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ТаблицаОС.ОсновноеСредство
		|						ИЗ
		|							ВТ_ТаблицаОС КАК ТаблицаОС)) КАК МестонахождениеОССрезПоследних
		|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(
		|				&Период,
		|				Счет = &СчетАрендованныеОС,
		|				,
		|				Организация = &Организация
		|					И Субконто1 В
		|						(ВЫБРАТЬ
		|							ТаблицаОС.ОсновноеСредство
		|						ИЗ
		|							ВТ_ТаблицаОС КАК ТаблицаОС)) КАК ТиповойОстатки
		|		ПО ТаблицаОС.ОсновноеСредство = ТиповойОстатки.Субконто1"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();		
	КонецЕсли;	
		
	Если Реквизиты.ЕстьТовары Тогда 
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	ТаблицаТовары.ОсновноеСредство,
		|	ТаблицаТовары.Цена,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Склад,
		|	ТаблицаТовары.Сумма,
		|	ТаблицаТовары.СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ,
		|	ТаблицаТовары.Количество,
		|	ТаблицаТовары.НомерГТД
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.СписаниеОСЗабаланс.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка"  
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСписаниеОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("РеквизитыСтоимостьОС", Неопределено);
		ПараметрыПроведения.Вставить("ОбъектыНалоговогоУчетаФА", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаСписаниеОС", Неопределено);
		ПараметрыПроведения.Вставить("ОсновныеСредства", Неопределено);
		ПараметрыПроведения.Вставить("РеквизитыДляИзмененияСостояний", Неопределено);
		Возврат "";
	Иначе
		НомераТаблиц.Вставить("РеквизитыСтоимостьОС", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ОбъектыНалоговогоУчетаФА", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаСписаниеОС", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ОсновныеСредства", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("РеквизитыДляИзмененияСостояний", НомераТаблиц.Количество());		
				
		ТекстЗапроса =  "ВЫБРАТЬ
		                |	Реквизиты.Ссылка КАК Регистратор,
		                |	Реквизиты.Дата КАК Период,
		                |	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаВзаиморасчетов,
		                |	Реквизиты.Организация КАК Организация,
		                |	НЕОПРЕДЕЛЕНО КАК Контрагент,
		                |	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
		                |	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		                |	НЕОПРЕДЕЛЕНО КАК СчетУчетаРасчетовСКонтрагентом,
		                |	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
		                |	ЛОЖЬ КАК ЭтоПередачаСтруктурномуПодразделению,
		                |	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		                |	&ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль,
		                |	&ВедениеУчетаВременныхРазницБалансовымМетодом КАК ВедениеУчетаВременныхРазницБалансовымМетодом
		                |ИЗ
		                |	Реквизиты КАК Реквизиты
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ВЫРАЗИТЬ(ОбъектыНалоговогоУчетаФА.ФиксированныйАктив КАК Справочник.ОсновныеСредства) КАК ОсновноеСредство,
		                |	ОбъектыНалоговогоУчетаФА.ГруппаНУ КАК ГруппаНУ,
		                |	ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ КАК ПорядокПогашенияСтоимостиНУ,
		                |	ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив КАК ФиксированныйАктив,
		                |	ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ВидЛьготыФА КАК ВидЛьготыФА,
		                |	ВЫБОР
		                |		КОГДА ОбъектыНалоговогоУчетаФА.ФиксированныйАктив ЕСТЬ NULL
		                |			ТОГДА ЛОЖЬ
		                |		ИНАЧЕ ИСТИНА
		                |	КОНЕЦ КАК ПризнакФА,
		                |	ВЫБОР
		                |		КОГДА НЕ ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив ЕСТЬ NULL
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК ПризнакОтдельногоУчетаФА
		                |ПОМЕСТИТЬ ОбъектыНалоговогоУчетаФА
		                |ИЗ
		                |	РегистрСведений.ОбъектыНалоговогоУчетаФА.СрезПоследних(
		                |			&Период,
		                |			Организация = &Организация
		                |				И ФиксированныйАктив В
		                |					(ВЫБРАТЬ
		                |						ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОсновныеСредства) КАК ОсновноеСредство
		                |					ИЗ
		                |						ТаблицаОС КАК ТаблицаОС)) КАК ОбъектыНалоговогоУчетаФА
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФиксированныеАктивыУчитываемыеОтдельно.СрезПоследних(
		                |				&Период,
		                |				Организация = &Организация
		                |					И ФиксированныйАктив В
		                |						(ВЫБРАТЬ
		                |							ТаблицаОС.ОсновноеСредство
		                |						ИЗ
		                |							ТаблицаОС КАК ТаблицаОС)) КАК ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних
		                |		ПО ОбъектыНалоговогоУчетаФА.Организация = ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Организация
		                |			И ОбъектыНалоговогоУчетаФА.ФиксированныйАктив = ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.ФиксированныйАктив
		                |			И (ФиксированныеАктивыУчитываемыеОтдельноСрезПоследних.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияФАУчитываемыхОтдельно.ПринятиеКУчету))
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		                |	СчетаБУ.СчетУчетаБУ КАК СчетКт,
		                |	СчетаБУ.СчетНачисленияАмортизацииБУ КАК СчетДт,
		                |	Реквизиты.СчетЗатратБУ КАК СчетРасходовБУ,
		                |	Реквизиты.СубконтоЗатратБУ1 КАК СубконтоРасходовБУ1,
		                |	Реквизиты.СубконтоЗатратБУ2 КАК СубконтоРасходовБУ2,
		                |	Реквизиты.СубконтоЗатратБУ3 КАК СубконтоРасходовБУ3,
		                |	Реквизиты.СчетЗатратНУ КАК СчетРасходовНУ,
		                |	Реквизиты.СубконтоЗатратНУ1 КАК СубконтоРасходовНУ1,
		                |	Реквизиты.СубконтоЗатратНУ2 КАК СубконтоРасходовНУ2,
		                |	Реквизиты.СубконтоЗатратНУ3 КАК СубконтоРасходовНУ3,
		                |	Реквизиты.СчетДоходовНУ КАК СчетДоходовНУ,
		                |	Реквизиты.СубконтоДоходовНУ1 КАК СубконтоДоходовНУ1,
		                |	Реквизиты.СубконтоДоходовНУ2 КАК СубконтоДоходовНУ2,
		                |	Реквизиты.СубконтоДоходовНУ3 КАК СубконтоДоходовНУ3,
		                |	Реквизиты.СчетЗатратБУ КАК КорСчет,
		                |	Реквизиты.СубконтоЗатратБУ1 КАК КорСубконто1,
		                |	Реквизиты.СубконтоЗатратБУ2 КАК КорСубконто2,
		                |	Реквизиты.СубконтоЗатратБУ3 КАК КорСубконто3,
		                |	ЛОЖЬ КАК ЭтоУслуга,
		                |	ТаблицаОС.МОЛОрганизации КАК ТекущееМОЛ,
		                |	ТаблицаОС.ПодразделениеОрганизации КАК ТекущееПодразделение,
		                |	ЕСТЬNULL(ОбъектыНалоговогоУчетаФА.ПризнакФА, ЛОЖЬ) КАК ПризнакФА,
		                |	ТаблицаОС.СтоимостьБУ КАК СтоимостьБУ,
		                |	ТаблицаОС.СтоимостьНУ КАК СтоимостьНУ,
		                |	ТаблицаОС.АмортизацияБУ КАК АмортизацияБУ,
		                |	ТаблицаОС.АмортизацияЗаМесяцБУ КАК АмортизацияЗаМесяцБУ,
		                |	ТаблицаОС.Контрагент КАК Контрагент
		                |ИЗ
		                |	ТаблицаОС КАК ТаблицаОС
		                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		                |		ПО (ИСТИНА)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаОС.СрезПоследних(
		                |				&Период,
		                |				Организация = &Организация
		                |					И ОсновноеСредство В
		                |						(ВЫБРАТЬ
		                |							ТаблицаОС.ОсновноеСредство
		                |						ИЗ
		                |							ТаблицаОС КАК ТаблицаОС)) КАК СчетаБУ
		                |		ПО (СчетаБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ОбъектыНалоговогоУчетаФА КАК ОбъектыНалоговогоУчетаФА
		                |		ПО ТаблицаОС.ОсновноеСредство = ОбъектыНалоговогоУчетаФА.ОсновноеСредство
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТаблицаОС.Ссылка КАК Регистратор,
		                |	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		                |	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		                |	ТаблицаОС.АмортизацияБУ + ТаблицаОС.АмортизацияЗаМесяцБУ КАК СуммаАмортизации
		                |ИЗ
		                |	ТаблицаОС КАК ТаблицаОС
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	НомерСтроки
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	Реквизиты.Дата КАК Период,
		                |	Реквизиты.Номер КАК Номер,
		                |	Реквизиты.Организация КАК Организация,
		                |	&ПоддержкаРаботыСоСтруктурнымиПодразделениями КАК ПоддержкаРаботыСоСтруктурнымиПодразделениями,
		                |	Реквизиты.Ссылка КАК Регистратор,
		                |	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		                |	Реквизиты.СобытиеОС КАК СобытиеОС
		                |ИЗ
		                |	Реквизиты КАК Реквизиты";
		
		Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаСостоянияОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаСостоянияОС", Неопределено);
		Возврат "";
	Иначе
		
		НомераТаблиц.Вставить("ТаблицаСостоянияОС", НомераТаблиц.Количество());
		
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		               |	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		               |	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийОС.СнятоСУчета) КАК СостояниеОС
		               |ИЗ
		               |	ТаблицаОС КАК ТаблицаОС
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(
		               |				&Период,
		               |				,
		               |				&СубконтоОС,
		               |				Организация = &Организация
		               |					И Субконто1 В
		               |						(ВЫБРАТЬ
		               |							ТаблицаОС.ОсновноеСредство
		               |						ИЗ
		               |							ТаблицаОС КАК ТаблицаОС)) КАК Типовой
		               |		ПО ТаблицаОС.ОсновноеСредство = Типовой.Субконто1
		               |			И ТаблицаОС.СчетУчетаБУ = Типовой.Счет
		               |ГДЕ
		               |	ЕСТЬNULL(Типовой.СуммаОстатокДт, 0) = ТаблицаОС.СтоимостьБУ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерСтроки" ;
		
		Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаСобытияОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаСобытияОС", Неопределено);
		Возврат "";
	Иначе      
		НомераТаблиц.Вставить("ТаблицаСобытияОС", НомераТаблиц.Количество());
		
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		               |	0 КАК СуммаЗатратБУ
		               |ИЗ
		               |	ТаблицаОС КАК ТаблицаОС
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТаблицаОС.НомерСтроки"  ;
		
		Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

КонецФункции

Функция ТекстЗапросаНачислениеАмортизацииОСБухгалтерскийУчет(НомераТаблиц,ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаНачислениеАмортизацииОСБухгалтерскийУчет", Неопределено); 	
	Иначе      
		НомераТаблиц.Вставить("ТаблицаНачислениеАмортизацииОСБухгалтерскийУчет", НомераТаблиц.Количество());
		  		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство,
		|	ЛОЖЬ КАК НачислятьАмортизацию
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОС.НомерСтроки"
		 + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	 КонецЕсли;
	 
	Возврат ТекстЗапроса;	
	
КонецФункции

Функция ТекстЗапросаСоставОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаСоставОС", Неопределено);
		Возврат "";
	Иначе      
		
		НомераТаблиц.Вставить("ТаблицаСоставОС", НомераТаблиц.Количество());
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	СоставОС.ОсновноеСредство,
		|	СоставОС.ВСоставеОС,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийВСоставеОС.ИсключеноИзСостава) КАК СостояниеВСоставеОС				   
		|ИЗ
		|	РегистрСведений.СоставОС.СрезПоследних(
		|		&Период,
		|		ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство Из ТаблицаОС)
		|			И СостояниеВСоставеОС = Значение(Перечисление.ВидыСостоянийВСоставеОС.ВключеноВСостав)) КАК СоставОС";
		
		Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
КонецФункции
			   
Функция ТекстЗапросаОбъектыНалоговогоУчетаФА(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	
	Если  НЕ Реквизиты.ЕстьОС ИЛИ НЕ Реквизиты.НеобходимостьОтраженияВНУ Тогда		
		ПараметрыПроведения.Вставить("ТаблицаОбъектыНалоговогоУчетаФА", Неопределено);		
	Иначе
		НомераТаблиц.Вставить("ТаблицаОбъектыНалоговогоУчетаФА", НомераТаблиц.Количество());		
		ТекстЗапроса = 	"ВЫБРАТЬ
		               	|	Реквизиты.Дата КАК Период,
		               	|	Реквизиты.Организация,
		               	|	ОбъектыНалоговогоУчетаФА.ОсновноеСредство КАК ФиксированныйАктив,
		               	|	ОбъектыНалоговогоУчетаФА.ГруппаНУ,
		               	|	ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ,
		               	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийФА.Выбыл) КАК СостояниеФиксированногоАктива
		               	|ИЗ
		               	|	ОбъектыНалоговогоУчетаФА КАК ОбъектыНалоговогоУчетаФА
		               	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		               	|		ПО ОбъектыНалоговогоУчетаФА.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		               	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		               	|		ПО (ИСТИНА)
		               	|ГДЕ
		               	|	ОбъектыНалоговогоУчетаФА.ПризнакФА
		               	|	И ТаблицаОС.СнятьСУчетаПоНалогам"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;  

КонецФункции

Функция ТекстЗапросаФАУчитываемыеОтдельно(НомераТаблиц,ПараметрыПроведения,Реквизиты)
	
	ТекстЗапроса = "";
	
	Если НЕ Реквизиты.ЕстьОС ИЛИ НЕ Реквизиты.НеобходимостьОтраженияВНУ   Тогда		
		ПараметрыПроведения.Вставить("ТаблицаФАУчитываемыеОтдельно", Неопределено);		
	Иначе  
		НомераТаблиц.Вставить("ТаблицаФАУчитываемыеОтдельно", НомераТаблиц.Количество());		
		
		ТекстЗапроса = "ВЫБРАТЬ
	                |	ОбъектыНалоговогоУчетаФА.ФиксированныйАктив,
	                |	ОбъектыНалоговогоУчетаФА.ВидЛьготыФА,
	                |	ЗНАЧЕНИЕ(Перечисление.СобытияФАУчитываемыхОтдельно.Выбытие) КАК Событие
	                |ИЗ
	                |	ОбъектыНалоговогоУчетаФА КАК ОбъектыНалоговогоУчетаФА
	                |ГДЕ
	                |	ОбъектыНалоговогоУчетаФА.ПризнакФА
	                |	И ОбъектыНалоговогоУчетаФА.ПризнакОтдельногоУчетаФА"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаПоМестнымНалогам(НомераТаблиц,ПараметрыПроведения,Реквизиты)
	
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаОбъектыИмущественногоНалога", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаОбъектыТранспортногоНалога", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаОбъектыЗемельногоНалога", Неопределено);
		Возврат "";
	Иначе      	
		
		НомераТаблиц.Вставить("ТаблицаОбъектыИмущественногоНалога", НомераТаблиц.Количество());		
		НомераТаблиц.Вставить("ТаблицаОбъектыТранспортногоНалога", НомераТаблиц.Количество());		
		НомераТаблиц.Вставить("ТаблицаОбъектыЗемельногоНалога", НомераТаблиц.Количество());		
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОбъектыИмущественногоНалогаСрезПоследних.ОбъектНалогообложения КАК ОбъектНалогообложения,
		|	ЛОЖЬ КАК НачислятьНалог,
		|	Реквизиты.Организация КАК Местонахождение,
		|	ОбъектыИмущественногоНалогаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаИмущественногоНалога
		|ИЗ
		|	РегистрСведений.ОбъектыИмущественногоНалога.СрезПоследних(
		|			&Период,
		|			ОбъектНалогообложения В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС КАК ТаблицаОС)
		|				И Организация = &Организация) КАК ОбъектыИмущественногоНалогаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО (ТаблицаОС.ОсновноеСредство = ОбъектыИмущественногоНалогаСрезПоследних.ОбъектНалогообложения)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ОбъектыИмущественногоНалогаСрезПоследних.НачислятьНалог
		|	И ТаблицаОС.СнятьСУчетаПоНалогам
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОС.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство КАК ОбъектНалогообложения,
		|	ЛОЖЬ КАК НачислятьНалог,
		|	ОбъектыТранспортногоНалогаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаТранспортногоНалога,
		|	Реквизиты.Организация КАК Местонахождение
		|ИЗ
		|	РегистрСведений.ОбъектыТранспортногоНалога.СрезПоследних(
		|			&Период,
		|			ОбъектНалогообложения В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС КАК ТаблицаОС)
		|				И Организация = &Организация) КАК ОбъектыТранспортногоНалогаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО (ТаблицаОС.ОсновноеСредство = ОбъектыТранспортногоНалогаСрезПоследних.ОбъектНалогообложения)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ОбъектыТранспортногоНалогаСрезПоследних.НачислятьНалог
		|	И ТаблицаОС.СнятьСУчетаПоНалогам
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОС.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство КАК ОбъектНалогообложения,
		|	ЛОЖЬ КАК НачислятьНалог,
		|	ОбъектыЗемельногоНалогаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаЗемельногоНалога,
		|	Реквизиты.Организация КАК Местонахождение
		|ИЗ
		|	РегистрСведений.ОбъектыЗемельногоНалога.СрезПоследних(
		|			&Период,
		|			ОбъектНалогообложения В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС КАК ТаблицаОС)
		|				И Организация = &Организация) КАК ОбъектыЗемельногоНалогаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО (ТаблицаОС.ОсновноеСредство = ОбъектыЗемельногоНалогаСрезПоследних.ОбъектНалогообложения)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ОбъектыЗемельногоНалогаСрезПоследних.НачислятьНалог
		|	И ТаблицаОС.СнятьСУчетаПоНалогам
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОС.НомерСтроки"
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
		Возврат ТекстЗапроса;
	КонецЕсли;


КонецФункции

Функция ТекстЗапросаСписаниеСтоимостиОСНУ(НомераТаблиц,ПараметрыПроведения,Реквизиты)
	
	Если Не Реквизиты.ЕстьОС ИЛИ Не Реквизиты.НеобходимостьОтраженияВНУ Тогда
		ПараметрыПроведения.Вставить("ТаблицаСтоимостьОСНУ", Неопределено);    		
		Возврат "";
	Иначе      	
			
		НомераТаблиц.Вставить("ТаблицаСтоимостьОСНУ", НомераТаблиц.Количество());
		
		ТекстЗапроса =  "ВЫБРАТЬ
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	СтоимостьВА_НУ.Счет КАК СчетНУ,
		|	ЕСТЬNULL(СтоимостьВА_НУ.СуммаОстатокДт, 0) КАК СтоимостьНУ,
		|	СтоимостьВА_НУ.ВидУчета КАК ВидУчетаНУ,
		|	ЕСТЬNULL(ОбъектыНалоговогоУчетаФА.ПризнакФА, ЛОЖЬ) КАК ПризнакФА,
		|	ОбъектыНалоговогоУчетаФА.ГруппаНУ,
		|	ОбъектыНалоговогоУчетаФА.ПорядокПогашенияСтоимостиНУ КАК ПорядокПогашенияСтоимостиНУ,
		|	ОбъектыНалоговогоУчетаФА.ВидЛьготыФА КАК ВидЛьготыФА,
		|	ОбъектыНалоговогоУчетаФА.ПризнакОтдельногоУчетаФА,
		|	Реквизиты.СчетЗатратНУ КАК СчетРасходовНУ,
		|	Реквизиты.СубконтоЗатратНУ1 КАК СубконтоРасходовНУ1,
		|	Реквизиты.СубконтоЗатратНУ2 КАК СубконтоРасходовНУ2,
		|	Реквизиты.СубконтоЗатратНУ3 КАК СубконтоРасходовНУ3,
		|	Реквизиты.СчетДоходовНУ КАК СчетДоходовНУ,
		|	Реквизиты.СубконтоДоходовНУ1 КАК СубконтоДоходовНУ1,
		|	Реквизиты.СубконтоДоходовНУ2 КАК СубконтоДоходовНУ2,
		|	Реквизиты.СубконтоДоходовНУ3 КАК СубконтоДоходовНУ3
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Остатки(
		|			&Период,
		|			Счет В ИЕРАРХИИ (&СчетУчетаВА),
		|			&СубконтоВА,
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС)) КАК СтоимостьВА_НУ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО (ТаблицаОС.ОсновноеСредство = СтоимостьВА_НУ.Субконто1)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъектыНалоговогоУчетаФА КАК ОбъектыНалоговогоУчетаФА
		|		ПО СтоимостьВА_НУ.Субконто1 = ОбъектыНалоговогоУчетаФА.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаОС.НомерСтроки" 
		+ ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
		Возврат  ТекстЗапроса;
		
	КонецЕсли; 
	
КонецФункции

Функция ТекстЗапросаТаблицыПереоценкиОС(НомераТаблиц,ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ЕстьОС Тогда
		ПараметрыПроведения.Вставить("ТаблицаПереоценкиВА", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаПереоценкиВАРегистр", Неопределено);
		Возврат "";
	Иначе     		
		НомераТаблиц.Вставить("ТаблицаПереоценкиВА", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаПереоценкиВАРегистр", НомераТаблиц.Количество());
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ТиповойОстатки.Субконто1 КАК СубконтоДт1,
		|	ИСТИНА КАК ПереоценкаНаСчетах,
		|	ТиповойОстатки.СуммаОстатокКт КАК Сумма,
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.НераспределеннаяПрибыльНепокрытыйУбытокОтчетногоГода) КАК СчетКт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Типовой.РезервНаПереоценкуОсновныхСредств) КАК СчетДт,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыИзмененийВСобственномКапитале.ПереоценкаОсновныхСредств) КАК СубконтоДт2
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(
		|			&Период,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.РезервНаПереоценкуОсновныхСредств),
		|			,
		|			Организация = &Организация
		|				И СтруктурноеПодразделение = &СтруктурноеПодразделение
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС)) КАК ТиповойОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПереоценкаВнеоборотныхАктивовОстатки.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
		|	ПереоценкаВнеоборотныхАктивовОстатки.ДокументПереоценки КАК ДокументПереоценки,
		|	ПереоценкаВнеоборотныхАктивовОстатки.СуммаПереоценкиСтоимостиОстаток КАК СуммаПереоценкиСтоимости,
		|	ПереоценкаВнеоборотныхАктивовОстатки.СуммаПереоценкиАмортизацииОстаток КАК СуммаПереоценкиАмортизации
		|ИЗ
		|	РегистрНакопления.ПереоценкаВнеоборотныхАктивов.Остатки(
		|			&Период,
		|			ВнеоборотныйАктив В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС)
		|				И Организация = &Организация
		|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ПереоценкаВнеоборотныхАктивовОстатки";  
		
		Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();		
		
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаОприходованиеТоваров(НомераТаблиц,ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьТовары Тогда 
		ПараметрыПроведения.Вставить("ОприходованиеТоваровРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ОприходованиеТоваровТаблицаТовары", Неопределено);
		Возврат "";
	Иначе
		
		НомераТаблиц.Вставить("ОприходованиеТоваровРеквизиты",		НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ОприходованиеТоваровТаблицаТовары",	НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
		|	&ВалютаРегламентированногоУчета КАК ВалютаДокумента,
		|	Реквизиты.СтруктурноеПодразделение,
		|	Реквизиты.ВидУчетаНУ
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СчетУчетаБУ КАК СчетУчетаБУ,
		|	ТаблицаТовары.СчетУчетаНУ КАК СчетУчетаНУ,
		|	ТаблицаТовары.Склад КАК Склад,
		|	ТаблицаТовары.ОсновноеСредство КАК ОсновноеСредство,
		|	Реквизиты.СчетДоходовБУ КАК КорСчетОприходованияБУ,
		|	Реквизиты.СубконтоДоходовБУ1 КАК КорСубконтоОприходованияБУ1,
		|	Реквизиты.СубконтоДоходовБУ2 КАК КорСубконтоОприходованияБУ2,
		|	Реквизиты.СубконтоДоходовБУ3 КАК КорСубконтоОприходованияБУ3,
		|	Реквизиты.СчетДоходовНУ КАК КорСчетОприходованияНУ,
		|	Реквизиты.СубконтоДоходовНУ1 КАК КорСубконтоОприходованияНУ1,
		|	Реквизиты.СубконтоДоходовНУ2 КАК КорСубконтоОприходованияНУ2,
		|	Реквизиты.СубконтоДоходовНУ3 КАК КорСубконтоОприходованияНУ3
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.НомерСтроки";
		
		Возврат ТекстЗапроса + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

КонецФункции

Функция ТекстЗапросаТоварыОрганизаций(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары	Тогда
			  
		НомераТаблиц.Вставить("ТаблицаТоварыОрганизаций"  , НомераТаблиц.Количество());		
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки,
		|	""Товары"" КАК ИмяСписка,
		|	ТаблицаТовары.Номенклатура КАК Товар,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.Количество,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.Склад КАК Склад
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаТовары.НомерСтроки"
		 + ОбщегоНазначенияБКВызовСервера.ТекстРазделителяЗапросовПакета();
		
	 Иначе 
		
		ПараметрыПроведения.Вставить("ТаблицаТоварыОрганизаций"	 , Неопределено);   
		
	КонецЕсли;

	Возврат ТекстЗапроса;
		
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// ДА-3 (Акт на списание)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДА3";
	КомандаПечати.Представление = НСтр("ru = 'ДА-3 (Акт на списание)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБККлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
	// Настраиваемый комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДА3";
	КомандаПечати.Представление = НСтр("ru = 'Настраиваемый комплект документов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ ПользователиБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Настраиваемый комплект'");
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;
	КомандаПечати.Порядок = 75;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать ДА3
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДА3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ДА3",
			НСтр("ru = 'ДА-3 (Акт на списание)'"),
			ПечатьДА3(МассивОбъектов, ОбъектыПечати),
			,
			"ОбщийМакет.ПФ_MXL_ДА3");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДА3(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "СписаниеОС_ДА3";
	
  	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ДА3");
	
	//вспомогательные запросы для формирования печатной формы документа
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	Запрос.Текст = "ВЫБРАТЬ
	|	СписаниеОС.Номер КАК НомерДок,
	|	СписаниеОС.Дата КАК ДатаДок,
	|	СписаниеОС.Организация,
	|	СписаниеОС.СтруктурноеПодразделение,
	|	СписаниеОС.ПричинаСписания,
	|	СписаниеОС.СчетЗатратБУ КАК СчетДт,
	|	СписаниеОС.ДокументОснованиеВид,
	|	СписаниеОС.ДокументОснованиеДата,
	|	СписаниеОС.ДокументОснованиеНомер,
	|	СписаниеОС.ИнвентаризационнаяКомиссия.(
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия,
	|	СписаниеОС.Ссылка
	|ИЗ
	|	Документ.СписаниеОСЗабаланс КАК СписаниеОС
	|ГДЕ
	|	СписаниеОС.Ссылка В(&Ссылка)";
	Док = Запрос.Выполнить().Выбрать();
	
	Пока Док.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ТаблицаИнвентаризационнаяКомиссия = Док.ИнвентаризационнаяКомиссия.Выгрузить();
		СтруктурнаяЕдиницаОрганизация 	  = ОбщегоНазначенияБК.ПолучитьСтруктурнуюЕдиницу(Док.Организация, Док.СтруктурноеПодразделение);
		СведенияОбОрганизации			  = ОбщегоНазначенияБКВызовСервера.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Док.ДатаДок);
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Док.Ссылка);
		Запрос.УстановитьПараметр("ДатаДок",     Док.ДатаДок);
		Запрос.УстановитьПараметр("Организация", Док.Организация);
		Запрос.Текст = "ВЫБРАТЬ
		|	СписаниеОСОС.Ссылка.СчетЗатратБУ КАК СчетДт,
		|	СписаниеОСОС.НомерСтроки КАК НП,
		|	СписаниеОСОС.ОсновноеСредство КАК ОС,
		|	ПОДСТРОКА(СписаниеОСОС.ОсновноеСредство.ЗаводскойНомер, 1, 250) КАК ЗаводскойНомер,
		|	ПОДСТРОКА(СписаниеОСОС.ОсновноеСредство.НаименованиеПолное, 1, 1000) КАК НаимОС,
		|	СписаниеОСОС.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
		|	СписаниеОСОС.АмортизацияБУ КАК НачАмортизация,
		|	СписаниеОСОС.СтоимостьБУ КАК Стоимость,
		|	СписаниеОСОС.АмортизацияЗаМесяцБУ КАК АмортизацияЗаМесяц,
		|	СписаниеОСОС.СтоимостьБУ - СписаниеОСОС.АмортизацияБУ - СписаниеОСОС.АмортизацияЗаМесяцБУ КАК ОстСтоимостьБУ,
		|	СписаниеОСОС.Ссылка
		|ПОМЕСТИТЬ ВТ_ТЧ
		|ИЗ
		|	Документ.СписаниеОСЗабаланс.ОС КАК СписаниеОСОС
		|ГДЕ
		|	СписаниеОСОС.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписаниеОСОС.СчетДт,
		|	СписаниеОСОС.НП,
		|	СписаниеОСОС.ОС,
		|	СписаниеОСОС.ЗаводскойНомер,
		|	СписаниеОСОС.НаимОС,
		|	СписаниеОСОС.ДатаВыпуска,
		|	СписаниеОСОС.НачАмортизация,
		|	СписаниеОСОС.Стоимость,
		|	СписаниеОСОС.АмортизацияЗаМесяц,
		|	СписаниеОСОС.ОстСтоимостьБУ,
		|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ИнвентарныйНомер КАК ИнвНомер,
		|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.Период КАК ДатаПоследнихПараметровАмортизации,
		|	СчетаУчетаОССрезПоследних.СчетУчетаБУ КАК СчетКт,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ
		|ИЗ
		|	ВТ_ТЧ КАК СписаниеОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|				&ДатаДок,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВТ_ТЧ.ОС
		|						ИЗ
		|							ВТ_ТЧ)) КАК ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних
		|		ПО СписаниеОСОС.ОС = ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаУчетаОС.СрезПоследних(
		|				&ДатаДок,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВТ_ТЧ.ОС
		|						ИЗ
		|							ВТ_ТЧ)) КАК СчетаУчетаОССрезПоследних
		|		ПО СписаниеОСОС.ОС = СчетаУчетаОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|				&ДатаДок,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВТ_ТЧ.ОС
		|						ИЗ
		|							ВТ_ТЧ)) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
		|		ПО СписаниеОСОС.ОС = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&ДатаДок,
		|				Организация = &Организация
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ВТ_ТЧ.ОС
		|						ИЗ
		|							ВТ_ТЧ)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		|		ПО СписаниеОСОС.ОС = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	СписаниеОСОС.НП";
		
		РезЗапросаОС = Запрос.Выполнить();		
		СписокМОЛ = РезЗапросаОС.Выгрузить().ВыгрузитьКолонку("МОЛ");
		ВыборкаОС    = РезЗапросаОС.Выбрать();
				                                                     		
		// сформируем запрос по таб. части ТМЗ
		// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "Товары".
		СтруктураПолей = Новый Структура;
		СтруктураПолей.Вставить("Номенклатура", "Номенклатура");
		СтруктураПолей.Вставить("Количество"  , "Количество");
		СтруктураПолей.Вставить("Сумма"       , "Сумма");
		
		РезультатЗапросаПоТоварам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(Док.Ссылка, "Товары", СтруктураПолей);
		ВыборкаПоТоварам		  = РезультатЗапросаПоТоварам.Выбрать();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьМакета.Параметры.Заполнить(Док);
		ОбластьМакета.Параметры.ОрганизацияРНН_БИН       = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "БИН_ИИН,", Ложь, Док.ДатаДок, "ru");
		
		ОбластьМакета.Параметры.НомерДок				 = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Док.НомерДок, Док.Ссылка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБКВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		
		Руководители							   = ОбщегоНазначенияБКВызовСервера.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация, Док.ДатаДок);
		ОбластьМакета.Параметры.РасшифровкаПодписи = Руководители.Руководитель;	
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ВалютаПечати = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		ЗаголовокТаблицы1				   = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
		ЗаголовокТаблицы1.Параметры.Валюта = ВалютаПечати;
		ТабДокумент.Вывести(ЗаголовокТаблицы1);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы1");
		
		ДокументПринятияКУчетуБУ = Неопределено;
		ДатаПринятнияКУчету 	 = '00010101';
		
		Пока ВыборкаОС.Следующий() Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьМакета) Тогда
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				// Выведем заголовок таблицы
				ТабДокумент.Вывести(ЗаголовокТаблицы1);
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(Док);
			ОбластьМакета.Параметры.Заполнить(ВыборкаОС);
			
			Если НЕ ЗначениеЗаполнено(ВыборкаОС.НаимОС) Тогда
				ОбластьМакета.Параметры["НаимОС"] = СокрЛП(ВыборкаОС.ОС);
			КонецЕсли;
			
			ОбластьМакета.Параметры.НачСтоимость  		= ВыборкаОС.Стоимость;
			ОбластьМакета.Параметры.НачАмортизация	    = ВыборкаОС.НачАмортизация + ВыборкаОС.АмортизацияЗаМесяц;
			ОбластьМакета.Параметры.БалансоваяСтоимость = ВыборкаОС.ОстСтоимостьБУ;
			УправлениеВнеоборотнымиАктивамиСервер.ПолучитьДокументБухСостоянияОС(ВыборкаОС.ОС, Док.Организация, Перечисления.ВидыСостоянийОС.ПринятоКУчету, Док.ДатаДок, ДокументПринятияКУчетуБУ,  ДатаПринятнияКУчету);
			ОбластьМакета.Параметры.ДатаВводаВЭксплуатацию = Формат(ДатаПринятнияКУчету, "Л=ru; ДЛФ=DD");
			Если ВыборкаОС.ДатаПоследнихПараметровАмортизации <> Null Тогда 
				ФактическийСрокИспользования = УправлениеВнеоборотнымиАктивамиСервер.ОпределитьФактическийСрокИспользования(ВыборкаОС.ДатаПоследнихПараметровАмортизации, Док.ДатаДок); 
			Иначе 
				ФактическийСрокИспользования = "";
			КонецЕсли;		
			ОбластьМакета.Параметры.ФактическийСрокЭксплуатации = ФактическийСрокИспользования;
			
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;	                            
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы2");
		ОбластьМакета.Параметры.Заполнить(Док);
		ОбластьМакета.Параметры.ДокументОснованиеДата  = ?(ЗначениеЗаполнено(Док.ДокументОснованиеДата), Формат(Док.ДокументОснованиеДата,"ДФ=""дд ММММ гггг 'года'"""), НСтр("ru='«____» ________________20__года'"));
		ОбластьМакета.Параметры.ДокументОснованиеНомер = ?(ЗначениеЗаполнено(Док.ДокументОснованиеНомер), Док.ДокументОснованиеНомер,"_______ ");
		Если ЗначениеЗаполнено(Док.ДокументОснованиеВид) Тогда
			Если Док.ДокументОснованиеВид = "приказом" Тогда
				ОбластьМакета.Параметры.ДокументОснованиеВид = НСтр("ru='приказом'");
			ИначеЕсли Док.ДокументОснованиеВид = "постановлением" Тогда
				ОбластьМакета.Параметры.ДокументОснованиеВид = НСтр("ru='постановлением'");
			ИначеЕсли Док.ДокументОснованиеВид = "распоряжением" Тогда
				ОбластьМакета.Параметры.ДокументОснованиеВид = НСтр("ru='распоряжением'");
			КонецЕсли;	
		Иначе
			ОбластьМакета.Параметры.ДокументОснованиеВид = НСтр("ru='приказом (распоряжением)'");
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СписокОсмотренных");
		
		ТаблицаОС = РезЗапросаОС.Выгрузить();
		ТаблицаОС.Свернуть("НаимОС");
		
		ВыводитьНадпись = Истина;
		// выведем список всех ОС
		Для Каждого СтрокаНаимОС ИЗ ТаблицаОС Цикл
			
			ОбластьМакета.Параметры.ПроизвелаОсмотр = ?(ВыводитьНадпись, НСтр("ru='на основании ________________ произвела осмотр'") ,"");
			
			ОбластьМакета.Параметры.НаимОС = СокрЛП(СтрокаНаимОС.НаимОС);
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ВыводитьНадпись = Ложь;
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПричинаСписания");
		ОбластьМакета.Параметры.Заполнить(Док);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ОбластьМакета = Макет.ПолучитьОбласть("ОборотнаяСторона");
		ТабДокумент.Вывести(ОбластьМакета);
		
		//Печать данных о комисси
		ОбластьМакета = Макет.ПолучитьОбласть("Комиссия");
		
		// Варианты заголовков разделов с подписями печатной формы	
		ЗаголовокРазделаКомиссии = Новый Структура();
		ЗаголовокРазделаКомиссии.Вставить("МОЛ"					, НСтр("ru='Материально-ответственное лицо:'"));
		ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", НСтр("ru='Председатель комиссии:'"));
		ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии"		, НСтр("ru='Члены комиссии:'"));
		
		// Выведем подпись председателя инвентаризационной комиссии
		ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
		
		Если НЕ (ПредседательКомиссии = Неопределено) Тогда
			
			ДанныеПредседателя = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛица(Док.Организация, ПредседательКомиссии.ФизЛицо, Док.ДатаДок);
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ОбластьМакета.Параметры.Должность                = ДанныеПредседателя.Должность;
			ОбластьМакета.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
			
		Иначе
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
			ОбластьМакета.Параметры.Должность                = "";
			ОбластьМакета.Параметры.РасшифровкаПодписи       = "";
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выведем подписи членов комиссии
		ВыводитьЗаголовок = Истина;
		
		// Сформируем список членов комиссии
		СписокЧленовКомиссии = Новый Массив();
		
		Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
			Если НЕ Строка.Председатель Тогда
				СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		
		ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛиц(Док.Организация, СписокЧленовКомиссии, Док.ДатаДок);
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьМакета) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.ЧленыКомиссии, "");
			ОбластьМакета.Параметры.Должность          = ЧленКомиссии.Должность;
			ОбластьМакета.Параметры.РасшифровкаПодписи = ЧленКомиссии.Представление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
		Если ДанныеЧленовКомиссии.Количество() < 1 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьМакета) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.ЧленыКомиссии, "");
			ОбластьМакета.Параметры.Должность          = "";
			ОбластьМакета.Параметры.РасшифровкаПодписи = "";
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЕсли;
		
		//Выводим список МОЛ
		ДанныеМОЛ		  = ПроцедурыУправленияПерсоналомВызовСервера.ДанныеФизЛиц(Док.Организация, СписокМОЛ, Док.ДатаДок);
		ВыводитьЗаголовок = Истина;
		
		// Сначала выведем членов комиссии из выборки
		Для Каждого МОЛ Из ДанныеМОЛ Цикл
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьМакета) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.МОЛ, "");
			ОбластьМакета.Параметры.Должность          = МОЛ.Должность;
			ОбластьМакета.Параметры.РасшифровкаПодписи = МОЛ.Представление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
		
		// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 1-го
		Если ДанныеМОЛ.Количество() < 1 Тогда
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, ОбластьМакета) Тогда
				
				// Выведем разрыв страницы
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.ЗаголовокРазделаКомиссии = ?(ВыводитьЗаголовок, ЗаголовокРазделаКомиссии.МОЛ, "");
			ОбластьМакета.Параметры.Должность         		 = "";
			ОбластьМакета.Параметры.РасшифровкаПодписи		 = "";
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЕсли;
		
		ОбластьМакета				   = Макет.ПолучитьОбласть("ЗаголовокТаблицы3");
		ОбластьМакета.Параметры.Валюта = ВалютаПечати;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоСуммаТМЗ = 0;
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы3");
		
		Пока ВыборкаПоТоварам.Следующий() Цикл
			ИтогоСуммаТМЗ					 = ИтогоСуммаТМЗ  +  ВыборкаПоТоварам.Сумма;
			ОбластьМакета.Параметры.НаимТМЗ  = ВыборкаПоТоварам.Номенклатура;
			ОбластьМакета.Параметры.КодТМЗ   = ВыборкаПоТоварам.Номенклатура.Код;
			ОбластьМакета.Параметры.КолТМЗ   = ВыборкаПоТоварам.Количество;
			ОбластьМакета.Параметры.СуммаТМЗ = ВыборкаПоТоварам.Сумма;
			
			ТабДокумент.Вывести(ОбластьМакета);	
		КонецЦикла;	
		
		//выводим пустую строку, если нет оприходованных ТМЗ
		Если ВыборкаПоТоварам.Количество = 0 Тогда 
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета						  = Макет.ПолучитьОбласть("ИтогоТаблицы3");
		ОбластьМакета.Параметры.ИтогоСуммаТМЗ = ИтогоСуммаТМЗ;
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		
		ОбластьМакета.Параметры.Валюта			   = ВалютаПечати;
		ОбластьМакета.Параметры.РасшифровкаПодписи = Руководители.ГлавныйБухгалтер;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Док.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции 

#КонецЕсли
