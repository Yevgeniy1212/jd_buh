
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПодготовитьФормуНаСервере();
		РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// РедактированиеДокументовПользователей
    ПраваДоступаКОбъектам.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец РедактированиеДокументовПользователей
	
	ПодготовитьФормуНаСервере();
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);	
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	Если Параметры.Ключ.Пустая() Тогда
		
		КТ_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект);
		
	КонецЕсли;
	
	// Заполним реквизит формы МесяцСтрока.
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
	УправлениеФормой(ЭтаФорма);
	
	ОбщегоНазначенияБК.УстановитьТекстАвтора(НадписьАвтор, Объект.Автор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект		= Форма.Объект;
	Элементы	= Форма.Элементы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцПодобратьДатуПоТексту(МесяцНачисленияСтрокой, Объект.ПериодРегистрации);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, Направление);
	МесяцНачисленияСтрокой = РаботаСДиалогамиКлиентСервер.ДатаКакМесяцПредставление(Объект.ПериодРегистрации);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если Текст = "" Тогда
		Ожидание = 0;
		РаботаСДиалогамиКлиент.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, Объект.ПериодРегистрации, ЭтаФорма);
	Иначе
		РаботаСДиалогамиКлиент.ДатаКакМесяцАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Распределение.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЗ.Участок КАК Участок,
	               |	ВЗ.Агрегат КАК Агрегат,
	               |	ВЗ.СоответствиеАгрегатов КАК СоответствиеАгрегатов,
	               |	ВЗ.СоответствиеАгрегатов.Код КАК СоответствиеАгрегатовКод,
	               |	ВЫБОР
	               |		КОГДА ВЗ.ПробуреноПМОборот = 0
	               |			ТОГДА ВЗ.Наличие
	               |		ИНАЧЕ ВЗ.ПробуреноПМОборот
	               |	КОНЕЦ КАК Количество
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЗ_Все.Участок КАК Участок,
	               |		ВЗ_Все.Агрегат КАК Агрегат,
	               |		ВЗ_Все.СоответствиеАгрегатов КАК СоответствиеАгрегатов,
	               |		СУММА(ВЗ_Все.ПробуреноПМОборот) КАК ПробуреноПМОборот,
	               |		СУММА(ВЗ_Все.Наличие) КАК Наличие
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ПроизводственнаяСправкаПоОбъемамОбороты.Участок КАК Участок,
	               |			ПроизводственнаяСправкаПоОбъемамОбороты.Агрегат КАК Агрегат,
	               |			ПроизводственнаяСправкаПоОбъемамОбороты.СоответствиеАгрегатов КАК СоответствиеАгрегатов,
	               |			ЕСТЬNULL(ПроизводственнаяСправкаПоОбъемамОбороты.ПробуреноПМОборот, 0) КАК ПробуреноПМОборот,
	               |			0 КАК Наличие
	               |		ИЗ
	               |			РегистрНакопления.ПроизводственнаяСправкаПоОбъемам.Обороты(&НачМесяца, &КонМесяца, , Организация = &Организация) КАК ПроизводственнаяСправкаПоОбъемамОбороты
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Участок,
	               |			КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Агрегат,
	               |			КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.СоответствиеАгрегатов,
	               |			0,
	               |			КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Наличие
	               |		ИЗ
	               |			Документ.КТ_СправкаОНаличииБуровыхАгрегатов.Агрегаты КАК КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты
	               |		ГДЕ
	               |			КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.Проведен
	               |			И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.ПериодРегистрации = &ПериодРегистрации
	               |			И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Ссылка.Организация = &Организация
	               |			И КТ_СправкаОНаличииБуровыхАгрегатовАгрегаты.Наличие <> 0) КАК ВЗ_Все
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВЗ_Все.Участок,
	               |		ВЗ_Все.Агрегат,
	               |		ВЗ_Все.СоответствиеАгрегатов) КАК ВЗ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Участок,
	               |	СоответствиеАгрегатовКод";
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация"      , Объект.Организация);
	Запрос.УстановитьПараметр("НачМесяца"        , НачалоМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонМесяца"        , КонецМесяца(Объект.ПериодРегистрации));
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Распределение.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = ПроверитьЗаЭтотМесяц();
	
	Если Отказ Тогда
		Сообщить("За данный период - "+МесяцНачисленияСтрокой+" уже есть документ!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаЭтотМесяц()
	
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КТ_Распределение.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.КТ_Распределение КАК КТ_Распределение
	               |ГДЕ
	               |	КТ_Распределение.ПериодРегистрации = &ПериодРегистрации
	               |	И КТ_Распределение.Проведен
	               |	И КТ_Распределение.Ссылка <> &Ссылка";
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка"           , Объект.ПериодРегистрации);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции




