#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.си_ПередачаМатериаловВЭксплуатацию.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Таблица списанных товаров
	ТаблицаСписанныеТовары = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(ПараметрыПроведения.СписаниеТоваровТаблицаТовары,ПараметрыПроведения.СписаниеТоваровРеквизиты, Отказ);
	
	Если ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача Тогда
		СчетаУчетаСпецодежды		= си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды();
		Для Каждого СтрокаТовар Из ТаблицаСписанныеТовары Цикл
			Если СтрокаТовар.СчетУчетаБУ = СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе Тогда
				СтрокаТовар.ОтражатьВБухгалтерскомУчете = Истина;
				СтрокаТовар.ОтражатьВНалоговомУчете = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(ТаблицаСписанныеТовары, ПараметрыПроведения.СписаниеТоваровРеквизиты, Движения, Отказ);
	
	// Отражение ПР в НУ 
	общ_ПереопределяемыеПроцедурыБКСервер.ОтразитьПостоянныеРазницыВНУ(ЭтотОбъект,ПараметрыПроведения.СписаниеТоваровРеквизиты, Движения, Отказ);
	
	ТаблицаМатериалыВЭксплуатацию = си_УчетСпецодеждыСервер.ПодготовитьТаблицуПередачиВЭксплуатацию(ПараметрыПроведения.ТаблицаМатериалы,ПараметрыПроведения,Движения,Отказ);
	Отказ = Ложь; //DP
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//ТаблицаМатериалыВЭксплуатациюБУ = ТаблицаМатериалыВЭксплуатацию.Скопировать();
	//Если ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ Тогда
	//	ТаблицаМатериалыВЭксплуатациюБУ.ЗаполнитьЗначения(ПараметрыПроведения.Реквизиты[0].Ссылка,"ДокументПередачи");
	//КонецЕсли;
	
	//КОНТРОЛЬ ПО РЕГИСТРУ "ТОВАРЫ ОРГАНИЗАЦИЙ
	НомераГТДСервер.ВыполнитьКонтрольТоварыОрганизаций(ПараметрыПроведения.ТаблицаТоварыОрганизаций,ПараметрыПроведения.Реквизиты, , Отказ);
	
	// Товары организаций
	НомераГТДСервер.СформироватьДвиженияТоварыОрганизаций(ПараметрыПроведения.ТаблицаТоварыОрганизаций,ПараметрыПроведения.Реквизиты, Движения, Отказ);		

	// передача в эксплуатацию
	си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыВЭксплуатацию, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияМатериалыВЭксплуатации");
	
	// передача в эксплуатацию новой на складе
	си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыВЭксплуатацию, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияМатериалыНаСкладеНовая");
	си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыВЭксплуатацию, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияБухУчетНовая");
	
	Если ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача Тогда
		// амортизация передаваемых в эксплуатацию
		си_УчетСпецодеждыСервер.СформироватьДвиженияАмортизацияМатериаловприПередачеВЭксплуатацию(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыВЭксплуатацию, ПараметрыПроведения.СпособыОтраженияРасходов, Движения, Отказ);
	Иначе
		// списание б/у в эксплуатацию
		//ТаблицаМатериалыВЭксплуатацию.ЗаполнитьЗначения(ПараметрыПроведения.Реквизиты[0].Ссылка,"ДокументПередачи");
		си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаМатериалыВЭксплуатацию, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияМатериалыБывшиеВЭксплуатации",,"Реквизиты.ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ");
	КонецЕсли;
	
	// списание с ордерного склада
	си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаМатериалы, Движения, Отказ,"Материалы","си_УчетСпецодеждыСервер","ЗарегистрироватьДвиженияПриходРасходПоОрдерномуСкладу");
	
	//	++кибернетика: 2024-09-06 Искендеров Алишер - https://cybernetika.myalm.ru/pm/JDtechsupport/I-18445
	киб_АвтоЗаполнениеСуммы(Отказ, ТаблицаМатериалыВЭксплуатацию, "МодульОбъекта");
	//	--кибернетика: 2024-09-06 Искендеров Алишер               
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	НеобходимаПострочнаяПроверка = Истина;
	ПараметрыПострочнойПроверки = Новый Структура;
	МассивНепроверяемыхРеквизитов = Новый Массив();
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	// Отключение проверки полей при выборе материалов БУ
	Если ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.СчетУчетаБУ");
		МассивНепроверяемыхРеквизитов.Добавить("Материалы.СчетУчетаНУ");
	КонецЕсли;
	Если ФлагЗапретРедактирования Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Материалы");
	КонецЕсли;
	
	си_ОбщегоНазначения.ИсключитьПроверку(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	Если НеобходимаПострочнаяПроверка Тогда 
		Если Материалы.Количество() > 0 Тогда
			ПроверитьЗаполнениеТабличнойЧастиМатериалыПострочно(Материалы, "Материалы", Отказ, ПараметрыПострочнойПроверки);
		КонецЕсли;
	КонецЕсли;
	Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
		Документы.си_ПередачаМатериаловВЭксплуатацию.ПроверитьПоНормамВыдачи(Материалы,ЭтотОбъект,Отказ);
	КонецЕсли;
	
КонецПроцедуры	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.си_ПередачаМатериаловВЭксплуатацию.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	КонецЕсли;
	
	общ_ПереопределяемыеПроцедурыБКСервер.ЗаполнитьШапкуДокумента(ЭтотОбъект, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И НомераГТДСервер.ВедетсяУчетПоТоварамОрганизаций(Дата) Тогда
		ТаблицаДокумента = общ_ПереопределяемыеПроцедурыБКСервер.ПодготовитьТаблицуТоваровСУчетомСкладовВТЧ(Материалы, Истина, Склад);
		ТаблицаНомераГТД = НомераГТДСервер.ПодготовитьТаблицуНомеровГТД(ТаблицаДокумента, НомераГТД.Выгрузить());
		общ_ПереопределяемыеПроцедурыБКСервер.ЗаполнитьТаблицуНомераГТД(ЭтотОбъект,ТаблицаДокумента, ТаблицаНомераГТД);
	КонецЕсли;
	
	//Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//	НомераГТДСервер.ЗаполнитьТаблицуНомераГТД(ЭтотОбъект,"Материалы");
	//КонецЕсли;
	УдалитьНомераГТДДляСпецодеждыНаСкладе();

	//	++кибернетика: 2024-09-06 Искендеров Алишер - https://cybernetika.myalm.ru/pm/JDtechsupport/I-18445
	киб_ПередЗаписью();
	//	--кибернетика: 2024-09-06 Искендеров Алишер               
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Если ЗначениеЗаполнено(ОбъектКопирования.НомераГТД) Тогда
		НомераГТД.Очистить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеТабличнойЧастиМатериалыПострочно(ПроверяемаяТабличнаячасть, ИмяТабличнойЧасти, Отказ, ПараметрыПроверки = Неопределено)
	
	ВыборкаПоСтрокамДокумента = Документы.си_ПередачаМатериаловВЭксплуатацию.СформироватьЗапросПоМатериалыПроверка(ПроверяемаяТабличнаячасть.Выгрузить()).Выбрать();
	
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		Если ВыборкаПоСтрокамДокумента.ЯвляетсяСпецодеждойИнвентарем = Ложь Тогда
				ТекстСообщения = си_УчетСпецодеждыСервер.ПолучитьТекстСообщения("Колонка", "Корректность", НСтр("ru = 'Номенклатура'"),
						ВыборкаПоСтрокамДокумента.НомерСтроки, ИмяТабличнойЧасти,"выбранная номенклатурная позиция не является спецодеждой/инвентарем");
				Поле = ИмяТабличнойЧасти + "[" + Формат(ВыборкаПоСтрокамДокумента.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Номенклатура";
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьНомераГТДДляСпецодеждыНаСкладе()
	СчетаУчета = Новый Структура("СчетУчетаБУ,СчетУчетаНУ",си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды().СпецоснасткаИСпецодеждаНаСкладе,си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды().СпецоснасткаИСпецодеждаНаСкладеНУ);
	Для Каждого СтрокаТЧ Из Материалы Цикл
		//ПараметрыПоиска = Новый Структура("СчетУчетаБУ", СчетаУчета.СчетУчетаБУ);
		Если СтрокаТЧ.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ Тогда
			ПараметрыПоиска = Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи);
			НайденныеСтроки = НомераГТД.НайтиСтроки(ПараметрыПоиска);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НомераГТД.Удалить(НайденнаяСтрока);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//	++кибернетика: 2024-09-06 Искендеров Алишер - https://cybernetika.myalm.ru/pm/JDtechsupport/I-18445
Процедура киб_АвтоЗаполнениеСуммы(Отказ = Неопределено, ТаблицаМатериалов = Неопределено, Модуль = "", Форма = Неопределено) Экспорт
	
		
	Если Отказ = Истина ИЛИ Отказ = Неопределено ИЛИ ТаблицаМатериалов = Неопределено ИЛИ Модуль = "" Тогда
		Возврат;	
	КонецЕсли;
	
	Если Модуль = "МодульОбъекта" Тогда
		
		СчетаУчетаСпецодежды		= си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды();
		Для Каждого ТекСтрокаМатериалы Из ТаблицаМатериалов Цикл
			Если Не ТекСтрокаМатериалы.СчетУчетаБУ = СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе Тогда
				Продолжить;
			КонецЕсли;
			
			НайденныеСтроки = Материалы.НайтиСтроки(Новый Структура("Номенклатура, Сотрудник", ТекСтрокаМатериалы.Номенклатура, ТекСтрокаМатериалы.Сотрудник));
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача Тогда
					НайденнаяСтрока.киб_Сумма 						= ТекСтрокаМатериалы.Стоимость + ТекСтрокаМатериалы.СписаннаяСтоимость; 
				Иначе
					НайденнаяСтрока.киб_Сумма 						= ТекСтрокаМатериалы.Стоимость;
					
				КонецЕсли;
					НайденнаяСтрока.киб_Цена 						= НайденнаяСтрока.киб_Сумма / ТекСтрокаМатериалы.Количество;
				
			КонецЦикла;
		КонецЦикла;
		
	ИначеЕсли Модуль = "МодульФормыДокумента" И Форма <> Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТиповойДвиженияССубконто.Сумма КАК Сумма,
		|	ТиповойДвиженияССубконто.КоличествоКт КАК КоличествоКт,
		|	ТиповойДвиженияССубконто.СубконтоКт1 КАК Номенклатура
		|ИЗ
		|	РегистрБухгалтерии.Типовой.ДвиженияССубконто(
		|			,
		|			,
		|			(СчетКт = &СчетКт1
		|				ИЛИ СчетКт = &СчетКт2)
		|				И Регистратор = &Регистратор,
		|			,
		|			) КАК ТиповойДвиженияССубконто";
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		Запрос.УстановитьПараметр("СчетКт1", ПланыСчетов.Типовой.НайтиПоКоду("1316"));
		Запрос.УстановитьПараметр("СчетКт2", ПланыСчетов.Типовой.НайтиПоКоду("1353"));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;		
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Выполнить("НайденныеСтроки = " + ТаблицаМатериалов + ".НайтиСтроки(Новый Структура(""Номенклатура"", ВыборкаДетальныеЗаписи.Номенклатура))");
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				НайденнаяСтрока.киб_Сумма = ВыборкаДетальныеЗаписи.Сумма;
				НайденнаяСтрока.киб_Цена = ВыборкаДетальныеЗаписи.Сумма / ВыборкаДетальныеЗаписи.КоличествоКт;		
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
		
КонецПроцедуры

Процедура киб_ПередЗаписью()
	
	ТабЗнач = Материалы.Выгрузить();
	ТабЗнач.ЗаполнитьЗначения(0, "киб_Цена");
	ТабЗнач.ЗаполнитьЗначения(0, "киб_Сумма");
	Материалы.Загрузить(ТабЗнач);
КонецПроцедуры
//	--кибернетика: 2024-09-06 Искендеров Алишер

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли