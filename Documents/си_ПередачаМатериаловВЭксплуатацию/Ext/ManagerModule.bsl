#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет счета учета номенклатуры в табличной части документа
//
// Параметры:
//  Объект         	  - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                      вид договора контрагента, признак комиссионной торговли и т.п.)
//  ИмяТабличнойЧасти - Строка - имя табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт
	
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, Организация, ВидОперации, УчитыватьКПН");
	
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСчетаУчетаСпискаНоменклатуры(
	ДанныеОбъекта.Организация, общ_ПереопределениеПроцедурБККлиентСервер.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина), ДанныеОбъекта.Дата);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;

	Если ДанныеОбъекта.ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ
		ИЛИ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Характеристика) Тогда
		СчетаУчета = Новый Структура("СчетУчетаБУ,СчетУчетаНУ",си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды().СпецоснасткаИСпецодеждаНаСкладе,си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды().СпецоснасткаИСпецодеждаНаСкладеНУ);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаБУ) Тогда
		СтрокаТабличнойЧасти.СчетУчетаБУ = СчетаУчета.СчетУчетаБУ;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНУ) Тогда
		СтрокаТабличнойЧасти.СчетУчетаНУ = СчетаУчета.СчетУчетаНУ;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// МБ7
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьМБ7";
	КомандаПечати.Представление = НСтр("ru = 'МБ7 - Ведомость учета выдачи спецодежды, спецобуви и предохранительных приспособлений'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 50;
	
	// Передача материалов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьПередачаМатериалов";
	КомандаПечати.Представление = НСтр("ru = 'Передача материалов'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = ИСТИНА;
	КомандаПечати.Порядок = 51;
	
	// МБ7
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьТребованиеНакладная";
	КомандаПечати.Представление = НСтр("ru = 'М-11 - Требование накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ общ_ПереопределяемыеПроцедурыБКВызовСервераПовтИсп.РазрешитьПечатьНепроведенныхДокументов();
	КомандаПечати.Порядок = 52;
	
	Возврат;	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьМБ7") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьМБ7",
			НСтр("ru = 'МБ7 - Ведомость учета выдачи спецодежды, спецобуви и предохранительных приспособлений'"),
			ПечатьМБ7(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_ПередачаМатериаловВЭксплуатацию.ПФ_MXL_МБ7");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьПередачаМатериалов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьПередачаМатериалов",
			НСтр("ru = 'Передача материалов'"),
			ПечатьПередачаМатериалов(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_ПередачаМатериаловВЭксплуатацию.ПФ_MXL_ПередачаМатериалов");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьТребованиеНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьТребованиеНакладная",
			НСтр("ru = 'М-11 - Требование накладная'"),
			ПечатьМ11(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.си_ПередачаМатериаловВЭксплуатацию.ПФ_MXL_М11");
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает список доступных видов операций, в зависимости от настроек информационной базы
//
Функция ДоступныеВидыОпераций() Экспорт
	
	ДоступныеОперации   = Новый Массив;
	ИсключаемыеОперации = Новый Массив;
	
	Для Каждого ВидОперации Из Перечисления.си_ВидыОперацийПередачиВЭксплуатацию Цикл
		Если ИсключаемыеОперации.Найти(ВидОперации) <> Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		ДоступныеОперации.Добавить(ВидОперации);
	КонецЦикла;
	
	Возврат ДоступныеОперации;
	
КонецФункции

// Формирует запрос по таблице "Исполнители" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоМатериалыПроверка(ТабличнаяЧасть) Экспорт

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТабличнаяЧасть", 	 			 ТабличнаяЧасть);
    //
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВТ_ТабличнаяЧасть.Номенклатура,
	               |	ВТ_ТабличнаяЧасть.номерСтроки
	               |ПОМЕСТИТЬ Материалы
	               |ИЗ
	               |	&ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Материалы.номерСтроки,
	               |	Материалы.Номенклатура,
	               |	НоменклатураСправочник.си_ЯвляетсяСпецодеждойИнвентарем КАК ЯвляетсяСпецодеждойИнвентарем
	               |ИЗ
	               |	Материалы КАК Материалы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	               |		ПО Материалы.Номенклатура = НоменклатураСправочник.Ссылка";

	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоИсполнители()

Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
	
	общ_ПереопределяемыеПроцедурыБКСервер.ЗаполнитьШапкуДокументаПоОснованию(Объект, ДокументОснование);
	
	Объект.ДокументОснование = ДокументОснование;
	
	ТабличнаяЧасть = Объект.Материалы;
	
	Если ТабличнаяЧасть.Количество() > 0 Тогда
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ВозвратМатериаловИзЭксплуатации") Тогда
		// Заполнение шапки
		Объект.ВидОперации 				= Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ;
		Объект.ПодразделениеОрганизации 	= ДокументОснование.ПодразделениеОрганизации;
		Объект.Склад 						= ДокументОснование.Склад;
		Объект.Ответственный 				= ДокументОснование.Ответственный;
		Для Каждого ВыборкаПоТоварам Из ДокументОснование.Материалы Цикл
			НоваяСтрока 					= Объект.Материалы.Добавить();
			НоваяСтрока.Номенклатура 		= ВыборкаПоТоварам.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаПоТоварам.ЕдиницаИзмерения;
			НоваяСтрока.Коэффициент 		= ВыборкаПоТоварам.Коэффициент;
			НоваяСтрока.Количество 			= ВыборкаПоТоварам.Количество;
			НоваяСтрока.Сотрудник 			= ВыборкаПоТоварам.Сотрудник;
			НоваяСтрока.НазначениеИспользования = ВыборкаПоТоварам.НазначениеИспользования;
			НоваяСтрока.ДокументПередачи 	= ВыборкаПоТоварам.ДокументПередачи;
			НоваяСтрока.СчетУчетаБУ 		= ВыборкаПоТоварам.СчетПередачиБУ;
			НоваяСтрока.СчетУчетаНУ 		= ВыборкаПоТоварам.СчетПередачиНУ;
			НоваяСтрока.Характеристика		= ВыборкаПоТоварам.Характеристика;
			НоваяСтрока.ДокументВозврата	= ДокументОснование.Ссылка;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПриемкаСпецодеждыИИнвентаряПоХарактеристикам") Тогда
		// Заполнение шапки
		Объект.ВидОперации 					= Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача;
		Объект.Склад 						= ДокументОснование.Склад;
		Объект.Ответственный 				= ДокументОснование.Ответственный;
		Объект.УчитыватьКПН					= ДокументОснование.УчитыватьКПН;
		Объект.ВидУчетаНУ					= ДокументОснование.ВидУчетаНУ;
		
		СчетаУчетаСпецодежды 				= си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды();
		Для Каждого ВыборкаПоТоварам Из ДокументОснование.Материалы Цикл
			НоваяСтрока 					= Объект.Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаПоТоварам);
			НоваяСтрока.СчетУчетаБУ 		= СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе;
			НоваяСтрока.СчетУчетаНУ 		= СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладеНУ;
			НоваяСтрока.НазначениеИспользования = ?(ЗначениеЗаполнено(НоваяСтрока.НазначениеИспользования),НоваяСтрока.НазначениеИспользования,НоваяСтрока.Номенклатура.си_ОсновноеНазначениеИспользования);
			НоваяСтрока.КлючСвязи = общ_ПереопределениеПроцедурБККлиентСервер.НовыйКлючСвязиСтрокиТаблицы(Объект.Материалы);
			си_ОбщегоНазначенияСервер.ПеренестиНомераГТДДляСтроки(Объект,ДокументОснование,НоваяСтрока.КлючСвязи,ВыборкаПоТоварам.КлючСвязи);
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ЗаполнитьПоПоступлению(Объект,"Материалы","Заполнить", ДокументОснование);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.си_ПеремещениеМатериаловВЭксплуатации") Тогда
		// Заполнение шапки
		Если ДокументОснование.СостояниеМатериалов = Перечисления.си_СостоянияМатериалов.НаходящиесяВЭксплуатации Тогда
			ОбщегоНазначения.СообщитьПользователю("Выбранный документ содержит материалы, находящиеся в эксплуатации");
			Возврат;
		КонецЕсли;
		
		Объект.ВидОперации 					= Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача;
		Объект.Склад 						= ДокументОснование.СкладПолучатель;
		Объект.Ответственный 				= ДокументОснование.Ответственный;
		Объект.УчитыватьКПН					= ДокументОснование.УчитыватьКПН;
		Объект.ВидУчетаНУ					= ДокументОснование.ВидУчетаНУ;
		
		СчетаУчетаСпецодежды 				= си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды();
		Для Каждого ВыборкаПоТоварам Из ДокументОснование.Материалы Цикл
			НоваяСтрока 					= Объект.Материалы.Добавить();
			НоваяСтрока.Номенклатура 		= ВыборкаПоТоварам.Номенклатура;
			НоваяСтрока.ЕдиницаИзмерения 	= ВыборкаПоТоварам.ЕдиницаИзмерения;
			НоваяСтрока.Коэффициент 		= ВыборкаПоТоварам.Коэффициент;
			НоваяСтрока.Количество 			= ВыборкаПоТоварам.Количество;
			НоваяСтрока.СчетУчетаБУ 		= СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе;
			НоваяСтрока.СчетУчетаНУ 		= СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладеНУ;
			НоваяСтрока.Характеристика		= ВыборкаПоТоварам.Характеристика;
			НоваяСтрока.НазначениеИспользования = ВыборкаПоТоварам.НазначениеИспользованияПолучатель;
			НоваяСтрока.НазначениеИспользования = ?(ЗначениеЗаполнено(НоваяСтрока.НазначениеИспользования),НоваяСтрока.НазначениеИспользования,НоваяСтрока.Номенклатура.си_ОсновноеНазначениеИспользования);
			// Если в основании заполнено значение НазначениеИспользования, то считаем что передаваемый товар - б/у
			Если ЗначениеЗаполнено(ВыборкаПоТоварам.НазначениеИспользованияПолучатель) Тогда
				Объект.ВидОперации 			= Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ;
			КонецЕсли;
			НоваяСтрока.ДокументВозврата    = ВыборкаПоТоварам.ДокументВозврата;
			НоваяСтрока.ДокументПередачи    = ВыборкаПоТоварам.ДокументПередачи;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры   

Процедура ЗаполнитьПоПоступлению(Объект, ИмяТабЧасти, Режим, Поступление) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Поступление) Тогда
		Возврат;
	КонецЕсли;
	
	ТабличнаяЧасть = Объект.Материалы;
	
	Если ТабличнаяЧасть.Количество() > 0 И Режим = "Заполнить" Тогда
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Поступление", Поступление);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.НомерСтроки,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.Количество,
	               |	ПоступлениеТоваровУслугТовары.ЕдиницаИзмерения,
	               |	ПоступлениеТоваровУслугТовары.Коэффициент,
	               |	ПоступлениеТоваровУслугТовары.СтавкаНДС,
	               |	ПоступлениеТоваровУслугТовары.НомерГТД
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка = &Поступление
	               |	И ПоступлениеТоваровУслугТовары.Номенклатура.си_ЯвляетсяСпецодеждойИнвентарем";
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	ДанныеОбъекта = Новый Структура("Ссылка, Дата, Организация, Склад, ВидОперации, УчитыватьКПН");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСведенийОНоменклатуре = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, общ_ПереопределениеПроцедурБККлиентСервер.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта.Дата);
	
	Для Каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		
		СтрокаТабличнойЧасти = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТоваров);
		СтрокаТабличнойЧасти.НазначениеИспользования = ?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.НазначениеИспользования),СтрокаТабличнойЧасти.НазначениеИспользования,СтрокаТабличнойЧасти.Номенклатура.си_ОсновноеНазначениеИспользования);
		СтрокаТабличнойЧасти.КлючСвязи = общ_ПереопределениеПроцедурБККлиентСервер.НовыйКлючСвязиСтрокиТаблицы(ТабличнаяЧасть);
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТоваров.Номенклатура);
		Если СведенияОНоменклатуре = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабЧасти, СведенияОНоменклатуре);
		
		Если ЗначениеЗаполнено(СтрокаТоваров.НомерГТД) Тогда
			НоваяСтрокаГТД = Объект.НомераГТД.Добавить();
			НоваяСтрокаГТД.КлючСвязи = СтрокаТабличнойЧасти.КлючСвязи;
			НоваяСтрокаГТД.Количество = СтрокаТоваров.Количество * ?(СтрокаТоваров.Коэффициент=0,1,СтрокаТоваров.Коэффициент);
			НоваяСтрокаГТД.НомерГТД = СтрокаТоваров.НомерГТД;
		КонецЕсли;
		
		//СтруктураПоиска.Вставить("Номенклатура",СтрокаТоваров.Номенклатура); 		
		//СтруктураПоиска.Вставить("ЕдиницаИзмерения",СтрокаТоваров.ЕдиницаИзмерения);
		////СтруктураПоиска.Вставить("СтавкаНДС",СтрокаТоваров.СтавкаНДС);
		//СтрокаТабличнойЧасти = НомераГТДСервер.ЗаполнитьТабличныеЧастиСУчетомНомеровГТД(СтруктураПоиска, СтрокаТоваров, ТабличнаяЧасть, Объект.НомераГТД);
	КонецЦикла;
	
КонецПроцедуры

// Процедура авотозаполнения по остаткам норм
//
Процедура Автозаполнение(Форма) Экспорт
	
	Объект 									= Форма.Объект;
	Элементы 								= Форма.Элементы;
	//ВедетсяКонтрольВыдачиСпецодеждыПоНормам = Форма.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(Объект.Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	УчетПоФизЛицам 							= си_УчетСпецодеждыСервер.ПолучитьВедениеУчетаПоФизЛицам();
	
	Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
		СпособРасчетаНормВыдачиСпецодежды   = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.СпособРасчетаНормВыдачиСпецодеждыИИнвентаря;
	Иначе
		СпособРасчетаНормВыдачиСпецодежды   = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", общ_ПереопределяемыеПроцедурыБКСервер.ГоловнаяОрганизация(Объект.Организация));
	Запрос.УстановитьПараметр("ПустаяДолжность", Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаДолжностей()].ПустаяСсылка());
	Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);	
	
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);	
	
	Способ = ?(СпособРасчетаНормВыдачиСпецодежды = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма, "СУММА", "МАКСИМУМ");
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПоРаботникуПриНазначении.Сотрудник" + ?(УчетПоФизЛицам,".ФизЛицо","") + " КАК Сотрудник,
	|	ДанныеПоРаботникуПриНазначении.Должность КАК Должность
	|ПОМЕСТИТЬ СписокФД
	|ИЗ
	|	(ВЫБРАТЬ
    |		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.Сотрудник" + ?(УчетПоФизЛицам,".ФизЛицо","") + " КАК Сотрудник,
	|		МАКСИМУМ(Работники.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|				ПО РаботникиОрганизации.Сотрудник = Работники.Сотрудник
	|					И РаботникиОрганизации.Организация = Работники.Организация
	|					И (Работники.ОбособленноеПодразделение = &Организация)
	//++УФСО
	//|					И (РаботникиОрганизации.СтруктурноеПодразделение = &СтруктурноеПодразделение)
	//--УФСО
	|					И (Работники.Период <= РаботникиОрганизации.Период)
	|					И (Работники.ПричинаИзмененияСостояния <> &Уволен)
	|		ГДЕ
	|			РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
	|		СГРУППИРОВАТЬ ПО
	|			РаботникиОрганизации.Организация,
	|			РаботникиОрганизации.Сотрудник) КАК ДатыПоследнихДвиженийРаботников
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
	|		ПО (ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период)
	|			И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуПриНазначении.Сотрудник" + ?(УчетПоФизЛицам,".ФизЛицо","") + "
	|			И ДатыПоследнихДвиженийРаботников.Организация = ДанныеПоРаботникуПриНазначении.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НормыСгруппированы.Сотрудник КАК Сотрудник,
	|	НормыСгруппированы.НазначениеИспользования КАК НазначениеИспользования,
	|	НормыСгруппированы.Номенклатура КАК Номенклатура,
	|	НормыСгруппированы.Количество - ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОбъединениеНорм.Сотрудник КАК Сотрудник,
	|		ОбъединениеНорм.НазначениеИспользования КАК НазначениеИспользования,
	|		ОбъединениеНорм.Номенклатура КАК Номенклатура,
	|		СУММА(ОбъединениеНорм.Количество) КАК Количество
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СписокФД.Сотрудник КАК Сотрудник,
	|			НормыПоДолжности.НазначениеИспользования КАК НазначениеИспользования,
	|			НормыПоДолжности.СпецодеждаИнвентарь КАК Номенклатура,
	|			" + Способ + "(НормыПоДолжности.Количество) КАК Количество
	|		ИЗ
	|			СписокФД КАК СписокФД
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&ДатаАктуальности,
	|						Должность <> &ПустаяДолжность
	|							И Организация = &Организация) КАК НормыПоДолжности
	|				ПО СписокФД.Должность = НормыПоДолжности.Должность
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокФД.Сотрудник,
	|			НормыПоДолжности.НазначениеИспользования,
	|			НормыПоДолжности.СпецодеждаИнвентарь
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписокФД.Сотрудник,
	|			НормыПоФизЛицу.НазначениеИспользования,
	|			НормыПоФизЛицу.СпецодеждаИнвентарь,
	|			НормыПоФизЛицу.Количество
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Сотрудник
	|				ИЗ
	|					СписокФД) КАК СписокФД
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&ДатаАктуальности,
	|						Должность = &ПустаяДолжность
	|							И Организация = &Организация) КАК НормыПоФизЛицу
	|				ПО СписокФД.Сотрудник = НормыПоФизЛицу.Сотрудник) КАК ОбъединениеНорм
	|	ГДЕ
	|		(НЕ ОбъединениеНорм.Количество ЕСТЬ NULL )
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОбъединениеНорм.Сотрудник,
	|		ОбъединениеНорм.НазначениеИспользования,
	|		ОбъединениеНорм.Номенклатура) КАК НормыСгруппированы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток
	|						ИЗ
	|							РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(&ДатаАктуальности, 
	|								Организация = &Организация
	|								И СтруктурноеПодразделение = &СтруктурноеПодразделение
	|								И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|												 Сотрудник
	|											 ИЗ
	|												 СписокФД)) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|						ГДЕ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток > 0) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|		ПО НормыСгруппированы.Сотрудник = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник
	|			И НормыСгруппированы.Номенклатура = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура
	|			И НормыСгруппированы.НазначениеИспользования = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования
	|ГДЕ
	|	НормыСгруппированы.Количество - ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Номенклатура,
	|	НазначениеИспользования";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.Материалы.Загрузить(РезультатЗапроса.Выгрузить());
	Объект.Материалы.Сортировать("Сотрудник, Номенклатура, НазначениеИспользования");
	
	Для Каждого ТекСтрока Из Объект.Материалы Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Коэффициент) Тогда
			ТекСтрока.Коэффициент = 1;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ТекСтрока.ЕдиницаИзмерения) Тогда
			ТекСтрока.ЕдиницаИзмерения = ТекСтрока.Номенклатура.БазоваяЕдиницаИзмерения;
		КонецЕсли;
		
		ТекСтрока.КлючСвязи = общ_ПереопределениеПроцедурБККлиентСервер.НовыйКлючСвязиСтрокиТаблицы(Объект.Материалы);
		
		СведенияОНоменклатуре = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСведенияОНоменклатуре(ТекСтрока.Номенклатура, Объект);
		
		Если Не СведенияОНоменклатуре = Неопределено Тогда
			Документы.си_ПередачаМатериаловВЭксплуатацию.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект , ТекСтрока, "Товары", СведенияОНоменклатуре);
		КонецЕсли;
		
	КонецЦикла;
				
	Если Объект.Материалы.Количество() > 0 Тогда
		Элементы.Материалы.ТекущаяСтрока = 0;
	КонецЕсли;
	
КонецПроцедуры //Автозаполнение

Процедура АвтозаполнениеСпискомСотрудников(Форма, Адрес) Экспорт
		
	Объект 									= Форма.Объект;
	Элементы 								= Форма.Элементы;
	//ВедетсяКонтрольВыдачиСпецодеждыПоНормам = Форма.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(Объект.Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	
	ВыбранныеЭлементы = ПолучитьИзВременногоХранилища(Адрес);
	Если ТипЗнч(ВыбранныеЭлементы) = Тип("ТаблицаЗначений") Тогда
		Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
			СпособРасчетаНормВыдачиСпецодежды   = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.СпособРасчетаНормВыдачиСпецодеждыИИнвентаря;
		Иначе
			СпособРасчетаНормВыдачиСпецодежды   = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма;
		КонецЕсли;
		ВыбранныеЭлементы.Свернуть("Сотрудник, Должность");
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаАктуальности", КонецДня(Объект.Дата));
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", общ_ПереопределяемыеПроцедурыБКСервер.ГоловнаяОрганизация(Объект.Организация));
		Запрос.УстановитьПараметр("ПустаяДолжность", Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаДолжностей()].ПустаяСсылка());
		Запрос.УстановитьПараметр("Сотрудники", ВыбранныеЭлементы);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);	
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);	
		
		Способ = ?(СпособРасчетаНормВыдачиСпецодежды = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма, "СУММА", "МАКСИМУМ");
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.Сотрудник,
		|	Сотрудники.Должность
		|ПОМЕСТИТЬ СписокФД
		|ИЗ
		|	&Сотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НормыСгруппированы.Сотрудник КАК Сотрудник,
		|	НормыСгруппированы.НазначениеИспользования КАК НазначениеИспользования,
		|	НормыСгруппированы.Номенклатура КАК Номенклатура,
		|	НормыСгруппированы.Количество - ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОбъединениеНорм.Сотрудник КАК Сотрудник,
		|		ОбъединениеНорм.НазначениеИспользования КАК НазначениеИспользования,
		|		ОбъединениеНорм.Номенклатура КАК Номенклатура,
		|		СУММА(ОбъединениеНорм.Количество) КАК Количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СписокФД.Сотрудник КАК Сотрудник,
		|			НормыПоДолжности.НазначениеИспользования КАК НазначениеИспользования,
		|			НормыПоДолжности.СпецодеждаИнвентарь КАК Номенклатура,
		|			" + Способ + "(НормыПоДолжности.Количество) КАК Количество
		|		ИЗ
		|			СписокФД КАК СписокФД
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
		|						&ДатаАктуальности,
		|						Должность <> &ПустаяДолжность
		|							И Организация = &Организация) КАК НормыПоДолжности
		|				ПО СписокФД.Должность = НормыПоДолжности.Должность
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СписокФД.Сотрудник,
		|			НормыПоДолжности.НазначениеИспользования,
		|			НормыПоДолжности.СпецодеждаИнвентарь
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СписокФД.Сотрудник,
		|			НормыПоФизЛицу.НазначениеИспользования,
		|			НормыПоФизЛицу.СпецодеждаИнвентарь,
		|			НормыПоФизЛицу.Количество
		|		ИЗ
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Сотрудник
		|				ИЗ
		|					СписокФД) КАК СписокФД
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
		|						&ДатаАктуальности,
		|						Должность = &ПустаяДолжность
		|							И Организация = &Организация
		|							И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|											Сотрудник
		|										ИЗ
		|											СписокФД)) КАК НормыПоФизЛицу
		|				ПО СписокФД.Сотрудник = НормыПоФизЛицу.Сотрудник) КАК ОбъединениеНорм
		|	ГДЕ
		|		(НЕ ОбъединениеНорм.Количество ЕСТЬ NULL )
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ОбъединениеНорм.Сотрудник,
		|		ОбъединениеНорм.НазначениеИспользования,
		|		ОбъединениеНорм.Номенклатура) КАК НормыСгруппированы
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник,
		|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура,
		|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования,
		|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток
		|						ИЗ
		|							РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(&ДатаАктуальности, 
		|								Организация = &Организация
		|								И СтруктурноеПодразделение = &СтруктурноеПодразделение
		|								И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|												 Сотрудник
		|											 ИЗ
		|												 СписокФД)) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
		|						ГДЕ
		|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток > 0) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
		|		ПО НормыСгруппированы.Сотрудник = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник
		|			И НормыСгруппированы.Номенклатура = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура
		|			И НормыСгруппированы.НазначениеИспользования = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования
		|ГДЕ
		|	НормыСгруппированы.Количество - ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Номенклатура,
		|	НазначениеИспользования";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Объект.Материалы.Загрузить(РезультатЗапроса.Выгрузить());
		Объект.Материалы.Сортировать("Сотрудник, Номенклатура, НазначениеИспользования");
		
		Для Каждого ТекСтрока Из Объект.Материалы Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Коэффициент) Тогда
				ТекСтрока.Коэффициент = 1;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекСтрока.ЕдиницаИзмерения) Тогда
				ТекСтрока.ЕдиницаИзмерения = ТекСтрока.Номенклатура.БазоваяЕдиницаИзмерения;
			КонецЕсли;
						
			СведенияОНоменклатуре = общ_ПереопределяемыеПроцедурыБКСервер.ПолучитьСведенияОНоменклатуре(ТекСтрока.Номенклатура, Объект);
			
			ТекСтрока.КлючСвязи = общ_ПереопределениеПроцедурБККлиентСервер.НовыйКлючСвязиСтрокиТаблицы(Объект.Материалы);
			
			Если Не СведенияОНоменклатуре = Неопределено Тогда
				Документы.си_ПередачаМатериаловВЭксплуатацию.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект , ТекСтрока, "Товары", СведенияОНоменклатуре);
			КонецЕсли;
			
		КонецЦикла;
					
		Если Объект.Материалы.Количество() > 0 Тогда
			Элементы.Материалы.ТекущаяСтрока = 0;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	СчетаУчетаСпецодежды		= си_УчетСпецодеждыСерверПовтИсп.ПолучитьСчетаУчетаСпецодежды();
	
	ДополнительныеПараметрыЗапросов = Новый Структура();
	ДополнительныеПараметрыЗапросов.Вставить("СодержаниеСписаныТМЗ", 			НСтр("ru='Списаны ТМЗ'"));
	ДополнительныеПараметрыЗапросов.Вставить("НовыйСчетУчетаБУ", 				СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаВЭксплуатации);
	ДополнительныеПараметрыЗапросов.Вставить("НовыйСчетУчетаНУ", 				СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаВЭксплуатации.СчетНУ);
	ДополнительныеПараметрыЗапросов.Вставить("СчетУчетаБУНаСкладе", 			СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе);
	ДополнительныеПараметрыЗапросов.Вставить("СчетУчетаНУНаСкладе", 			СчетаУчетаСпецодежды.СпецоснасткаИСпецодеждаНаСкладе.СчетНУ);
	ДополнительныеПараметрыЗапросов.Вставить("СкладОстатков", 					ДокументСсылка.Склад);
	ДополнительныеПараметрыЗапросов.Вставить("Дата", 							ДокументСсылка.Дата);
	ДополнительныеПараметрыЗапросов.Вставить("Организация", 					ДокументСсылка.Организация);
	ДополнительныеПараметрыЗапросов.Вставить("СтруктурноеПодразделение", 		ДокументСсылка.СтруктурноеПодразделение);
	ДополнительныеПараметрыЗапросов.Вставить("ВидУчетаНУ", 						ДокументСсылка.ВидУчетаНУ);
	//ДополнительныеПараметрыЗапросов.Вставить("СчетУчетаБУНаСкладе", 			ДокументСсылка.Склад);
	
	ДополнительныеЗапросы = Новый Массив;
	ДополнительныеЗапросы.Добавить("СписаниеТоваров");
	ДополнительныеЗапросы.Добавить("ТоварыОрганизаций");
	
	Если ДокументСсылка.ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача Тогда
		ДополнительныеЗапросы.Добавить("СпособыОтраженияРасходов");
		
		ДополнительныеЗапросы.Добавить("ОстаткиМатериаловНовая");
		ДополнительныеЗапросы.Добавить("СписаниеТоваровНовая");
		
		ДополнительныеПараметрыЗапросов.Вставить("Организация", 				ДокументСсылка.Организация);
		ДополнительныеПараметрыЗапросов.Вставить("ВидУчетаНУ", 					ДокументСсылка.ВидУчетаНУ);
		ДополнительныеПараметрыЗапросов.Вставить("Склад", 						ДокументСсылка.Склад);
		ДополнительныеПараметрыЗапросов.Вставить("Ссылка", 						ДокументСсылка);
		ДополнительныеПараметрыЗапросов.Вставить("СтруктурноеПодразделение", 	ДокументСсылка.СтруктурноеПодразделение);
		ДополнительныеПараметрыЗапросов.Вставить("МоментВремени", 				Новый МоментВремени(ДокументСсылка.Дата,ДокументСсылка));
	Иначе
		ДополнительныеЗапросы.Добавить("ОстаткиМатериалов");
		
		ДополнительныеПараметрыЗапросов.Вставить("Организация", 				ДокументСсылка.Организация);
		ДополнительныеПараметрыЗапросов.Вставить("ВидУчетаНУ", 					ДокументСсылка.ВидУчетаНУ);
		ДополнительныеПараметрыЗапросов.Вставить("Склад", 						ДокументСсылка.Склад);
		ДополнительныеПараметрыЗапросов.Вставить("Ссылка", 						ДокументСсылка);
		ДополнительныеПараметрыЗапросов.Вставить("СтруктурноеПодразделение", 	ДокументСсылка.СтруктурноеПодразделение);
		ДополнительныеПараметрыЗапросов.Вставить("МоментВремени", 				Новый МоментВремени(ДокументСсылка.Дата,ДокументСсылка));
	КонецЕсли;
	
	ПараметрыПроведения = си_УчетСпецодеждыУправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ,Истина,Истина,,,,,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("СписаниеТоваровРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.СтруктурноеПодразделение КАК КорСтруктурноеПодразделение,
	|	Реквизиты.УчитыватьКПН КАК УчитыватьКПН,
	|	Реквизиты.ВидУчетаНУ КАК ВидУчетаНУ,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаВзаиморасчетов,
	|	&СодержаниеСписаныТМЗ КАК Содержание,
	|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	&НеобходимостьОтраженияВНУ КАК НеобходимостьОтраженияВНУ,
	|	&ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль КАК ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Материалы"" КАК ИмяСписка,
	|	""Материалы"" КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача) ТОГДА ТаблицаТовары.СчетУчетаБУ ИНАЧЕ &СчетУчетаБУНаСкладе КОНЕЦ КАК СчетУчетаБУ,
	|	ВЫБОР КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача) ТОГДА ТаблицаТовары.СчетУчетаНУ ИНАЧЕ &СчетУчетаНУНаСкладе КОНЕЦ СчетУчетаНУ,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Склад КАК КорСклад,
	|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент КАК Количество,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.СтруктурноеПодразделение КАК КорСтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(МатериалыНаСкладе.КоличествоОстаток,0)=0 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.Количество * МатериалыНаСкладе.СтоимостьОстаток/МатериалыНаСкладе.КоличествоОстаток
	|	КОНЕЦ КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(МатериалыНаСкладе.КоличествоОстаток,0)=0 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.Количество * МатериалыНаСкладе.СтоимостьОстаток/МатериалыНаСкладе.КоличествоОстаток
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(МатериалыНаСкладе.КоличествоОстаток,0)=0 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.Количество * МатериалыНаСкладе.СтоимостьОстаток/МатериалыНаСкладе.КоличествоОстаток
	|	КОНЕЦ КАК СуммаВал,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	&НовыйСчетУчетаБУ КАК КорСчетСписанияБУ,
	|	ТаблицаТовары.Номенклатура КАК КорСубконтоБУ1,
	|	Реквизиты.Склад КАК КорСубконтоБУ2,
	|	"""" КАК КорСубконтоБУ3,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ3,
	|	&НовыйСчетУчетаНУ КАК КорСчетСписанияНУ,
	|	ТаблицаТовары.Номенклатура КАК КорСубконтоНУ1,
	|	Реквизиты.Склад КАК КорСубконтоНУ2,
	|	"""" КАК КорСубконтоНУ3,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ3
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаМатериалы КАК ТаблицаТовары
	|		ПО Реквизиты.Ссылка = ТаблицаТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыНаСкладе.Остатки(&Дата,Организация=&Организация И СтруктурноеПодразделение=&СтруктурноеПодразделение И Склад = &СкладОстатков И ВидУчетаНУ=&ВидУчетаНУ И СостояниеСпецодежды = ЗНАЧЕНИЕ(Перечисление.си_СостояниеСпецодеждыИИнвентаряНаСкладе.НаСкладеНовая)) КАК МатериалыНаСкладе
	|		ПО ТаблицаТовары.СчетУчетаБУ = &СчетУчетаБУНаСкладе
	|			И ТаблицаТовары.Номенклатура = МатериалыНаСкладе.Номенклатура
	|			И ТаблицаТовары.Характеристика = МатериалыНаСкладе.Характеристика
	|ГДЕ 
	|   НЕ ТаблицаТовары.СчетУчетаБУ = &СчетУчетаБУНаСкладе
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки";
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаСписаниеТоваровНовая(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("СписаниеТоваровНоваяТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Материалы"" КАК ИмяСписка,
	|	""Материалы"" КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача) ТОГДА ТаблицаТовары.СчетУчетаБУ ИНАЧЕ &СчетУчетаБУНаСкладе КОНЕЦ КАК СчетУчетаБУ,
	|	ВЫБОР КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПервичнаяПередача) ТОГДА ТаблицаТовары.СчетУчетаНУ ИНАЧЕ &СчетУчетаНУНаСкладе КОНЕЦ СчетУчетаНУ,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Склад КАК КорСклад,
	|	ТаблицаТовары.Количество * ТаблицаТовары.Коэффициент КАК Количество,
	|	Реквизиты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	Реквизиты.СтруктурноеПодразделение КАК КорСтруктурноеПодразделение,
	|	0 КАК Себестоимость,
	|	0 КАК Сумма,
	|	0 КАК СуммаВал,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	&НовыйСчетУчетаБУ КАК КорСчетСписанияБУ,
	|	ТаблицаТовары.Номенклатура КАК КорСубконтоБУ1,
	|	Реквизиты.Склад КАК КорСубконтоБУ2,
	|	"""" КАК КорСубконтоБУ3,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоБУ3,
	|	&НовыйСчетУчетаНУ КАК КорСчетСписанияНУ,
	|	ТаблицаТовары.Номенклатура КАК КорСубконтоНУ1,
	|	Реквизиты.Склад КАК КорСубконтоНУ2,
	|	"""" КАК КорСубконтоНУ3,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконтоНУ3
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаМатериалы КАК ТаблицаТовары
	|		ПО Реквизиты.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ 
	|   ТаблицаТовары.СчетУчетаБУ = &СчетУчетаБУНаСкладе
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки";
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаСпособыОтраженияРасходов(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("СпособыОтраженияРасходовСписокНазначений", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СпособыОтраженияРасходовСписокНазначенийИСпособов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СпособыОтраженияРасходов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаМатериалы.НазначениеИспользования КАК НазначениеИспользования
	|ПОМЕСТИТЬ ВТ_СписокНазначений
	|ИЗ
	|	ТаблицаМатериалы КАК ТаблицаМатериалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписокНазначений.НазначениеИспользования,
	|	си_НазначенияИспользования.СпособОтраженияРасходов
	|ПОМЕСТИТЬ ВТ_СпособыОтражения
	|ИЗ
	|	ВТ_СписокНазначений КАК ВТ_СписокНазначений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.си_НазначенияИспользования КАК си_НазначенияИспользования
	|		ПО ВТ_СписокНазначений.НазначениеИспользования = си_НазначенияИспользования.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.НомерСтроки,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.СчетЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент
	|ИЗ
	|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
	|ГДЕ
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_СпособыОтражения.СпособОтраженияРасходов
	|			ИЗ
	|				ВТ_СпособыОтражения КАК ВТ_СпособыОтражения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаОстаткиМатериалов(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
//	НомераТаблиц.Вставить("ОстаткиБУСписок", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОстаткиМатериалов", НомераТаблиц.Количество());
	
	
	ТекстЗапроса = си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловБУ();
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаОстаткиМатериаловНовая(НомераТаблиц,ПараметрыПроведения, Реквизиты) Экспорт
	
//	НомераТаблиц.Вставить("ОстаткиБУСписок", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОстаткиМатериаловНовая", НомераТаблиц.Количество());
	
	
	ТекстЗапроса = си_УчетСпецодеждыСерверПовтИсп.ТекстЗапросаОстаткиМатериаловНовая();
	
	Возврат ТекстЗапроса + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
		
КонецФункции

Функция ТекстЗапросаТоварыОрганизаций(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	Если Реквизиты.ЕстьНомераГТД  Тогда 
		НомераТаблиц.Вставить("ТаблицаТоварыОрганизаций"  , НомераТаблиц.Количество());		
		
		ТекстЗапроса = общ_ПереопределяемыеПроцедурыБКСервер.ТекстЗапросаТоварыОрганизацийРасход("Материалы","ТаблицаМатериалы");
				 
	 Иначе     		
		ПараметрыПроведения.Вставить("ТаблицаТоварыОрганизаций"	 , Неопределено);
		
	КонецЕсли;
	                     			
	Возврат ТекстЗапроса;
	
	//Если Реквизиты.ЕстьНомераГТД  Тогда 
	//	НомераТаблиц.Вставить("ТаблицаТоварыОрганизаций"  , НомераТаблиц.Количество());		
	//	
	//	ТекстЗапроса =
	//	"ВЫБРАТЬ
	//	|	МИНИМУМ(ТаблицаНомераГТД.НомерСтроки) КАК НомерСтроки,
	//	|	""Товары"" КАК ИмяСписка,
	//	|	ТаблицаНомераГТД.Номенклатура КАК Товар,
	//	|	ТаблицаНомераГТД.НомерГТД КАК НомерГТД,
	//	|	СУММА(ТаблицаНомераГТД.Количество) КАК Количество,
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	//	|ИЗ
	//	|	ТаблицаНомераГТД КАК ТаблицаНомераГТД
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ТаблицаНомераГТД.НомерГТД,
	//	|	ТаблицаНомераГТД.Номенклатура
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	НомерСтроки"
	//	 + общ_ПереопределениеПроцедурБККлиентСервер.ТекстРазделителяЗапросовПакета();
	//	 
	// Иначе     		
	//	ПараметрыПроведения.Вставить("ТаблицаТоварыОрганизаций"	 , Неопределено);
	//	
	//КонецЕсли;
	//                     			
	//Возврат ТекстЗапроса;
		
КонецФункции

// Проверяет выдачу спецодежды и инвентаря по нормам выдачи.
//
Процедура ПроверитьПоНормамВыдачи(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ) Экспорт
	
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(СтруктураШапкиДокумента.Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	УчетПоФизЛицам = си_УчетСпецодеждыСервер.ПолучитьВедениеУчетаПоФизЛицам();
	//ВедетсяКонтрольВыдачиСпецодеждыПоНормам = Константы.си_КонтрольВыдачиСпецодеждыИИнвентаряПоНормам.Получить();
	Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
		СпособРасчетаНормВыдачиСпецодежды   = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.СпособРасчетаНормВыдачиСпецодеждыИИнвентаря;
	Иначе
		СпособРасчетаНормВыдачиСпецодежды   = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСпецодежды"  , ТаблицаПоТоварам);
	//Запрос.УстановитьПараметр("ТаблицаСпецодеждыБУ", ТаблицаПоТаварамБывшихВЭксплуатации);
	Запрос.УстановитьПараметр("Период"             , СтруктураШапкиДокумента.Дата);
	Запрос.УстановитьПараметр("Организация"        , СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", общ_ПереопределяемыеПроцедурыБКСервер.ГоловнаяОрганизация(СтруктураШапкиДокумента.Организация));
	Запрос.УстановитьПараметр("ПустаяДолжность"    , Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаДолжностей()].ПустаяСсылка());
	Запрос.УстановитьПараметр("Уволен"			   , Перечисления.ПричиныИзмененияСостояния.Увольнение);
	//Запрос.УстановитьПараметр("Ссылка"             , СтруктураШапкиДокумента.Ссылка);
	
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктураШапкиДокумента.СтруктурноеПодразделение);	
	
	Способ = ?(СпособРасчетаНормВыдачиСпецодежды = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма, "СУММА", "МАКСИМУМ");

	ЕстьСтруктурноеПодразделение = (Метаданные.РегистрыСведений["РаботникиОрганизаций"].Ресурсы.Найти("СтруктурноеПодразделение") <> Неопределено);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|	ВложенныйЗапрос.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаСпецодежды
	|ИЗ
	|	&ТаблицаСпецодежды КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|	СУММА(ВложенныйЗапрос.Количество) КАК КоличествоВыдаваемое
	|ПОМЕСТИТЬ ТаблицаКВыдаче
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСпецодежды.Сотрудник КАК Сотрудник,
	|		ТаблицаСпецодежды.Номенклатура КАК Номенклатура,
	|		ТаблицаСпецодежды.НазначениеИспользования КАК НазначениеИспользования,
	|		СУММА(ТаблицаСпецодежды.Количество) КАК Количество
	|	ИЗ
	|		ТаблицаСпецодежды КАК ТаблицаСпецодежды
	|			
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСпецодежды.Номенклатура,
	|		ТаблицаСпецодежды.Сотрудник,
	|		ТаблицаСпецодежды.НазначениеИспользования) КАК ВложенныйЗапрос
	|			
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Номенклатура,
	|	НазначениеИспользования
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПоРаботникуПриНазначении.Сотрудник" + ?(УчетПоФизЛицам, ".ФизЛицо","") + " КАК Сотрудник,
	|	ДанныеПоРаботникуПриНазначении.Должность КАК Должность
	|ПОМЕСТИТЬ СписокФД
	|ИЗ
	|	(ВЫБРАТЬ
    |		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,	
	//|		МАКСИМУМ(Работники.Период) КАК Период
	|		Работники.Период КАК Период

	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, 
	|					Организация = &ГоловнаяОрганизация
	|					И Сотрудник"+?(УчетПоФизЛицам,".ФизЛицо","") + " В (ВЫБРАТЬ
	|									Сотрудник 
	|								ИЗ 
	|									ТаблицаКВыдаче)) КАК РаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|				ПО РаботникиОрганизации.Сотрудник = Работники.Сотрудник
	|					И РаботникиОрганизации.Организация = Работники.Организация
	|					" + ?(ЕстьСтруктурноеПодразделение, "И (РаботникиОрганизации.СтруктурноеПодразделение = &СтруктурноеПодразделение)", "") + "
	|					И (Работники.ОбособленноеПодразделение = &Организация)
	|					И (Работники.Период <= РаботникиОрганизации.Период)
	|					И (Работники.ПричинаИзмененияСостояния <> &Уволен)
	//|		СГРУППИРОВАТЬ ПО
	//|			РаботникиОрганизации.Организация,
	//|			РаботникиОрганизации.Сотрудник
	|		) КАК ДатыПоследнихДвиженийРаботников
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
	|		ПО (ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период)
	|			И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуПриНазначении.Сотрудник
	|			И ДатыПоследнихДвиженийРаботников.Организация = ДанныеПоРаботникуПриНазначении.Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КПроверке.Сотрудник,
	|	КПроверке.Номенклатура,
	|	КПроверке.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КПроверке.НазначениеИспользования,
	|	ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) КАК КоличествоВыдано,
	|	КПроверке.КоличествоНорма,
	|	си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток,
	|	ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) - ЕСТЬNULL(КПроверке.КоличествоНорма, 0) КАК Нехватка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|		СУММА(ВложенныйЗапрос.КоличествоВыдаваемое) КАК КоличествоВыдаваемое,
	|		СУММА(ВложенныйЗапрос.КоличествоНорма) КАК КоличествоНорма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ФизЛицГрупКВыдаче.Сотрудник КАК Сотрудник,
	|			ФизЛицГрупКВыдаче.Номенклатура КАК Номенклатура,
	|			ФизЛицГрупКВыдаче.НазначениеИспользования КАК НазначениеИспользования,
	|			ФизЛицГрупКВыдаче.КоличествоВыдаваемое КАК КоличествоВыдаваемое,
	|			0 КАК КоличествоНорма
	|		ИЗ
	|			ТаблицаКВыдаче КАК ФизЛицГрупКВыдаче
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Сотрудники.Сотрудник КАК Сотрудник,
	|			НормыФизЛица.СпецодеждаИнвентарь КАК Номенклатура,
	|			НормыФизЛица.НазначениеИспользования КАК НазначениеИспользования,
	|			0 КАК КоличествоВыдаваемое,
	|			НормыФизЛица.Количество КАК КоличествоНорма
	|		ИЗ
	|			ТаблицаКВыдаче КАК Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&Период,
	|						Организация = &Организация
	|							И Должность = &ПустаяДолжность
	|							И (СпецодеждаИнвентарь, НазначениеИспользования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ ТаблицаКВыдаче.Номенклатура, ТаблицаКВыдаче.НазначениеИспользования ИЗ ТаблицаКВыдаче)) КАК НормыФизЛица
	|				ПО Сотрудники.Сотрудник = НормыФизЛица.Сотрудник
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|			
	|		ВЫБРАТЬ
	|			ВложенныйЗапрос.Сотрудник,
	|			ВложенныйЗапрос.Номенклатура,
	|			ВложенныйЗапрос.НазначениеИспользования,
	|			0 КАК КоличествоВыдаваемое,
	|			ВложенныйЗапрос.Количество КАК КоличествоНорма
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ФизЛицаДолжности.Сотрудник КАК Сотрудник,
	|				НормыДолжности.СпецодеждаИнвентарь КАК Номенклатура,
	|				НормыДолжности.НазначениеИспользования КАК НазначениеИспользования,
	|				" + Способ + "(НормыДолжности.Количество)  КАК Количество
	|			ИЗ
	|				СписокФД КАК ФизЛицаДолжности
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&Период,
	|						Организация = &Организация
	|							И Должность <> &ПустаяДолжность
	|							И (СпецодеждаИнвентарь, НазначениеИспользования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ ТаблицаКВыдаче.Номенклатура, ТаблицаКВыдаче.НазначениеИспользования ИЗ ТаблицаКВыдаче)) КАК НормыДолжности
	|				ПО ФизЛицаДолжности.Должность = НормыДолжности.Должность
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ФизЛицаДолжности.Сотрудник,
	|				НормыДолжности.СпецодеждаИнвентарь,
	|				НормыДолжности.НазначениеИспользования) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Сотрудник,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.НазначениеИспользования) КАК КПроверке
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток
	|						ИЗ
	|							РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(&Период, 
	|								Организация = &Организация
	|								И СтруктурноеПодразделение = &СтруктурноеПодразделение
	|								И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									 Сотрудник
	|								 ИЗ
	|									 ТаблицаКВыдаче)) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|						ГДЕ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток > 0) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|		ПО КПроверке.Сотрудник = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник
	|			И КПроверке.Номенклатура = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура
	|			И КПроверке.НазначениеИспользования = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования
	|ГДЕ
	|	ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) - ЕСТЬNULL(КПроверке.КоличествоНорма, 0) > 0";
	


	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = "Для спецодежды (инвентаря) """ + Выборка.Номенклатура + """, " + ?(УчетПоФизЛицам,"физического лица ","сотрудника ")
			+ Выборка.Сотрудник + """ и назначению использования """ + Выборка.НазначениеИспользования + """ превышена норма выдачи на "
			+ Выборка.Нехватка + " " + Выборка.ЕдиницаИзмерения;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,СтруктураШапкиДокумента.Ссылка,,, Отказ);
	КонецЦикла;
	
КонецПроцедуры // ПроверитьПоНормамВыдачи()

// Проверяет выдачу спецодежды и инвентаря по нормам выдачи.
//
Процедура ПроверитьПоНормамВыдачи1(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ) Экспорт
	
	УчетнаяПолитикаВеденияСпецодеждыИИнвентаря = си_УчетСпецодеждыСерверПовтИсп.ПолучитьУчетнуюПолитикуВеденияСпецодеждыИИнвентаря(СтруктураШапкиДокумента.Дата);
	ВедетсяКонтрольВыдачиСпецодеждыПоНормам = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.ВедетсяКонтрольВыдачиСпецодеждыПоНормам;
	//ВедетсяКонтрольВыдачиСпецодеждыПоНормам = Константы.си_КонтрольВыдачиСпецодеждыИИнвентаряПоНормам.Получить();
	Если ВедетсяКонтрольВыдачиСпецодеждыПоНормам Тогда
		СпособРасчетаНормВыдачиСпецодежды   = УчетнаяПолитикаВеденияСпецодеждыИИнвентаря.СпособРасчетаНормВыдачиСпецодеждыИИнвентаря;
	Иначе
		СпособРасчетаНормВыдачиСпецодежды   = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСпецодежды"  , ТаблицаПоТоварам);
	//Запрос.УстановитьПараметр("ТаблицаСпецодеждыБУ", ТаблицаПоТаварамБывшихВЭксплуатации);
	Запрос.УстановитьПараметр("Период"             , СтруктураШапкиДокумента.Дата);
	Запрос.УстановитьПараметр("Организация"        , СтруктураШапкиДокумента.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", общ_ПереопределяемыеПроцедурыБКСервер.ГоловнаяОрганизация(СтруктураШапкиДокумента.Организация));
	Запрос.УстановитьПараметр("ПустаяДолжность"    , Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаДолжностей()].ПустаяСсылка());
	Запрос.УстановитьПараметр("Уволен"			   , Перечисления.ПричиныИзмененияСостояния.Увольнение);
	//Запрос.УстановитьПараметр("Ссылка"             , СтруктураШапкиДокумента.Ссылка);
	
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктураШапкиДокумента.СтруктурноеПодразделение);	
	
	Способ = ?(СпособРасчетаНормВыдачиСпецодежды = Перечисления.си_СпособыРасчетаНормВыдачиСпецодеждыИИнвентаря.Сумма, "СУММА", "МАКСИМУМ");

	ЕстьСтруктурноеПодразделение = (Метаданные.РегистрыСведений["РаботникиОрганизаций"].Ресурсы.Найти("СтруктурноеПодразделение") <> Неопределено);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|	ВложенныйЗапрос.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаСпецодежды
	|ИЗ
	|	&ТаблицаСпецодежды КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|	СУММА(ВложенныйЗапрос.Количество) КАК КоличествоВыдаваемое
	|ПОМЕСТИТЬ ТаблицаКВыдаче
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСпецодежды.Сотрудник КАК Сотрудник,
	|		ТаблицаСпецодежды.Номенклатура КАК Номенклатура,
	|		ТаблицаСпецодежды.НазначениеИспользования КАК НазначениеИспользования,
	|		СУММА(ТаблицаСпецодежды.Количество) КАК Количество
	|	ИЗ
	|		ТаблицаСпецодежды КАК ТаблицаСпецодежды
	|			
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСпецодежды.Номенклатура,
	|		ТаблицаСпецодежды.Сотрудник,
	|		ТаблицаСпецодежды.НазначениеИспользования) КАК ВложенныйЗапрос
	|			
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.НазначениеИспользования
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Номенклатура,
	|	НазначениеИспользования
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеПоРаботникуПриНазначении.Сотрудник КАК Сотрудник,
	|	ДанныеПоРаботникуПриНазначении.Должность КАК Должность
	|ПОМЕСТИТЬ СписокФД
	|ИЗ
	|	(ВЫБРАТЬ
    |		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,	
	|		МАКСИМУМ(Работники.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, 
	|					Организация = &ГоловнаяОрганизация
	|					И Сотрудник В (ВЫБРАТЬ
	|									Сотрудник
	|								ИЗ 
	|									ТаблицаКВыдаче)) КАК РаботникиОрганизации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|				ПО РаботникиОрганизации.Сотрудник = Работники.Сотрудник
	|					И РаботникиОрганизации.Организация = Работники.Организация
	|					" + ?(ЕстьСтруктурноеПодразделение, "И (РаботникиОрганизации.СтруктурноеПодразделение = &СтруктурноеПодразделение)", "") + "
	|					И (Работники.ОбособленноеПодразделение = &Организация)
	|					И (Работники.Период <= РаботникиОрганизации.Период)
	|					И (Работники.ПричинаИзмененияСостояния <> &Уволен)
	|		СГРУППИРОВАТЬ ПО
	|			РаботникиОрганизации.Организация,
	|			РаботникиОрганизации.Сотрудник) КАК ДатыПоследнихДвиженийРаботников
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
	|		ПО (ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период)
	|			И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуПриНазначении.Сотрудник
	|			И ДатыПоследнихДвиженийРаботников.Организация = ДанныеПоРаботникуПриНазначении.Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КПроверке.Сотрудник,
	|	КПроверке.Номенклатура,
	|	КПроверке.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КПроверке.НазначениеИспользования,
	|	ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) КАК КоличествоВыдано,
	|	КПроверке.КоличествоНорма,
	|	си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток,
	|	ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) - ЕСТЬNULL(КПроверке.КоличествоНорма, 0) КАК Нехватка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		ВложенныйЗапрос.НазначениеИспользования КАК НазначениеИспользования,
	|		СУММА(ВложенныйЗапрос.КоличествоВыдаваемое) КАК КоличествоВыдаваемое,
	|		СУММА(ВложенныйЗапрос.КоличествоНорма) КАК КоличествоНорма
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ФизЛицГрупКВыдаче.Сотрудник КАК Сотрудник,
	|			ФизЛицГрупКВыдаче.Номенклатура КАК Номенклатура,
	|			ФизЛицГрупКВыдаче.НазначениеИспользования КАК НазначениеИспользования,
	|			ФизЛицГрупКВыдаче.КоличествоВыдаваемое КАК КоличествоВыдаваемое,
	|			0 КАК КоличествоНорма
	|		ИЗ
	|			ТаблицаКВыдаче КАК ФизЛицГрупКВыдаче
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Сотрудники.Сотрудник КАК Сотрудник,
	|			НормыФизЛица.СпецодеждаИнвентарь КАК Номенклатура,
	|			НормыФизЛица.НазначениеИспользования КАК НазначениеИспользования,
	|			0 КАК КоличествоВыдаваемое,
	|			НормыФизЛица.Количество КАК КоличествоНорма
	|		ИЗ
	|			ТаблицаКВыдаче КАК Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&Период,
	|						Организация = &Организация
	|							И Должность = &ПустаяДолжность
	|							И (СпецодеждаИнвентарь, НазначениеИспользования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ ТаблицаКВыдаче.Номенклатура, ТаблицаКВыдаче.НазначениеИспользования ИЗ ТаблицаКВыдаче)) КАК НормыФизЛица
	|				ПО Сотрудники.Сотрудник = НормыФизЛица.Сотрудник
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|			
	|		ВЫБРАТЬ
	|			ВложенныйЗапрос.Сотрудник,
	|			ВложенныйЗапрос.Номенклатура,
	|			ВложенныйЗапрос.НазначениеИспользования,
	|			0 КАК КоличествоВыдаваемое,
	|			ВложенныйЗапрос.Количество КАК КоличествоНорма
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ФизЛицаДолжности.Сотрудник КАК Сотрудник,
	|				НормыДолжности.СпецодеждаИнвентарь КАК Номенклатура,
	|				НормыДолжности.НазначениеИспользования КАК НазначениеИспользования,
	|				" + Способ + "(НормыДолжности.Количество)  КАК Количество
	|			ИЗ
	|				СписокФД КАК ФизЛицаДолжности
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.си_НормыОбеспеченностиСпецодеждойИИнвентарем.СрезПоследних(
	|						&Период,
	|						Организация = &Организация
	|							И Должность <> &ПустаяДолжность
	|							И (СпецодеждаИнвентарь, НазначениеИспользования) В (ВЫБРАТЬ РАЗЛИЧНЫЕ ТаблицаКВыдаче.Номенклатура, ТаблицаКВыдаче.НазначениеИспользования ИЗ ТаблицаКВыдаче)) КАК НормыДолжности
	|				ПО ФизЛицаДолжности.Должность = НормыДолжности.Должность
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ФизЛицаДолжности.Сотрудник,
	|				НормыДолжности.СпецодеждаИнвентарь,
	|				НормыДолжности.НазначениеИспользования) КАК ВложенныйЗапрос) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Сотрудник,
	|		ВложенныйЗапрос.Номенклатура,
	|		ВложенныйЗапрос.НазначениеИспользования) КАК КПроверке
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования,
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток
	|						ИЗ
	|							РегистрНакопления.си_МатериалыВЭксплуатации.Остатки(&Период, 
	|								Организация = &Организация
	|								И СтруктурноеПодразделение = &СтруктурноеПодразделение
	|								И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									 Сотрудник
	|								 ИЗ
	|									 ТаблицаКВыдаче)) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|						ГДЕ
	|							си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток > 0) КАК си_СпецодеждаИИнвентарьВЭксплуатацииОстатки
	|		ПО КПроверке.Сотрудник = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Сотрудник
	|			И КПроверке.Номенклатура = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.Номенклатура
	|			И КПроверке.НазначениеИспользования = си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.НазначениеИспользования
	|ГДЕ
	|	ЕСТЬNULL(си_СпецодеждаИИнвентарьВЭксплуатацииОстатки.КоличествоОстаток, 0) + ЕСТЬNULL(КПроверке.КоличествоВыдаваемое, 0) - ЕСТЬNULL(КПроверке.КоличествоНорма, 0) > 0";
	


	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = "Для спецодежды (инвентаря) """ + Выборка.Номенклатура + """, физического лица """
			+ Выборка.Сотрудник + """ и назначению использования """ + Выборка.НазначениеИспользования + """ превышена норма выдачи на "
			+ Выборка.Нехватка + " " + Выборка.ЕдиницаИзмерения;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ,,,Отказ);
	КонецЦикла;
	
КонецПроцедуры // ПроверитьПоНормамВыдачи()

Функция ПечатьМБ7(МассивОбъектов, ОбъектыПечати) Экспорт 
	УстановитьПривилегированныйРежим(Истина);
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_ПередачаМатериаловВЭксплуатацию.ПФ_MXL_МБ7");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериаловВЭксплуатацию_МБ7";
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", ДокументСсылка);
		Запрос.УстановитьПараметр("Период", ДокументСсылка.Дата);
		Если Метаданные.Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()].Реквизиты.Найти("ТекущаяДолжностьОрганизации")<>Неопределено Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПередачаМатериаловВЭксплуатацию.Ссылка,
			|	ПередачаМатериаловВЭксплуатацию.Номер,
			|	ПередачаМатериаловВЭксплуатацию.Номер КАК НомерДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаСоставления,
			|	ПередачаМатериаловВЭксплуатацию.Организация,
			|	ПередачаМатериаловВЭксплуатацию.Склад,
			|	ПередачаМатериаловВЭксплуатацию.ПодразделениеОрганизации КАК Подразделение,
			|	ПередачаМатериаловВЭксплуатацию.Материалы.(
			|		Ссылка.Дата КАК ДатаДокумента,
			|		НомерСтроки КАК НомерПП,
			|		ВЫРАЗИТЬ(ПередачаМатериаловВЭксплуатацию.Материалы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
			|		Номенклатура.Код КАК НоменклатурныйНомер,
			|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|		ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|		Коэффициент,
			|		Количество КАК Количество,
			|		Сотрудник КАК Сотрудник,
			|		Сотрудник.Код КАК ТабельныйНомер,
			|		НазначениеИспользования.СрокПолезногоИспользования КАК СрокСлужбы,
			|		ДокументПередачи.Дата КАК ДатаПоступленияПоДП,
			|		НазначениеИспользования,
			|		ДокументПередачи,
			|		Номенклатура
			|	),
			|	ПередачаМатериаловВЭксплуатацию.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ОтветственноеЛицо,
			|	СотрудникиОрганизаций.ТекущаяДолжностьОрганизации КАК ДолжностьОтветственного,
			|	ВЫБОР
			|		КОГДА ПередачаМатериаловВЭксплуатацию.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|			ТОГДА ПередачаМатериаловВЭксплуатацию.Организация.ОсновнойВидДеятельности
			|		ИНАЧЕ ПередачаМатериаловВЭксплуатацию.СтруктурноеПодразделение.ОсновнойВидДеятельности
			|	КОНЕЦ КАК ВидДеятельности,
			|	ПередачаМатериаловВЭксплуатацию.ВидУчетаНУ,
			|	ПередачаМатериаловВЭксплуатацию.СтруктурноеПодразделение,
			|	ПередачаМатериаловВЭксплуатацию.ВидОперации
			|ИЗ
			|	Документ.си_ПередачаМатериаловВЭксплуатацию КАК ПередачаМатериаловВЭксплуатацию
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Период, ) КАК ОтветственныеЛицаСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник."+си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()+" КАК СотрудникиОрганизаций
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = СотрудникиОрганизаций.Физлицо
			|		ПО ПередачаМатериаловВЭксплуатацию.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
			|ГДЕ
			|	ПередачаМатериаловВЭксплуатацию.Ссылка = &ТекущийДокумент";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПередачаМатериаловВЭксплуатацию.Ссылка,
			|	ПередачаМатериаловВЭксплуатацию.Номер,
			|	ПередачаМатериаловВЭксплуатацию.Номер КАК НомерДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаСоставления,
			|	ПередачаМатериаловВЭксплуатацию.Организация,
			|	ПередачаМатериаловВЭксплуатацию.Склад,
			|	ПередачаМатериаловВЭксплуатацию.ПодразделениеОрганизации КАК Подразделение,
			|	ПередачаМатериаловВЭксплуатацию.Материалы.(
			|		Ссылка.Дата КАК ДатаДокумента,
			|		НомерСтроки КАК НомерПП,
			|		ВЫРАЗИТЬ(ПередачаМатериаловВЭксплуатацию.Материалы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
			|		Номенклатура.Код КАК НоменклатурныйНомер,
			|		ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
			|		ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
			|		Коэффициент,
			|		Количество КАК Количество,
			|		Сотрудник КАК Сотрудник,
			|		Сотрудник.Код КАК ТабельныйНомер,
			|		НазначениеИспользования.СрокПолезногоИспользования КАК СрокСлужбы,
			|		ДокументПередачи.Дата КАК ДатаПоступленияПоДП,
			|		НазначениеИспользования,
			|		ДокументПередачи,
			|		Номенклатура
			|	),
			|	ПередачаМатериаловВЭксплуатацию.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ОтветственноеЛицо,
			|	КадроваяИстория.Должность КАК ДолжностьОтветственного,
			|	ВЫБОР
			|		КОГДА ПередачаМатериаловВЭксплуатацию.СтруктурноеПодразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|			ТОГДА ПередачаМатериаловВЭксплуатацию.Организация.ОсновнойВидДеятельности
			|		ИНАЧЕ ПередачаМатериаловВЭксплуатацию.СтруктурноеПодразделение.ОсновнойВидДеятельности
			|	КОНЕЦ КАК ВидДеятельности,
			|	ПередачаМатериаловВЭксплуатацию.ВидУчетаНУ,
			|	ПередачаМатериаловВЭксплуатацию.СтруктурноеПодразделение,
			|	ПередачаМатериаловВЭксплуатацию.ВидОперации
			|ИЗ
			|	Документ.си_ПередачаМатериаловВЭксплуатацию КАК ПередачаМатериаловВЭксплуатацию
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Период, ) КАК ОтветственныеЛицаСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник."+си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()+" КАК СотрудникиОрганизаций
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = СотрудникиОрганизаций.Физлицо
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ) ) КАК КадроваяИстория
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = КадроваяИстория.ФизическоеЛицо
			|		ПО ПередачаМатериаловВЭксплуатацию.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
			|ГДЕ
			|	ПередачаМатериаловВЭксплуатацию.Ссылка = &ТекущийДокумент";
		КонецЕсли;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ТаблицаНоменклатуры = Шапка.Материалы.Выгрузить();
		ЗапросПоСрокуСлужбы = Новый Запрос;
		ЗапросПоСрокуСлужбы.УстановитьПараметр("Период", Шапка.ДатаДокумента);
		ЗапросПоСрокуСлужбы.УстановитьПараметр("ВидУчетаНУ", Шапка.ВидУчетаНУ);
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокДокументПередачи", ТаблицаНоменклатуры.ВыгрузитьКолонку("ДокументПередачи"));
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокНазначениеИспользования", ТаблицаНоменклатуры.ВыгрузитьКолонку("НазначениеИспользования"));
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокНоменклатура", ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокОрганизация", Шапка.Организация);
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокПодразделениеОрганизации", Шапка.Подразделение);
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокСотрудник", ТаблицаНоменклатуры.ВыгрузитьКолонку("Сотрудник"));
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокСклад", Шапка.Склад);
		ЗапросПоСрокуСлужбы.УстановитьПараметр("СписокСтруктурноеПодразделение", Шапка.СтруктурноеПодразделение);
		Если Шапка.ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ Тогда
			ЗапросПоСрокуСлужбы.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
			                          |	си_МатериалыНаСкладеОстатки.Организация,
			                          |	си_МатериалыНаСкладеОстатки.СтруктурноеПодразделение,
			                          |	си_МатериалыНаСкладеОстатки.Номенклатура,
			                          |	си_МатериалыНаСкладеОстатки.ДокументПередачи,
			                          |	си_МатериалыНаСкладеОстатки.НазначениеИспользования,
			                          |	си_МатериалыНаСкладеОстатки.Склад,
			                          |	си_МатериалыНаСкладеОстатки.ВидУчетаНУ,
			                          |	си_МатериалыНаСкладеОстатки.КоличествоОстаток,
			                          |	си_МатериалыНаСкладеОстатки.СтоимостьОстаток,
			                          |	си_МатериалыНаСкладеОстатки.СписаннаяСтоимостьОстаток,
			                          |	си_МатериалыНаСкладеОстатки.ОстаточныйСрокИспользования
			                          |ИЗ
			                          |	РегистрНакопления.си_МатериалыНаСкладе.Остатки(
			                          |			&Период,
			                          |			ВидУчетаНУ = &ВидУчетаНУ
			                          |				И ДокументПередачи В (&СписокДокументПередачи)
			                          |				И НазначениеИспользования В (&СписокНазначениеИспользования)
			                          |				И Номенклатура В (&СписокНоменклатура)
			                          |				И Организация = &СписокОрганизация
			                          |				И Склад = &СписокСклад
			                          |				И СтруктурноеПодразделение = &СписокСтруктурноеПодразделение) КАК си_МатериалыНаСкладеОстатки";
								  
		    ДанныеПоОстаткам = ЗапросПоСрокуСлужбы.Выполнить().Выгрузить();
		КонецЕсли;
		// Вывод заголовка
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(Шапка);
		НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДокумента, Шапка.Ссылка);
		СведенияОбОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
		ДатаДокументаПрописью = ПолучитьДатуПрописью(Шапка.ДатаДокумента);
		Область.Параметры["Организация"] = Шапка.Организация.НаименованиеПолное;
		Область.Параметры["ПодразделениеОрганизации"] = Шапка.Подразделение;
		Область.Параметры["НомерДокумента"] = НомерДокумента;
		Область.Параметры["ДатаДокумента"] = ДатаДокументаПрописью;
		//Область.Параметры["КодОперации"] = Шапка.КодОперации;
		ТабДок.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ТаблицаШапка");
		ТабДок.Вывести(Область);
		ВыборкаПоСтрокам = Шапка.Материалы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("ТаблицаСтрока");
			Если Шапка.ВидОперации = Перечисления.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ Тогда
				СтрокиСОстатком = ДанныеПоОстаткам.НайтиСтроки(Новый Структура("Организация, СтруктурноеПодразделение, Номенклатура, НазначениеИспользования, ДокументПередачи",Шапка.Организация, Шапка.СтруктурноеПодразделение,ВыборкаПоСтрокам.Номенклатура,ВыборкаПоСтрокам.НазначениеИспользования,ВыборкаПоСтрокам.ДокументПередачи));
				Для Каждого СтрокаСОстатком Из СтрокиСОстатком Цикл
					Область.Параметры.Заполнить(ВыборкаПоСтрокам);
					Область.Параметры["ТоварНаименование"] = СокрЛП(ВыборкаПоСтрокам.ТоварНаименование);
					Область.Параметры["ДатаПоступления"] = Формат(Шапка.ДатаДокумента,"ДФ=dd.MM.yyyy");
					Область.Параметры["СрокСлужбы"] = СтрокаСОстатком.ОстаточныйСрокИспользования;
				КонецЦикла;
			Иначе
				Область.Параметры.Заполнить(ВыборкаПоСтрокам);
				Область.Параметры["ТоварНаименование"] = СокрЛП(ВыборкаПоСтрокам.ТоварНаименование);
				Область.Параметры["ДатаПоступления"] = Формат(Шапка.ДатаДокумента,"ДФ=dd.MM.yyyy");
				//Область.Параметры["СрокСлужбы"] = СтрокаСОстатком.ОстаточныйСрокИспользования;
			КонецЕсли;
			
			ТабДок.Вывести(Область);
		КонецЦикла;
		// Вывод подвала
		Область = Макет.ПолучитьОбласть("Подвал");
		ДанныеМОЛ = общ_ПереопределяемыеПроцедурыБКВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ОтветственноеЛицо, Шапка.ДатаДокумента);
		Область.Параметры["ОтветственноеЛицо"] = ДанныеМОЛ.Представление;
		ТабДок.Вывести(Область);
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		
	КонецЦикла;
	Возврат ТабДок;	
КонецФункции // ПечатьМБ7()

// Функция формирует печатную форму документа
//
Функция ПечатьПередачаМатериалов(МассивОбъектов, ОбъектыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	УчетПоХарактеристикам = Константы.си_УчетСпецодеждыПоХарактеристикам.Получить();
	УчетПоФизЛицам = си_УчетСпецодеждыСервер.ПолучитьВедениеУчетаПоФизЛицам();
	Суффикс = ?(УчетПоХарактеристикам, "", "БезХ");
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_ПередачаМатериаловВЭксплуатацию.ПФ_MXL_ПередачаМатериалов");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериалов_ПередачаМатериалов";
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокПередачаМатериалов.Ссылка,
	               |	ДокПередачаМатериалов.Номер,
	               |	ДокПередачаМатериалов.Дата КАК ДатаПередачи,
	               |	ДокПередачаМатериалов.Организация,
	               |	ДокПередачаМатериалов.Организация.Представление КАК ПечОрганизация,
	               |	ДокПередачаМатериалов.ПодразделениеОрганизации КАК Подр,
	               |	ДокПередачаМатериалов.ПодразделениеОрганизации КАК ПечПодр,
	               |	ДокПередачаМатериалов.Дата
	               |ИЗ
	               |	Документ.си_ПередачаМатериаловВЭксплуатацию КАК ДокПередачаМатериалов
	               |ГДЕ
	               |	ДокПередачаМатериалов.Ссылка В(&ТекДок)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокПередачаМатериалов.Ссылка КАК Ссылка,
	               |	ДокПередачаМатериалов.НомерСтроки КАК ПечНомер,
	               |	ДокПередачаМатериалов.Номенклатура КАК Товар,
	               |	ДокПередачаМатериалов.Характеристика КАК Характеристика,
	               |	ДокПередачаМатериалов.Номенклатура.Артикул КАК Артикул,
	               |	ДокПередачаМатериалов.Номенклатура.Код КАК Код,
	               |	ДокПередачаМатериалов.Количество,
	               |	ДокПередачаМатериалов.ЕдиницаИзмерения КАК ЕдИзм,
	               |	ДокПередачаМатериалов.ЕдиницаИзмерения.Представление КАК ПечЕдИзм,
	               |	ДокПередачаМатериалов.Сотрудник КАК Сотрудник,
	               |	ДокПередачаМатериалов.Сотрудник.Представление КАК ПечФИО,
	               |	ЕСТЬNULL(си_МатериалыВЭксплуатации.ОстаточныйСрокИспользования, ДокПередачаМатериалов.НазначениеИспользования.СрокПолезногоИспользования) КАК СрокЭксплуатации,
	               |	ДокПередачаМатериалов.Сотрудник.Код КАК КодСотрудника
	               |ИЗ
	               |	Документ.си_ПередачаМатериаловВЭксплуатацию.Материалы КАК ДокПередачаМатериалов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыВЭксплуатации КАК си_МатериалыВЭксплуатации
	               |		ПО ДокПередачаМатериалов.Ссылка = си_МатериалыВЭксплуатации.Регистратор
	               |			И ДокПередачаМатериалов.Номенклатура = си_МатериалыВЭксплуатации.Номенклатура
	               |			И ДокПередачаМатериалов.ДокументПередачи = си_МатериалыВЭксплуатации.ДокументПередачи
	               |			И ДокПередачаМатериалов.Сотрудник = си_МатериалыВЭксплуатации.Сотрудник
	               |			И ДокПередачаМатериалов.НазначениеИспользования = си_МатериалыВЭксплуатации.НазначениеИспользования
	               |			И ДокПередачаМатериалов.Характеристика = си_МатериалыВЭксплуатации.Характеристика
	               |			И (ДокПередачаМатериалов.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.си_ВидыОперацийПередачиВЭксплуатацию.ПередачаМатериаловБУ))
	               |			И ДокПередачаМатериалов.Ссылка.ВидУчетаНУ = си_МатериалыВЭксплуатации.ВидУчетаНУ
	               |ГДЕ
	               |	ДокПередачаМатериалов.Ссылка В(&ТекДок)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДокПередачаМатериалов.Ссылка,
	               |	ДокПередачаМатериалов.НомерСтроки";
			
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр( "ТекДок", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Шапка = РезультатЗапроса[0].Выбрать();
	ТабЧасть = РезультатЗапроса[1].Выбрать();
	Пока Шапка.Следующий() Цикл
		
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		
		// Параметры вывода
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		КолАртикул = ?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул, "Артикул",
					 ?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код,     "Код", ""));
		ФлагВыводКода = НЕ ПустаяСтрока(КолАртикул);
		
		// Вывод заголовка
		Область = Макет.ПолучитьОбласть("Заголовок");
		//Область.Параметры.Заголовок = "Передача материалов в эксплуатацию № " + Шапка.Номер+ " от " + Формат(Шапка.Дата, "ДЛФ=DD");;
		НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Шапка.Ссылка);
		//Область.Параметры["НомерДокумента"] = НомерДокумента;
		Область.Параметры.Заголовок = "Передача материалов в эксплуатацию № " + НомерДокумента+ " от " + Формат(Шапка.Дата, "ДЛФ=DD");;
		Область.Параметры.Подразделение    = Шапка.Подр;
		Область.Параметры.ПечПодразделение = Шапка.ПечПодр;
		СведенияОбОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаПередачи);
		Область.Параметры.ПечОрганизация = СведенияОбОрганизации.ПолноеНаименование;
		//Область.Параметры.Организация      = Шапка.Организация;
		//Область.Параметры.ПечОрганизация   = Шапка.ПечОрганизация;
		Область.Параметры.ДатаПередачи     = СтрЗаменить( Формат( Шапка.ДатаПередачи, "ДФ=dd.MMM.yyyy"), ".", " ");
			
		ТабДок.Вывести(Область);
		
		// Вывод шапки табличной части
		Область = Макет.ПолучитьОбласть("ТабШапка" + Суффикс);
		Если ФлагВыводКода Тогда
			Область.Параметры.ПечАртикул = КолАртикул;
		КонецЕсли;
		Область.Параметры.Сотрудник = ?(УчетПоФизЛицам,"Физическое лицо","Сотрудник");
		ТабДок.Вывести( Область);
		
		// Вывод табличной части
		Область = Макет.ПолучитьОбласть("ТабСтрока" + Суффикс);
		
		//ТабЧасть = Шапка.Материалы.Выбрать();
		СуммаИтого = 0;
		
		Пока ТабЧасть.НайтиСледующий(Новый Структура("Ссылка",Шапка.Ссылка)) Цикл
			
			Область.Параметры.ПечНомер = ТабЧасть.ПечНомер;
			
			Если ФлагВыводКода Тогда
				Область.Параметры.ПечАртикул = ТабЧасть[КолАртикул];
			КонецЕсли;
			
			//Область.Параметры.ПечМатериал  = СокрЛП( ТабЧасть.Товар) + ФормированиеПечатныхФорм.ПредставлениеСерий( ТабЧасть);
			Область.Параметры.ПечМатериал  = СокрЛП( ТабЧасть.Товар);
			Область.Параметры.Материал     = ТабЧасть.Товар;
			
			Если УчетПоХарактеристикам Тогда
				Область.Параметры.ПечХарактеристика  = СокрЛП( ТабЧасть.Характеристика);
				Область.Параметры.Характеристика     = ТабЧасть.Характеристика;
			КонецЕсли;
			
			Область.Параметры.ПечЕдИзм     = ТабЧасть.ПечЕдИзм;
			Область.Параметры.ПечКол       = ТабЧасть.Количество;
			
			Область.Параметры.ПечФИО       = ТабЧасть.ПечФИО;
			Область.Параметры.ПечТабНомер  = ТабЧасть.КодСотрудника;
			Область.Параметры.Сотрудник    = ТабЧасть.Сотрудник;
			
			Область.Параметры.ПечСрокЭкспл     = ТабЧасть.СрокЭксплуатации;
			Область.Параметры.ПечДатаОкончания = СтрЗаменить( Формат( ДобавитьМесяц(Шапка.Дата, ТабЧасть.СрокЭксплуатации), "ДФ=dd.MMM.yyyy"), ".", " ");
			
			ТабДок.Вывести(Область);
			
		КонецЦикла;
		
		ТабЧасть.Сбросить();
		// Вывод итогов документа
			
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.СтрокаИтог = "Всего наименований: " + ТабЧасть.Количество();
		ТабДок.Вывести( Область);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	Возврат ТабДок;
	
КонецФункции // ПечатьПередачаМатериалов()

// Функция формирует печатную форму М-11
//
Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.си_ПередачаМатериаловВЭксплуатацию.ПФ_MXL_М11");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериаловВЭксплуатацию_М11";
	
	Для Каждого СсылкаДокумента Из МассивОбъектов Цикл
		
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ТоварКод = "Артикул";
		Иначе
			ТоварКод = "Код";
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаДокумента);
		Запрос.УстановитьПараметр("Период", СсылкаДокумента.Дата);
		Если Метаданные.Справочники[си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()].Реквизиты.Найти("ТекущаяДолжностьОрганизации")<>Неопределено Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ПередачаМатериаловВЭксплуатацию.Номер КАК НомерДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаСоставления,
			|	ПередачаМатериаловВЭксплуатацию.Организация,
			|	ПередачаМатериаловВЭксплуатацию.Склад,
			|	ПередачаМатериаловВЭксплуатацию.ПодразделениеОрганизации КАК Подразделение,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ОтветственныйЗаСклад,
			|	СотрудникиОрганизаций.ТекущаяДолжностьОрганизации КАК ДолжностьОтветственногоЗаСклад,
			|	ПередачаМатериаловВЭксплуатацию.Организация.КодПоОКПО КАК КодОКПО,
			|	ПередачаМатериаловВЭксплуатацию.ПодразделениеОрганизации.ОсновнойВидДеятельности КАК ВидДеятельности
			|ИЗ
			|	Документ.си_ПередачаМатериаловВЭксплуатацию КАК ПередачаМатериаловВЭксплуатацию
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Период, ) КАК ОтветственныеЛицаСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник."+си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()+" КАК СотрудникиОрганизаций
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = СотрудникиОрганизаций.Физлицо
			|		ПО ПередачаМатериаловВЭксплуатацию.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
			|ГДЕ
			|	ПередачаМатериаловВЭксплуатацию.Ссылка = &ТекущийДокумент";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ПередачаМатериаловВЭксплуатацию.Номер КАК НомерДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаДокумента,
			|	ПередачаМатериаловВЭксплуатацию.Дата КАК ДатаСоставления,
			|	ПередачаМатериаловВЭксплуатацию.Организация,
			|	ПередачаМатериаловВЭксплуатацию.Склад,
			|	ПередачаМатериаловВЭксплуатацию.ПодразделениеОрганизации КАК Подразделение,
			|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ОтветственныйЗаСклад,
			|	КадроваяИстория.Должность КАК ДолжностьОтветственногоЗаСклад,
			|	ПередачаМатериаловВЭксплуатацию.Организация.КодПоОКПО КАК КодОКПО,
			|	ПередачаМатериаловВЭксплуатацию.ПодразделениеОрганизации.ОсновнойВидДеятельности КАК ВидДеятельности
			|ИЗ
			|	Документ.си_ПередачаМатериаловВЭксплуатацию КАК ПередачаМатериаловВЭксплуатацию
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Период, ) КАК ОтветственныеЛицаСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник."+си_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаСотрудников()+" КАК СотрудникиОрганизаций
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = СотрудникиОрганизаций.Физлицо
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ) ) КАК КадроваяИстория
			|			ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = КадроваяИстория.ФизическоеЛицо
			|		ПО ПередачаМатериаловВЭксплуатацию.Склад = ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница
			|ГДЕ
			|	ПередачаМатериаловВЭксплуатацию.Ссылка = &ТекущийДокумент";
		КонецЕсли;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаДокумента);
		Запрос.УстановитьПараметр("Период", СсылкаДокумента.Дата);
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПередачаМатериаловВЭксплуатацию.Номенклатура КАК Номенклатура,
		               |	ПередачаМатериаловВЭксплуатацию.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		               |	ПередачаМатериаловВЭксплуатацию.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		               |	ПередачаМатериаловВЭксплуатацию.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		               |	ПередачаМатериаловВЭксплуатацию.СчетУчетаБУ КАК СчетУчетаБУ,
		               |	СУММА(ПередачаМатериаловВЭксплуатацию.Количество) КАК Количество,
		               |	МИНИМУМ(ПередачаМатериаловВЭксплуатацию.НомерСтроки) КАК НомерСтроки,
		               |	ВЫБОР
		               |		КОГДА си_МатериалыВЭксплуатации.Стоимость = 0
		               |			ТОГДА си_МатериалыВЭксплуатации.СписаннаяСтоимость
		               |		ИНАЧЕ си_МатериалыВЭксплуатации.Стоимость
		               |	КОНЕЦ КАК Стоимость
		               |ПОМЕСТИТЬ ВТ_Таблица
		               |ИЗ
		               |	Документ.си_ПередачаМатериаловВЭксплуатацию.Материалы КАК ПередачаМатериаловВЭксплуатацию
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.си_МатериалыВЭксплуатации КАК си_МатериалыВЭксплуатации
		               |		ПО ПередачаМатериаловВЭксплуатацию.Ссылка = си_МатериалыВЭксплуатации.Регистратор
		               |			И ПередачаМатериаловВЭксплуатацию.Номенклатура = си_МатериалыВЭксплуатации.Номенклатура
		               |ГДЕ
		               |	ПередачаМатериаловВЭксплуатацию.Ссылка = &ТекущийДокумент
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПередачаМатериаловВЭксплуатацию.Номенклатура,
		               |	ПередачаМатериаловВЭксплуатацию.Номенклатура.СтавкаНДС,
		               |	ПередачаМатериаловВЭксплуатацию.ЕдиницаИзмерения,
		               |	ПередачаМатериаловВЭксплуатацию.СчетУчетаБУ,
		               |	ПередачаМатериаловВЭксплуатацию.ЕдиницаИзмерения.Код,
		               |	ВЫБОР
		               |		КОГДА си_МатериалыВЭксплуатации.Стоимость = 0
		               |			ТОГДА си_МатериалыВЭксплуатации.СписаннаяСтоимость
		               |		ИНАЧЕ си_МатериалыВЭксплуатации.Стоимость
		               |	КОНЕЦ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ВТ_Таблица.Номенклатура КАК Номенклатура,
		               |	ВЫРАЗИТЬ(ВТ_Таблица.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК МатериалНаименование,
		               |	ВТ_Таблица.СтавкаНДС КАК СтавкаНДС,
		               |	ВТ_Таблица.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
		               |	ВТ_Таблица.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
		               |	ВТ_Таблица.Количество КАК Количество,
		               |	ВТ_Таблица.СчетУчетаБУ КАК Счет,
		               |	ВТ_Таблица.НомерСтроки КАК НомерСтроки,
		               |	ЕСТЬNULL(ВТ_Таблица.Стоимость,0) КАК Сумма,
		               |	ЕСТЬNULL(ВТ_Таблица.Стоимость,0) / ЕСТЬNULL(ВТ_Таблица.Количество, 1) КАК Цена
		               |ИЗ
		               |	ВТ_Таблица КАК ВТ_Таблица
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерСтроки";

		ЗапросПоНоменклатуре = Запрос.Выполнить();
		
		
		Область = Макет.ПолучитьОбласть("Шапка");
		//Область.Параметры.Заголовок     = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(Шапка.НомерДокумента);
		НомерДокумента = общ_ПереопределениеПроцедурБККлиентСервер.ПолучитьНомерНаПечать(СсылкаДокумента.Номер, СсылкаДокумента.Ссылка);
		Область.Параметры.Заголовок     = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + Строка(НомерДокумента);
		Область.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = общ_ПереопределяемыеПроцедурыБКВызовСервера.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		//Область.Параметры.ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации);
		Область.Параметры.ПредставлениеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		Область.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		
		ТабДок.Вывести(Область);
		
		ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование);
			Область.Параметры.Сумма = ВыборкаПоСтрокам.Сумма - ВыборкаПоСтрокам.Сумма * ВыборкаПоСтрокам.СтавкаНДС.Ставка/100; 
			ТабДок.Вывести(Область);

		КонецЦикла;

		Область = Макет.ПолучитьОбласть("Подвал");
		ДанныеМОЛ = общ_ПереопределяемыеПроцедурыБКВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ОтветственныйЗаСклад, Шапка.ДатаДокумента);
		Область.Параметры["ОтпустилФИО"] =  ДанныеМОЛ.Представление;
		Область.Параметры["ОтпустилДолжность"] = Шапка.ДолжностьОтветственногоЗаСклад;
		ТабДок.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, СсылкаДокумента);
	КонецЦикла;	
	
	Возврат ТабДок;
	
КонецФункции // ПечатьМ11()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДатуПрописью(Дата)
	НазваниеМесяцев = Новый Соответствие;
	НазваниеМесяцев.Вставить(1,"Январь");
	НазваниеМесяцев.Вставить(2,"Февраль");
	НазваниеМесяцев.Вставить(3,"Март");
	НазваниеМесяцев.Вставить(4,"Апрель");
	НазваниеМесяцев.Вставить(5,"Май");
	НазваниеМесяцев.Вставить(6,"Июнь");
	НазваниеМесяцев.Вставить(7,"Июль");
	НазваниеМесяцев.Вставить(8,"Август");
	НазваниеМесяцев.Вставить(9,"Сентябрь");
	НазваниеМесяцев.Вставить(10,"Октябрь");
	НазваниеМесяцев.Вставить(11,"Ноябрь");
	НазваниеМесяцев.Вставить(12,"Декабрь");
	МесяцВДате = Месяц(Дата);
	ГодВДате = Число(Год(Дата));
	ДатаПрописью = НазваниеМесяцев.Получить(МесяцВДате) +" "+  ГодВДате;
	Возврат ДатаПрописью;
КонецФункции

#КонецОбласти

#КонецЕсли
