#Область ОписаниеПеременных

// Используется для определения необходимости закрытия окна обработки в случае закрытия окна без сохранения значений
&НаКлиенте
Перем ФормаЗакрыта;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// заполним реквизиты формы из переданных параметров
	СписокСвойств = "АдресХранилищаМатериалы";
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, СписокСвойств);
	
	ПолучитьТаблицуИзХранилища();
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = "Обработка табличной части: " + Параметры.Заголовок;
	КонецЕсли;
	
	ИмяТаблицы = "Материалы";
	
	ЦветТекстаПоля 			= ЦветаСтиля.ЦветТекстаПоля;
	ЦветОтрицательногоЧисла = ЦветаСтиля.ЦветОтрицательногоЧисла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ФормаЗакрыта = Ложь;
	ПроверитьКоличество();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ФормаЗакрыта Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ФормаЗакрыта И Модифицированность И ПеренестиВДокумент И Характеристики.Количество() > 0 Тогда
		
		Режим =  РежимДиалогаВопрос.ДаНетОтмена;
		ТекстВопроса = НСтр("ru = 'Перенести изменения в документ?'");
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Отказ", Отказ);
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПередЗакрытием", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииФормыНаСервере();
	
	Если ПеренестиВДокумент Тогда
		
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("ИдентификаторВызывающейФормы", 					ВладелецФормы.УникальныйИдентификатор);
		ПараметрОповещения.Вставить("АдресОбработаннойТабличнойЧастиМатериалыВХранилище", 	АдресХранилищаМатериалы);
		Оповестить("ОбработанаТабличнаяЧастьМатериалы", ПараметрОповещения, ВладелецФормы);
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалыНоменклатура

&НаКлиенте
Процедура МатериалыНоменклатураПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.МатериалыНоменклатура.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый ФиксированнаяСтруктура("КлючСвязи",ТекущиеДанные.КлючСвязи);
	Элементы.Характеристики.ОтборСтрок = СтруктураОтбора;
	
	ПроверитьКоличество();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыХарактеристики

&НаКлиенте
Процедура ХарактеристикиПриИзменении(Элемент)
	Модифицированность = Истина;
	ПроверитьКоличество();
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не Копирование Тогда
		Отказ = Истина;
		ТекущиеДанные = Элементы.МатериалыНоменклатура.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		НоваяСтрока = Характеристики.Добавить();
		НоваяСтрока.НомерСтроки = Характеристики.Количество()+1;
		НоваяСтрока.КлючСвязи = ТекущиеДанные.КлючСвязи;
		
		МатериалыНоменклатураПриАктивизацииСтроки(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.МатериалыНоменклатура.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиКоличествоПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Характеристики.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Характеристика) 
		И ТекущиеДанные.Количество >0 Тогда
		СтрокиНеРаспределенные = Характеристики.НайтиСтроки(Новый Структура("КлючСвязи,Характеристика",Элементы.МатериалыНоменклатура.ТекущиеДанные.КлючСвязи,ПредопределенноеЗначение("Справочник.си_ХарактеристикиСпецодеждыИИнвентаря.ПустаяСсылка")));
		СтрокиРаспределенные = Характеристики.НайтиСтроки(Новый Структура("КлючСвязи",Элементы.МатериалыНоменклатура.ТекущиеДанные.КлючСвязи));
		Распределено = 0;
		Для Каждого СтрокаРаспределенная Из СтрокиРаспределенные Цикл
			Если СтрокаРаспределенная.Характеристика <>ПредопределенноеЗначение("Справочник.си_ХарактеристикиСпецодеждыИИнвентаря.ПустаяСсылка")  Тогда
				Распределено = Распределено + СтрокаРаспределенная.Количество;
			КонецЕсли;
		КонецЦикла;
		Если СтрокиНеРаспределенные.Количество()>0 Тогда
			СтрокиНеРаспределенные[0].Количество = Макс(0,Элементы.МатериалыНоменклатура.ТекущиеДанные.Количество - Распределено);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьТаблицуИзХранилища() 
	
	ОбщаяТаблица = ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаМатериалы);
	
	ТЧМатериалы = ОбщаяТаблица.Скопировать();
	ТЧМатериалы.Свернуть("Номенклатура,ЕдиницаИзмерения,Коэффициент,КлючСвязи","Количество");
	ТЧМатериалы.Сортировать("Номенклатура");
	Материалы.Загрузить(ТЧМатериалы);
	
	НомерСтроки = 1;
	Для Каждого СтрокаТЧ Из ТЧМатериалы Цикл
		НайденныеСтроки = ОбщаяТаблица.НайтиСтроки(Новый Структура("Номенклатура, ЕдиницаИзмерения, Коэффициент,КлючСвязи",СтрокаТЧ.Номенклатура, СтрокаТЧ.ЕдиницаИзмерения, СтрокаТЧ.Коэффициент,СтрокаТЧ.КлючСвязи));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НоваяСтрока = Характеристики.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
			НоваяСтрока.КлючСвязи = СтрокаТЧ.КлючСвязи;
			НоваяСтрока.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	си_ХарактеристикиСпецодеждыИИнвентаря.Ссылка,
			|	си_ХарактеристикиСпецодеждыИИнвентаря.Наименование
			|ИЗ
			|	Справочник.си_ХарактеристикиСпецодеждыИИнвентаря КАК си_ХарактеристикиСпецодеждыИИнвентаря
			|ГДЕ
			|	си_ХарактеристикиСпецодеждыИИнвентаря.Владелец = &Ссылка
			|	И си_ХарактеристикиСпецодеждыИИнвентаря.Ссылка <> &Характеристика
			|	И си_ХарактеристикиСпецодеждыИИнвентаря.ПометкаУдаления = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	си_ХарактеристикиСпецодеждыИИнвентаря.Наименование";
			
			Запрос.УстановитьПараметр("Ссылка", СтрокаТЧ.Номенклатура);
			Запрос.УстановитьПараметр("Характеристика", НоваяСтрока.Характеристика);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				НоваяСтрока = Характеристики.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока,,"Количество");
				НоваяСтрока.Характеристика = ВыборкаДетальныеЗаписи.Ссылка;
				НоваяСтрока.КлючСвязи = СтрокаТЧ.КлючСвязи;
				НоваяСтрока.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет количество по номенклатуре и сумма количества по характеристикам.
// Если количества различаются, то меняется цвет текста подвала
//
&НаКлиенте
Процедура ПроверитьКоличество()
	
	ТекДанные = Элементы.МатериалыНоменклатура.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	ИтоговоеКоличествоМатериалы = ТекДанные.Количество;
	ИтоговоеКоличество = 0;
	Для Каждого СтрокаТЧ Из Характеристики Цикл
		Если СтрокаТЧ.КлючСвязи = ТекДанные.КлючСвязи Тогда
			ИтоговоеКоличество = ИтоговоеКоличество + СтрокаТЧ.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Если ИтоговоеКоличество = ИтоговоеКоличествоМатериалы Тогда
		Элементы.ХарактеристикиКоличество.ЦветТекстаПодвала = ЦветТекстаПоля;
	Иначе
		Элементы.ХарактеристикиКоличество.ЦветТекстаПодвала = ЦветОтрицательногоЧисла;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьКоличество()

&НаКлиенте
Процедура ПослеЗакрытияВопросаПередЗакрытием(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		ФормаЗакрыта = Истина;
		//Оповестить("ЗакрытиеФормыИзмененияХарактеристик");
		Закрыть();
	ИначеЕсли  Результат = КодВозвратаДиалога.Нет Тогда
		ФормаЗакрыта = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииФормыНаСервере()
	
	Если ПеренестиВДокумент Тогда
		ТаблицаМатериалы = СформироватьТаблицуДляПереносаВДокумент();
		ПоместитьВоВременноеХранилище(ТаблицаМатериалы, АдресХранилищаМатериалы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуДляПереносаВДокумент()
	
	МатериалыДокумента.Очистить();
	Для Каждого СтрокаТЧ Из Материалы Цикл
		НайденныеСтроки = Характеристики.НайтиСтроки(Новый Структура("КлючСвязи",СтрокаТЧ.КлючСвязи));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если НайденнаяСтрока.Количество=0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = МатериалыДокумента.Добавить();
			НоваяСтрока.Номенклатура 		= СтрокаТЧ.Номенклатура;
			НоваяСтрока.Характеристика		= НайденнаяСтрока.Характеристика;
			НоваяСтрока.ЕдиницаИзмерения	= СтрокаТЧ.ЕдиницаИзмерения;
			НоваяСтрока.Количество			= НайденнаяСтрока.Количество;
			НоваяСтрока.Коэффициент			= СтрокаТЧ.Коэффициент;
			НоваяСтрока.СчетУчетаБУ			= НайденнаяСтрока.СчетУчетаБУ;
			НоваяСтрока.СчетУчетаНУ			= НайденнаяСтрока.СчетУчетаНУ;
			НоваяСтрока.КлючСвязи			= СтрокаТЧ.КлючСвязи;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат МатериалыДокумента.Выгрузить();
	
КонецФункции

#КонецОбласти




