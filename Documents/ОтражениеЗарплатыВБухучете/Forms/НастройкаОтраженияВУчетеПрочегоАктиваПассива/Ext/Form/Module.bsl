
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
   	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,ТолькоПросмотр");
	
	СтруктураПараметров = ИзменяемыеРеквизиты(Параметры);
	
	ЭтотОбъект.ЗначенияПриОткрытии = СтруктураПараметров;
	
	МассивЭлементов = Новый Массив();
	
	Для Каждого ЭлементСтруктуры из СтруктураПараметров Цикл
		МассивЭлементов.Добавить(ЭлементСтруктуры.Ключ);
	КонецЦикла;

	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

    Если ЗавершениеРаботы И Модифицированность Тогда
    	Отказ = Истина;
    	Возврат;
    ИначеЕсли  Модифицированность И НЕ ПеренестиВДокумент Тогда
    	Отказ = Истина;
    	ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
    	Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
    	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
    КонецЕсли;
    
    Если Отказ Тогда
    	ПеренестиВДокумент = Ложь;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
    Если ПеренестиВДокумент И Модифицированность Тогда
        
        СтруктураРезультат = Новый Структура();
        
        СтруктураРезультат.Вставить("СчетУчета",    ЭтотОбъект.СчетУчета);
        СтруктураРезультат.Вставить("Субконто1",    ЭтотОбъект.Субконто1);
        СтруктураРезультат.Вставить("Субконто2",    ЭтотОбъект.Субконто2);
        СтруктураРезультат.Вставить("Субконто3",    ЭтотОбъект.Субконто3);
        
        ОповеститьОВыборе(СтруктураРезультат);
        
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетУчетаПриИзменении(Элемент)
	
	ПоляФормы		= Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
    
   	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриИзмененииСчета(ЭтотОбъект.СчетУчета, ЭтотОбъект, ПоляФормы);

	ЗаголовкиПолей	= Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3"); 
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, СчетУчета, ПоляФормы, ЗаголовкиПолей);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "СчетУчета");
    
    ДанныеОбъекта = Новый Структура("Организация, Субконто1, Субконто2, Субконто3");

    СчетУчетаПриИзмененииНаСервере(ДанныеОбъекта);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеОбъекта);

КонецПроцедуры

&НаКлиенте
Процедура Субконто1ПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "СчетУчета");	
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2ПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "СчетУчета");	
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3ПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "СчетУчета");	
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СубконтоНачалоВыбора(Элемент, "Субконто", 1, "СчетУчета", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СубконтоНачалоВыбора(Элемент, "Субконто", 2, "СчетУчета", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СубконтоНачалоВыбора(Элемент, "Субконто", 3, "СчетУчета", СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	НастройкаОтраженияВРеглУчете = Новый Структура;
	НастройкаОтраженияВРеглУчете.Вставить("СчетУчета", СчетУчета);
	НастройкаОтраженияВРеглУчете.Вставить("Субконто1", Субконто1);
	НастройкаОтраженияВРеглУчете.Вставить("Субконто2", Субконто2);
	НастройкаОтраженияВРеглУчете.Вставить("Субконто3", Субконто3);
	
	Закрыть(НастройкаОтраженияВРеглУчете);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
    
    ПоляФормы		= Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	
	ЗаголовкиПолей	= Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3"); 
		
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, СчетУчета, ПоляФормы, ЗаголовкиПолей);
	
КонецПроцедуры

#Область Прочее

&НаСервереБезКонтекста
Процедура СчетУчетаПриИзмененииНаСервере(ДанныеОбъекта)

	ПроцедурыБухгалтерскогоУчета.ПроверитьВладельцаСубконтоПодразделение(ДанныеОбъекта, 
							ДанныеОбъекта.Организация, 
							Новый Структура("НазваниеСубконтоБУ1, НазваниеСубконтоБУ2, НазваниеСубконтоБУ3, 
											|СубконтоБУ1, СубконтоБУ2, СубконтоБУ3",
											"Субконто1", "Субконто2", "Субконто3", 
											ДанныеОбъекта.Субконто1, ДанныеОбъекта.Субконто2, ДанныеОбъекта.Субконто3));
															
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, СчетУчета, ПоляФормы, ЗаголовкиПолей, СчетУчетаНУ = Неопределено)

	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриВыбореСчета(СчетУчета, ЭтаФорма, ПоляФормы, ЗаголовкиПолей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, ИмяСчета, ИмяТабличнойЧасти = "", ЗаменаСубконтоНУ = Ложь)
    
    ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма, Форма.ЭтотОбъект, "Субконто%Индекс%", ИмяСчета);
    ПроцедурыБухгалтерскогоУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(Форма, Форма.ЭтотОбъект, "Субконто%Индекс%", "Субконто%Индекс%", ПараметрыДокумента);	
    
КонецПроцедуры

&НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ИмяЭлементаСубконто, ИндексСубконто, ИмяЭлементаСчета, СтандартнаяОбработка)
	
	СписокПараметров = СписокПараметровВыбораСубконто(ЭтаФорма, ЭтотОбъект, ИмяЭлементаСубконто + "%Индекс%", ИмяЭлементаСчета);
   	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, ЭтотОбъект, ИмяЭлементаСубконто + "%Индекс%", ИмяЭлементаСубконто + "%Индекс%", СписокПараметров);	
	ПроцедурыБухгалтерскогоУчетаКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, ИндексСубконто, СтандартнаяОбработка, СписокПараметров);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта, ИмяСчета)

	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ПроцедурыБухгалтерскогоУчетаКлиентСерверПереопределяемый.ПолучитьОписаниеТиповДоговора().СодержитТип(ТипЗнч(ПараметрыОбъекта[ИмяПоля])) Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("СчетУчета", ПараметрыОбъекта[ИмяСчета]);	
	СписокПараметров.Вставить("Организация", Форма.ЭтотОбъект.Организация);

	Возврат СписокПараметров;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
	
	СтруктураПараметров = Новый Структура();
	
	СтруктураПараметров.Вставить("СчетУчета", 	Источник.СчетУчета);
	СтруктураПараметров.Вставить("Субконто1",   Источник.Субконто1);
	СтруктураПараметров.Вставить("Субконто2",   Источник.Субконто2);
	СтруктураПараметров.Вставить("Субконто3",   Источник.Субконто3);
				
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#КонецОбласти
