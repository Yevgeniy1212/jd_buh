#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПредоставлениеВычета = Перечисления.ВидыПредоставленияВычетов.ПоИсчисленнойСуммеВзносов Тогда	
		ПроверяемыеРеквизиты.Добавить("ВидВзносов");
	КонецЕсли;	
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	Если НеИспользуется Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Приоритет");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		
КонецПроцедуры
	
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		ОсвободитьПриоритеты(Отказ);
	ИначеЕсли Приоритет = 0 Тогда
		Приоритет = Справочники.ВычетыИПН.МаксимальныйПриоритет() + 1;
	Иначе
		ПроверитьУникальностьПриоритета(Отказ);
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ПроверитьУникальностьПриоритета(Отказ)
	Запрос 			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВычетыИПН.Ссылка КАК Вычет
	|ИЗ
	|	Справочник.ВычетыИПН КАК ВычетыИПН
	|ГДЕ
	|	ВычетыИПН.Приоритет = &ТекущийПриоритет
	|	 И ВычетыИПН.Ссылка <> &ЗаписываемыЭлемент
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыИПН.Ссылка";
	
	Запрос.УстановитьПараметр("ТекущийПриоритет"	, Приоритет);
	Запрос.УстановитьПараметр("ЗаписываемыЭлемент"	, Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ТекстСообщения = НСтр("ru = 'Приоритет %1 уже установлен!!! '");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Приоритет); 
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ЭтоНовый() Тогда
		Приоритет = Справочники.ВычетыИПН.МаксимальныйПриоритет() + 1;
	КонецЕсли;	
КонецПроцедуры

Процедура ОсвободитьПриоритеты(Отказ)
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВычетыИПН.Ссылка КАК Вычет,
	|	ВычетыИПН.Приоритет КАК Приоритет,
	|	ВычетыИПН.Представление
	|ИЗ
	|	Справочник.ВычетыИПН КАК ВычетыИПН
	|ГДЕ
	|	ВычетыИПН.Приоритет <> 0
	|	И ВычетыИПН.Ссылка <> &ЗаписываемыЭлемент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Запрос.УстановитьПараметр("ЗаписываемыЭлемент"	, Ссылка);
	ВыборкаЗапроса 		= Запрос.Выполнить().Выбрать();
	ПриоритетПоПорядку 	= 1;
	НачатьТранзакцию();
	Попытка
		Приоритет = 0;
		ЭтотОбъект.ОбменДанными.Загрузка = Истина;
		ЭтотОбъект.Записать();
		
		Пока ВыборкаЗапроса.Следующий() Цикл
			// Блокируем объект от изменения другими сеансами.
			Блокировка 			= Новый БлокировкаДанных;
			ЭлементБлокировки 	= Блокировка.Добавить("Справочник.ВычетыИПН");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаЗапроса.Вычет);
			Блокировка.Заблокировать();
			
			Вычет 			= ВыборкаЗапроса.Вычет.ПолучитьОбъект();
			Вычет.Приоритет = ПриоритетПоПорядку;
			Вычет.ОбменДанными.Загрузка = Истина;
			Вычет.Записать();
			ПриоритетПоПорядку = ПриоритетПоПорядку + 1;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Обновление приоритетов справочников'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект.Метаданные(),
			Ссылка,ИнформацияОбОшибке());
		ТекстОшибки = НСтр("ru = 'При обновлении приоритетов справочника возникла ошибка, см. ""Журнал регистрации"".'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, , , ,Отказ);
	КонецПопытки;
	
КонецПроцедуры

#КонецЕсли

Процедура ПриКопировании(ОбъектКопирования)
	Приоритет = Справочники.ВычетыИПН.МаксимальныйПриоритет() + 1;	
КонецПроцедуры



