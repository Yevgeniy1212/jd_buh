#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	

	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОБНОВЛЕНИЯ

Процедура ПерезаполнитьОпциюИспользоватьНесколькоКасс(Организация, УстановитьЗначение = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.ИспользоватьНесколькоКассОрганизации.СоздатьМенеджерЗаписи();
	Запись.Организация  = Организация;
	Запись.Используется = ?(УстановитьЗначение <> Неопределено, УстановитьЗначение, Истина);
	Запись.Записать(); 
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ИспользуетсяНесколькоКасс(Организация) Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКассОрганизации", Новый Структура("Организация", Организация));
	
КонецФункции

Функция КоличествоКасс(Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Справочник.Кассы КАК Кассы
	|ГДЕ
	|	Кассы.Владелец = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	
	Возврат Количество;
	
КонецФункции

Процедура ПроверитьЗначениеОпцииИспользоватьНесколькоКасс(Организация, ПометкаУдаления = Ложь, ЭтоНовый = Неопределено) Экспорт
	
	ДолжныИспользоваться = ПометкаУдаления ИЛИ КоличествоКасс(Организация) > 1;
    Если ДолжныИспользоваться Тогда
        ПерезаполнитьОпциюИспользоватьНесколькоКасс(Организация);
	Иначе
		Если ЭтоНовый <> Неопределено Тогда
			ПерезаполнитьОпциюИспользоватьНесколькоКасс(Организация, Ложь);
		КонецЕсли;			
	КонецЕсли;

КонецПроцедуры

// Возвращает Основную кассу организации или структурного подразделения
Функция КассаПоУмолчанию(ДанныеОбъекта) Экспорт
	
	МетаданныеДокумента = ДанныеОбъекта.Ссылка.Метаданные();
	
	КассаПоУмолчанию = Справочники.Кассы.ПустаяСсылка();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКассОрганизации", Новый Структура("Организация", ДанныеОбъекта.Организация)) Тогда
		
		Если МетаданныеДокумента.Имя = "ПлатежноеПоручениеВходящее" 
			ИЛИ МетаданныеДокумента.Имя = "ПлатежныйОрдерПоступлениеДенежныхСредств"
			ИЛИ МетаданныеДокумента.Имя = "ПриходныйКассовыйОрдер" Тогда
			
			ИмяРеквизитаСП = "СтруктурноеПодразделениеПолучатель";
		ИначеЕсли МетаданныеДокумента.Имя = "ПлатежноеПоручениеИсходящее"
			ИЛИ МетаданныеДокумента.Имя = "ПлатежныйОрдерСписаниеДенежныхСредств"
			ИЛИ МетаданныеДокумента.Имя = "РасходныйКассовыйОрдер" Тогда
			
			ИмяРеквизитаСП = "СтруктурноеПодразделениеОтправитель";
		Иначе 
			ИмяРеквизитаСП = "СтруктурноеПодразделение";
		КонецЕсли;
		
		Если ОбщегоНазначенияБК.ЕстьРеквизитДокумента(ИмяРеквизитаСП, МетаданныеДокумента) Тогда
			
			Если ЗначениеЗаполнено(ДанныеОбъекта[ИмяРеквизитаСП]) Тогда
				// Касса структурного подразделения
				КассаПоУмолчанию = ДанныеОбъекта[ИмяРеквизитаСП].ОсновнаяКасса;
			Иначе
				// Касса структурного организации
				КассаПоУмолчанию = ДанныеОбъекта.Организация.ОсновнаяКасса;
			КонецЕсли;
		КонецЕсли;	
		
		// При использовании RLS у пользователя может не быть прав на полученную кассу.
		// Отсутствие прав на кассу приведет к модульной ошибке при обращении к ее реквизитам.
		// Поэтому код ниже проверяет, что у пользователя есть права на данную кассу. 	
		Если НЕ КассаПоУмолчанию.Пустая() Тогда
			Попытка
				КассаПоУмолчанию.ПолучитьОбъект();
			Исключение
				КассаПоУмолчанию = Справочники.Кассы.ПустаяСсылка();
			КонецПопытки;
		КонецЕсли;
			
	Иначе
					
		КассаПоУмолчанию = ПолучитьКассуПоУмолчаниюПриОтключеннойОпцииИспользоватьНесколькоКасс(ДанныеОбъекта.Организация);
		
	КонецЕсли;
	
	Возврат КассаПоУмолчанию;
	
КонецФункции

// Если Не ФО "ИспользоватьНесколькоКассОрганизации", нужно проверить правильность установки константы
Функция ПолучитьКассуПоУмолчаниюПриОтключеннойОпцииИспользоватьНесколькоКасс(Организация) Экспорт
	
	КассаПоУмолчанию = Справочники.Кассы.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	Кассы.Ссылка КАК Касса
	|ИЗ
	|	Справочник.Кассы КАК Кассы
	|ГДЕ
	|	Кассы.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Организация);
	
	Результат = Запрос.Выполнить();
	
	ИсправитьЗначениеФункциональнойОпции = Ложь;
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Если Выборка.Количество() = 1 Тогда
			Если Выборка.Следующий() Тогда
				КассаПоУмолчанию = Выборка.Касса;
			КонецЕсли;
		Иначе
			ИсправитьЗначениеФункциональнойОпции = Истина;
			// Значение функциональной опции не соответствует состоянию ИБ
		КонецЕсли;
	Иначе
		ИсправитьЗначениеФункциональнойОпции = Ложь;
	КонецЕсли;
	
	Если ИсправитьЗначениеФункциональнойОпции Тогда 
		// Значение функциональной опции не соответствует состоянию ИБ
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение кассы по умолчанию'", ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,
		Метаданные.РегистрыСведений.ИспользоватьНесколькоКассОрганизации,,
		НСтр("ru = 'Исправлено некорректное значение константы ""Использовать несколько касс""'"));
		
		ПерезаполнитьОпциюИспользоватьНесколькоКасс(Организация);
	КонецЕсли;

	Возврат КассаПоУмолчанию;
	
КонецФункции

Функция КоличествоКассОрганизации(Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Справочник.Кассы КАК Кассы
	|ГДЕ
	|	Кассы.Владелец = &Организация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	
	Возврат Количество;
	
КонецФункции

Процедура УстановитьОсновнуюКассу(Владелец, Касса) Экспорт
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Организации")
		И НЕ ПравоДоступа("Изменение", Метаданные.Справочники.Организации) Тогда
		Возврат;
	КонецЕсли;
	
	КонтрагентОрганизацияОбъект = Владелец.ПолучитьОбъект();
	
	УстановитьОсновнуюКассу = Истина;
	
	Попытка
		КонтрагентОрганизацияОбъект.Заблокировать();
	Исключение
		// в случае блокировки - не выполнять изменение объекта
		УстановитьОсновнуюКассу = Ложь;
		// записать предупреждение в журнал регистрации
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось заблокировать объект.'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Предупреждение,, КонтрагентОрганизацияОбъект, ОписаниеОшибки());
	КонецПопытки;
	
	Если УстановитьОсновнуюКассу Тогда
		КонтрагентОрганизацияОбъект.ОсновнаяКасса = Касса;
		КонтрагентОрганизацияОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли
