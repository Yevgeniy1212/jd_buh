////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьСведенияОДатеАктуализации();
	ИспользоватьОбменВС = ПолучитьФункциональнуюОпцию("ИспользоватьОбменВС");
	Если ЭтаФорма.Элементы.Найти("ФормаСправочникНоменклатураГСВСЗагрузитьСправочник") <> Неопределено Тогда
		ЭтаФорма.Элементы.ФормаСправочникНоменклатураГСВСЗагрузитьСправочник.Видимость = ИспользоватьОбменВС;
	КонецЕсли;
	Если ЭтаФорма.Элементы.Найти("ФормаСправочникНоменклатураГСВСЗагрузитьСправочникПолностью") <> Неопределено Тогда
		ЭтаФорма.Элементы.ФормаСправочникНоменклатураГСВСЗагрузитьСправочникПолностью.Видимость = ИспользоватьОбменВС;
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КлючУникальности = Новый УникальныйИдентификатор;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВС_ПроверятьОповещенияФоновогоЗадания"
		И ЭтаФорма.КлючУникальности = Источник Тогда
		
		ВСКлиентПереопределяемый.ОбработкаОповещенияВС_ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, Параметр);
		
		ЗаполнитьСведенияОДатеАктуализации();
		
	ИначеЕсли ИмяСобытия = "ЗагрузкаГСВС_ПроверятьОповещенияФоновогоЗадания" И ЭтаФорма.КлючУникальности = Источник Тогда
		
		РезультатРаботыЗадания = Параметр;
		
		Если РезультатРаботыЗадания.ЗаданиеВыполнено Тогда
			
			АдресСообщенияПользователю = ЭСФВызовСервера.СообщенияФоновогоЗадания(РезультатРаботыЗадания.ИдентификаторЗадания);
			СообщенияПользователю = ПолучитьИзВременногоХранилища(АдресСообщенияПользователю);
			Если СообщенияПользователю <> Неопределено Тогда
				Для каждого СообщениеФоновогоЗадания Из СообщенияПользователю Цикл
					СообщениеФоновогоЗадания.Сообщить();
				КонецЦикла;
			КонецЕсли;
			
			Оповестить("ЗагрузкаГСВС_Выполнена", Параметр, ЭтаФорма.КлючУникальности);
		Иначе
		
			ПараметрыДлительнойОперации = Новый Структура;
			ПараметрыДлительнойОперации.Вставить("ИдентификаторЗадания");
			ПараметрыДлительнойОперации.Вставить("ВыводитьОкноОжидания", Истина);
			ПараметрыДлительнойОперации.Вставить("АдресРезультата", РезультатРаботыЗадания.АдресХранилища);
			ПараметрыДлительнойОперации.Вставить("ВыводитьСообщения", Истина);
			
			Если РезультатРаботыЗадания.Свойство("ТекстСообщения") Тогда
				ПараметрыДлительнойОперации.Вставить("ТекстСообщения", РезультатРаботыЗадания.ТекстСообщения);
			КонецЕсли;
			
			ПараметрыДлительнойОперации.ИдентификаторЗадания = РезультатРаботыЗадания.ИдентификаторЗадания;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОповеститьОЗавершениияДлительнойОперации_ЗагрузкаГСВС", ЭтотОбъект, ЭтаФорма);
			
			ОткрытьФорму("Обработка.ОбменЭСФ.Форма.ДлительнаяОперация", ПараметрыДлительнойОперации, ЭтаФорма,,,, ОписаниеОповещения);
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ЗагрузкаГСВС_Выполнена" И ЭтаФорма.КлючУникальности = Источник Тогда
		
		Если Вопрос(НСтр("ru='Выполнена загрузка ГСВС. Обработать элементы номенклатуры, с изменившимися кодами ТН ВЭД?'"), РежимДиалогаВопрос.ДаНет, , , НСтр("ru='Загрузка ГСВС'")) = КодВозвратаДиалога.Да Тогда
			
			ОткрытьФорму("Обработка.АктуализацияКодовТНВЭДПоГСВС.Форма.ФормаАктуализацииКодов");
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершениияДлительнойОперации_ЗагрузкаГСВС(Результат, Источник) Экспорт

	Оповестить("ЗагрузкаГСВС_Выполнена", Результат, Источник.КлючУникальности);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТехническаяИнформацияОбОбновленииНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СобытиеЖурналаРегистрации", "ОбменЭСФ.ЗагрузитьСправочникГСВС");	

	ВСКлиентПереопределяемый.ОткрытьФормуЖурналаРегистрации(ПараметрыФормы);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаСервере
Процедура ЗаполнитьСведенияОДатеАктуализации()
	ПараметрыМетодаСинхронизации = ЭСФСервер.ПолучитьПараметрыМетода(Неопределено, ВРег("gsvsUpdates"), Неопределено);	
	Если ПараметрыМетодаСинхронизации.Свойство("lastUpdateDate") и ЗначениеЗаполнено(ПараметрыМетодаСинхронизации.lastUpdateDate) Тогда
		ДатаАктуализации = ПараметрыМетодаСинхронизации.lastUpdateDate
	Иначе
		ДатаАктуализации = Неопределено;
	КонецЕсли;	
КонецПроцедуры

