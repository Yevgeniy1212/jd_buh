////////////////////////////////////////////////////////////////////////////////
// Описание формы
// Параметры фомры:
//  Ссылка - СправочникСсылка.ДокументыУдостоверяющиеЛичность -В параметре находится найденная ссылка на элемент справочника
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Макет = Справочники.ДокументыУдостоверяющиеЛичность.ПолучитьМакет("КлассификаторВидовДокументов");

	Макет.Параметры.Расшифровка = Истина; // чтобы работала расшифровка
	
	ПолеТабличногоДокумента.Очистить();
	ПолеТабличногоДокумента.Вывести(Макет);

	ПолеТабличногоДокумента.ФиксацияСверху      = 3;

	ПолеТабличногоДокумента.ОтображатьЗаголовки = Ложь;
	ПолеТабличногоДокумента.ОтображатьСетку     = Ложь;
	ПолеТабличногоДокумента.ТолькоПросмотр      = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	// Получение значений полей выбранной строки.
	ТабличныйДокумент = ПолеТабличногоДокумента;
	ТекущаяОбласть    = Элемент.ТекущаяОбласть;
	
	
	ОбластьКод	        = ТабличныйДокумент.Области.Код;
	ОбластьНаименование = ТабличныйДокумент.Области.Наименование;
	ОбластьВидДокумента = ТабличныйДокумент.Области.КодВидаДокументаВНалоговойОтчетности;
	ОбластьПримечание   = ТабличныйДокумент.Области.Примечание;
	
	Код	         = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьКод.         Лево, ТекущаяОбласть.Низ, ОбластьКод.         Право).Текст;
	Наименование = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьНаименование.Лево, ТекущаяОбласть.Низ, ОбластьНаименование.Право).Текст;
	ВидДокумента = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьВидДокумента.Лево, ТекущаяОбласть.Низ, ОбластьВидДокумента.Право).Текст;
	Примечание   = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьПримечание.  Лево, ТекущаяОбласть.Низ, ОбластьПримечание.  Право).Текст;
	
	//Проверка наличия выбранного элемента.
	
	Ссылка = ПроверитьНаименование(Наименование);
	
	Если Ссылка.Пустая() Тогда 
			
		ФормаНовогоЭлемента = ПолучитьФорму("Справочник.ДокументыУдостоверяющиеЛичность.ФормаОбъекта");
	
		ФормаНовогоЭлемента.Объект.Наименование 						= Наименование;
		ФормаНовогоЭлемента.Объект.Код		     						= Код;
		ФормаНовогоЭлемента.Объект.КодВидаДокументаВНалоговойОтчетности = ВидДокумента;
	
		ФормаНовогоЭлемента.Открыть();

	Иначе 
		
		
		ПараметрыПроцедуры = Новый Структура;
		ПараметрыПроцедуры.Вставить("Ссылка", Ссылка);
	
		Режим	   = РежимДиалогаВопрос.ДаНетОтмена;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, ПараметрыПроцедуры);
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'В справочнике ""Документы, удостоверяющие личность"" уже существует элемент с наименованием ""%1""! Открыть существующий?'"), Наименование);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ПроверитьНаименование(Наименование)
	
	Возврат Справочники.ДокументыУдостоверяющиеЛичность.НайтиПоНаименованию(Наименование);
	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, ПараметрыПроцедуры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПараметрыОткрытияФормы = Новый Структура("Ключ", ПараметрыПроцедуры.Ссылка);

		ФормаЭлементаСправочника = ПолучитьФорму("Справочник.ДокументыУдостоверяющиеЛичность.ФормаОбъекта", ПараметрыОткрытияФормы);
		
		ФормаЭлементаСправочника.Открыть();

		Возврат;

	ИначеЕсли Результат = КодВозвратаДиалога.Отмена ИЛИ Результат = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
		
	КонецЕсли;

КонецПроцедуры
