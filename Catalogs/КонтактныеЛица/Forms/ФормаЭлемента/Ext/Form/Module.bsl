
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства	
	
	Если Параметры.Ключ.Пустая() Тогда
		Если ТипЗнч(Объект.ОбъектВладелец) = Тип("СправочникСсылка.Контрагенты") Тогда
			Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
		КонецЕсли;
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("Запись_КонтактноеЛицо", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр)Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВидКонтактногоЛицаПриИзменении(Элемент)
	
	ПриИзмененииВидаКонтактногоЛица(ЭтотОбъект);
	ДоступностьОтветственного(ЭтотОбъект);
	ВидимостьДополнительнойИнформации(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтактногоЛицаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектВладелецПриИзменении(Элемент)
	
	ПриИзмененииВидаКонтактногоЛица(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	ПозицииПробелов = ОпределитьПозицииПробелов(Объект.Наименование);

	Если ПозицииПробелов[0] > 0 Тогда

		ФамилияИзНаименования = Сред(Объект.Наименование, 1, (ПозицииПробелов[0] - 1));

		Если ФамилияИзНаименования <> ТекущаяФамилия И НЕ ПустаяСтрока(ФамилияИзНаименования) Тогда

			ТекущаяФамилия = СокрЛП(Объект.Фамилия);
			Возврат;

		КонецЕсли;

		Объект.Наименование = СокрЛП(Объект.Фамилия) + Сред(Объект.Наименование, ПозицииПробелов[0]);

	Иначе

		Если ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = СокрЛП(Объект.Фамилия);

		Иначе

			Если СокрЛП(Объект.Наименование) = ТекущаяФамилия Тогда

				Объект.Наименование = СокрЛП(Объект.Фамилия);

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	ТекущаяФамилия = СокрЛП(Объект.Фамилия);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	ПозицииПробелов = ОпределитьПозицииПробелов(Объект.Наименование);

	Если ПозицииПробелов[0] > 0 И ПозицииПробелов[1] > 0 Тогда

		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1), (ПозицииПробелов[1] - ПозицииПробелов[0] - 1));

		Если ИмяИзНаименования <> ТекущееИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда

			ТекущееИмя = СокрЛП(Объект.Имя);
			Возврат;

		КонецЕсли;

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Объект.Имя) + Сред(Объект.Наименование, ПозицииПробелов[1]);

	ИначеЕсли ПозицииПробелов[0] > 0 Тогда

		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1));

		Если ИмяИзНаименования <> ТекущееИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда

			ТекущееИмя = СокрЛП(Объект.Имя);
			Возврат;

		КонецЕсли; 

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Объект.Имя);

	Иначе

		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Объект.Имя);

		Иначе

			Объект.Наименование = " " + СокрЛП(Объект.Имя);

		КонецЕсли; 

	КонецЕсли;

	ТекущееИмя = СокрЛП(Объект.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	ПозицииПробелов = ОпределитьПозицииПробелов(Объект.Наименование);

	Если ПозицииПробелов[1] > 0 Тогда

		ОтчествоИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[1] + 1));

		Если ОтчествоИзНаименования <> ТекущееОтчество И НЕ ПустаяСтрока(ОтчествоИзНаименования) Тогда

			ТекущееОтчество = СокрЛП(Объект.Отчество);
			Возврат;

		КонецЕсли;

		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[1]) + СокрЛП(Объект.Отчество);

	Иначе

		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда

			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Объект.Отчество);

		Иначе

			Объект.Наименование = "  " + СокрЛП(Объект.Отчество);

		КонецЕсли;

	КонецЕсли;

	ТекущееОтчество = СокрЛП(Объект.Отчество);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Ожидание = 0;
	
	// Формирование списка выбора.
	ДанныеВыбора = Новый СписокЗначений();
	Если НЕ ПустаяСтрока(Объект.Фамилия) Тогда
		ДанныеВыбора.Добавить(СокрЛП(Объект.Фамилия));
	КонецЕсли;

	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) Тогда
		ДанныеВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя)));
		ДанныеВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "."));
	КонецЕсли;

	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) И НЕ ПустаяСтрока(Объект.Отчество) Тогда
		ДанныеВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя) + " " + СокрЛП(Объект.Отчество)));
		ДанныеВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "." + СокрЛП(Сред(Объект.Отчество,1,1)) + "."));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура("ФормаВладелец,ИмяРеквизита", ЭтаФорма, "Описание");
	Оповещение = Новый ОписаниеОповещения("ОписаниеЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(Оповещение, Объект.Описание, НСтр("ru='Прочая информация'"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПриИзмененииВидаКонтактногоЛица(ЭтотОбъект);
	ДоступностьОтветственного(ЭтотОбъект);
	ВидимостьДополнительнойИнформации(ЭтотОбъект);
	
	ТекущаяФамилия  = Объект.Фамилия;
	ТекущееИмя      = Объект.Имя;
	ТекущееОтчество = Объект.Отчество;

	// Установим ЭУ по умолчанию
	Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.ВидКонтактногоЛица;

	ИначеЕсли Объект.ВидКонтактногоЛица = Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента 
			И НЕ ЗначениеЗаполнено(Объект.ОбъектВладелец) Тогда

		ЭтаФорма.ТекущийЭлемент = Элементы.ОбъектВладелец;

	Иначе
		ЭтаФорма.ТекущийЭлемент = Элементы.Фамилия;

	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииВидаКонтактногоЛица(Форма)

	Объект = Форма.Объект;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
		Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт");
	КонецЕсли;

	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда

		Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Контрагенты") Тогда
			Объект.ОбъектВладелец = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		КонецЕсли;

	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт") Тогда

		Если Объект.ОбъектВладелец <> ПользователиКлиентСервер.ТекущийПользователь() Тогда
			Объект.ОбъектВладелец = ПользователиКлиентСервер.ТекущийПользователь();
		КонецЕсли;

	Иначе

		Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Пользователи") Тогда
			Объект.ОбъектВладелец = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДоступностьОтветственного(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда

		Элементы.ОбъектВладелец.Заголовок   = НСтр("ru = 'Контрагент:'");
		Элементы.ОбъектВладелец.Доступность = Истина;
		Элементы.ОбъектВладелец.ТолькоПросмотр = Ложь;

	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт") Тогда

		Элементы.ОбъектВладелец.Заголовок   = НСтр("ru = 'Ответственный:'");
		Элементы.ОбъектВладелец.Доступность = Ложь;
		Элементы.ОбъектВладелец.ТолькоПросмотр = Истина;

	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо") Тогда

		Элементы.ОбъектВладелец.Заголовок   = НСтр("ru = 'Ответственный:'");
		Элементы.ОбъектВладелец.Доступность = Истина;
		Элементы.ОбъектВладелец.ТолькоПросмотр = Ложь;

	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьДополнительнойИнформации(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда
		Элементы.ГруппаДополнительнаяИнформация.Видимость = Истина;
	Иначе
		Элементы.ГруппаДополнительнаяИнформация.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
// Функция определяет номера позиций пробелов в строке реквизита Наименование
//
// Параметры
//  НЕТ
//
// Возвращаемое значение
//  Массив, числа - позиции пробелов в строке
//
Функция ОпределитьПозицииПробелов(Наименование)

	Пробелы = Новый Массив;

	Для а = 1 По 2 Цикл

		Пробелы.Добавить(0);

	КонецЦикла; 

	КолПробелов = 0;

	Для а = 1 По СтрДлина(Наименование) Цикл

		Если Сред(Наименование, а, 1) = " " Тогда

			Пробелы[КолПробелов] = а;
			КолПробелов = КолПробелов + 1;

		КонецЕсли;

		Если КолПробелов = 2 Тогда

			Прервать;

		КонецЕсли;

	КонецЦикла;

	Возврат Пробелы;

КонецФункции

&НаКлиенте
Процедура ОписаниеЗавершениеВвода(ВыбранноеЗначение, Параметры) Экспорт

	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Объект.Описание = ВыбранноеЗначение;
		
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства 

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

