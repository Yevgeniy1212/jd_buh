#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства	
	
	Если Объект.Ссылка.Пустая() Тогда
		//заполнение реквизитов новой номенклатуры по параметрам
		Если Параметры.Свойство("НоменклатурнаяГруппа") Тогда
			Объект.НоменклатурнаяГруппа = Параметры.НоменклатурнаяГруппа;
		КонецЕсли;
		Если Параметры.Свойство("Родитель") Тогда
			Объект.Родитель = Параметры.Родитель;
		КонецЕсли;
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	НастроитьЭлементыУправленияРаботаСНоменклатурой();
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПолучитьЗначениеЦеныПродажи();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПодготовитьФормуНаСервере();
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	РаботаСНоменклатурой.ПерезаполнитьВстроенныеРеквизиты(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ФормаВыбораИзКлассификатора") Тогда
		
		Если ВРег(ИсточникВыбора.ИмяМакета) = ВРег("КодыКПВЭД") Тогда
			
			Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда 
				Объект.КодКПВЭД = ВыбранноеЗначение;
			Иначе 
				Объект.КодКПВЭД 									  = ВыбранноеЗначение.КодСтроки;
				Элементы.ДекорацияРасшифровкаКодСтрокиКПВЭД.Заголовок = ВыбранноеЗначение.Наименование;
			КонецЕсли;
		КонецЕсли;
		
		Модифицированность = Истина;
		
	ИначеЕсли  ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.НоменклатураГСВС.Форма.ФормаВыбора") Тогда
		
		УстановитьКодТНВЭД(ВыбранноеЗначение);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	РаботаСНоменклатуройКлиент.ПослеЗаписиФормаНоменклатуры(ЭтотОбъект);
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
	ПараметрыЗаписи.Вставить("НоменклатурнаяГруппа", Объект.НоменклатурнаяГруппа);
	Оповестить("Запись_Номенклатура", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыПодключаемогоОборудования = "СканерШтрихкода";
		
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(
			Неопределено,
			ЭтотОбъект,
			ПоддерживаемыеТипыПодключаемогоОборудования);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ИдентификаторСервиса) Тогда
		ДанныеОбъекта = Новый Структура("Идентификатор", ИдентификаторСервиса);
		ПодготовитьПараметрыЗаполненияФормыНоменклатуры(ДанныеОбъекта);
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр)Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "Запись_КонстантаНастройкаЗаполненияЦеныПродажи" Тогда
		ИзменениеНаФорме();
	КонецЕсли;
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	Если ИмяСобытия = РаботаСНоменклатуройКлиент.ОписаниеОповещенийПодсистемы().ЗагрузкаНоменклатуры
		ИЛИ ИмяСобытия = РаботаСНоменклатуройКлиент.ОписаниеОповещенийПодсистемы().СопоставлениеНоменклатуры Тогда
		
		ПерезаполнитьВстроенныеРеквизиты();
	КонецЕсли;
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И Элементы.ГруппаЗаполнениеПоДаннымСервиса.Видимость Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ДанныеСоСканера = МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр);
			Если ДанныеСоСканера.Количество() > 0 Тогда
				НайтиЗаполнитьПоШтрихкоду(ДанныеСоСканера[0]);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства 

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
			
	ЗаписатьИзменениеЦеныВРегистр(ТекущийОбъект);	
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	РаботаСНоменклатурой.ПриЗаписиНаСервереФормаНоменклатуры(ЭтотОбъект, ТекущийОбъект, Отказ);
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	РаботаСНоменклатуройКлиент.ПередЗакрытиемФормыНоменклатуры(ЭтотОбъект, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка);
	// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УслугаПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если ФормироватьНаименованиеПолноеАвтоматически Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)
	
	УстановитьФлагФормироватьНаименованиеПолноеАвтоматически();

КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Список = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		Список.Добавить(Объект.НаименованиеПолное);
	КонецЕсли;
	Для каждого НаименованиеАвтозаполнения Из НаименованияАвтозаполнения Цикл
		ТекНаименование = НаименованиеАвтозаполнения.Значение;
		Если ЗначениеЗаполнено(ТекНаименование)	
			И Список.НайтиПоЗначению(ТекНаименование) = Неопределено Тогда
			Список.Добавить(ТекНаименование);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(Объект.Наименование)
		И Список.НайтиПоЗначению(Объект.Наименование) = Неопределено Тогда
		Список.Добавить(Объект.Наименование);
	КонецЕсли;

	Оповещение = Новый ОписаниеОповещения("НаименованиеПолноеНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(Оповещение, Список, Элементы.НаименованиеПолное);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.НаименованиеПолное = Результат.Значение;
		Модифицированность = Истина;
		ФормироватьНаименованиеПолноеАвтоматически = ПустаяСтрока(Объект.НаименованиеПолное)
			ИЛИ (Объект.НаименованиеПолное = Объект.Наименование);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодТНВЭДПриИзменении(Элемент)
	
	ОбновитьПредставлениеЭлемента("КодСтрокиТНВЭД");
	
	УправлениеФормой(ЭтотОбъект)
    	
КонецПроцедуры

&НаКлиенте
Процедура КодТНВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТипКодаГСВС", ПредопределенноеЗначение("Перечисление.ТипыКодовГСВС.ТНВЭД"));
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	ПараметрыФормы.Вставить("ТекущийКодТНВЭД"	  , ?(НЕ ЗначениеЗаполнено(Объект.КодТНВЭД), Неопределено, СокрЛП(Объект.КодТНВЭД)));
	
	ОткрытьФорму("Справочник.НоменклатураГСВС.ФормаВыбора", ПараметрыФормы, ЭтаФорма, Истина);

КонецПроцедуры

&НаКлиенте
Процедура КодКПВЭДПриИзменении(Элемент)
	
	ОбновитьПредставлениеЭлемента("КодСтрокиКПВЭД");
	
КонецПроцедуры

&НаКлиенте
Процедура КодКПВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора"  , Истина);
	ПараметрыФормы.Вставить("Отбор"        , Новый Структура("ТипКодаГСВС", ПредопределенноеЗначение("Перечисление.ТипыКодовГСВС.КПВЭД")));
	ПараметрыФормы.Вставить("ТекущаяСтрока", НайтиНоменклатуруГСВСПоКоду(СокрЛП(Объект.КодКПВЭД)));
	
	ОткрытьФорму("Справочник.НоменклатураГСВС.ФормаВыбора", ПараметрыФормы, ЭтаФорма, Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиНоменклатуруГСВСПоКоду(КодГСВС)
	Возврат Справочники.НоменклатураГСВС.НайтиПоРеквизиту("КодГСВС", КодГСВС)
КонецФункции

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсказкаЦеныПродажиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "e1cib/command/ОбщаяКоманда.НастройкаПараметровУчета" Тогда
		
		СтандартнаяОбработка = Ложь; // Форму будем открывать с параметром
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОткрытаИзКарточкиНоменклатуры", Истина);
		
		ОткрытьФорму("ОбщаяФорма.НастройкаПараметровУчета", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПродажиИзНоменклатурыПриИзменении(Элемент)
	ЦенаПродажиМодифицирована = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВалютаЦеныПродажиСВалютамиПриИзменении(Элемент)
	ЦенаПродажиМодифицирована = Истина;
КонецПроцедуры

#Область ЭлектронноеВзаимодействиеРаботаСНоменклатурой

// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
&НаКлиенте
Процедура Подключаемый_НажатиеРаботаСНоменклатурой(Элемент, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.НажатиеГиперссылки(ЭтотОбъект, Элемент, СтандартнаяОбработка,
		Новый ОписаниеОповещения("ЗакрытиеФормыВыбораОбъектаСервиса", ЭтотОбъект, Новый Структура));
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаНавигационнойСсылкиРаботаСНоменклатурой(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.НажатиеГиперссылки(ЭтотОбъект, Элемент, СтандартнаяОбработка,
		Новый ОписаниеОповещения("ЗакрытиеФормыВыбораОбъектаСервиса", ЭтотОбъект, Новый Структура));
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачалоВыбораРаботаСНоменклатурой(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ВыбратьОбъектСервиса(ЭтотОбъект, Элемент, СтандартнаяОбработка, Ложь, 
		Новый ОписаниеОповещения("ЗакрытиеФормыВыбораОбъектаСервиса", ЭтотОбъект, Новый Структура));
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОчисткаРаботаСНоменклатурой(Элемент, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.НажатиеОчиститьНоменклатуру(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеРежимОбновленияРаботаСНоменклатурой(Элемент)
	
	РаботаСНоменклатуройКлиент.НажатиеРежимОбновления(ЭтотОбъект, ПодготовитьДанныеФормы(), 
		Новый ОписаниеОповещения("ЗакрытиеФормыЗаполненияОбъекта", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьРаботаСНоменклатурой(Элемент, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ОткрытьКарточкуОбъектаСервиса(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИзменениеТекстаРедактированияРаботаСНоменклатурой(Элемент, Текст, СтандартнаяОбработка)
	
	РаботаСНоменклатуройКлиент.ИзменениеТекстаСобратьСтрокуПоиска(ЭтотОбъект, Текст, Элемент, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРаботаСНоменклатурой(Элемент)
	
	РаботаСНоменклатуройКлиент.ПриИзмененииСобратьСтрокуПоиска(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПослеЗаписиРаботаСНоменклатурой()
	
	РаботаСНоменклатуройКлиент.ПослеЗаписиФормаНоменклатурыПродолжение(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеФормыВыбораОбъектаСервиса(ДанныеОбъекта, ДополнительныеПараметры) Экспорт 
	
	ДополнительныеПараметры.Вставить("НеОткрыватьФормуЗаполненияНоменклатуры", Объект.Ссылка.Пустая());
	
	РаботаСНоменклатуройКлиент.ОбработкаОповещенияЗакрытиеФормыВыбора(
		ДанныеОбъекта, ДополнительныеПараметры, ПодготовитьДанныеФормы(),
			Новый ОписаниеОповещения("ЗакрытиеФормыЗаполненияОбъекта", ЭтотОбъект));
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеФормы()
	
	Возврат РаботаСНоменклатурой.ПодготовитьДанныеДляИнтерактивногоЗаполнения(ЭтотОбъект);
			
КонецФункции

&НаКлиенте
Процедура ПолеПоискаШтрихкодНаименованиеПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Объект.Наименование) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыФормыПоДаннымСервиса(Неопределено);
	ОтключитьЗаполнениеПоДаннымСервиса = Истина;
	ПодключитьОбработчикОжидания("Подключаемый_ВключитьЗаполнениеПоДаннымСервиса", 0.1, Истина);
	
КонецПроцедуры

// Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Функция ПечатьШтрихкодовНоменклатуры(ПараметрыПечати) Экспорт
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("ОбъектыПечати"				, ПараметрыПечати.ОбъектыПечати);
	СтруктураРезультат.Вставить("Идентификатор" 			, УникальныйИдентификатор);
	СтруктураРезультат.Вставить("Форма"						, ЭтаФорма);
	
	УправлениеПечатьюБККлиент.ПечатьШтрихкодовНоменклатуры(СтруктураРезультат);
	
КонецФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоДаннымСервиса(Команда)
	
	ЗаполнитьРеквизитыФормыПоДаннымСервиса(Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	//обновление наименования строки КПВЭД и ТНВЭД
	
	ОбновитьПредставлениеЭлемента("КодСтрокиКПВЭД");
	ОбновитьПредставлениеЭлемента("КодСтрокиТНВЭД");

	УстановитьФлагФормироватьНаименованиеПолноеАвтоматически();
	
	НаименованияАвтозаполнения.Очистить();
	НаименованияАвтозаполнения.Добавить(Объект.НаименованиеПолное);
	НаименованияАвтозаполнения.Добавить(Объект.Наименование);
	
	ЧтениеЦенПродаж    = ПравоДоступа("Чтение", Метаданные.Константы.НастройкаЗаполненияЦеныПродажи);
	
	Если Не ЧтениеЦенПродаж Тогда
		Элементы.ГруппаЦенаПродажи.Видимость = Ложь;
	Иначе	
		НастроитьВидимостьЭлементыУправленияЦенойПродажи();
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаЦены         = ВалютаРегламентированногоУчета;
		ВалютыЦеныБезВалют = ВалютаРегламентированногоУчета;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ВидНДСПриИмпорте.Доступность 					   = НЕ (Объект.Услуга);
	Элементы.БазоваяЕдиницаИзмерения.АвтоВыборНезаполненного   = НЕ (Объект.Услуга);
	Элементы.ДекорацияПереченьИзъятия.Видимость  			   = НЕ (Элементы.ДекорацияПереченьИзъятия.Заголовок = "");
	Элементы.ДекорацияВедетсяУчетПоТоварамВС.Видимость  	   = НЕ (Элементы.ДекорацияВедетсяУчетПоТоварамВС.Заголовок = "");
	Элементы.ДекорацияУникальныйТовар.Видимость  			   = НЕ (Элементы.ДекорацияУникальныйТовар.Заголовок = "");
	Элементы.ДекорацияТоварДвойногоНазначения.Видимость  	   = НЕ (Элементы.ДекорацияТоварДвойногоНазначения.Заголовок = "");
	
КонецПроцедуры 

&НаСервере
Процедура ОбновитьПредставлениеЭлемента(ИмяОбновляемогоЭлемента)
	
	Если ИмяОбновляемогоЭлемента = "КодСтрокиКПВЭД" Тогда
		
		Если ПустаяСтрока(СтрЗаменить(Объект.КодКПВЭД, ".", "")) Тогда
			Элементы.ДекорацияРасшифровкаКодСтрокиКПВЭД.Заголовок = НСтр("ru ='<не указано>'");
		Иначе
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	0 КАК Порядок,
			|	ВЫРАЗИТЬ(НоменклатураГСВС.ПолноеНаименованиеRu КАК СТРОКА(450)) КАК ПолноеНаименование
			|ИЗ
			|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
			|ГДЕ
			|	НоменклатураГСВС.КодГСВС = &КодКПВЭД
			|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.КПВЭД)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	1,
			|	""строка с кодом "" + &КодКПВЭД + "" не найдена.""
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок");
			
			Запрос.УстановитьПараметр("КодКПВЭД", СокрЛП(Объект.КодКПВЭД));
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			Элементы.ДекорацияРасшифровкаКодСтрокиКПВЭД.Заголовок = Выборка.ПолноеНаименование;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяОбновляемогоЭлемента = "КодСтрокиТНВЭД" Тогда
		
		Если ПустаяСтрока(СтрЗаменить(Объект.КодТНВЭД, ".", "")) Тогда
			Элементы.ДекорацияРасшифровкаКодСтрокиТНВЭД.Заголовок = НСтр("ru ='<не указано>'");
			Элементы.ДекорацияВедетсяУчетПоТоварамВС.Заголовок = "";
			Элементы.ДекорацияПереченьИзъятия.Заголовок = "";
			Элементы.ДекорацияУникальныйТовар.Заголовок = "";
			Элементы.ДекорацияТоварДвойногоНазначения.Заголовок = "";
		Иначе
			ДобавитьИнформациюОНоменклатуре();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФлагФормироватьНаименованиеПолноеАвтоматически()

	Если ПустаяСтрока(Объект.НаименованиеПолное) 
	 ИЛИ Объект.НаименованиеПолное = Объект.Наименование Тогда
	 	ФормироватьНаименованиеПолноеАвтоматически = Истина;
	Иначе
		ФормироватьНаименованиеПолноеАвтоматически = Ложь;
	КонецЕсли;

КонецПроцедуры 

&НаСервере
Процедура ДобавитьИнформациюОНоменклатуре()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("КодТНВЭД", Объект.КодТНВЭД);
	
	Запрос.Текст = "ВЫБРАТЬ
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУникальногоТовара КАК ПризнакУникальногоТовара,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий КАК ПризнакПеречняИзьятий,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакТовараДвойногоНазначения КАК ПризнакТовараДвойногоНазначения,
		|	СпрНоменклатураГСВС.КодГСВС КАК КодТНВЭД,
		|	СпрНоменклатураГСВС.ПолноеНаименованиеRu КАК ПолноеНаименование
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&Дата, ) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураГСВС КАК СпрНоменклатураГСВС
		|		ПО СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС = СпрНоменклатураГСВС.Ссылка
		|ГДЕ
		|	СпрНоменклатураГСВС.КодГСВС = &КодТНВЭД
		|	И СпрНоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ПризнакУчетаНаВиртуальномСкладе Тогда
			Элементы.ДекорацияВедетсяУчетПоТоварамВС.Заголовок = НСтр("ru ='Товар ВС;'");
		Иначе
			Элементы.ДекорацияВедетсяУчетПоТоварамВС.Заголовок = "";
		КонецЕсли;
		Если Выборка.ПризнакПеречняИзьятий Тогда
			Элементы.ДекорацияПереченьИзъятия.Заголовок = НСтр("ru ='Товар входит в перечень изъятий;'");
		Иначе
			Элементы.ДекорацияПереченьИзъятия.Заголовок = "";
		КонецЕсли;
		Если Выборка.ПризнакУникальногоТовара Тогда
			Элементы.ДекорацияУникальныйТовар.Заголовок = НСтр("ru ='Уникальный товар'");
		Иначе
			Элементы.ДекорацияУникальныйТовар.Заголовок = "";
		КонецЕсли;
		Если Выборка.ПризнакТовараДвойногоНазначения Тогда
			Элементы.ДекорацияТоварДвойногоНазначения.Заголовок = НСтр("ru ='Экспортный контроль'");
		Иначе
			Элементы.ДекорацияТоварДвойногоНазначения.Заголовок = "";
		КонецЕсли;
		Если ПустаяСтрока(Выборка.ПолноеНаименование) Тогда
			Элементы.ДекорацияРасшифровкаКодСтрокиТНВЭД.Заголовок = СтрШаблон(НСтр("ru ='строка с кодом %1 не найдена.'"), СокрЛП(Объект.КодТНВЭД));
		Иначе
			Элементы.ДекорацияРасшифровкаКодСтрокиТНВЭД.Заголовок = Выборка.ПолноеНаименование;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ИзменениеНаФорме()
	
	ПолучитьЗначениеЦеныПродажи();
	НастроитьВидимостьЭлементыУправленияЦенойПродажи();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменениеЦеныВРегистр(ТекущийОбъект)
	
	ПравоНаИзменениеРегистраЦен = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ЦеныНоменклатурыДокументов); 	
	
	Если ПравоНаИзменениеРегистраЦен Тогда
		
		РедактироватьВКарточкеНоменклатуры = 
			(Константы.НастройкаЗаполненияЦеныПродажи.Получить() = Перечисления.НастройкаЗаполненияЦеныПродажи.Номенклатура);
		
		Если РедактироватьВКарточкеНоменклатуры и ЦенаПродажиМодифицирована Тогда
			
			МенеджерЗаписи 						= РегистрыСведений.ЦеныНоменклатурыДокументов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Номенклатура 		= ТекущийОбъект.Ссылка;
			МенеджерЗаписи.СпособЗаполненияЦены = Перечисления.СпособыЗаполненияЦен.ПоПродажнымЦенам;
			МенеджерЗаписи.Валюта				= ВалютаЦены;
			МенеджерЗаписи.Цена 				= ЦенаПродажи;
			МенеджерЗаписи.ЦенаВключаетНДС      = Истина;
			
			МенеджерЗаписи.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗначениеЦеныПродажи()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыДокументов.Цена КАК Цена,
	|	ЦеныНоменклатурыДокументов.Валюта КАК Валюта,
	|	ЦеныНоменклатурыДокументов.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЦеныНоменклатурыДокументов.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыДокументов КАК ЦеныНоменклатурыДокументов
	|ГДЕ
	|	ЦеныНоменклатурыДокументов.Номенклатура = &Номенклатура
	|	И ЦеныНоменклатурыДокументов.СпособЗаполненияЦены = ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияЦен.ПоПродажнымЦенам)";
		
	ВыборкаДанных = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаДанных.Следующий() Тогда
		
		Если Не ВыборкаДанных.ЦенаВключаетНДС Тогда
			// В форме номенклатуры цену всегда показываем окончательную для покупателя - т.е. с НДС
			СтавкаНДС = ВыборкаДанных.СтавкаНДС;
			ЗначениеСтавкиНДС = УчетНДСиАкцизаВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
			ЦенаПродажи    = ВыборкаДанных.Цена * (1 + ЗначениеСтавкиНДС / 100);
		Иначе
			ЦенаПродажи    = ВыборкаДанных.Цена;
		КонецЕсли;
		
		ВалютаЦены         = ВыборкаДанных.Валюта;
		ВалютыЦеныБезВалют = ВыборкаДанных.Валюта;
		
	Иначе 
		
		ЦенаПродажи                    = 0;
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаЦены                     = ВалютаРегламентированногоУчета;
		ВалютыЦеныБезВалют             = ВалютаРегламентированногоУчета;
		
	КонецЕсли;
	
	ЦенаПродажиМодифицирована = Ложь;	
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементыУправленияЦенойПродажи()
	
	ИзменениеЦенПродаж = ПравоДоступа("Изменение", Метаданные.Константы.НастройкаЗаполненияЦеныПродажи);
	
	Если Не ИзменениеЦенПродаж Тогда		
		ТолькоПросмотрЦеныПродажи = Истина;	
	Иначе	
		ТолькоПросмотрЦеныПродажи = Ложь;
	КонецЕсли;
		
	Элементы.ГруппаЦенаПродажи.Видимость = Истина;
	РедактироватьВКарточкеНоменклатуры = (Константы.НастройкаЗаполненияЦеныПродажи.Получить() = Перечисления.НастройкаЗаполненияЦеныПродажи.Номенклатура);
	ЕстьВалюты = ПолучитьФункциональнуюОпцию("ИспользоватьВалютныйУчет");
	
	Если Не ТолькоПросмотрЦеныПродажи Тогда
		
		Элементы.ЦенаПродажиИзНоменклатуры.ТолькоПросмотр = Не РедактироватьВКарточкеНоменклатуры;	
			
		Если РедактироватьВКарточкеНоменклатуры Тогда

			Элементы.ВалютаЦеныПродажиСВалютами.Видимость   = ЕстьВалюты;
			Элементы.ВалютаЦеныПродажиБезВалют. Видимость   = Не ЕстьВалюты;
			
		Иначе
					
			Элементы.ВалютаЦеныПродажиСВалютами.Видимость   = Ложь;
			Элементы.ВалютаЦеныПродажиБезВалют. Видимость   = Истина;
			
		КонецЕсли;
		
	Иначе
		
		Элементы.ЦенаПродажиИзНоменклатуры.	 ТолькоПросмотр = Истина;
		Элементы.ВалютаЦеныПродажиСВалютами. Видимость      = Ложь;
		Элементы.ВалютаЦеныПродажиБезВалют.  Видимость      = Истина;
		
	КонецЕсли;
	
	
	// Установка подсказки
	
	ЭлементыСтроки = Новый Массив;
	
	Если РедактироватьВКарточкеНоменклатуры Тогда
		
		ТекстПодсказкиДляЦеныПродажи = НСтр("ru = 'Если в документах продажи не установлен ""Тип цены"", тогда по умолчанию цена продажи устанавливается в карточке номенклатуры.'");
		
	Иначе
		
		ТекстПодсказкиДляЦеныПродажи = НСтр("ru = 'Если в документах продажи не установлен ""Тип цены"", тогда по умолчанию цена продажи определяется из предыдущего документа продажи.'");
		
	КонецЕсли;
	
	ПросмотрНастроекПараметровУчета = ПравоДоступа("Просмотр", Метаданные.ОбщиеКоманды.НастройкаПараметровУчета);
	
	Если ПросмотрНастроекПараметровУчета Тогда
		ТекстПодсказкиДляЦеныПродажи = 
		СтроковыеФункции.ФорматированнаяСтрока(НСтр("ru = '%1 
		| Изменить настройку можно в форме <a href=""e1cib/command/ОбщаяКоманда.НастройкаПараметровУчета"">""Настройка параметров учета""</a>'"), ТекстПодсказкиДляЦеныПродажи);
		
	КонецЕсли;
	
	Элементы.ВалютаЦеныПродажиСВалютами.РасширеннаяПодсказка.Заголовок = ТекстПодсказкиДляЦеныПродажи;
	Элементы.ВалютаЦеныПродажиБезВалют. РасширеннаяПодсказка.Заголовок = ТекстПодсказкиДляЦеныПродажи;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКодТНВЭД(НомеклатураГСВС)
	
	КодГСВС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НомеклатураГСВС, "КодГСВС");
	ТипКода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НомеклатураГСВС, "ТипКодаГСВС");
	Если ТипКода = ПредопределенноеЗначение("Перечисление.ТипыКодовГСВС.КПВЭД") Тогда
		Объект.КодКПВЭД = КодГСВС;
		Элементы.ДекорацияРасшифровкаКодСтрокиКПВЭД.Заголовок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НомеклатураГСВС, "ПолноеНаименованиеRu");
	Иначе
		Объект.КодТНВЭД = КодГСВС;
		ДобавитьИнформациюОНоменклатуре();
	КонецЕсли;
	
КонецПроцедуры

#Область ЭлектронноеВзаимодействиеРаботаСНоменклатурой

&НаСервере
Процедура НастроитьЭлементыУправленияРаботаСНоменклатурой()
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьПодсказкуСервиса();
		РаботаСНоменклатуройБК.ЗаполнитьРеквизитыФормыДляРаботыСервиса(ЭтотОбъект);
	КонецЕсли;
	
	Элементы.ГруппаЗаполнениеПоДаннымСервиса.Видимость = СервисАктивен;
	
	ДобавитьРеквизитыИЭлементыФормыРаботаСНоменклатурой();
	
	ИспользоватьПодключаемоеОборудование = ПравоДоступа("Чтение", Метаданные.Справочники.ПодключаемоеОборудование);
	
	Параметры.Свойство("Штрихкод", ПолеПоискаШтрихкодНаименование);
	Параметры.Свойство("ИдентификаторСервиса", ИдентификаторСервиса);
	Если Не ПустаяСтрока(ИдентификаторСервиса) Тогда
		НастроитьФормуПриДлительнойОперации(ЭтотОбъект, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыИЭлементыФормыРаботаСНоменклатурой()
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ВыбиратьРежимОбновления", ИспользоватьАвтоматическоеОбновлениеНоменклатуры());
	
	РаботаСНоменклатурой.ПриСозданииНаСервереФормаНоменклатуры(ЭтотОбъект, Объект.Ссылка,
		Элементы.ГруппаРаботаСНоменклатурой, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказкуСервиса()
	
	ГиперссылкаНаПромоСайтНоменклатура = РаботаСНоменклатурой.ГиперссылкаНаПромоСайтНоменклатура();
	ГиперссылкаНаОфертуСервисов = РаботаСНоменклатурой.ГиперссылкаНаОфертуСервисов();
	
	ТекстПодсказки = СтрШаблон("<span style=""color: ПоясняющийТекст"">%1 </span> <a href = ""%2"">%3</a>.
		|<span style=""color: ПоясняющийТекст"">%4 </span> <a href = ""%5"">%6</a>.",
		НСтр("ru='Автоматическое заполнение реквизитов по данным каталога'"),
		ГиперссылкаНаПромоСайтНоменклатура,
		НСтр("ru='1С:Номенклатура'"),
		НСтр("ru='Использование сервиса 1С:Номенклатура означает согласие с'"),
		ГиперссылкаНаОфертуСервисов,
		НСтр("ru='Условиями использования сервиса'"));
	
	ТекстПодсказки = СтроковыеФункции.ФорматированнаяСтрока(ТекстПодсказки);
	
	Элементы.ЗаполнитьРеквизитыПоДаннымСервисаРасширеннаяПодсказка.Заголовок = ТекстПодсказки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуПользователейНажатиеПродолжение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьПоискДанныхСервиса();
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьВстроенныеРеквизиты()
	РаботаСНоменклатурой.ПерезаполнитьВстроенныеРеквизиты(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФормуПриДлительнойОперации(Форма, Знач ДлительнаяОперацияАктивна)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "КартинкаОжидание",
		"Видимость", ДлительнаяОперацияАктивна);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ЗаполнитьРеквизитыПоДаннымСервиса",
		"Доступность", Не ДлительнаяОперацияАктивна);
	
	Если Форма.ТолькоПросмотр <> ДлительнаяОперацияАктивна Тогда
		Форма.ТолькоПросмотр = ДлительнаяОперацияАктивна;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользоватьАвтоматическоеОбновлениеНоменклатуры()
	
	Результат = Ложь;
	
	ИмяЗадания = "ОбновлениеНоменклатурыРаботаСНоменклатурой";
	Отбор = Новый Структура("Метаданные", ИмяЗадания);
	УстановитьПривилегированныйРежим(Истина);
	Найденные = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	УстановитьПривилегированныйРежим(Ложь);
	Если Найденные.Количество() > 0 Тогда
		Результат = Найденные[0].Использование;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьРеквизитыФормыПоДаннымСервиса(Команда)
	
	Если ОтключитьЗаполнениеПоДаннымСервиса Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Если ПустаяСтрока(ПолеПоискаШтрихкодНаименование) Тогда
		Если Команда <> Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Введите штрихкод или наименование товара'"));
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ТекущийКод = РазборИОбработкаКодовМаркировкиИСМПТКСлужебныйКлиентСервер.ШтрихкодВBase64(ПолеПоискаШтрихкодНаименование);
	РаботаСДокументамиИСМПТККлиентПереопределяемый.ПроверитьШтрихкод(ЭтотОбъект, ТекущийКод, Истина, Ложь, "Сервис");
	Если ТекущийКод = "" Тогда
		Возврат;
	КонецЕсли;
	
	НоменклатураПоИдентификатору = РаботаСНоменклатуройВызовСервераБК.НоменклатураПоШтрихкоду(
		ПолеПоискаШтрихкодНаименование);
	Если Не НоменклатураПоИдентификатору.Пустая() Тогда
		ПоказатьСообщениеОбОшибкеЗаполненияФормыПоДаннымСервиса(НоменклатураПоИдентификатору);
		Возврат;
	КонецЕсли;
	
	Если Не СервисДоступен Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Нарушение прав доступа'"));
		Возврат;
	КонецЕсли;
	
	Если ИнтернетПоддержкаПодключена Тогда
		ВыполнитьПоискДанныхСервиса();
	Иначе
		Оповещение = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуПользователейНажатиеПродолжение", ЭтотОбъект);
		РаботаСНоменклатуройКлиентБК.ПодключитьИнтернетПоддержкуПользователей(Оповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиЗаполнитьПоШтрихкоду(ДанныеСоСканера)
	
	ПолеПоискаШтрихкодНаименование = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеСоСканера, "Штрихкод");
	
	Оповещение = Новый ОписаниеОповещения("НайтиЗаполнитьПоШтрихкодуЗавершение", ЭтотОбъект);
	Контекст = Новый Структура("ОповещениеОРезультате", Оповещение);
	Контекст.Вставить("ТекстВопроса",
		НСтр("ru = 'Номенклатура с таким штрих-кодом не найдена. Проискать в сервисе 1С:Номенклатура?'"));
	РаботаСНоменклатуройКлиентБК.ПоискНоменклатурыПоШтрихкодуПослеВводаСтроки(ДанныеСоСканера, Контекст);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиЗаполнитьПоШтрихкодуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатШтрихкод      = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Штрихкод");
	РезультатИдентификатор = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Идентификатор", "");
	РезультатНоменклатура  = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Номенклатура",
		ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	
	Если Не РезультатНоменклатура.Пустая() Тогда
		ПоказатьСообщениеОбОшибкеЗаполненияФормыПоДаннымСервиса(РезультатНоменклатура);
	ИначеЕсли Не ПустаяСтрока(РезультатИдентификатор) Тогда 
		НастроитьФормуПриДлительнойОперации(ЭтотОбъект, Истина);
		
		ДанныеОбъекта = Новый Структура("Идентификатор", РезультатИдентификатор);
		ПодготовитьПараметрыЗаполненияФормыНоменклатуры(ДанныеОбъекта);
	Иначе 
		ПоказатьПредупреждение(, СтрШаблон(НСтр("ru = 'По штрихкоду %1 номенклатура не найдена.'"), РезультатШтрихкод));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеДлительнойОперации(ДлительнаяОперация, ОповещениеОЗавершении)
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПоискДанныхСервиса()
	
	ДлительнаяОперация = ДлительнаяОперацияРезультатПоискаНоменклатурыСервиса();
		
	Если ТипЗнч(ДлительнаяОперация) = Тип("Структура") Тогда
		НастроитьФормуПриДлительнойОперации(ЭтотОбъект, Истина);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьПоискДанныхСервисаЗавершение", ЭтотОбъект);
		
		ОжидатьЗавершениеДлительнойОперации(ДлительнаяОперация, ОповещениеОЗавершении);
	Иначе 
		ОчиститьСообщения();
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось подключить сервис 1С:Номенклатура'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДлительнаяОперацияРезультатПоискаНоменклатурыСервиса()
	
	Если Не СервисАктивен Тогда
		СервисАктивен = РаботаСНоменклатуройБК.СервисУспешноАктивирован();
		Если СервисАктивен Тогда
			ДобавитьРеквизитыИЭлементыФормыРаботаСНоменклатурой();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = 
		НСтр("ru = '1С:Номенклатура. Поиск номенклатуры по строке.'");
		
	ПараметрыФункции = РаботаСНоменклатурой.ПараметрыПоискаНоменклатурыСервиса();
	ПараметрыФункции.СтрокаПоиска = ПолеПоискаШтрихкодНаименование;
	ПараметрыФункции.КоличествоЗаписей = 2;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РаботаСНоменклатурой.РезультатПоискаНоменклатурыСервиса", ПараметрыФункции);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПоискДанныхСервисаЗавершение(Результат, ДополнительныеПараметры = Неопределено) Экспорт 
	
	Перем РезультатПоиска;
	
	Статус = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Статус");
	Если Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	ИначеЕсли Статус <> "Выполнено" Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		РезультатПоиска = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		УдалитьИзВременногоХранилища(Результат.АдресРезультата);
	КонецЕсли;
	
	НайденОдинРезультат = (ТипЗнч(РезультатПоиска) = Тип("Массив") И РезультатПоиска.Количество() = 1);
	ДлительнаяОперацияЗавершена = Истина;
	
	Если НайденОдинРезультат Тогда
		НоменклатураПоИдентификатору = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(РезультатПоиска[0], "Номенклатура");
		Если ЗначениеЗаполнено(НоменклатураПоИдентификатору) Тогда
			ПоказатьСообщениеОбОшибкеЗаполненияФормыПоДаннымСервиса(НоменклатураПоИдентификатору, 2);
		Иначе 
			ПодготовитьПараметрыЗаполненияФормыНоменклатуры(РезультатПоиска[0]);
			ДлительнаяОперацияЗавершена = Ложь;
		КонецЕсли;
	ИначеЕсли Результат.Сообщения <> Неопределено И Результат.Сообщения.Количество() > 0 Тогда 
		Для каждого Сообщение Из Результат.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	Иначе 
		Оповещение = Новый ОписаниеОповещения("ЗакрытиеФормыВыбораОбъектаСервиса", ЭтотОбъект, Новый Структура);
		СтандартнаяОбработка = Ложь;
		РаботаСНоменклатуройКлиент.ВыбратьОбъектСервиса(ЭтотОбъект, Элементы.ПолеПоискаШтрихкодНаименование,
			СтандартнаяОбработка, Ложь, Оповещение);
	КонецЕсли;
	
	Если ДлительнаяОперацияЗавершена Тогда
		НастроитьФормуПриДлительнойОперации(ЭтотОбъект, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормы(ПараметрыЗакрытияФормы, ДополнительныеПараметры)
	
	РаботаСНоменклатурой.ЗаполнитьРеквизитыФормы(ЭтотОбъект, ПараметрыЗакрытияФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеФормыЗаполненияОбъекта(ПараметрыЗакрытияФормы, ДополнительныеПараметры) Экспорт 
	
	ЗаполнитьРеквизитыФормы(ПараметрыЗакрытияФормы, ДополнительныеПараметры);
	
	НастроитьФормуПриДлительнойОперации(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьПараметрыЗаполненияФормыНоменклатуры(ДанныеОбъекта)
	
	ПараметрыОбработчика = Новый Структура("ВыводитьОкноОжидания", Ложь);
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеФормыЗаполненияОбъекта", ЭтотОбъект);
	РаботаСНоменклатуройКлиент.ПодготовитьПараметрыЗаполненияФормыНоменклатуры(ЭтотОбъект,
		ДанныеОбъекта, Оповещение, ПараметрыОбработчика);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСообщениеОбОшибкеЗаполненияФормыПоДаннымСервиса(НоменклатураСсылка, ТипОшибки = 1)
	
	Если ТипОшибки = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Штрихкод уже используется для другой номенклатуры'");
	Иначе 
		ТекстСообщения = НСтр("ru = 'Карточка 1С:Номенклатуры уже используется для другой номенклатуры'");
	КонецЕсли;
	
	ФорматированныйТекст = СтроковыеФункцииКлиент.ФорматированнаяСтрока("%1:%4<a href = %2>%3</a>.", 
		ТекстСообщения, ПолучитьНавигационнуюСсылку(НоменклатураСсылка), Строка(НоменклатураСсылка), Символы.ПС);
	
	ПоказатьПредупреждение(, ФорматированныйТекст);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВключитьЗаполнениеПоДаннымСервиса()
	
	ОтключитьЗаполнениеПоДаннымСервиса = Ложь;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
