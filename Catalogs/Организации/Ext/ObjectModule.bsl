#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("ИндивидуальныйПредприниматель");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Сообщать = Истина)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	Если НЕ ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		Если ЭтоНовый() Тогда
			СсылкаНового = Справочники.Организации.ПолучитьСсылку();
			УстановитьСсылкуНового(СсылкаНового);
		Иначе 
			СсылкаНового = Ссылка;
		КонецЕсли;
		ГоловнаяОрганизация = СсылкаНового;
	КонецЕсли;
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда 
		ИндивидуальныйПредприниматель = Неопределено;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		// ПрошлыйИзмененныйГоловнаяОрганизация <> неопределено, когда изменилась головная организация
		ПрошлыйИзмененныйГоловнаяОрганизация = ?(НЕ ЭтоНовый() И НЕ Ссылка.ГоловнаяОрганизация = ГоловнаяОрганизация, Ссылка.ГоловнаяОрганизация, Неопределено);
		ДополнительныеСвойства.Вставить("ПрошлыйИзмененныйГоловнаяОрганизация", ПрошлыйИзмененныйГоловнаяОрганизация);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда
		ЗаполнитьРегистрыУчетнойПолитикиПоУмолчанию(Ссылка);
	КонецЕсли;

	Если Ссылка = ДополнительныеСвойства.ПрошлыйИзмененныйГоловнаяОрганизация Тогда
		// необходимо снять учет по головной организации в регистре сведений "Учетная политика по персоналу организации"
		// Если есть хотя бы один работник принятый в данную организацию, то снимаем признак "ВестиУчетПоГоловнойОрганизации" в учетной политике
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					   |	РаботникиОрганизаций.Сотрудник
					   |ИЗ
					   |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
					   |ГДЕ
					   |	РаботникиОрганизаций.Организация = &парамПрошлыйИзмененныйГоловнаяОрганизация";
					   
		Запрос.УстановитьПараметр("парамПрошлыйИзмененныйГоловнаяОрганизация", ДополнительныеСвойства.ПрошлыйИзмененныйГоловнаяОрганизация);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Ссылка);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 1 И НаборЗаписей[0].ВестиУчетПоГоловнойОрганизации = Истина Тогда				
				НаборЗаписей[0].ВестиУчетПоГоловнойОрганизации = Ложь;
				Попытка
					НаборЗаписей.Записать();				
					ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу организации для организации ""%1"" снят признак ""Вести учет по головной организации""'");
					ОбщегоНазначения.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(Наименование)),
						Ссылка,
						,
						,
						);
					
				Исключение
					ТекстСообщения = НСтр("ru = 'В учетной политике по персоналу организации для организации ""%1"" не удалось снять признак ""Вести учет по головной организации"" в учетной политике по персоналу организации'");
					ОбщегоНазначения.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(Наименование)),
						Ссылка,
						,
						,
						);

				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ПроверитьЗначениеОпцииИспользоватьНесколькоОрганизаций();
	
	Если ДополнительныеСвойства.ЭтоНовый Тогда
		Справочники.БанковскиеСчета.ПроверитьУстановитьЗначениеОпцииИспользоватьНесколькоБанковскихСчетовОрганизации(Ссылка, ПометкаУдаления, Истина);
		Справочники.Кассы.ПроверитьЗначениеОпцииИспользоватьНесколькоКасс(Ссылка, ПометкаУдаления, Истина);
	Иначе
		Справочники.БанковскиеСчета.ПроверитьУстановитьЗначениеОпцииИспользоватьНесколькоБанковскихСчетовОрганизации(Ссылка, ПометкаУдаления);
	КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если НЕ Отказ
		И Не ПометкаУдаления
		И ПолучитьФункциональнуюОпцию("НачалоРаботы")
		И Наименование = НСтр("ru = 'Укажите наименование Вашей организации'") Тогда
		Константы.НачалоРаботы.Установить(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ОсновнаяКасса	       = Неопределено;
	ОсновнойБанковскийСчет = Неопределено;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заполняет регистры учетной политики для переданной организации значениями по умолчанию
//
Процедура ЗаполнитьРегистрыУчетнойПолитикиПоУмолчанию(Организация)

	//Заполняем сведения по УчетнаяПолитикаБухгалтерскийУчет Организации 
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаБухгалтерскийУчет.СоздатьНаборЗаписей();
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Записать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период      = НачалоГода(ТекущаяДата()); 
	Запись.Организация = Организация;
	Запись.СпособРасчетаСебестоимостиПроизводства       = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям;
	Запись.УчетВременныхРазницПоНалогуНаПрибыль         = Истина;
	Запись.ВедениеУчетаВременныхРазницБалансовымМетодом = Истина;
	
	НаборЗаписей.Записать();
	
	//Заполняем сведения по УчетнаяПолитикаНалоговыйУчет Организации 
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаНалоговыйУчет.СоздатьНаборЗаписей();
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Записать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период                                     = НачалоГода(ТекущаяДата());
	Запись.Организация                                = Организация;
	Запись.НДСНалоговыйПериод 	                      = Перечисления.Периодичность.Квартал;
	Запись.НДСМетодОтнесенияВЗачет                    = Перечисления.МетодыОтнесенияНДСВЗачет.Пропорциональный;
	Запись.ОрганизацияЯвляетсяПлательщикомКПН         = Истина;
	Запись.ОрганизацияЯвляетсяПлательщикомНДС         = Ложь;
	Запись.УпрощенныйУчетИПНиОПВ   		              = Ложь;
	Запись.ОтражениеПоПериодуРегистрации              = Истина;
	Запись.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ = Истина;
	Запись.ОрганизацияЯвляетсяПлательщикомСН          = Истина;
	Запись.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога = Истина;
	Запись.ПорядокСписанияЗадолженностиПоЗарплате     = Перечисления.ПорядокСписанияЗадолженностиПоЗарплате.ПоСпособуЗаполненияДокумента;
	
	НаборЗаписей.Записать();

	// Заполняем сведения по УчетнаяПолитикаПоПерсоналуОрганизации 
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Значение		 = Организация;
	НаборЗаписей.Отбор.Организация.Использование = Истина;
	НаборЗаписей.Записать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Организация					                                  = Организация;
	//Запись.Период 					                                  = '19800101';
	Запись.Организация 					                                  = Организация;
	Запись.ВестиУчетПоГоловнойОрганизации                                 = Истина;
	Запись.РасчетКоэффициентаНарастающимИтогом                            = Ложь;
	Запись.УчитыватьКадровыеПерестановкиПриРасчетеСреднегоЗаработка       = Истина;
	Запись.ВариантУчетаКадровыхПерестановок                               = Перечисления.ВариантыУчетаКадровыхПерестановок.ПодразделениеИДолжность;
	Запись.РассчитыватьКоэффициентИндексацииВПределахКадровыхПерестановок = Истина;
	
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ПроверитьЗначениеОпцииИспользоватьНесколькоОрганизаций()
	
	Если НЕ ЭтоГруппа
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций")
		И Справочники.Организации.КоличествоОрганизаций() > 1 Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		Константы.ИспользоватьНесколькоОрганизаций.Установить(Истина);
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли

