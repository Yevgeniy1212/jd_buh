#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	    	
	Если ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДоговораИзИБ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
							"ПометкаУдаления, Владелец, ВалютаВзаиморасчетов, ВидДоговора, 
							|Организация");
							
	Если Не ЭтоНовый() И ПометкаУдаления <> РеквизитыДоговораИзИБ.ПометкаУдаления Тогда
		//В случае установки или снятия пометки удаления не производить проверку
		Возврат;
	КонецЕсли;
	
	// Проверим можно ли изменять реквизиты договора.
	// Проверка осуществляется только если записывается уже существующий договор
	Если ЭтоГруппа Тогда
		
		// Для группы владельца менять нельзя
		Если Владелец <> РеквизитыДоговораИзИБ.Владелец Тогда
			ТекстСообщения = НСтр("ru = 'Нельзя изменять контрагента для группы договоров.'"); 
			ТекстСообщения = ОбщегоНазначенияБККлиентСервер.ПолучитьТекстСообщения("Поле", "Корректность", 
				НСтр("ru = 'Контрагент'"), , , ТекстСообщения);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Владелец", "Объект", Отказ);
		КонецЕсли;
		
	Иначе
		
		// Для элемента нужно получить документы, в которых использован договор:
		ЕстьПроведенныеДокументыПоДоговору = Ложь;
		ЕстьОформленныеДокументыПоДоговору = Ложь;
		
		НеобходимаПроверка = ОпределитьНеобходимостьПроверки(РеквизитыДоговораИзИБ, 
			ЕстьПроведенныеДокументыПоДоговору, ЕстьОформленныеДокументыПоДоговору);
		
		Если НеобходимаПроверка Тогда
			
			// Проверим возможность смены владельца для договора
			Если ЕстьОформленныеДокументыПоДоговору = Истина Тогда
				ТекстСообщения = НСтр("ru = 'Существуют документы, оформленные по договору %1.'"); 
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Наименование);
				СообщитьОНекорректномРеквизите("Владелец", НСтр("ru = 'Контрагент'"), ТекстСообщения, Отказ, РеквизитыДоговораИзИБ);
			КонецЕсли;
			
			Если ЕстьПроведенныеДокументыПоДоговору Тогда
				СписокРеквизитов = Новый Структура("ВалютаВзаиморасчетов, ВидДоговора, Организация", 
				НСтр("ru = 'Валюта расчетов'"), 
				НСтр("ru = 'Вид договора'"), 
				НСтр("ru = 'Организация'")); 
				ТекстСообщения = НСтр("ru = 'Существуют документы, проведенные по договору %1.
				|Реквизит %2 не может быть изменен.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Наименование);
				Для Каждого КлючИЗначение Из СписокРеквизитов Цикл
					СообщитьОНекорректномРеквизите(КлючИЗначение.Ключ, КлючИЗначение.Значение, ТекстСообщения, Отказ, РеквизитыДоговораИзИБ);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли; 

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		Если ЭтоГруппа И ДанныеЗаполнения.Свойство("Владелец") Тогда
			ЭтотОбъект.Владелец = ДанныеЗаполнения.Владелец;
		Иначе
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяВалютаВзаиморасчетов");
			Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
				ВалютаВзаиморасчетов = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
			КонецЕсли;
		КонецЕсли;      		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		КонецЕсли; 					
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	// Если учет по договорам не ведется, 
	// то первый созданный договор устанавливаем основным
	// Это требуется для ручных документов расчетов, 
	// программного создания договоров в обработке Клиент-банка
	// В формах, где не скрыт учет по договорам (Операция, 
	// ввод начальных остатков по прочим дебиторам и кредиторам и т.д.)
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		ОсновнойДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		// Найдем основной договор данного вида в данной организации
		Если Не РаботаСДоговорамиКонтрагентов.УстановитьДоговорКонтрагента(ОсновнойДоговор, Владелец, Организация, ВидДоговора) Тогда
			// Если основной договор не найден, тогда установим этот договор как основной
			РаботаСДоговорамиКонтрагентов.УстановитьОсновнойДоговорКонтрагента(ЭтотОбъект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура СообщитьОНекорректномРеквизите(ИмяРеквизита, СинонимРеквизита, ШаблонСообщения, Отказ, ЗНАЧ РеквизитыСсылкиИзИБ = Неопределено)

	Если РеквизитыСсылкиИзИБ = Неопределено Тогда 
		РеквизитыСсылкиИзИБ = Ссылка;
	КонецЕсли;
	
	Если ЭтотОбъект[ИмяРеквизита] <> РеквизитыСсылкиИзИБ[ИмяРеквизита] Тогда
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%2", СинонимРеквизита);
		ТекстСообщения = ОбщегоНазначенияБККлиентСервер.ПолучитьТекстСообщения("Поле", "Корректность", 
			СинонимРеквизита, , , ТекстСообщения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, ИмяРеквизита, "Объект", Отказ);
	КонецЕсли;

КонецПроцедуры

Функция ОпределитьНеобходимостьПроверки(РеквизитыДоговораИзИБ, ЕстьПроведенныеДокументыПоДоговору, ЕстьОформленныеДокументыПоДоговору)

	ЕстьПроведенныеДокументыПоДоговору = Ложь;
	ЕстьОформленныеДокументыПоДоговору = Ложь;

	Если Владелец <> РеквизитыДоговораИзИБ.Владелец
		ИЛИ ВалютаВзаиморасчетов <> РеквизитыДоговораИзИБ.ВалютаВзаиморасчетов 
		ИЛИ ВидДоговора <> РеквизитыДоговораИзИБ.ВидДоговора
		ИЛИ Организация <> РеквизитыДоговораИзИБ.Организация Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Договор", Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыПоДоговоруКонтрагента.Ссылка КАК ДокументПоДоговору
		|ИЗ
		|	КритерийОтбора.ДокументыПоДоговоруКонтрагента(&Договор) КАК ДокументыПоДоговоруКонтрагента";
		
		МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументПоДоговору");
		
		Если МассивДокументов.Количество() > 0 Тогда
		
			МассивНеПроведенныхДокументов = ОбщегоНазначения.ПроверитьПроведенностьДокументов(МассивДокументов);
			
			ЕстьОформленныеДокументыПоДоговору = Истина;
			ЕстьПроведенныеДокументыПоДоговору = (МассивНеПроведенныхДокументов.Количество() < МассивДокументов.Количество());
			
		КонецЕсли;
			
		Возврат Истина;

	Иначе

		// Проверку запускать не надо, ключевые реквизиты не менялись
		Возврат Ложь;

	КонецЕсли;

КонецФункции

#КонецЕсли

