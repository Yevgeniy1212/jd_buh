#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	

	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Функция ПолучитьДоговорРозничногоКонтрагента(Контрагент, Организация) Экспорт
	
	Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.НомерДоговора = ""999999999""
		|	И ДоговорыКонтрагентов.Владелец = &Владелец
		|	И ДоговорыКонтрагентов.Организация = &Организация
		|	И ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
		|	И ДоговорыКонтрагентов.Наименование = ""Розничный договор""
		|";
		Запрос.УстановитьПараметр("Владелец", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организация);
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			Выборка.следующий();
			Возврат Выборка.Ссылка;
		Иначе
			
			СтруктураДоговора = Новый Структура();
			СтруктураДоговора.Вставить("Наименование","Розничный договор");
			СтруктураДоговора.Вставить("Родитель","");
			СтруктураДоговора.Вставить("Владелец", Контрагент);
			СтруктураДоговора.Вставить("ВалютаВзаиморасчетов", Константы.ВалютаРегламентированногоУчета.Получить());
			СтруктураДоговора.Вставить("ВедениеВзаиморасчетов", Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом);
			СтруктураДоговора.Вставить("Комментарий", "Договор с розничным контрагентом");
			СтруктураДоговора.Вставить("Организация", Организация);
			СтруктураДоговора.Вставить("ТипЦен", Неопределено);
			СтруктураДоговора.Вставить("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
			СтруктураДоговора.Вставить("УчетАгентскогоНДС", Ложь);
			СтруктураДоговора.Вставить("НомерДоговора", "999999999");
			СтруктураДоговора.Вставить("ДатаДоговора", );
			СтруктураДоговора.Вставить("ДатаНачалаДействияДоговора");
			СтруктураДоговора.Вставить("ДатаОкончанияДействияДоговора");
			СтруктураДоговора.Вставить("ВестиПоДокументамРасчетовСКонтрагентом", Ложь);
			СтруктураДоговора.Вставить("ПометкаУдаления", Ложь);
			СтруктураДоговора.Вставить("Ссылка", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
			
			НовыйДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			
			ЗаполнитьЗначенияСвойств(НовыйДоговорКонтрагента, СтруктураДоговора); 
			НовыйДоговорКонтрагента.Записать();
			
			Возврат НовыйДоговорКонтрагента.Ссылка;
			
		КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)		
	                                                                	
	Если Параметры.Свойство("ВыбиратьДоговорыВВалюте") И Параметры.ВыбиратьДоговорыВВалюте Тогда
		
		ВалютаРегламентированногоУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		
		СтандартнаяОбработка = Ложь;
		
		Запрос = Новый Запрос;
		
		СтрокаПоиска = Неопределено;
		
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Договоры.Ссылка КАК Ссылка,
		               |	Договоры.ПометкаУдаления КАК ПометкаУдаления
		               |ИЗ
		               |	Справочник.ДоговорыКонтрагентов КАК Договоры		              
		               |ГДЕ
		               |	НЕ Договоры.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И Договоры.Наименование ПОДОБНО &ШаблонНаименования ";
		
	   Если Параметры.Свойство("Отбор") Тогда			   
		   ТекстОтбор = "";
		   Для Каждого ЭлементСтруктуры Из Параметры.Отбор Цикл
			   ВидСравненияВЗапрос = " = ";
			   Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("ФиксированныйМассив") Тогда
				   ВидСравненияВЗапрос =  " В ";
			   КонецЕсли;
			   
			   ТекстОтбор =  ТекстОтбор + " И " + ЭлементСтруктуры.Ключ  + ВидСравненияВЗапрос +  " (&Параметр" + ЭлементСтруктуры.Ключ + ")";
			   Запрос.УстановитьПараметр("Параметр" + ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
			   
		   КонецЦикла;
		   Запрос.Текст = Запрос.Текст + ТекстОтбор;
	   КонецЕсли;

		Запрос.УстановитьПараметр("ШаблонНаименования", "%" + СтрокаПоиска + "%");
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
		
		Выборка = Запрос.Выполнить().Выбрать();
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение,ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;		
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Взаимодействия.

// Возвращает партнера и контактных лиц сделки
// 
Функция ПолучитьКонтакты(Ссылка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоКонтактам();
	Запрос.УстановитьПараметр("Предмет",Ссылка);
	
	НачатьТранзакцию();
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Результат = Неопределено;
		Иначе
			Результат = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Контакт");
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаПоКонтактам(Объединить = Ложь) Экспорт
	
	ШаблонВыбрать = ?(Объединить, "ВЫБРАТЬ РАЗЛИЧНЫЕ", "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ");
	
	ТекстЗапроса = "
	|%ШаблонВыбрать%
	|	ДоговорыКонтрагентов.Владелец КАК Контакт
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Предмет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоговорыКонтрагентов.Организация КАК Контакт
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Предмет";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ШаблонВыбрать%", ШаблонВыбрать);
	
	Если Объединить Тогда
		
		ТекстЗапроса = "
		| ОБЪЕДИНИТЬ
		|" + ТекстЗапроса;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры


Процедура УстановитьОсновнойДоговор(Владелец, ДоговорКонтрагента) Экспорт
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Контрагенты")
		И НЕ ПравоДоступа("Изменение", Метаданные.Справочники.Контрагенты) Тогда
		Возврат;
	КонецЕсли;
	
	КонтрагентОрганизацияОбъект = Владелец.ПолучитьОбъект();
	
	УстановитьОсновнойДоговор = Истина;
	
	Попытка
		КонтрагентОрганизацияОбъект.Заблокировать();
	Исключение
		// в случае блокировки - не выполнять изменение объекта
		УстановитьОсновнойДоговор = Ложь;
		// записать предупреждение в журнал регистрации
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось заблокировать объект.'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Предупреждение,, КонтрагентОрганизацияОбъект, ОписаниеОшибки());
	КонецПопытки;
	
	Если УстановитьОсновнойДоговор Тогда
		КонтрагентОрганизацияОбъект.ОсновнойДоговорКонтрагента = ДоговорКонтрагента;
		КонтрагентОрганизацияОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли
