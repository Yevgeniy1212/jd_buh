&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Проверка возможности загрузки новых обработок в информационную базу
	ЭтоНовый = Объект.Ссылка.Пустая();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДополнительныеПараметры = Новый Структура("ФормаВладелец,ИмяРеквизита", ЭтаФорма, "Описание");
	Оповещение = Новый ОписаниеОповещения("ПрочиеСведенияЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(Оповещение, Объект.Описание, НСтр("ru='Описание'"));

КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайл(Команда)
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("ЭтоОтчет", Истина);
	ПараметрыВыгрузки.Вставить("ИмяФайла", Объект.ИсточникОтчета);
	ПараметрыВыгрузки.Вставить("АдресДанныхОбработки", АдресХранилищаВнешнегоОтчета);
	ДополнительныеОтчетыИОбработкиКлиент.ВыгрузитьВФайл(ПараметрыВыгрузки);
	

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если ТекущийОбъект.ВнешнийОтчетХранилище <> Неопределено Тогда
		АдресХранилищаВнешнегоОтчета = ПоместитьВоВременноеХранилище(ТекущийОбъект.ВнешнийОтчетХранилище.Получить(),УникальныйИдентификатор);
		ИсточникОтчетаФайл = "Отчет загружен в ИБ";
	КонецЕсли;
	
	Если Объект.ВнешнийОтчетИспользовать Тогда
		ТипИспользованияВнешнегоОтчета = 1;
	КонецЕсли;	
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЭтоАдресВременногоХранилища(АдресХранилищаВнешнегоОтчета) Тогда
		ДвоичныеДанныеОбработки = ПолучитьИзВременногоХранилища(АдресХранилищаВнешнегоОтчета);
		ТекущийОбъект.ВнешнийОтчетХранилище = Новый ХранилищеЗначения(ДвоичныеДанныеОбработки, Новый СжатиеДанных(9));
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ИсточникОтчетаФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗагрузкаВнешнегоОтчетаИзФайлаЗапуск();	
КонецПроцедуры


&НаКлиенте
Процедура ТипИспользованияВнешнегоОтчетаПриИзменении(Элемент)
	Объект.ВнешнийОтчетИспользовать = ТипИспользованияВнешнегоОтчета>0;	
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	мОбъект   = Форма.Объект;
	мЭлементы = Форма.Элементы;
	
	мЭлементы.ГруппаВнешнийФайл.Доступность 	 			= мОбъект.ВнешнийОтчетИспользовать;	
	
КонецПроцедуры // УстановитьДоступность()

&НаКлиенте
Процедура ЗагрузкаВнешнегоОтчетаИзФайлаЗапуск()
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Успех", Ложь);
	ПараметрыРегистрации.Вставить("АдресДанныхОбработки", АдресХранилищаВнешнегоОтчета);
	ПараметрыРегистрации.Вставить("ОбработчикРезультата", Новый ОписаниеОповещения("ОбновлениеИзФайлаЗавершение", ЭтотОбъект));
	ПараметрыРегистрации.Вставить("КраткоеПредставлениеОшибки", "");
	
	Обработчик = Новый ОписаниеОповещения("ЗагрузкаВнешнегоОтчетаИзФайлаПослеВыбораФайла", ЭтотОбъект, ПараметрыРегистрации);
	
	ПараметрыДиалога = Новый Структура("Режим, Фильтр, ИндексФильтра, Заголовок");
	ПараметрыДиалога.Режим  = РежимДиалогаВыбораФайла.Открытие;
	ПараметрыДиалога.Фильтр = ДополнительныеОтчетыИОбработкиКлиентСервер.ФильтрДиалоговВыбораИСохранения();
	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выберите файл внешнего отчета'");
	ПараметрыДиалога.ИндексФильтра = 0;
		
	//СтандартныеПодсистемыКлиент.ПоказатьПомещениеФайла(Обработчик, УникальныйИдентификатор, Объект.ИсточникОтчета, ПараметрыДиалога);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаВнешнегоОтчетаИзФайлаПослеВыбораФайла(ПомещенныеФайлы, ПараметрыРегистрации) Экспорт
	Если ПомещенныеФайлы = Неопределено Или ПомещенныеФайлы.Количество() = 0 Тогда
		ПараметрыРегистрации.Успех = Ложь;
		ВыполнитьОбработкуОповещения(ПараметрыРегистрации.ОбработчикРезультата, ПараметрыРегистрации);
		Возврат;
	КонецЕсли;
	ПараметрыРегистрации.Успех = Истина;
	ОписаниеФайла = ПомещенныеФайлы[0];
	
	МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОписаниеФайла.Имя, "\");
	ПараметрыРегистрации.Вставить("ИмяФайла",  МассивПодстрок.Получить(МассивПодстрок.ВГраница()));
	ПараметрыРегистрации.АдресДанныхОбработки = ОписаниеФайла.Хранение;
	
	ОбновлениеИзФайлаМеханикаНаКлиенте(ПараметрыРегистрации);
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИзФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат.Успех = Истина Тогда	
		Модифицированность = Истина;		
		АдресХранилищаВнешнегоОтчета = Результат.АдресДанныхОбработки;
		ИсточникОтчетаФайл 			 = "Отчет загружен в ИБ";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИзФайлаМеханикаНаКлиенте(ПараметрыРегистрации)
	// Подготовка к вызову сервера.
	ОбработчикРезультата = ПараметрыРегистрации.ОбработчикРезультата;
	ПараметрыРегистрации.Удалить("ОбработчикРезультата");
	// Вызов сервера.
	ОбновлениеИзФайлаМеханикаНаСервере(ПараметрыРегистрации);
	// Отмена изменений.
	ПараметрыРегистрации.Вставить("ОбработчикРезультата", ОбработчикРезультата);	
		
	// Обработка результата работы сервера
	Если ПараметрыРегистрации.Успех Тогда
		ОповещениеЗаголовок = НСтр("ru = 'Файл внешнего отчета загружен'");
		ОповещениеСсылка    = ?(ЭтоНовый, "", ПолучитьНавигационнуюСсылку(Объект.Ссылка));
		ОповещениеТекст     = ПараметрыРегистрации.ИмяФайла;
		ПоказатьОповещениеПользователя(ОповещениеЗаголовок, ОповещениеСсылка, ОповещениеТекст);
		ВыполнитьОбработкуОповещения(ПараметрыРегистрации.ОбработчикРезультата, ПараметрыРегистрации);
	Иначе
		ТекстПредупреждения = ПараметрыРегистрации.КраткоеПредставлениеОшибки;
		ПоказатьПредупреждение(,ТекстПредупреждения);  		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера, Сервер

&НаСервере
Процедура ОбновлениеИзФайлаМеханикаНаСервере(ПараметрыРегистрации)
	ОбъектСправочника = РеквизитФормыВЗначение("Объект");
	
	ДвоичныеДанныеОбработки = ПолучитьИзВременногоХранилища(ПараметрыРегистрации.АдресДанныхОбработки);
	ОбъектСправочника.ВнешнийОтчетХранилище = Новый ХранилищеЗначения(ДвоичныеДанныеОбработки, Новый СжатиеДанных(9));

	ЗначениеВРеквизитФормы(ОбъектСправочника, "Объект");
	
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры
