
&НаСервере
Функция ПолучитьОтчет()
	Перем Расширение;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	РегламентированныеОтчеты.ЭтоГруппа КАК ЭтоГруппа,
		|	РегламентированныеОтчеты.ИсточникОтчета КАК ИсточникОтчета
		|ИЗ
		|	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
		|ГДЕ
		|	РегламентированныеОтчеты.Ссылка = &ТекущаяСтрока
		|");
		
	Запрос.УстановитьПараметр("ТекущаяСтрока", Элементы.Список.ТекущаяСтрока);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Если Выборка.ЭтоГруппа Тогда
		Возврат "ЭтоГруппа";
	КонецЕсли;
	
	ФайлВнешнегоОтчета = Выборка.ИсточникОтчета;
	
	ПравоДоступаКОтчету = РегламентированнаяОтчетностьВызовСервера.ПравоДоступаКРегламентированномуОтчету(ФайлВнешнегоОтчета);
	Если ПравоДоступаКОтчету = Ложь Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Недостаточно прав!'");
		Сообщение.Сообщить();
		
		Возврат Неопределено;
		
	ИначеЕсли ПравоДоступаКОтчету = Неопределено Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Отчет не найден!'");
		Сообщение.Сообщить();
		
		Возврат Неопределено;
		
	КонецЕсли;
		
	Если Метаданные.Документы.Найти(ФайлВнешнегоОтчета) <> Неопределено Тогда // это внутренний отчет-документ
			
		ВнутреннийОтчет = Документы[ФайлВнешнегоОтчета];
		Возврат "Документ." + Сред(ВнутреннийОтчет, Найти(ВнутреннийОтчет, ".") + 1) + ".Форма.ФормаДокумента";
			
	КонецЕсли;
	
	ТекОтчет = РегламентированнаяОтчетность.РеглОтчеты(ФайлВнешнегоОтчета);
	Если ТекОтчет = Неопределено Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось получить отчет!'");
		Сообщение.Сообщить();
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ТекущийОтчет  = Элементы.Список.ТекущаяСтрока;
	
	Если НЕ ТекущийОтчет.ВнешнийОтчетИспользовать Тогда
		
		Возврат "Отчет." + Сред(ТекОтчет, Найти(ТекОтчет, ".") + 1) + ".Форма.ОсновнаяФорма";	
	    	
		Иначе 								
			Попытка      								
				Возврат "ВнешнийОтчет." + Сред(ТекОтчет, Найти(ТекОтчет, ".") + 1) + ".Форма.ОсновнаяФорма";				
			Исключение
				ТекстОшибки = "ru = 'Не удалось запустить внешний отчет'";
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				Возврат "";
			КонецПопытки;			
	КонецЕсли;       
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьКнопок(ТекЭлемент)

	Показать = Истина;

	Если ТекЭлемент.ЭтоГруппа Тогда
		Показать = Ложь;
	КонецЕсли;

	Если РежимВыбора Тогда
		Показать = Ложь;
	КонецЕсли;
	
	Элементы.Новый.Доступность = Показать;

КонецПроцедуры

&НаКлиенте
Функция УстановленаСортировкаПоКоду()
	
	СортировкаПоКоду = Истина;
	
	ПолеДляУпорядочивания = Новый ПолеКомпоновкиДанных("Код");
	
	
	Если Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Количество() = 0 Тогда
		СортировкаПоКоду = Ложь;
	ИначеЕсли Список.КомпоновщикНастроек.Настройки.Порядок.Элементы[0].Поле <> ПолеДляУпорядочивания Тогда
		СортировкаПоКоду = Ложь;
	КонецЕсли;
	
	
	Если НЕ СортировкаПоКоду Тогда
		
		ПоказатьПредупреждение(Неопределено,НСтр("ru='Для изменения порядка следования необходимо установить сортировку по коду!'"));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимВыбора = Параметры.РежимВыбора;
	
	УстановитьОтборДанных();
	
	Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Очистить();
	ЭлементПорядкаДанных = Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядкаДанных.Поле = Новый ПолеКомпоновкиДанных("Код");
	ЭлементПорядкаДанных.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	ЭлементПорядкаДанных.Использование = Истина;
	
	Список.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
		
					
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДанных()
	
	СписокСкрытыхРеглОтчетов = Новый СписокЗначений;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
						  | СкрытыеРегламентированныеОтчеты.Ссылка КАК Ссылка
						  |ИЗ
						  |	Справочник.РегламентированныеОтчеты КАК СкрытыеРегламентированныеОтчеты
						  |	ГДЕ СкрытыеРегламентированныеОтчеты.НеПоказыватьВСписке ");
						  
	СписокСкрытыхРеглОтчетов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	
	ЭлементОтбораДанных = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	
	
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбораДанных.ПравоеЗначение = СписокСкрытыхРеглОтчетов;
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбораДанных.Использование = Истина;
	
	Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
		
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.Список.ТекущаяСтрока = НовыйОбъект.Ссылка;
		
КонецПроцедуры

&НаКлиенте
Функция СоздатьНовыйОтчет()
	
	Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Выберите отчет!'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ТекФорма = ПолучитьОтчет();
	
	Если ТекФорма = Неопределено
		ИЛИ ТекФорма = "ЭтоГруппа" Тогда
		Возврат ТекФорма;
	КонецЕсли;
	Попытка
		ТекФорма = ПолучитьФорму(ТекФорма);
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не удалось открыть отчет!'"));			
		Возврат Ложь; 		
	КонецПопытки;	
	
	Если ТекФорма = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось открыть отчет!'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
		
	ТекФорма.Открыть();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СоздатьНовый(Команда)
		
	СоздатьНовыйОтчет();	
			
КонецПроцедуры

&НаСервере
Процедура СкрытьОтчет()
			
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Выберите отчет!'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	РегламентированныеОтчеты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
		|ГДЕ
		|	РегламентированныеОтчеты.Ссылка В(&МассивСсылок)
		|");
	
	Запрос.УстановитьПараметр("МассивСсылок", Элементы.Список.ВыделенныеСтроки);
	Выборка = Запрос.Выполнить().Выбрать();
    	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
				
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если Объект.ЭтоГруппа Тогда
		
			Попытка
		
				ВыборкаЭлементовГруппы = Справочники.РегламентированныеОтчеты.ВыбратьИерархически(Объект.Ссылка);
				
				Пока ВыборкаЭлементовГруппы.Следующий() Цикл
					ОтчетОбъект = ВыборкаЭлементовГруппы.Ссылка.ПолучитьОбъект();
					ОтчетОбъект.НеПоказыватьВСписке = Истина;
					ОтчетОбъект.Записать();					
				КонецЦикла;
				
			Исключение
				
				Сообщение = Новый СообщениеПользователю;
				
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось изменить признак отображения отчета. %1'"), ОписаниеОшибки());
				
				Сообщение.Сообщить();
				
				Возврат;
				
			КонецПопытки;
		
		Иначе
		
			Попытка 				
				Объект.НеПоказыватьВСписке = Истина;
				Объект.Записать();								
			Исключение            								
				Сообщение = Новый СообщениеПользователю;				
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось изменить признак отображения отчета. %1'"), ОписаниеОшибки());				
				Сообщение.Сообщить();
				
				Возврат;
				
			КонецПопытки;
			
		КонецЕсли;
	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	УстановитьОтборДанных();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Скрыть(Команда)
	
	СкрытьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	
	//ФормаВыбораЭлементовДляВосстановленияПоказа = ПолучитьФорму("Справочник.РегламентированныеОтчеты.Форма.ФормаВыбораЭлементовДляВосстановленияПоказа", , ЭтаФорма);
	//
	//Если НЕ ФормаВыбораЭлементовДляВосстановленияПоказа = Неопределено Тогда
	//	ФормаВыбораЭлементовДляВосстановленияПоказа.ОткрытьМодально();
	//КонецЕсли;
	
	ОткрытьФорму("Справочник.РегламентированныеОтчеты.Форма.ФормаВыбораЭлементовДляВосстановленияПоказа", , ЭтаФорма);
	
	УстановитьОтборДанных();
			
	Элементы.Список.Обновить();
	
КонецПроцедуры
   
&НаКлиенте
Процедура ПереместитьВверх(Команда)
		
	Если УстановленаСортировкаПоКоду() Тогда
		ПереместитьЭлементВверхВыполнить(Список, Элементы.Список);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	Если УстановленаСортировкаПоКоду() Тогда
		ПереместитьЭлементВнизВыполнить(Список, Элементы.Список);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
			
	ОткрытьФорму("Обработка.ОбновлениеРегламентированнойОтчетности.Форма.ОсновнаяФорма", , ЭтаФорма);
	
	УстановитьОтборДанных();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурнал(Команда)
			
	ОткрытьФорму("Документ.РегламентированныйОтчет.ФормаСписка");
		
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ СоздатьНовыйОтчет() = "ЭтоГруппа" Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если Не ТекущиеДанные = Неопределено Тогда
		УстановитьВидимостьКнопок(ТекущиеДанные);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.Список.ТекущаяСтрока = НовыйОбъект;
		
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВверхВыполнить(СписокРеквизит, СписокЭлемент) Экспорт
	
	ПереместитьЭлементВыполнить(СписокРеквизит, СписокЭлемент, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВнизВыполнить(СписокРеквизит, СписокЭлемент) Экспорт
	
	ПереместитьЭлементВыполнить(СписокРеквизит, СписокЭлемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВыполнить(СписокРеквизит, СписокЭлемент, Вверх)
	
	УстановленныеОтборы = Новый Структура;
	УстановленныеОтборы.Вставить("ЕстьОтборПоРодителю", Ложь);
	УстановленныеОтборы.Вставить("ЕстьОтборПоВладельцу", Ложь);
	
	Если Не ПроверитьСписокПередОперацией(СписокРеквизит, СписокЭлемент, УстановленныеОтборы) Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = СписокЭлемент.ТекущаяСтрока;
	ОтображениеСписком = (СписокЭлемент.Отображение = ОтображениеТаблицы.Список);
	
	СтрОшибка = РегламентированнаяОтчетностьВызовСервера.ИзменитьПорядокЭлементов(Ссылка, УстановленныеОтборы, ОтображениеСписком, Вверх);
		
	Если СтрОшибка = "" Тогда
		СписокЭлемент.Обновить();
	Иначе
		ПоказатьПредупреждение(Неопределено, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), СтрОшибка));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьСписокПередОперацией(СписокРеквизит, СписокЭлемент, УстановленныеОтборы)
	
	// Проверим, установлена ли текущая строка
	Если СписокЭлемент.ТекущаяСтрока = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЭлементыГруппировки = СписокРеквизит.КомпоновщикНастроек.Настройки.Структура;
		
	Для Каждого ЭлементГруппировки Из ЭлементыГруппировки Цикл
		Если ЭлементГруппировки.Использование Тогда			
			ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Изменение порядка элементов невозможно при установленной группировке!'"));
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыСпискаРеквизитов = СписокРеквизит.КомпоновщикНастроек.Настройки.Отбор.Элементы;
			         	
	Для Каждого ЭлементОтбора Из ЭлементыСпискаРеквизитов Цикл
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель") Тогда
			УстановленныеОтборы.ЕстьОтборПоРодителю = Истина;
		ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец") Тогда
			УстановленныеОтборы.ЕстьОтборПоВладельцу = Истина;
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьФорму" Тогда
		УстановитьОтборДанных();	
		Элементы.Список.Обновить();
	КонецЕсли;	
КонецПроцедуры
