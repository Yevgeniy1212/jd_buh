&НаКлиенте
Перем ОрганизацияДоИзменения;


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	ЕстьПравоДобавлениеНастройкиОбменаСБанком = ПравоДоступа("Добавление", Метаданные.Справочники.НастройкиОбменСБанками);
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	Если Параметры.Ключ.Пустая() Тогда

		Объект.ВалютаДенежныхСредств = ВалютаРегламентированногоУчета;

		Если НЕ ЗначениеЗаполнено(Объект.ВидСчета) Тогда
			Объект.ВидСчета = Элементы.ВидСчета.СписокВыбора[0].Значение;
		КонецЕсли;
		
		ЗаполнитьТекстКорреспондента(Объект, Объект.ТекстКорреспондента);
		
		Объект.МесяцПрописью = Истина;	
		
		Объект.Программа    = "";
		Объект.Кодировка    = "Windows";
		
	КонецЕсли;
	
	Если Объект.ИспользоватьПрямойОбменСБанком Тогда
		РежимОбмена = 1;
	ИначеЕсли Объект.ИспользоватьОбменСБанком Тогда
		РежимОбмена = 2;
	Иначе
		РежимОбмена = 0;
	КонецЕсли;
	
	ТекущийСчетБУ = Объект.СчетЗатратБУ;
	ТекущийСчетБУ = Объект.СчетЗатратНУ;

	ЭтаФорма.Заголовок = СтрШаблон(НСтр("ru='%1 (%2)'"), ЭтаФорма.Заголовок, ?(ЗначениеЗаполнено(Объект.Владелец), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Наименование"), НСтр("ru='Владелец не задан'")));
	
	УстановитьФлагФормироватьНаименованиеАвтоматически(ЭтаФорма);
	
	РеквизитыБанка         = ПолучитьРеквизитыБанка(Объект.Банк);
	РеквизитыБанкаРасчетов = ПолучитьРеквизитыБанка(Объект.БанкДляРасчетов);
	
	ЗаполнитьБИКБанка(РеквизитыБанка, БИКБанка);
	ЗаполнитьБИКБанка(РеквизитыБанкаРасчетов, БИКБанкаДляРасчетов);
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
	КонтрагентБанк = РеквизитыБанка.Контрагент;
	
	УстановитьТипВладельца(ЭтаФорма);
	
	УправлениеФормой(ЭтаФорма);
	
	ЗаполнитьСписокПрограммКлиентБанка();
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОрганизацияДоИзменения = Объект.Владелец;
	Иначе
		ОрганизацияДоИзменения = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененБанк" Тогда
		Если Параметр.Ссылка = Объект.Банк Тогда
			
			БанкПриИзмененииНаСервере();
			
			ОбработатьИзмененияКонтрагента();
			
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "КомиссионноеОбслуживаниеИзменилось" Тогда
		Если Параметр.ИзмененныеДанные.БанковскийСчет = Объект.Ссылка Тогда
			ЗаполнитьЗначенияСвойств(Объект, Параметр.ИзмененныеДанные);
			Записать();
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.НастройкиОбменСБанками") Тогда
		ОбновитьЭлементыФормыИСоглашениеЭД();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ЭтаФорма.ВладелецФормы <> Неопределено 
		И ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("ФормаКлиентскогоПриложения")Тогда
	
		ОповеститьОВыборе(Объект.Ссылка);
	
	КонецЕсли; 

	Если Объект.Владелец <> ОрганизацияДоИзменения Тогда
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("КонтрагентОрганизация",  Объект.Владелец);
		СтруктураПараметров.Вставить("БанковскийСчет", Объект.Ссылка);
		
		Оповестить("Запись_ОрганизацияИзменилась_БанковскийСчет", СтруктураПараметров, ЭтотОбъект);
	КонецЕсли;
	
	Оповестить("Запись_БанковскийСчет", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	УстановитьФлагФормироватьНаименованиеАвтоматически(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Если Не ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		Если ЗначениеЗаполнено(Объект.Префикс) Тогда 
			Объект.Префикс = "";
		КонецЕсли;
		ОбновитьЭлементыФормыИСоглашениеЭД();
	Иначе
		ДанныеОбъекта = Новый Структура("СубконтоЗатратБУ1, СубконтоЗатратБУ2, СубконтоЗатратБУ3,
		|СубконтоЗатратНУ1, СубконтоЗатратНУ2, СубконтоЗатратНУ3");
		
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
		
		ДанныеОбъекта.Вставить("Организация", Объект.Владелец);		
		
		ВладелецПриИзмененииНаСервере(ДанныеОбъекта);
		
		ЗаполнитьЗначенияСвойств(Объект,ДанныеОбъекта);
		
		ОбработатьИзмененияКонтрагента();	
	КонецЕсли;
	
	УстановитьТипВладельца(ЭтаФорма);
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	ПараметрыОбъекта = Новый Структура("Владелец, ТекстКорреспондента, БанкДляРасчетов, НомерСчета");

	БанкПриИзмененииНаСервере();
	
	ОбработатьИзмененияКонтрагента();
	
	СформироватьНаименованиеБанковскогоСчетаАвтоматически(ЭтаФорма);
			
	ЗаполнитьБИКБанка(РеквизитыБанка, БИКБанка);	
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Банк",  Объект.Владелец);
		
	Оповестить("ЗаполненБанк", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	ПараметрыОбъекта = Новый Структура("Владелец, ТекстКорреспондента, БанкДляРасчетов, НомерСчета");
	
	ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, Объект);
	
	ПараметрыОбъекта.Вставить("РеквизитыБанка", РеквизитыБанка);

	ЗаполнитьТекстКорреспондента(ПараметрыОбъекта, Объект.ТекстКорреспондента);
	
	СформироватьНаименованиеБанковскогоСчетаАвтоматически(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ТекстКорреспондентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДополнительныеПараметры = Новый Структура("ФормаВладелец,ИмяРеквизита", ЭтаФорма, "ТекстКорреспондента");

    Оповещение = Новый ОписаниеОповещения("ТекстКорреспондентаЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
   
    ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
             Оповещение,                                                   
			 Объект.ТекстКорреспондента,
             НСтр("ru='Текст корреспондента'"));

КонецПроцедуры

&НаКлиенте
Процедура ТекстНазначенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДополнительныеПараметры = Новый Структура("ФормаВладелец,ИмяРеквизита", ЭтаФорма, "ТекстНазначения");

    Оповещение = Новый ОписаниеОповещения("ТекстНазначенияЗавершениеВвода", ЭтотОбъект, ДополнительныеПараметры);
   
    ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияМногострочногоТекста(
             Оповещение,                                                   
			 Объект.ТекстНазначения,
             НСтр("ru='Текст назначения'"));

КонецПроцедуры

&НаКлиенте
Процедура БанкДляРасчетовПриИзменении(Элемент)
	
	РеквизитыБанкаРасчетов = ПолучитьРеквизитыБанка(Объект.БанкДляРасчетов);
	
	ЗаполнитьБИКБанка(РеквизитыБанкаРасчетов,БИКБанкаДляРасчетов);
	
	ПараметрыОбъекта = Новый Структура("Владелец, ТекстКорреспондента, БанкДляРасчетов, НомерСчета");
	
	ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, Объект);
	
	ПараметрыОбъекта.Вставить("РеквизитыБанка", РеквизитыБанка);
	
	ЗаполнитьТекстКорреспондента(ПараметрыОбъекта, Объект.ТекстКорреспондента);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияДобавитьСоглашениеЭДНажатие(Элемент)
	
	НеДобавлять = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru='Не указана организация'"), , "Владелец", "Объект", НеДобавлять); 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Банк) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru='Не указан банк'"), , "БИК", "Объект", НеДобавлять); 
	КонецЕсли;
	
	Если НеДобавлять Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ПослеСозданияНастройкиЭДО", ЭтотОбъект);
	ОбменСБанкамиКлиент.ОткрытьСоздатьНастройкуОбмена(
		Объект.Владелец, Объект.Банк, Объект.НомерСчета, Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСозданияНастройкиЭДО(НастройкаЭДО, Параметры) Экспорт
	
	Элементы.ДекорацияДобавитьСоглашениеЭД.Заголовок = ОбменСБанкамиКлиентСервер.ЗаголовокНастройкиОбменаСБанком(
		Объект.Владелец, Объект.Банк);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСоглашениеЭДНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", СоглашениеЭД);
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбновитьИнформациюПоСоглашениямЭД", ЭтаФорма);
	ОткрытьФорму("Справочник.НастройкиОбменСБанками.ФормаОбъекта", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаКлиентБанкаПриИзменении(Элемент)
	
	РежимОбменаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаПрямойОбменПриИзменении(Элемент)
	
	РежимОбменаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбменаВключенПриИзменении(Элемент)
	
	РежимОбменаПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Истина, НСтр("ru='Выберите файл для загрузки данных из клиента банка'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВыборФайла(Ложь, НСтр("ru='Выберите файл для выгрузки данных в клиента банка'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра(Элемент, НСтр("ru='Файл загрузки'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФайлДляПросмотра(Элемент, НСтр("ru='Файл выгрузки'"));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ТекстКорреспондентаЗавершениеВвода(Строка, Параметры) Экспорт

	Если Строка <> Неопределено Тогда
		
		Объект.ТекстКорреспондента = Строка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстНазначенияЗавершениеВвода(Строка, Параметры) Экспорт

	Если Строка <> Неопределено Тогда
		
		Объект.ТекстНазначения = Строка;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТипВладельца(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		Возврат;
	КонецЕсли;
	    	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		Элементы.Владелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ТипВладельца = ТипЗнч(Объект.Владелец); 
	
	Если ТипВладельца <> Тип("СправочникСсылка.Организации") Тогда 
		Элементы.Префикс.Доступность = Ложь;
	Иначе 
		Элементы.Префикс.Доступность = Истина
	КонецЕсли;
	
	ВидимостьКомиссии = (ТипВладельца = Тип("СправочникСсылка.Организации"));
	Элементы.ОткрытьФормуКомиссионногоОбслуживания.Видимость = ВидимостьКомиссии;
		
	Элементы.ГруппаОбменСБанком.Видимость = ЗначениеЗаполнено(Объект.Владелец)
		И (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации"));
	
	// Обмен с банками
	Элементы.ДекорацияСоглашениеЭД.Доступность = Объект.ИспользоватьПрямойОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.ДекорацияДобавитьСоглашениеЭД.Доступность = Объект.ИспользоватьПрямойОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.ДекорацияНетПравСоглашениеЭД.Доступность = Объект.ИспользоватьПрямойОбменСБанком И Объект.ОбменСБанкомВключен;
	
	Элементы.ФайлВыгрузки.Доступность  = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.Кодировка.Доступность     = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.ФайлЗагрузки.Доступность  = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	Элементы.Программа.Доступность     = Объект.ИспользоватьОбменСБанком И Объект.ОбменСБанкомВключен;
	
	Элементы.РежимОбменаКлиентБанка.Доступность = Объект.ОбменСБанкомВключен;
	Элементы.РежимОбменаПрямойОбмен.Доступность = Объект.ОбменСБанкомВключен;
	
	Элементы.ГруппаОбменСБанком.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Обмен с банком %1'"),
		?(Объект.ОбменСБанкомВключен, НСтр("ru = '(включен)'"), НСтр("ru = '(не включен)'")));
	
	УстановитьСтраницуСоглашенийЭД(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьФлагФормироватьНаименованиеАвтоматически(Форма)
	Объект = Форма.Объект;
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) 
	 Или Объект.Наименование = (Объект.НомерСчета + " в " + Строка(Объект.Банк))
	 Или Объект.Наименование = Объект.НомерСчета
	 Или Объект.Наименование = Строка(Объект.Банк) Тогда
	 
		 Форма.ФормироватьНаименованиеАвтоматически = Истина;

	Иначе
		
		Форма.ФормироватьНаименованиеАвтоматически = Ложь;

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьТекстКорреспондента(ДанныеОбъекта, ТекстКорреспондента)

	Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.Владелец) Тогда
		Возврат;
	КонецЕсли;

	ВладелецНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеОбъекта.Владелец, "НаименованиеПолное");
		
	ТипВладельца = ТипЗнч(ДанныеОбъекта.Владелец);
	
	РеквизитыБанка = Неопределено;
	СтрДанныеПоБанку = "";
	
	СтрДанныеПоБанку = НСтр("ru=' в %1 %2'");

	Если ДанныеОбъекта.Свойство("РеквизитыБанка", РеквизитыБанка) И РеквизитыБанка <> Неопределено Тогда
		СтрДанныеПоБанку = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрДанныеПоБанку, РеквизитыБанка.Ссылка, РеквизитыБанка.Город);		
	КонецЕсли;
	             	
	Если ТипВладельца = Тип("СправочникСсылка.Организации") ИЛИ ТипВладельца = Тип("СправочникСсылка.Контрагенты") Тогда
		СтрКорреспондента  = СокрЛП(ВладелецНаименование);
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДанныеОбъекта.БанкДляРасчетов) Тогда		
		СтрКорреспондента = СтрШаблон(НСтр("ru='%1 р/с %2 %3'"), СтрКорреспондента, ДанныеОбъекта.НомерСчета, СтрДанныеПоБанку);		
		ТекстКорреспондента = СтрКорреспондента;			                              		
	КонецЕсли;		

КонецПроцедуры // ЗаполнитьТекстКорреспондента()

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьБИКБанка(РеквизитыБанка, РеквизитБИК)
	ТекстБИК = НСтр("ru='БИК: %1'");
	Если ЗначениеЗаполнено(РеквизитыБанка.Ссылка) Тогда
		ДатаПериода =  ТекущаяДата();	
		РеквизитБИК =  ?(ДатаПериода >= Дата(2010,06,07), РеквизитыБанка.БИК, РеквизитыБанка.БИКДоРеформыБанковскихСчетов);
	Иначе
		РеквизитБИК = НСтр("ru='Неопределен'");
	КонецЕсли;
	
	РеквизитБИК = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстБИК, РеквизитБИК);		
КонецПроцедуры

&НаСервере
Процедура ИзменитьДоговорКонтрагентаНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.Банк) Тогда
		Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
	ОсновнойДоговорКонтрагентаКонтрагентБанка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыБанка.Контрагент, "ОсновнойДоговорКонтрагента");

	Если НЕ ЗначениеЗаполнено(РеквизитыБанка.Контрагент) Тогда 
		Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
			Объект.ДоговорКонтрагента = Неопределено;
		КонецЕсли;
		Возврат;
	КонецЕсли; 
	
	ДопОтбор = Новый Структура;
	ДопОтбор.Вставить("ВидДоговора",СтруктураДоступныхВидовДоговоров());
	ДопОтбор.Вставить("Организация",Объект.Владелец);
	
	ОсновнойДоговорКонтрагента = ОбщегоНазначенияБК.ДоступныйДоговорКонтрагента(ОсновнойДоговорКонтрагентаКонтрагентБанка, ДопОтбор);	
			
	Объект.ДоговорКонтрагента = ОсновнойДоговорКонтрагента;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзмененияКонтрагента()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
				
		Если НЕ РеквизитыБанка.Контрагент = КонтрагентБанк 
			ИЛИ НЕ ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
			ИзменитьДоговорКонтрагентаНаСервере()
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(РеквизитыБанка.Контрагент) Тогда
			КонтрагентБанк = РеквизитыБанка.Контрагент;			
		Иначе 	
			КонтрагентБанк = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");			
		КонецЕсли;		

	КонецЕсли;                                                   
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрыВыбораДоговораСКонтрагентом(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	НовыеПараметры = Новый Массив();
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Форма.КонтрагентБанк));
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.Организация", Объект.Владелец));
	
	Элементы.ДоговорКонтрагента.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураДоступныхВидовДоговоров()
        
    СписокВидовДоговоров = Новый Массив;
    СписокВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"));
    СписокВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.Прочее"));
             
    Возврат СписокВидовДоговоров;

КонецФункции

&НаСервере
Функция ВладелецПриИзмененииНаСервере(ДанныеОбъекта)
	
		
	ПроцедурыБухгалтерскогоУчета.ПроверитьВладельцаСубконтоПодразделение(ДанныеОбъекта, 
	                                        ДанныеОбъекта.Организация, 
	                                        Новый Структура("НазваниеСубконтоБУ1, НазваниеСубконтоБУ2, НазваниеСубконтоБУ3, 
	                                                        |СубконтоБУ1, СубконтоБУ2, СубконтоБУ3",
	                                                        "СубконтоЗатратБУ1", "СубконтоЗатратБУ2", "СубконтоЗатратБУ3", 
	                                                        ДанныеОбъекта.СубконтоЗатратБУ1, ДанныеОбъекта.СубконтоЗатратБУ2, ДанныеОбъекта.СубконтоЗатратБУ3));
															
	ПроцедурыБухгалтерскогоУчета.ПроверитьВладельцаСубконтоПодразделение(ДанныеОбъекта, 
	                                        ДанныеОбъекта.Организация, 
	                                        Новый Структура("НазваниеСубконтоБУ1, НазваниеСубконтоБУ2, НазваниеСубконтоБУ3, 
	                                                        |СубконтоБУ1, СубконтоБУ2, СубконтоБУ3",
	                                                        "СубконтоЗатратНУ1", "СубконтоЗатратНУ2", "СубконтоЗатратНУ3", 
	                                                        ДанныеОбъекта.СубконтоЗатратНУ1, ДанныеОбъекта.СубконтоЗатратНУ2, ДанныеОбъекта.СубконтоЗатратНУ3));
КонецФункции

&НаКлиенте
Процедура РежимОбменаПриИзменении()
	
	Объект.ИспользоватьПрямойОбменСБанком = (РежимОбмена = 1);
	Объект.ИспользоватьОбменСБанком = (РежимОбмена = 2);
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция БанкПриИзмененииНаСервере()
	
	РеквизитыБанка = ПолучитьРеквизитыБанка(Объект.Банк);
	
	ПараметрыОбъекта = Новый Структура("Владелец, ТекстКорреспондента, БанкДляРасчетов, НомерСчета");
	
	ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, Объект);
	ПараметрыОбъекта.Вставить("РеквизитыБанка", РеквизитыБанка);
	
	ЗаполнитьТекстКорреспондента(ПараметрыОбъекта, Объект.ТекстКорреспондента);
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьНаименованиеБанковскогоСчетаАвтоматически(Форма)
	Объект = Форма.Объект;
	Если Форма.ФормироватьНаименованиеАвтоматически Тогда
		Если ЗначениеЗаполнено(Объект.НомерСчета) и ЗначениеЗаполнено(Объект.Банк) Тогда
			Объект.Наименование = СокрЛП(Объект.НомерСчета) + " в " + СокрЛП(Строка(Объект.Банк));
		Иначе
			Объект.Наименование = ?(ЗначениеЗаполнено(Объект.НомерСчета), СокрЛП(Объект.НомерСчета), СокрЛП(Объект.Банк));
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // СформироватьНаименованиеБанковскогоСчетаАвтоматически()

&НаСервереБезКонтекста
Функция ПолучитьМетодОтнесенияНДСВЗачет(Организация,Дата)
	
	Возврат УчетнаяПолитикаСервер.ПолучитьМетодОтнесенияНДСВЗачет(Организация, Дата);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыБанка(Банк)
	
	РеквизитыБанка = Справочники.Банки.ПолучитьРеквизитыБанка(Банк);

	Возврат РеквизитыБанка;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФайлДляПросмотра(Элемент, Заголовок)
	
	ФайлНаДиске = Новый Файл;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФайлДляПросмотраНачатьИнициализацию",
		ЭтотОбъект,
		Новый Структура("Элемент, Заголовок", Элемент, Заголовок));
		
	ФайлНаДиске.НачатьИнициализацию(ОписаниеОповещения, Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотраНачатьИнициализацию(Файл, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФайлДляПросмотраФайлСуществует",
		ЭтотОбъект,
		ДополнительныеПараметры);
		
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДляПросмотраФайлСуществует(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не найден файл!'"));
		Возврат;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент;
	Если Объект.Кодировка = "DOS" Тогда
		Кодир = КодировкаТекста.OEM;
	Иначе
		Кодир = КодировкаТекста.ANSI;
	КонецЕсли;
	
	Текст.Прочитать(ДополнительныеПараметры.Элемент.ТекстРедактирования, Кодир);
	Текст.Показать(ДополнительныеПараметры.Заголовок, ДополнительныеПараметры.Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайла(Загрузка, Заголовок);
	
	ИмяФайла = ?(Загрузка, Объект.ФайлЗагрузки, Объект.ФайлВыгрузки);
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр = НСтр("ru='Текстовый файл (*.txt)|*.txt'");
	ДиалогВыбораФайла.Заголовок = Заголовок;
	ДиалогВыбораФайла.ПредварительныйПросмотр = Ложь;
	ДиалогВыбораФайла.Расширение = "txt";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	ДиалогВыбораФайла.ПолноеИмяФайла = ИмяФайла;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыборФайлаЗавершение",
		ЭтотОбъект,
		Новый Структура("Загрузка", Загрузка));
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Загрузка Тогда
		Объект.ФайлЗагрузки = ВыбранныеФайлы[0];
	Иначе
		Объект.ФайлВыгрузки = ВыбранныеФайлы[0];
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыФормыИСоглашениеЭД();
	
	ЗаполнитьСоглашениеЭД();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоглашениеЭД()
	
	СоглашениеЭД = Неопределено;
	
	Если ЗначениеЗаполнено(Объект.Владелец) И ЗначениеЗаполнено(Объект.Банк)
		И ПравоДоступа("Чтение", Метаданные.Справочники.НастройкиОбменСБанками) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Соглашения.Ссылка КАК СоглашениеЭД,
		|	Соглашения.Недействительна КАК СтатусСоглашения
		|ИЗ
		|	Справочник.НастройкиОбменСБанками КАК Соглашения
		|ГДЕ
		|	Соглашения.Организация = &Организация
		|	И Соглашения.Банк = &Банк";
		
		Запрос.УстановитьПараметр("Организация", Объект.Владелец);
		Запрос.УстановитьПараметр("Банк", Объект.Банк);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СоглашениеЭД = Выборка.СоглашениеЭД;
			СтатусСоглашенияЭД = Выборка.СтатусСоглашения;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницуСоглашенийЭД(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Не Объект.ИспользоватьПрямойОбменСБанком Тогда
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаЕстьСоглашениеЭД;
		Элементы.ДекорацияСоглашениеЭД.Заголовок = "";
		Элементы.ДекорацияСоглашениеЭД.Гиперссылка = Ложь;
	ИначеЕсли ЗначениеЗаполнено(Форма.СоглашениеЭД) Тогда
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаЕстьСоглашениеЭД;
		Элементы.ДекорацияСоглашениеЭД.Заголовок = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1'"), Форма.СоглашениеЭД);
		Элементы.ДекорацияСоглашениеЭД.Гиперссылка = Истина;
	ИначеЕсли Форма.ЕстьПравоДобавлениеНастройкиОбменаСБанком Тогда
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаНетСоглашенияЭДДобавление;
	Иначе
		Элементы.ГруппаСоглашениеЭД.ТекущаяСтраница = Элементы.СтраницаНетСоглашенияЭДНетПрав;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПрограммКлиентБанка()
	
	СписокВыбора = Элементы.Программа.СписокВыбора;
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить("Банк ТуранАлем клиент, v.1.0", НСтр("ru='Банк ТуранАлем клиент, v.1.0'"));
	СписокВыбора.Добавить("Банк ""ЦентрКредит"" Интернет-Клиент", НСтр("ru='Банк ""ЦентрКредит"" Интернет-Клиент'"));
	СписокВыбора.Добавить("HalykBank Банк-Клиент", НСтр("ru='HalykBank Банк-Клиент'"));
	СписокВыбора.Добавить("HalykBank Интернет-Клиент", НСтр("ru='HalykBank Интернет-Клиент'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюПоСоглашениямЭД(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьЭлементыФормыИСоглашениеЭД();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКомиссионногоОбслуживания(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("БанковскийСчет", 	Объект.Ссылка);
	ПараметрыФормы.Вставить("КонтрагентБанк", 	ЭтаФорма.КонтрагентБанк);
	ПараметрыФормы.Вставить("Владелец", 		Объект.Владелец);
	ПараметрыФормы.Вставить("Банк", 			Объект.Банк);
	
	ОткрытьФорму("Справочник.БанковскиеСчета.Форма.ФормаКомиссионноеОбслуживание", ПараметрыФормы, Объект, ,);
	
КонецПроцедуры
