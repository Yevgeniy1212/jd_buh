#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВыбиратьКомпенсируемыеУдержания") И Параметры.ВыбиратьКомпенсируемыеУдержания Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтрокаПоиска = Неопределено;
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		ТекстУсловия 	= "";
		
		Если СтрокаПоиска <> Неопределено Тогда 
			ТекстУсловия = "И НалогиСборыОтчисления.Наименование ПОДОБНО &ШаблонНаименования ";
		КонецЕсли;
		
		Запрос = Новый Запрос;  		
	    СписокДопустимыхЗначений = Новый СписокЗначений;
	    СписокДопустимыхЗначений.Добавить(Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог);
	    СписокДопустимыхЗначений.Добавить(Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
	    СписокДопустимыхЗначений.Добавить(Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование);
		
		Запрос.УстановитьПараметр("Ссылка", СписокДопустимыхЗначений);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалогиСборыОтчисления.Ссылка,
		|	НалогиСборыОтчисления.Наименование КАК Наименование,
		|	НалогиСборыОтчисления.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.НалогиСборыОтчисления КАК НалогиСборыОтчисления
		|ГДЕ
		|	НалогиСборыОтчисления.Ссылка В (&Ссылка)
		|	" + ТекстУсловия + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
		
		Запрос.УстановитьПараметр("ШаблонНаименования", "%" + СтрокаПоиска + "%");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение, ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;
		
	ИначеЕсли Параметры.Свойство("ВыбиратьСписокЗапрещенныхНалогов") И Параметры.ВыбиратьСписокЗапрещенныхНалогов Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтрокаПоиска = Неопределено;
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		ТекстУсловия 	= "";
		
				Если СтрокаПоиска <> Неопределено Тогда 
			ТекстУсловия = "И НалогиСборыОтчисления.Наименование ПОДОБНО &ШаблонНаименования ";
		КонецЕсли;

		Запрос = Новый Запрос;  		
		Список = Новый СписокЗначений;
		Список.Добавить(Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане);
		Список.Добавить(Справочники.НалогиСборыОтчисления.СоциальныйНалогИнвалиды);
		Список.Добавить(Справочники.НалогиСборыОтчисления.СоциальныйНалогИностранныеСпециалисты);
		Список.Добавить(Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость);
		
		Запрос.УстановитьПараметр("Список", Список);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НалогиСборыОтчисления.Ссылка,
		|	НалогиСборыОтчисления.Наименование КАК Наименование,
		|	НалогиСборыОтчисления.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.НалогиСборыОтчисления КАК НалогиСборыОтчисления
		|ГДЕ
		|	НЕ НалогиСборыОтчисления.Ссылка В(&Список)
		|	" + ТекстУсловия + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
		
		Запрос.УстановитьПараметр("ШаблонНаименования", "%" + СтрокаПоиска + "%");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение, ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли