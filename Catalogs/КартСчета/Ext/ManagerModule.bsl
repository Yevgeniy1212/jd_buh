#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	

	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Процедура ЗаполнитьФизЛицоВладелецСчета(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МетаданныеСправочника = Метаданные.Справочники.КартСчета;
	Если МетаданныеСправочника.Реквизиты.Найти("УдалитьФамилия") = Неопределено
	 Или МетаданныеСправочника.Реквизиты.Найти("УдалитьИмя") = Неопределено
	 Или МетаданныеСправочника.Реквизиты.Найти("УдалитьОтчество") = Неопределено
	 Или МетаданныеСправочника.Реквизиты.Найти("УдалитьИдентификационныйКодЛичности") = Неопределено Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КартСчета.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(КартСчета.Ссылка) КАК Представление,
	|	КартСчета.УдалитьФамилия КАК УдалитьФамилия,
	|	КартСчета.УдалитьИмя КАК УдалитьИмя,
	|	КартСчета.УдалитьОтчество КАК УдалитьОтчество,
	|	КартСчета.УдалитьИдентификационныйКодЛичности КАК УдалитьИдентификационныйКодЛичности
	|ИЗ
	|	Справочник.КартСчета КАК КартСчета
	|ГДЕ
	|	КартСчета.НеЯвляетсяВладельцемСчета
	|	И КартСчета.ФизЛицоВладелецСчета = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	И (СОКРЛП(КартСчета.УдалитьФамилия) <> """"
	|			ИЛИ СОКРЛП(КартСчета.УдалитьИмя) <> """"
	|			ИЛИ СОКРЛП(КартСчета.УдалитьОтчество) <> """"
	|			ИЛИ СОКРЛП(КартСчета.УдалитьИдентификационныйКодЛичности) <> """")");
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПроизошлаОшибка = Ложь;
		СообщениеОбОшибке = "";
		
		Попытка
			НачатьТранзакцию();
			
			ДанныеФизЛица = Новый Структура;
			ДанныеФизЛица.Вставить("Фамилия"   , СокрЛП(Выборка.УдалитьФамилия));
			ДанныеФизЛица.Вставить("Имя"       , СокрЛП(Выборка.УдалитьИмя));
			ДанныеФизЛица.Вставить("Отчество"  , СокрЛП(Выборка.УдалитьОтчество));
			
			ФИО = Новый Массив;
			Если Не ПустаяСтрока(ДанныеФизЛица.Фамилия) Тогда
				ФИО.Добавить(ДанныеФизЛица.Фамилия);
			КонецЕсли;
			Если Не ПустаяСтрока(ДанныеФизЛица.Имя) Тогда
				ФИО.Добавить(ДанныеФизЛица.Имя);
			КонецЕсли;
			Если Не ПустаяСтрока(ДанныеФизЛица.Отчество) Тогда
				ФИО.Добавить(ДанныеФизЛица.Отчество);
			КонецЕсли;
			ФИО = СтрСоединить(ФИО, " ");
			
			ДанныеФизЛица.Вставить("ФИОФизЛица", ФИО);
			ДанныеФизЛица.Вставить("ИИН"       , Выборка.УдалитьИдентификационныйКодЛичности);
			
			ФизЛицоВладелецСчета = Справочники.ФизическиеЛица.СоздатьНайтиФизическоеЛицо(ДанныеФизЛица, Ложь);
			Если ФизЛицоВладелецСчета = Неопределено Тогда
				ПроизошлаОшибка = Истина;
				СообщениеОбОшибке = СтрШаблон(НСтр("ru='Для карт-счета %3 не удалось создать физ.лицо-владельца %1 (ИИН %2)'"), ФИО, ДанныеФизЛица.ИИН, Выборка.Представление);
			Иначе
				КартСчетОбъект = Выборка.Ссылка.ПолучитьОбъект();
				КартСчетОбъект.ФизЛицоВладелецСчета = ФизЛицоВладелецСчета;
				КартСчетОбъект.ОбменДанными.Загрузка = Истина;
				КартСчетОбъект.Записать();
				ЗафиксироватьТранзакцию();
			КонецЕсли;
			
		Исключение
			ПроизошлаОшибка = Истина;
			СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
		
		Если ПроизошлаОшибка Тогда
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Операция не выполнена'", ОбщегоНазначения.КодОсновногоЯзыка());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка, МетаданныеСправочника, Выборка.Ссылка, СообщениеОбОшибке);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
