
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьПараметрыПрописи(ЭтаФорма);
	СформироватьНадписиПолейПрописиНаРусском(ЭтаФорма);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокКурсовВалют, "Валюта", Объект.Ссылка,,,Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокКурсовВалют, "Валюта", Объект.Ссылка,,,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("ЗакрытьФормуКлассификатора",, ВладелецФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)
	
	Если ПустаяСтрока(ПолеПрописи1наРусском) Тогда
		ПолеПрописи1наРусском = НРег(Объект.НаименованиеПолное);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПрописиНаРусскомПриИзменении(Элемент)

	СформироватьПараметрыПрописиНаРусском();
	СформироватьНадписиПолейПрописиНаРусском(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПолеПрописиДлинаДробнойЧастиПриИзменении(Элемент)

	СформироватьПараметрыПрописиНаРусском();
	СформироватьНадписиПолейПрописиНаРусском(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокКурсовВалют

&НаКлиенте
Процедура СписокКурсовВалютПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;	
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОЗаписиЭлемента", ЭтотОбъект, Новый Структура("Копирование", Копирование));
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Элемент еще не записан. Записать?'"), Режим, 0)
		
	Иначе
		
		ПослеЗакрытияВопросаОЗаписиЭлемента(КодВозвратаДиалога.Пропустить, Новый Структура("Копирование", Копирование));
		
	КонецЕсли;
	
	Если НЕ Копирование Тогда
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОЗаписиЭлемента(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать элемент!'"));
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	Если НЕ Параметры.Копирование Тогда
		
		КурсВалюты = ПолучитьКурсВалюты(Объект.Ссылка);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Валюта", 	 Объект.Ссылка);
		ПараметрыФормы.Вставить("Кратность", КурсВалюты.Кратность);
		ПараметрыФормы.Вставить("Курс", 	 КурсВалюты.Курс);

		ОткрытьФорму("РегистрСведений.КурсыВалют.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокКурсовВалютПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элементы.СписокКурсовВалют.ТекущиеДанные;
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;

    Если ЗначениеЗаполнено(ДанныеСтроки.Период) Тогда
    	ДатаСреза = ДанныеСтроки.Период - 86400;
    Иначе
    	// если это запись с пустым периодом, ее точно удалять нельзя
    	Отказ = Истина;
    	Возврат;
    КонецЕсли;
    
    Если ОднаСтрокаПоВалюте(ДанныеСтроки.Валюта, ДатаСреза) Тогда
    	// это строка с первой записью о курсе и кратности для валюты, ее удалять нельзя
    	Отказ = Истина;
    КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьНадписиПолейПрописиНаРусском(Форма)

	Элементы = Форма.Элементы;
	
	Надписи = Новый Структура("м1, м2, м3, ж1, ж2, ж3, с1, с2, с3");

	Надписи.м1 = "один"; Надписи.м2 = "два"; Надписи.м3 = "пять";
	Надписи.ж1 = "одна"; Надписи.ж2 = "две"; Надписи.ж3 = "пять";
	Надписи.с1 = "одно"; Надписи.с2 = "два"; Надписи.с3 = "пять";

	Род = Форма.ПолеПрописи4наРусском;

	Элементы.ПолеПрописи1наРусском.Заголовок = Надписи[Род + "1"];
	Элементы.ПолеПрописи2наРусском.Заголовок = Надписи[Род + "2"];
	Элементы.ПолеПрописи3наРусском.Заголовок = Надписи[Род + "3"];

	Род = Форма.ПолеПрописи8наРусском;

	Элементы.ПолеПрописи5наРусском.Заголовок = Надписи[Род + "1"];
	Элементы.ПолеПрописи6наРусском.Заголовок = Надписи[Род + "2"];
	Элементы.ПолеПрописи7наРусском.Заголовок = Надписи[Род + "3"];

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПрочитатьПараметрыПрописи(Форма)

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СтрокаПараметров = СтрЗаменить(Объект.ПараметрыПрописиНаРусском, ",", Символы.ПС);

	Форма.ПолеПрописи1наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 1));
	Форма.ПолеПрописи2наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 2));
	Форма.ПолеПрописи3наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 3));
	Форма.ПолеПрописи4наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 4));
	Форма.ПолеПрописи5наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 5));
	Форма.ПолеПрописи6наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 6));
	Форма.ПолеПрописи7наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 7));
	Форма.ПолеПрописи8наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 8));
	Форма.ПолеПрописиДлинаДробнойЧасти = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 9));

	Если НЕ ЗначениеЗаполнено(Форма.ПолеПрописи4наРусском) Тогда
		Форма.ПолеПрописи4наРусском = Элементы.ПолеПрописи4наРусском.СписокВыбора[0].Значение;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Форма.ПолеПрописи8наРусском) Тогда
		Форма.ПолеПрописи8наРусском = Элементы.ПолеПрописи8наРусском.СписокВыбора[0].Значение;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Форма.ПолеПрописиДлинаДробнойЧасти) Тогда
		Форма.ПолеПрописиДлинаДробнойЧасти = Элементы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора[0].Значение;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПараметрыПрописиНаРусском()

	Объект.ПараметрыПрописиНаРусском = ПолеПрописи1наРусском + ", "
	                          + ПолеПрописи2наРусском + ", "
	                          + ПолеПрописи3наРусском + ", "
	                          + ПолеПрописи4наРусском + ", "
	                          + ПолеПрописи5наРусском + ", "
	                          + ПолеПрописи6наРусском + ", "
	                          + ПолеПрописи7наРусском + ", "
	                          + ПолеПрописи8наРусском + ", "
	                          + ПолеПрописиДлинаДробнойЧасти;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКурсВалюты(Ссылка)
	
	Возврат ОбщегоНазначенияБК.ПолучитьКурсВалюты(Ссылка, ТекущаяДата());
	
КонецФункции

&НаСервереБезКонтекста
Функция ОднаСтрокаПоВалюте(Валюта, ДатаСреза)
	
	Возврат РегистрыСведений.КурсыВалют.СрезПоследних(ДатаСреза, Новый Структура("Валюта", Валюта)).Количество() = 0;
	
КонецФункции

