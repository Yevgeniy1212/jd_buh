#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	

	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("РаботникиОрганизации") И Параметры.РаботникиОрганизации Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтрокаПоиска = Неопределено;
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		ТекстУсловия 	= "";
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		
		Если СтрокаПоиска <> Неопределено Тогда 
			ТекстУсловия = "И РаботникиОрганизации.Сотрудник.Наименование ПОДОБНО &ШаблонНаименования ";
		КонецЕсли;
		
		ТекстУсловияОрганизации = "";
		Если Параметры.Отбор.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Отбор.Организация) Тогда
			ТекстУсловияОрганизации = "И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация";
			Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Параметры.Отбор.Организация));
		КонецЕсли;
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизации.Сотрудник.Наименование КАК Наименование,
		|	РаботникиОрганизации.Сотрудник.Физлицо.Наименование КАК ФизЛицоНаименование,
		|	СотрудникиОрганизаций.Ссылка,
		|	СотрудникиОрганизаций.ПометкаУдаления
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ПО РаботникиОрганизации.Сотрудник = СотрудникиОрганизаций.Ссылка
		|ГДЕ
		|	РаботникиОрганизации.Сотрудник.Актуальность
		|       И РаботникиОрганизации.Активность
		| "+ ТекстУсловия + ТекстУсловияОрганизации;
		
		Запрос.УстановитьПараметр("ШаблонНаименования", "%" + СтрокаПоиска + "%");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение, ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;
		
	ИначеЕсли Параметры.Свойство("СотрудникиОрганизацииСправочник") И Параметры.СотрудникиОрганизацииСправочник Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтрокаПоиска = Неопределено;
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		ТекстУсловия 	= "";
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		
		Запрос.УстановитьПараметр("НеУчитыватьАктуальность", Истина);
		
		Запрос.УстановитьПараметр("НеОтбиратьПоОрганизации", ?(ЗначениеЗаполнено(Параметры.Отбор.Организация), Ложь, Истина));
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБКВызовСервера.ГоловнаяОрганизацияДляУчетаЗарплаты(Параметры.Отбор.Организация));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Сотрудники.Наименование КАК Наименование,
		|	Сотрудники.ПометкаУдаления,
		|	Сотрудники.Ссылка
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		|		ПО Сотрудники.Ссылка = Работники.Сотрудник
		|	    И Работники.Активность
		|ГДЕ
		|	Сотрудники.Наименование ПОДОБНО &ШаблонНаименования
		|	И (&НеОтбиратьПоОрганизации
		|			ИЛИ Сотрудники.Организация = &ГоловнаяОрганизация)
		|	И (&НеУчитыватьАктуальность
		|			ИЛИ Сотрудники.Актуальность)
		|	И Работники.Сотрудник ЕСТЬ NULL ";
		
		Запрос.УстановитьПараметр("ШаблонНаименования", "%" + СтрокаПоиска + "%");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение, ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;
		
	ИначеЕсли Параметры.Свойство("СотрудникиСправочник") И Параметры.СотрудникиСправочник Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтрокаПоиска = Неопределено;
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		ТекстУсловия 	= "";
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	СотрудникиОрганизаций.Наименование КАК Наименование
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Наименование ПОДОБНО &ШаблонНаименования
		|	И СотрудникиОрганизаций.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|	И СотрудникиОрганизаций.Актуальность";
		
		Запрос.УстановитьПараметр("ШаблонНаименования", "%" + СтрокаПоиска + "%");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение, ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
КонецПроцедуры

#КонецЕсли