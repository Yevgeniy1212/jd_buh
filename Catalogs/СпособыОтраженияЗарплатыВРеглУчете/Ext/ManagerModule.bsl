#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Формирует представление переданного способа отражения с "предметной" точки зрения
//
// Параметры
//  СпособОтраженияВБухучете - СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете - описываемый 
//                 способ отражения
//
// Возвращаемое значение:
//   строка - сформированное представление
//
Функция ПолучитьПредставлениеСпособаОтраженияНачисленияВУчетах(СпособОтраженияВБухучете) Экспорт
	
	Если СпособОтраженияВБухучете.Пустая() Тогда
		РасшифровкаТекст = НСтр("ru = 'Способ отражения определяется по данным о работнике и его плановых начислениях'");
	ИначеЕсли СпособОтраженияВБухучете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете Тогда
		РасшифровкаТекст = НСтр("ru = 'Начисление не отражается в бухгалтерском учете'");
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", СпособОтраженияВБухучете);
		Запрос.УстановитьПараметр("Подразделения", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Подразделения);
		Запрос.УстановитьПараметр("РаботникиОрганизаций", ПланыВидовХарактеристик.ВидыСубконтоТиповые.РаботникиОрганизаций);
		Запрос.УстановитьПараметр("Контрагенты", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
		Запрос.УстановитьПараметр("СчетРасчетовПоИЛ", ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоИсполнительнымЛистам);

		ИмяПланаСчетов = "Типовой";

		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СпособыОтраженияЗарплатыВРеглУчете.СчетДт.Код, """") КАК СчетДт,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоДт1) КАК СубконтоДт1Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоДт2) КАК СубконтоДт2Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоДт3) КАК СубконтоДт3Представление,
		|
		|	ЕСТЬNULL(СпособыОтраженияЗарплатыВРеглУчете.СчетКт.Код, """") КАК СчетКт,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт1) КАК СубконтоКт1Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт2) КАК СубконтоКт2Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт3) КАК СубконтоКт3Представление,
		|
		|	ЕСТЬNULL(СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ.Код, """") КАК СчетДтНУ,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоДтНУ1) КАК СубконтоДтНУ1Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоДтНУ2) КАК СубконтоДтНУ2Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоДтНУ3) КАК СубконтоДтНУ3Представление,
		|
		|	ЕСТЬNULL(СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ.Код, """") КАК СчетКтНУ,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКтНУ1) КАК СубконтоКтНУ1Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКтНУ2) КАК СубконтоКтНУ2Представление,
		|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКтНУ3) КАК СубконтоКтНУ3Представление,
		|
		|	ЕСТЬNULL(ТиповойВидыСубконтоДт.КоличествоСк, 0) КАК КоличествоСкДтБУ,
		|	ЕСТЬNULL(ТиповойВидыСубконтоКт.КоличествоСк, 0) КАК КоличествоСкКтБУ,
		|	ЕСТЬNULL(ВидСубконтоДтБУПодразделения.НомерСтроки, 0) КАК НомерСкДтПодразделенияБУ,
		|	ЕСТЬNULL(ВидСубконтоДтБУРаботникиОрганизаций.НомерСтроки, 0) КАК НомерСкДтРаботникиОрганизацийБУ,
		|	ЕСТЬNULL(ВидСубконтоКтБУРаботникиОрганизаций.НомерСтроки, 0) КАК НомерСкКтРаботникиОрганизацийБУ,
		|	ЕСТЬNULL(ВидСубконтоКтБУКонтрагенты.НомерСтроки, 0) КАК НомерСкКтКонтрагентыБУ,
		|		
		|	ЕСТЬNULL(НалоговыйВидыСубконтоДт.КоличествоСк, 0) КАК КоличествоСкДтНУ,
		|	ЕСТЬNULL(НалоговыйВидыСубконтоКт.КоличествоСк, 0) КАК КоличествоСкКтНУ,
		|	ЕСТЬNULL(ВидСубконтоДтНУПодразделения.НомерСтроки, 0) КАК НомерСкДтПодразделенияНУ,
		|	ЕСТЬNULL(ВидСубконтоДтНУРаботникиОрганизаций.НомерСтроки, 0) КАК НомерСкДтРаботникиОрганизацийНУ,
		|	ЕСТЬNULL(ВидСубконтоКтНУРаботникиОрганизаций.НомерСтроки, 0) КАК НомерСкКтРаботникиОрганизацийНУ,
		|	ЕСТЬNULL(ВидСубконтоКтНУКонтрагенты.НомерСтроки, 0) КАК НомерСкКтКонтрагентыНУ
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		СпособыОтраженияЗарплатыВРеглУчете.Ссылка КАК Ссылка,
		|
		|		СпособыОтраженияЗарплатыВРеглУчете.СчетДт КАК СчетДт,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоДт1 КАК СубконтоДт1,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоДт2 КАК СубконтоДт2,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоДт3 КАК СубконтоДт3,
		|
		|		СпособыОтраженияЗарплатыВРеглУчете.СчетКт КАК СчетКт,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт1 КАК СубконтоКт1,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт2 КАК СубконтоКт2,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт3 КАК СубконтоКт3,
		|
		|		СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ КАК СчетДтНУ,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоДтНУ1 КАК СубконтоДтНУ1,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоДтНУ2 КАК СубконтоДтНУ2,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоДтНУ3 КАК СубконтоДтНУ3,
		|
		|		СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ КАК СчетКтНУ,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоКтНУ1 КАК СубконтоКтНУ1,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоКтНУ2 КАК СубконтоКтНУ2,
		|		СпособыОтраженияЗарплатыВРеглУчете.СубконтоКтНУ3 КАК СубконтоКтНУ3
		|
		|	ИЗ
		|		Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК СпособыОтраженияЗарплатыВРеглУчете
		|	ГДЕ
		|		СпособыОтраженияЗарплатыВРеглУчете.Ссылка = &Ссылка) КАК СпособыОтраженияЗарплатыВРеглУчете
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(ТиповойВидыСубконто.ВидСубконто) КАК КоличествоСк,
		|			ТиповойВидыСубконто.Ссылка КАК Ссылка
		|		ИЗ
		|			ПланСчетов." + ИмяПланаСчетов + ".ВидыСубконто КАК ТиповойВидыСубконто
		|		СГРУППИРОВАТЬ ПО
		|			ТиповойВидыСубконто.Ссылка) КАК ТиповойВидыСубконтоДт
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетДт = ТиповойВидыСубконтоДт.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(ТиповойВидыСубконто.ВидСубконто) КАК КоличествоСк,
		|			ТиповойВидыСубконто.Ссылка КАК Ссылка
		|		ИЗ
		|			ПланСчетов." + ИмяПланаСчетов + ".ВидыСубконто КАК ТиповойВидыСубконто
		|		СГРУППИРОВАТЬ ПО
		|			ТиповойВидыСубконто.Ссылка) КАК ТиповойВидыСубконтоКт
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетКт = ТиповойВидыСубконтоКт.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов." + ИмяПланаСчетов + ".ВидыСубконто КАК ВидСубконтоДтБУПодразделения
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетДт = ВидСубконтоДтБУПодразделения.Ссылка
		|			И ВидСубконтоДтБУПодразделения.ВидСубконто = &Подразделения
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов." + ИмяПланаСчетов + ".ВидыСубконто КАК ВидСубконтоДтБУРаботникиОрганизаций
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетДт = ВидСубконтоДтБУРаботникиОрганизаций.Ссылка
		|			И ВидСубконтоДтБУРаботникиОрганизаций.ВидСубконто = &РаботникиОрганизаций
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов." + ИмяПланаСчетов + ".ВидыСубконто КАК ВидСубконтоКтБУРаботникиОрганизаций
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетКт = ВидСубконтоКтБУРаботникиОрганизаций.Ссылка
		|			И ВидСубконтоКтБУРаботникиОрганизаций.ВидСубконто = &РаботникиОрганизаций
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов." + ИмяПланаСчетов + ".ВидыСубконто КАК ВидСубконтоКтБУКонтрагенты
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетКт = ВидСубконтоКтБУКонтрагенты.Ссылка
		|			И ВидСубконтоКтБУКонтрагенты.ВидСубконто = &Контрагенты
		|			И СпособыОтраженияЗарплатыВРеглУчете.СчетКт = &СчетРасчетовПоИЛ
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(НалоговыйВидыСубконто.ВидСубконто) КАК КоличествоСк,
		|			НалоговыйВидыСубконто.Ссылка КАК Ссылка
		|		ИЗ
		|			ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйВидыСубконто
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйВидыСубконто.Ссылка) КАК НалоговыйВидыСубконтоДт
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ = НалоговыйВидыСубконтоДт.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КОЛИЧЕСТВО(НалоговыйВидыСубконто.ВидСубконто) КАК КоличествоСк,
		|			НалоговыйВидыСубконто.Ссылка КАК Ссылка
		|		ИЗ
		|			ПланСчетов.Налоговый.ВидыСубконто КАК НалоговыйВидыСубконто
		|		СГРУППИРОВАТЬ ПО
		|			НалоговыйВидыСубконто.Ссылка) КАК НалоговыйВидыСубконтоКт
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ = НалоговыйВидыСубконтоКт.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидСубконтоДтНУПодразделения
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ = ВидСубконтоДтНУПодразделения.Ссылка
		|			И ВидСубконтоДтНУПодразделения.ВидСубконто = &Подразделения
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидСубконтоДтНУРаботникиОрганизаций
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетДтНУ = ВидСубконтоДтНУРаботникиОрганизаций.Ссылка
		|			И ВидСубконтоДтНУРаботникиОрганизаций.ВидСубконто = &РаботникиОрганизаций
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидСубконтоКтНУРаботникиОрганизаций
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ = ВидСубконтоКтНУРаботникиОрганизаций.Ссылка
		|			И ВидСубконтоКтНУРаботникиОрганизаций.ВидСубконто = &РаботникиОрганизаций
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидСубконтоКтНУКонтрагенты
		|		ПО СпособыОтраженияЗарплатыВРеглУчете.СчетКтНУ = ВидСубконтоКтНУКонтрагенты.Ссылка
		|			И ВидСубконтоКтНУКонтрагенты.ВидСубконто = &Контрагенты
		|			И СпособыОтраженияЗарплатыВРеглУчете.СчетКт = &СчетРасчетовПоИЛ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		РасшифровкаТекст = НСтр("ru = 'Бухгалтерский учет: '");
		Если ЗначениеЗаполнено(Выборка.СчетДт) Тогда
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = 'Дт '") + Выборка.СчетДт;
			Для СчСк = 1 По Выборка.КоличествоСкДтБУ Цикл
				Если Не ЗначениеЗаполнено(Выборка["СубконтоДт" + СчСк + "Представление"]) Тогда
					Если СчСк = Выборка.НомерСкДтПодразделенияБУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					ИначеЕсли СчСк = Выборка.НомерСкДтРаботникиОрганизацийБУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					Иначе
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <не указано>'");
					КонецЕсли;
				Иначе
					РасшифровкаТекст = РасшифровкаТекст + ", " + Выборка["СубконтоДт" + СчСк + "Представление"];
				КонецЕсли;
			КонецЦикла;
		Иначе
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ' Дт <не указано>'");
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.СчетКт) Тогда
			РасшифровкаТекст = РасшифровкаТекст + " Кт " + Выборка.СчетКт;
			Для СчСк = 1 По Выборка.КоличествоСкКтБУ Цикл
				Если Не ЗначениеЗаполнено(Выборка["СубконтоКт" + СчСк + "Представление"]) Тогда
					Если СчСк = Выборка.НомерСкКтРаботникиОрганизацийБУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					ИначеЕсли СчСк = Выборка.НомерСкКтКонтрагентыБУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					Иначе
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <не указано>'");
					КонецЕсли;
				Иначе
					РасшифровкаТекст = РасшифровкаТекст + ", " + Выборка["СубконтоКт" + СчСк + "Представление"];
				КонецЕсли;
			КонецЦикла;
		Иначе
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ' Кт <не указано>'");
		КонецЕсли;
		
		РасшифровкаТекст = РасшифровкаТекст + ";" + Символы.ПС + НСтр("ru = 'Налоговый учет: '");
		Если ЗначениеЗаполнено(Выборка.СчетДтНУ) Тогда
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = 'Дт '") + Выборка.СчетДтНУ;
			Для СчСк = 1 По Выборка.КоличествоСкДтНУ Цикл
				Если Не ЗначениеЗаполнено(Выборка["СубконтоДтНУ" + СчСк + "Представление"]) Тогда
					Если СчСк = Выборка.НомерСкДтПодразделенияНУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					ИначеЕсли СчСк = Выборка.НомерСкДтРаботникиОрганизацийНУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					Иначе
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <не указано>'");
					КонецЕсли;
				Иначе
					РасшифровкаТекст = РасшифровкаТекст + ", " + Выборка["СубконтоДтНУ" + СчСк + "Представление"];
				КонецЕсли;
			КонецЦикла;
		Иначе
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ' Дт <не указано>'");
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.СчетКтНУ) Тогда
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ' Кт '") + Выборка.СчетКтНУ;
			Для СчСк = 1 По Выборка.КоличествоСкКтНУ Цикл
				Если Не ЗначениеЗаполнено(Выборка["СубконтоКтНУ" + СчСк + "Представление"]) Тогда
					Если СчСк = Выборка.НомерСкКтРаботникиОрганизацийНУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					ИначеЕсли СчСк = Выборка.НомерСкКтКонтрагентыНУ Тогда
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <подбирается автоматически>'");
					Иначе
						РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ', <не указано>'");
					КонецЕсли;
				Иначе
					РасшифровкаТекст = РасшифровкаТекст + ", " + Выборка["СубконтоКтНУ" + СчСк + "Представление"];
				КонецЕсли;
			КонецЦикла;
		Иначе
			РасшифровкаТекст = РасшифровкаТекст + НСтр("ru = ' Кт <не указано>'");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат РасшифровкаТекст	
	
КонецФункции // ПолучитьПредставлениеСпособаОтраженияНачисленияВУчетах()

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)

	Если Параметры.Свойство("ЕжемесячныйРасчетВзносовИОтчисленийЗаИП") И Параметры.ЕжемесячныйРасчетВзносовИОтчисленийЗаИП Тогда
		СтандартнаяОбработка = Ложь;
		
		УчитыватьОПВ = ?(Параметры.Свойство("УчитыватьОПВ") <> Неопределено, Параметры.УчитыватьОПВ, Ложь);
		УчитыватьСО = ?(Параметры.Свойство("УчитыватьСО") <> Неопределено, Параметры.УчитыватьСО, Ложь);
		
		СтрокаПоиска = Неопределено;
		Параметры.Свойство("СтрокаПоиска", СтрокаПоиска);
		
		ТекстУсловия 	= "";
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СпособыОтраженияЗарплатыВРеглУчете.Ссылка,
			|	СпособыОтраженияЗарплатыВРеглУчете.Наименование,
			|	СпособыОтраженияЗарплатыВРеглУчете.ПометкаУдаления
			|ИЗ
			|	Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК СпособыОтраженияЗарплатыВРеглУчете
			|ГДЕ
			|	(СпособыОтраженияЗарплатыВРеглУчете.СчетКт В ИЕРАРХИИ(&СчетКт) ИЛИ
			|		СпособыОтраженияЗарплатыВРеглУчете.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка))		
			|	И СпособыОтраженияЗарплатыВРеглУчете.Наименование ПОДОБНО &СтрокаПоиска";
		
		Если СтрокаПоиска = Неопределено Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СпособыОтраженияЗарплатыВРеглУчете.Наименование ПОДОБНО &СтрокаПоиска", "");
		Иначе 
			Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СтрокаПоиска + "%");
		КонецЕсли;
		
		Если УчитыватьОПВ Тогда
			Запрос.УстановитьПараметр("СчетКт", ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям);
		ИначеЕсли УчитыватьСО Тогда
			Запрос.УстановитьПараметр("СчетКт", ПланыСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию_);
		Иначе 
			Запрос.УстановитьПараметр("СчетКт", ПланыСчетов.Типовой.ПустаяСсылка());
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений();
		
		Пока Выборка.Следующий() Цикл 
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение, ПометкаУдаления", Выборка.Ссылка, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,,,БиблиотекаКартинок.ПомеченныйНаУдалениеЭлемент);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Ссылка,);
			КонецЕсли;			
		КонецЦикла;
		
	КонецЕсли;
			
КонецПроцедуры

#КонецЕсли

