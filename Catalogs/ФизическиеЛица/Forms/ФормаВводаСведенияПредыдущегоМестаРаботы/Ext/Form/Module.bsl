
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("ФизЛицо", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей.Загрузить(Параметры.СведенияПредыдущегоМестаРаботыФизЛиц.Выгрузить());
	ПодготовитьФормуНаСервере();
	
	Если ТолькоПросмотр Тогда
		Элементы.СведенияДляИсчисленияИПН.ТолькоПросмотр = Истина;
		Элементы.СведенияДляИсчисленияСН.ТолькоПросмотр = Истина;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаЗаписатьИЗакрыть",
			"Доступность",
			Ложь);
		Элементы.ФормаОтмена.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ГруппаИнформационная.Видимость = Ложь;
	КонецЕсли;

	УправлениеФормой(Элементы, Год);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НалогоплательщикПриИзменении(Элемент)

	ПриИзмененииОтборов();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	
	ПриИзмененииОтборов();
	УправлениеФормой(Элементы, Год);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ИМЯ ТАБЛИЦЫ ФОРМЫ>

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)

	// Сведения с предыдущего места работы
	ПеренестиДанныеВНаборЗаписей();
	
	ПараметрыОповещения = Новый Структура();
	ПараметрыОповещения.Вставить("СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписейНовый", СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей);
	
	Оповестить("ИзменениеДанныхСведенияПредыдущегоМестаРаботы", ПараметрыОповещения, ЭтотОбъект);
	
	Закрыть();
	 
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)

	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Год = Год(ОбщегоНазначения.ТекущаяДатаПользователя());
	ТекущийГод = Год;
	
	// Найдем организацию, в которую физлицо принято в последний раз 	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо", ОбъектВладелец);
	Запрос.УстановитьПараметр("ДатаАктуальности", Дата(Год, 12, 31));
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизации.Организация,
		|	РаботникиОрганизации.Период
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|ГДЕ
		|	РаботникиОрганизации.Период <= &ДатаАктуальности
		|	И РаботникиОрганизации.Сотрудник.Физлицо = &ФизЛицо
		|	И РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|	И РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|	И РаботникиОрганизации.Активность
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик,
		|	ДАТАВРЕМЯ(2999, 12, 31)
		|ИЗ
		|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|ГДЕ
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо = &ФизЛицо
		|	И ГОД(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода) = ГОД(&ДатаАктуальности)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ИсчислениеНалогов.Налогоплательщик, Организации.Ссылка),
		|	ДАТАВРЕМЯ(1, 1, 1)
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсчислениеНалоговСтруктурныхЕдиниц КАК ИсчислениеНалогов
		|		ПО Организации.Ссылка = ИсчислениеНалогов.СтруктурнаяЕдиница
		|			И (ИсчислениеНалогов.РазделНалоговогоУчета = ЗНАЧЕНИЕ(Перечисление.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты))
		|ГДЕ
		|	НЕ Организации.Наименование ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	РаботникиОрганизации.Период УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Налогоплательщик = Выборка.Организация;
		ТекущийНалогоплательщик = Налогоплательщик;
	КонецЕсли;

	СформироватьПустуюТаблицуСведений(ТаблицаСведений, Год);
	
	СтруктураПоиска = Новый Структура("Налогоплательщик", Налогоплательщик);
	
	НайденныеСведения = СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей.НайтиСтроки(СтруктураПоиска);
	ДополнитьТаблицуСведений(ТаблицаСведений, НайденныеСведения, Год);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Элементы, Год)
	
	Если Год < 2007 Тогда
		Элементы.СведенияДляИсчисленияИПНПримененнаяЛьгота.Заголовок = НСтр("ru = 'в т.ч. льгота'");
	ИначеЕсли Год < 2018 Тогда	
		Элементы.СведенияДляИсчисленияИПНПримененнаяЛьгота.Заголовок = НСтр("ru = 'Примененная льгота'");
	Иначе 
		Элементы.СведенияДляИсчисленияИПНПримененнаяЛьгота.Заголовок = НСтр("ru = 'Примененный вычет'");	
	КонецЕсли;	

	Если Год >= 2009 Тогда
		// с 2009 года данные с предыдущего места работы для расчета СН не требуются
		Элементы.ГруппаСведенияДляИсчисленияСН.Видимость 			= Ложь;
		Элементы.ГруппаСведенияДляИсчисленияИПН.ОтображатьЗаголовок = Ложь;
	Иначе
		// для расчета социального налога данные о доходе и ОПВ с предыдущего места работы требуются
		Элементы.ГруппаСведенияДляИсчисленияСН.Видимость 			= Истина;
		Элементы.ГруппаСведенияДляИсчисленияИПН.ОтображатьЗаголовок = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОтборов()
	
	Если Модифицированность И ЗначениеЗаполнено(ТекущийНалогоплательщик) Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОСохранении", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку( 	
			НСтр("ru = 'Данные были изменены, учитывать введенные сведения по налогоплательщику %1  за %2 год?'"), 
			ТекущийНалогоплательщик, 
			Формат(ТекущийГод, "ЧГ=")
		), Режим, 0);
	Иначе 
		
		СформироватьПустуюТаблицуСведений(ТаблицаСведений, Год);
		
		СтруктураПоиска = Новый Структура("Налогоплательщик", Налогоплательщик);
		НайденныеСведения = СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСведения.Количество() > 0 Тогда
			ДополнитьТаблицуСведений(ТаблицаСведений, НайденныеСведения, Год);
		КонецЕсли;

		// Сохраним текущие значения
		ТекущийНалогоплательщик = Налогоплательщик;
		ТекущийГод = Год;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирует таблицу значений для записи сведений с предыдущего места работы.
//
// Параметры
// ТаблицаСведений - ТаблицаЗначений – таблица для формирования строк
// Год 			   - Число 			 - установленный год шапки
//
&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПустуюТаблицуСведений(ТаблицаСведений, Год)
	
	ТаблицаСведений.Очистить();
	
	ЗаписываемаяДата = Дата("" + Прав("0000" + Формат(Год , "ЧГ=0"), 4) + "0101");
	Для Сч = 1 По 12 Цикл
	   НоваяСтрока = ТаблицаСведений.Добавить();
	   НоваяСтрока.Месяц				  = ЗаписываемаяДата;
	   НоваяСтрока.Доход				  = 0;
	   НоваяСтрока.ДоходНеОблагаемыйИПН	  = 0;
	   НоваяСтрока.ДоходОблагаемыйСН	  = 0;
	   НоваяСтрока.ПримененнаяЛьгота	  = 0;
	   НоваяСтрока.ПримененныйВычет		  = 0;
	   НоваяСтрока.ОПВ					  = 0;
	   НоваяСтрока.ИПН					  = 0;
	   НоваяСтрока.СН					  = 0;
	   НоваяСтрока.СО					  = 0;
	   НоваяСтрока.ВОСМС				  = 0;
	   ЗаписываемаяДата = ДобавитьМесяц(ЗаписываемаяДата, 1)
	КонецЦикла; 
	
КонецПроцедуры 

// Процедура записывает сведения физ лица с предыдущего места работы в подготовленную
// таблицу значений. 
//
// Параметры
//  ТаблицаСведений – ТаблицаЗначений – таблица из 12 строк, по месяцам
//  МассивСведений  – Массив – список сведений с предыдущего места физ лица для заданного налогоплательщика и выьбранного года
//
&НаКлиентеНаСервереБезКонтекста
Процедура ДополнитьТаблицуСведений(ТаблицаСведений, МассивСведений, Год)
	
	Для Каждого СтрокаТЗ Из МассивСведений Цикл 
		
		Если Год(СтрокаТЗ.МесяцНалоговогоПериода) <> Год Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ТаблицаСведений.НайтиСтроки(Новый Структура("Месяц", СтрокаТЗ.МесяцНалоговогоПериода));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НайденнаяСтрока = НайденныеСтроки[0];
		
		НайденнаяСтрока.Доход				 = СтрокаТЗ.Доход;
		НайденнаяСтрока.ДоходНеОблагаемыйИПН = СтрокаТЗ.ДоходНеОблагаемыйИПН;
		НайденнаяСтрока.ПримененнаяЛьгота	 = СтрокаТЗ.ПримененнаяЛьгота;
		НайденнаяСтрока.ПримененныйВычет	 = СтрокаТЗ.ПримененныйВычет;
		НайденнаяСтрока.ОПВ					 = СтрокаТЗ.ОПВ;
		НайденнаяСтрока.ИПН					 = СтрокаТЗ.ИПН;
		НайденнаяСтрока.ДоходОблагаемыйСН	 = СтрокаТЗ.ДоходОблагаемыйСН;
		НайденнаяСтрока.СН					 = СтрокаТЗ.СН;
		НайденнаяСтрока.СО					 = СтрокаТЗ.СО;
		НайденнаяСтрока.ВОСМС				 = СтрокаТЗ.ВОСМС;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОСохранении(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиДанныеВНаборЗаписей();		
	КонецЕсли;
	
	СформироватьПустуюТаблицуСведений(ТаблицаСведений, Год);
	
	СтруктураПоиска = Новый Структура("Налогоплательщик", Налогоплательщик);
	
	НайденныеСведения = СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСведения.Количество() > 0 Тогда
		ДополнитьТаблицуСведений(ТаблицаСведений, НайденныеСведения, Год);
	КонецЕсли;
	
	// Сохраним текущие значения
	ТекущийНалогоплательщик = Налогоплательщик;
	ТекущийГод = Год;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДанныеВНаборЗаписей() 

	СтруктураПоиска = Новый Структура("Налогоплательщик, МесяцНалоговогоПериода");
	СтруктураПоиска.Налогоплательщик = ТекущийНалогоплательщик;
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаСведений Цикл
		СтруктураПоиска.МесяцНалоговогоПериода = СтрокаТаблицы.Месяц;
		НайденныеСтроки = СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаНабора = НайденныеСтроки[0];
		Иначе
			СтрокаНабора = СведенияПредыдущегоМестаРаботыФизЛицНаборЗаписей.Добавить();
			// Для новой строки дозаполним недостающие колонки
			СтрокаНабора.ФизЛицо = ОбъектВладелец;
			СтрокаНабора.Налогоплательщик = ТекущийНалогоплательщик;
			СтрокаНабора.МесяцНалоговогоПериода = СтрокаТаблицы.Месяц;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаНабора, СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры
