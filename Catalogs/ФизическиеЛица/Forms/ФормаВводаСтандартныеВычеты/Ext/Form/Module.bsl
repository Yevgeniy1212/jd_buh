
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("ФизЛицо", ОбъектВладелец);
	Если Не ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Элементы.ИПННалоговыеВычетыФизлицНаборЗаписей.ТолькоПросмотр = Истина;
		Элементы.ИПНПрименениеВычетовНаборЗаписей.ТолькоПросмотр = Истина;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, 
			"ФормаЗаписатьИЗакрыть",
			"Доступность",
			Ложь);
		Элементы.ФормаОтмена.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.ГруппаИнформационная.Видимость = Ложь;
		Параметры.Свойство("ДатаЗапретаИзмененияДанных", ДатаЗапрета);
	КонецЕсли;

	Для Каждого ЗаписьНабора Из Параметры.МассивИПННалоговыеВычетыФизлиц Цикл 
		НоваяСтрока = ИПННалоговыеВычетыФизлицНаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗаписьНабора);
		НоваяСтрока.ПериодЗакрыт = (НоваяСтрока.Период <= ДатаЗапрета);
	КонецЦикла;

	Для Каждого ЗаписьНабора Из Параметры.МассивИПНПрименениеВычетов Цикл
		НоваяСтрока = ИПНПрименениеВычетовНаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗаписьНабора);
		НоваяСтрока.ПериодЗакрыт = (НоваяСтрока.Период <= ДатаЗапрета);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИПННалоговыеВычетыФизлиц

&НаКлиенте
Процедура ИПННалоговыеВычетыФизлицНаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Элемент.ТекущиеДанные.ФизЛицо = ОбъектВладелец;
			НовыйПериод = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
			Если ИПННалоговыеВычетыФизлицНаборЗаписей.Количество() > 1 Тогда
				ПоследнийПериод = Макс(ИПННалоговыеВычетыФизлицНаборЗаписей.Получить(ИПННалоговыеВычетыФизлицНаборЗаписей.Количество() - 2).Период, ДатаЗапрета);
			Иначе
				ПоследнийПериод = ДатаЗапрета;
			КонецЕсли; 
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = ДобавитьМесяц(ПоследнийПериод, 1);
			КонецЕсли; 
			Элемент.ТекущиеДанные.Период = НовыйПериод;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИПННалоговыеВычетыФизлицНаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.Период <= ДатаЗапрета Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИПННалоговыеВычетыФизлицНаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				СообщениеОбОшибке = НСтр("ru = 'Необходимо указать период, с которого будет действовать запись сведений'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПННалоговыеВычетыФизлицНаборЗаписей.Период", , Отказ);
			ИначеЕсли Элемент.ТекущиеДанные.Период <= ДатаЗапрета Тогда
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Период закрыт для редактирования, укажите период позже даты %1'"),
					Формат(ДатаЗапрета, "ДФ='дд ММММ гггг'"));
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПННалоговыеВычетыФизлицНаборЗаписей.Период", , Отказ);
			Иначе
				НайденныеСтроки = ИПННалоговыеВычетыФизлицНаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
						СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанным периодом сведений'");
						ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПННалоговыеВычетыФизлицНаборЗаписей.Период", , Отказ);
						Прервать;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли;
	Иначе
		Если НЕ НоваяСтрока И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Необходимо указать период, с которого будет действовать запись сведений'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"ИПННалоговыеВычетыФизлицНаборЗаписей.Период", , Отказ);
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ИПННалоговыеВычетыФизлицНаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.Период = НачалоМесяца(Элемент.ТекущиеДанные.Период);
	КонецЕсли;

	РедактированиеПериодическихСведенийКлиент.УпорядочитьНаборЗаписейВФорме(ЭтаФорма, "ИПННалоговыеВычетыФизлицНаборЗаписей");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИПНПрименениеВычетов

&НаКлиенте
Процедура ИПНПрименениеВычетовНаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Элемент.ТекущиеДанные.ФизЛицо = ОбъектВладелец;
			НовыйПериод = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
			Если ИПНПрименениеВычетовНаборЗаписей.Количество() > 1 Тогда
				ПоследнийПериод = Макс(ИПНПрименениеВычетовНаборЗаписей.Получить(ИПНПрименениеВычетовНаборЗаписей.Количество() - 2).Период, ДатаЗапрета);
			Иначе
				ПоследнийПериод = ДатаЗапрета;
			КонецЕсли; 
			Если НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = ДобавитьМесяц(ПоследнийПериод, 1);
			КонецЕсли; 
			Элемент.ТекущиеДанные.Период = НовыйПериод;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИПНПрименениеВычетовНаборЗаписейПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.Период <= ДатаЗапрета Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИПНПрименениеВычетовНаборЗаписейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
				СообщениеОбОшибке = НСтр("ru = 'Необходимо указать период, с которого будет действовать запись сведений'");
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПНПрименениеВычетовНаборЗаписей.Период", , Отказ);
			ИначеЕсли Элемент.ТекущиеДанные.Период <= ДатаЗапрета Тогда
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку( 
					НСтр("ru = 'Период закрыт для редактирования, укажите период позже даты %1'"),
					Формат(ДатаЗапрета, "ДФ='дд ММММ гггг'"));
				ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПНПрименениеВычетовНаборЗаписей.Период", , Отказ);
			Иначе
				НайденныеСтроки = ИПНПрименениеВычетовНаборЗаписей.НайтиСтроки(Новый Структура("Период", Элемент.ТекущиеДанные.Период));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					Если НайденнаяСтрока <> Элемент.ТекущиеДанные Тогда
						СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанным периодом сведений'");
						ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПНПрименениеВычетовНаборЗаписей.Период", , Отказ);
						Прервать;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли;
	Иначе
		Если НЕ НоваяСтрока И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Период) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Необходимо указать период, с которого будет действовать запись сведений'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,, "ИПНПрименениеВычетовНаборЗаписей.Период", , Отказ);
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ИПНПрименениеВычетовНаборЗаписейПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.Период = НачалоМесяца(Элемент.ТекущиеДанные.Период);
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиент.УпорядочитьНаборЗаписейВФорме(ЭтаФорма, "ИПНПрименениеВычетовНаборЗаписей");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)

	ПараметрыОповещения = Новый Структура();
	ПараметрыОповещения.Вставить("ИПННалоговыеВычетыФизлицНаборЗаписейНовый", ИПННалоговыеВычетыФизлицНаборЗаписей);
	ПараметрыОповещения.Вставить("ИПНПрименениеВычетовНаборЗаписейНовый", ИПНПрименениеВычетовНаборЗаписей);
	
	Оповестить("ИзменениеДанныхСтандартныеВычеты", ПараметрыОповещения, ЭтотОбъект);
	
	Закрыть();
	 
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)

	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
