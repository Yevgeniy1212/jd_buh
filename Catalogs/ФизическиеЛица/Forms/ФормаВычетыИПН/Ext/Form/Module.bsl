#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ФизическоеЛицо") Тогда
		ФизическоеЛицо = Параметры.ФизическоеЛицо;	
	КонецЕсли;	
	
	ТекстЗаголовока = НСтр("ru='Сведения о вычетах ИПН физического лица %1'");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовока, ФизическоеЛицо);
	
	ПрочитатьСведенияОВычетахИПН();
	
	УстановитьДоступностьКоманд(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИсправитьЗаявлениеНаПредоставлениеВычетовИПН(Команда)
	
	ПоказатьЗначение(, ЗаявлениеНаПредоставлениеВычетовИПН);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНовоеЗаявлениеНаПредоставлениеВычетовИПН(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Сотрудник"		, ФизическоеЛицо);
	ЗначенияЗаполнения.Вставить("Организация"	, Организация);
	ЗначенияЗаполнения.Вставить("Месяц"			, НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()));

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("ИзФормыСотрудника"	, Истина);
	
	ОткрытьФорму("Документ.ЗаявлениеНаПредоставлениеВычетовИПН.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПрекращениеПредоставленияВычетовИПН(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Сотрудник"		, ФизическоеЛицо);
	ЗначенияЗаполнения.Вставить("Организация"	, Организация);
	ЗначенияЗаполнения.Вставить("Месяц"			, НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()));

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("ИзФормыСотрудника"	, Истина);
	
	ОткрытьФорму("Документ.ПрекращениеПредоставленияВычетовИПН.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыВычеты" И Параметр = ЭтаФорма.ФизическоеЛицо Тогда
		
		ПрочитатьСведенияОВычетахИПН();
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВычеты

&НаКлиенте
Процедура ВычетыИПНВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ВычетыИПН.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Поле.ГиперссылкаЯчейки И ЗначениеЗаполнено(ТекущиеДанные.Расшифровка) Тогда
		ПросмотрГрафикаВычета(ТекущиеДанные);
		СтандартнаяОбработка = Ложь;
	КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПросмотрГрафикаВычета(ДанныеСтроки) Экспорт
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	
	ПараметрыОткрытия = Новый Структура;
	
	ПараметрыОткрытия.Вставить("ФизическоеЛицо"				, ФизическоеЛицо);
	ПараметрыОткрытия.Вставить("ВидВычетаИПН"				, ДанныеСтроки.ВидВычетаИПН);
	ПараметрыОткрытия.Вставить("ТолькоПросмотр"				, Истина);
	ПараметрыОткрытия.Вставить("АдресВХранилищеПрочиеВычеты", АдресВХранилищеПрочиеВычеты(ДанныеСтроки.ВидВычетаИПН));
	
	ОткрытьФорму("Документ.ЗаявлениеНаПредоставлениеВычетовИПН.Форма.РедактированиеГрафикаВычетов", ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция АдресВХранилищеПрочиеВычеты(ВидВычетаИПН) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПрочиеВычетыФизическихЛицИПНСрезПоследних.Размер,
	|	ПрочиеВычетыФизическихЛицИПНСрезПоследних.ДействуетС КАК ДействуетС,
	|	ПрочиеВычетыФизическихЛицИПНСрезПоследних.ДействуетПо КАК ДействуетПо,
	|	ПрочиеВычетыФизическихЛицИПНСрезПоследних.ВидВычета КАК ВидВычетаИПН
	|ИЗ
	|	РегистрСведений.ПрочиеВычетыФизическихЛицИПН.СрезПоследних(
	|			,
	|			ФизическоеЛицо = &ФизическоеЛицо
	|				И ВидВычета = &ВидВычета) КАК ПрочиеВычетыФизическихЛицИПНСрезПоследних
	|ГДЕ
	|	ПрочиеВычетыФизическихЛицИПНСрезПоследних.Размер <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДействуетС,
	|	ДействуетПо";
	
	//Запрос.УстановитьПараметр("парамДатаСреза"	, ОбщегоНазначения.ТекущаяДатаПользователя());
	Запрос.УстановитьПараметр("ФизическоеЛицо"	, ФизическоеЛицо);
	Запрос.УстановитьПараметр("ВидВычета"		, ВидВычетаИПН);
	
	Возврат ПоместитьВоВременноеХранилище(Запрос.Выполнить().Выгрузить(), УникальныйИдентификатор);
	
КонецФункции


&НаСервере
Процедура ПрочитатьСведенияОВычетахИПН()
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПрименениеВычетовИПН.Период КАК Период,
	|	ПрименениеВычетовИПН.ДействуетПо,
	|	ПрименениеВычетовИПН.Организация,
	|	ПрименениеВычетовИПН.Регистратор
	|ИЗ
	|	РегистрСведений.ПрименениеВычетовИПН.СрезПоследних(, ФизическоеЛицо = &ФизическоеЛицо) КАК ПрименениеВычетовИПН
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВычетыИПН.ВидВычета КАК ВидВычетаИПН,
	|	ВычетыИПН.Основание,
	|	ВычетыИПН.ДействуетПо КАК ДействуетПо,
	|	ВычетыИПН.Период КАК Период,
	|	ВЫБОР
	|		КОГДА ВычетыИПН.ВидВычета.ПредоставлениеВычета = ЗНАЧЕНИЕ(Перечисление.ВидыПредоставленияВычетов.ПоПериодическимПлатежам)
	|			ТОГДА &СинонимПодробнее
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Расшифровка
	|ИЗ
	|	РегистрСведений.ВычетыФизическихЛицИПН.СрезПоследних(, ФизическоеЛицо = &ФизическоеЛицо) КАК ВычетыИПН
	|ГДЕ
	|	ВычетыИПН.ПредоставлятьВычет = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДействуетПо,
	|	ВычетыИПН.ВидВычета.Наименование";
					  
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("СинонимПодробнее", НСтр("ru = 'Подробнее'"));
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПрименениеВычетовИПН = РезультатыЗапроса[0].Выбрать();
	Если ВыборкаПрименениеВычетовИПН.Следующий() Тогда
		
		ВычетыИПНМесяцСтрокой 	= Формат(ВыборкаПрименениеВычетовИПН.Период, "ДФ='ММММ гггг'");
		
		ДействуетПо						= ВыборкаПрименениеВычетовИПН.ДействуетПо;
		ВычетыИПНМесяцЗавершенияСтрокой = ?(ЗначениеЗаполнено(ДействуетПо), Формат(ДействуетПо, "ДФ='ММММ гггг'"), "");
		
		
		ЗаявлениеНаПредоставлениеВычетовИПН = ВыборкаПрименениеВычетовИПН.Регистратор;
		
		Организация 						= ВыборкаПрименениеВычетовИПН.Организация;
		Если Не УправлениеДоступомБК.ЕстьПравоДоступаКОрганизации(Пользователи.ТекущийПользователь(),Организация) Тогда
			Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
		КонецЕсли;	
	КонецЕсли;
	
	ВычетыИПН.Загрузить(РезультатыЗапроса[1].Выгрузить());
	
	Если ЗаявлениеНаПредоставлениеВычетовИПН.Пустая() Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВычетыСтраницы",
		"ТекущаяСтраница",
		Элементы.ИнфоНадписьОПримененииВычетов);
		
	Иначе 
		
		ТекстЗаголовока 						= НСтр("ru='Вычеты предоставляются по заявлению №%1 от %2'");
		ЗаявлениеНаПредоставлениеВычетовИПНИнфо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовока, ЗаявлениеНаПредоставлениеВычетовИПН.Номер, Формат(ЗаявлениеНаПредоставлениеВычетовИПН.Дата, "ДФ=dd.MM.yyyy"));
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВычетыСтраницы",
		"ТекущаяСтраница",
		Элементы.ДанныеОПримененииВычетов);
		
	КонецЕсли;

	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКоманд(Форма)
	
	Если НЕ (РольДоступна("ДобавлениеИзменениеКадровыхДокументов") ИЛИ Пользователи.ЭтоПолноправныйПользователь())Тогда
		Элементы.ИсправитьЗаявлениеНаПредоставлениеВычетовИПН.Доступность = Ложь;
		Элементы.ВвестиНовоеЗаявлениеНаПредоставлениеВычетовИПН1.Доступность = Ложь;
		Элементы.ВвестиНовоеЗаявлениеНаПредоставлениеВычетовИПН.Доступность = Ложь;
		Элементы.ВвестиПрекращениеПредоставленияВычетовИПН.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
