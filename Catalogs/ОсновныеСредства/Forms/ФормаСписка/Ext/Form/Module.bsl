
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ВосстановленныеНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ФормаСпискаОС", "Поиск");

	ВыводДанныхСписка();
	
	ОбщегоНазначенияБК.ФормаСпискаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;	
	
	ПриЗакрытииНаСервере();
КонецПроцедуры
 
 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВосстановленныеНастройки <> Неопределено Тогда
		Если ВосстановленныеНастройки.Свойство("ИсторияПоискаОС") Тогда
			Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(ВосстановленныеНастройки.ИсторияПоискаОС);
		КонецЕсли;
		Если ВосстановленныеНастройки.Свойство("ВидПоиска") Тогда
			НайденныйВидПоиска = Элементы.ВидПоиска.СписокВыбора.НайтиПоЗначению(ВосстановленныеНастройки.ВидПоиска);
			Если НайденныйВидПоиска <> Неопределено Тогда
				ВидПоиска = НайденныйВидПоиска.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидПоиска) Тогда
		ВидПоиска = Элементы.ВидПоиска.СписокВыбора[0].Значение;
	КонецЕсли;
	
	СтарыйЭлементПоиска = ВидПоиска;
	
КонецПроцедуры 


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВидПоискаПриИзменении(Элемент)
	ПрименитьПоиск();
	СтарыйЭлементПоиска = ВидПоиска;
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ПрименитьПоиск();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Справочники.ОсновныеСредства.УстановитьПараметрыДинамическогоСпискаОсновныхСредств(Строки);
	
КонецПроцедуры


&НаКлиенте
Процедура ГрупповойВвод(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОсновноеСредство = ТекущиеДанные.Ссылка;
	Иначе
		ОсновноеСредство = Неопределено;
	КонецЕсли; 
	
	ОткрытьФорму("Справочник.ОсновныеСредства.Форма.ФормаГрупповогоДобавления", Новый Структура("ОсновноеСредство", ОсновноеСредство), ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Функция ПечатьОС(ПараметрыПечати) Экспорт
		
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, 
		ПараметрыПечати.ОбъектыПечати, ПараметрыПечати.Форма);
		
КонецФункции

&НаКлиенте
Функция ПечатьШтрихкодовОС(ПараметрыПечати) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Организация"	, Неопределено);
	ДополнительныеПараметры.Вставить("ДатаСведений"	, Дата(1,1,1));
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("ОбъектыПечати"				, ПараметрыПечати.ОбъектыПечати);
	СтруктураРезультат.Вставить("Идентификатор" 			, УникальныйИдентификатор);
	СтруктураРезультат.Вставить("ДополнительныеПараметры"	, ДополнительныеПараметры);
	СтруктураРезультат.Вставить("Форма"						, ЭтаФорма);
	
	
	УправлениеПечатьюБККлиент.ПечатьШтрихкодовОС(СтруктураРезультат);
		
КонецФункции

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


 &НаКлиенте
Процедура ПрименитьПоиск()
	
	ОтборыСписковКлиентСервер.УдалитьЭлементОтбораСписка(Список, СтарыйЭлементПоиска);
	
 	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		Список.Отбор, ВидПоиска, СтрокаПоиска,
		ЗначениеЗаполнено(СтрокаПоиска), ВидСравненияКомпоновкиДанных.Содержит);
	
	СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.СтрокаПоиска.СписокВыбора, СтрокаПоиска);
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	Иначе
		Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	КонецЕсли; 
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		Список.Отбор, "ЭтоГруппа", Ложь,
		ЗначениеЗаполнено(СтрокаПоиска), ВидСравненияКомпоновкиДанных.Равно);
		
	ТекущийЭлемент = Элементы.Список;

КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()

	ПараметрыЗакрытияОбщие = Новый Структура;
	ПараметрыЗакрытияОбщие.Вставить("ИсторияПоискаОС", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	ПараметрыЗакрытияОбщие.Вставить("ВидПоиска",       ВидПоиска);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ФормаСпискаОС", "Поиск" , ПараметрыЗакрытияОбщие);

КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ВыводДанныхСписка()
	
	Видимость = ЭСФСервер.ВедетсяУчетПоТоварамНаВС(ТекущаяДата());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПризнакПеречняИзьятий",
		"Видимость",
		Видимость);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПризнакУникальногоТовара",
		"Видимость",
		Видимость);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПризнакУчетаНаВиртуальномСкладе",
		"Видимость",
		Видимость);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПризнакТовараДвойногоНазначения",
		"Видимость",
		Видимость);
	
	Если НЕ Видимость Тогда
		
		Список.ТекстЗапроса = "ВЫБРАТЬ
		|	СправочникОсновныеСредства.Ссылка,
		|	СправочникОсновныеСредства.ПометкаУдаления,
		|	СправочникОсновныеСредства.Родитель,
		|	СправочникОсновныеСредства.ЭтоГруппа,
		|	СправочникОсновныеСредства.Код,
		|	СправочникОсновныеСредства.Наименование,
		|	СправочникОсновныеСредства.НаименованиеПолное,
		|	СправочникОсновныеСредства.Изготовитель,
		|	СправочникОсновныеСредства.НомерПаспорта,
		|	СправочникОсновныеСредства.ЗаводскойНомер,
		|	СправочникОсновныеСредства.ДатаВыпуска,
		|	СправочникОсновныеСредства.ГруппаОС,
		|	СправочникОсновныеСредства.Комментарий,
		|	СправочникОсновныеСредства.Автотранспорт,
		|	СправочникОсновныеСредства.КодКОФ,
		|	СправочникОсновныеСредства.ИдентификаторТовараЭСФ,
		|	СправочникОсновныеСредства.Штрихкод,
		|	СправочникОсновныеСредства.КодТНВЭД,
		|	СправочникОсновныеСредства.ДополнительныеРеквизиты.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Свойство КАК Свойство,
		|		Значение КАК Значение,
		|		ТекстоваяСтрока КАК ТекстоваяСтрока
		|	) КАК ДополнительныеРеквизиты,
		|	СправочникОсновныеСредства.Предопределенный,
		|	СправочникОсновныеСредства.ИмяПредопределенныхДанных
		|ИЗ
		|	Справочник.ОсновныеСредства КАК СправочникОсновныеСредства";
		
	Иначе
			
		Поля = Новый Массив;
		Поля.Добавить("ПризнакУчетаНаВиртуальномСкладе");
		Поля.Добавить("ПризнакУникальногоТовара");
		Поля.Добавить("ПризнакПеречняИзьятий");
		Поля.Добавить("ПризнакТовараДвойногоНазначения");
		
		Список.УстановитьОграниченияИспользованияВГруппировке(Поля);
		Список.УстановитьОграниченияИспользованияВОтборе(Поля);
		Список.УстановитьОграниченияИспользованияВПорядке(Поля);
			
	КонецЕсли;
	
КонецПроцедуры
