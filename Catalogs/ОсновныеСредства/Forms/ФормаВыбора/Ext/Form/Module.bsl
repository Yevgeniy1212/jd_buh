
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ВосстановленныеНастройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ФормаВыбораОС", "Поиск");
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры
 
 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВосстановленныеНастройки <> Неопределено Тогда
		Если ВосстановленныеНастройки.Свойство("ИсторияПоискаОС") Тогда
			Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(ВосстановленныеНастройки.ИсторияПоискаОС);
		КонецЕсли;
		Если ВосстановленныеНастройки.Свойство("ВидПоиска") Тогда
			НайденныйВидПоиска = Элементы.ВидПоиска.СписокВыбора.НайтиПоЗначению(ВосстановленныеНастройки.ВидПоиска);
			Если НайденныйВидПоиска <> Неопределено Тогда
				ВидПоиска = НайденныйВидПоиска.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидПоиска) Тогда
		ВидПоиска = Элементы.ВидПоиска.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВидПоискаПриИзменении(Элемент)
	ПрименитьПоиск();
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ПрименитьПоиск();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ГрупповойВвод(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОсновноеСредство = ТекущиеДанные.Ссылка;
	Иначе
		ОсновноеСредство = Неопределено;
	КонецЕсли; 
	
	ОткрытьФорму("Справочник.ОсновныеСредства.Форма.ФормаГрупповогоДобавления", Новый Структура("ОсновноеСредство", ОсновноеСредство), ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Функция ПечатьОС(ПараметрыПечати) Экспорт
			
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, 
		ПараметрыПечати.ОбъектыПечати, ПараметрыПечати.Форма);
		
КонецФункции

&НаКлиенте
Функция ПечатьШтрихкодовОС(ПараметрыПечати) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Организация"	, Неопределено);
	ДополнительныеПараметры.Вставить("ДатаСведений"	, Дата(1,1,1));
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("ОбъектыПечати"				, ПараметрыПечати.ОбъектыПечати);
	СтруктураРезультат.Вставить("Идентификатор" 			, УникальныйИдентификатор);
	СтруктураРезультат.Вставить("ДополнительныеПараметры"	, ДополнительныеПараметры);
	СтруктураРезультат.Вставить("Форма"						, ЭтаФорма);
	
	
	УправлениеПечатьюБККлиент.ПечатьШтрихкодовОС(СтруктураРезультат);

		
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦ ФОРМЫ

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

 &НаКлиенте
Процедура ПрименитьПоиск()
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		Список.Отбор, ВидПоиска, СтрокаПоиска,
		ЗначениеЗаполнено(СтрокаПоиска), ВидСравненияКомпоновкиДанных.Содержит);
	
	СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.СтрокаПоиска.СписокВыбора, СтрокаПоиска);
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	Иначе
		Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	КонецЕсли; 
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		Список.Отбор, "ЭтоГруппа", Ложь,
		ЗначениеЗаполнено(СтрокаПоиска), ВидСравненияКомпоновкиДанных.Равно);
		
	ТекущийЭлемент = Элементы.Список;

КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()

	ПараметрыЗакрытияОбщие = Новый Структура;
	ПараметрыЗакрытияОбщие.Вставить("ИсторияПоискаОС", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	ПараметрыЗакрытияОбщие.Вставить("ВидПоиска",       ВидПоиска);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ФормаВыбораОС", "Поиск", ПараметрыЗакрытияОбщие);

КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
     ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
 
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
     ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
     ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

 