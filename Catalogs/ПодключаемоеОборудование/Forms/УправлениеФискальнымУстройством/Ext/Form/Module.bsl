
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если РольДоступна("ЧтениеДанныхБухгалтерии") И НЕ РольДоступна("ПолныеПрава") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	ЭтаФорма.Элементы.Организация.Видимость = Ложь; 
	
	ЕстьПравоНаЗакрытиеСмены = Пользователи.ЭтоПолноправныйПользователь(, Ложь) ИЛИ УправлениеДоступом.ЕстьРоль("ПравоНаЗакрытиеКассовойСмены");
	ВедетсяРозничнаяТорговля = ПолучитьФункциональнуюОпцию("ВедетсяРозничнаяТорговля");	
	ЭтаФорма.Элементы.ЗакрытьСмену.Видимость 	   = ЕстьПравоНаЗакрытиеСмены;
	ЭтаФорма.Элементы.ЗакрытьБезZОтчета.Видимость  = ЕстьПравоНаЗакрытиеСмены;    
	ЭтаФорма.Элементы.ГруппаЗакрытьСмену.Видимость = ЕстьПравоНаЗакрытиеСмены И ВедетсяРозничнаяТорговля;
	
	Кассир = "";
	ВыполненаСтандартнаяОбработка = Истина;
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, ВыполненаСтандартнаяОбработка); 
	ПараметрКассир = ?(Не ВыполненаСтандартнаяОбработка, Кассир, НСтр("ru='Администратор'")); 
	
	КассирИНН = "";
	ВыполненаСтандартнаяОбработка = Истина;
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИННКассира(КассирИНН, ВыполненаСтандартнаяОбработка); 
	ПараметрКассирИНН = ?(Не ВыполненаСтандартнаяОбработка, КассирИНН, ""); 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОперацияЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Доступность = Истина;
	
	ТекстСообщения = ?(РезультатВыполнения.Результат, НСтр("ru='Операция успешно завершена.'"), РезультатВыполнения.ОписаниеОшибки);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	
	ОчиститьСообщения();
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ФискальныйРегистратор");
	ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
	//ПоддерживаемыеТипыВО.Добавить("ККТ");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьСменуПослеВыбораУстройства", ЭтотОбъект);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru='Выберите фискальное устройство'"), 
		НСтр("ru='Фискальное устройство не подключено.'"), 
		НСтр("ru='Фискальное устройство не выбрано.'"), 
		Истина);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьСменуПослеВыбораУстройства(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	СтатусПоследнейСмены = МенеджерОборудованияВызовСервера.ПолучитьСтатусПоследнейСмены(РезультатВыбора);	
	
	Если  СтатусПоследнейСмены.Активна Тогда
		
		ТекстСообщения = НСтр("ru = 'Для открытия следующей кассовой смены закройте текущую: %КассоваяСмена%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КассоваяСмена%", СтатусПоследнейСмены.КассоваяСмена);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.КлючДанных = СтатусПоследнейСмены.КассоваяСмена;
		Сообщение.Сообщить();
		
	Иначе
		
		ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
		//Кассир = "";
		//СтандартнаяОбработка = Истина;
		//МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, СтандартнаяОбработка); 
		//ПараметрыОперации.Кассир = ?(Не СтандартнаяОбработка, Кассир, НСтр("ru='Администратор'")); 
		
		ПараметрыОперации.Кассир = ПараметрКассир; 
	    ПараметрыОперации.КассирИНН = ПараметрКассирИНН;
	
		ДополнительныеПараметры = Новый Структура();
		Если МенеджерОборудованияКлиентПовтИсп.ИспользуетсяПодсистемыФискальныхУстройств() Тогда
			МодульКассовыеСменыКлиентПереопределяемый = МенеджерОборудованияКлиентПовтИсп.ОбщийМодуль("КассовыеСменыКлиентПереопределяемый");
			МодульКассовыеСменыКлиентПереопределяемый.УправлениеФУЗаполнитьДополнительныеПараметрыПередОткрытиемСмены(РезультатВыбора, ДополнительныеПараметры);
		КонецЕсли;
		
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, РезультатВыбора,, ДополнительныеПараметры);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	
	ОчиститьСообщения();
	//Доступность = Ложь;
	
	//ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	//Кассир = "";
	//СтандартнаяОбработка = Истина;
	//МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, СтандартнаяОбработка); 
	//ПараметрыОперации.Кассир = ?(Не СтандартнаяОбработка, Кассир, НСтр("ru='Администратор'"));		
	
	Если ВедетсяРозничнаяТорговля Тогда
		
		ТекстВопроса = НСтр("ru = 'При данном варианте закрытия кассовой смены ""Отчет о розничных продажах"" сформирован не будет. Продолжить?'");
		
		ЗакрытьСменуЗавершение = Новый ОписаниеОповещения("ЗакрытьСменуЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ЗакрытьСменуЗавершение, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
		
	Иначе 
		
		ВыполнитьДействиеПоЗакрытиюСмены();
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ЗакрытьСменуЗавершение(Результат, ДопПараметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		
		ВыполнитьДействиеПоЗакрытиюСмены();
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеПоЗакрытиюСмены() 
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ФискальныйРегистратор");
	ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
	//ПоддерживаемыеТипыВО.Добавить("ККТ"); 
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьСменуПослеВыбораУстройства", ЭтотОбъект);	
	
	Если ЗакрытьБезZОтчета Тогда
		
		ЗакрытьКассовуюСмену(ОповещениеПриЗавершении);
		
	Иначе
		//МенеджерОборудованияКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации);
		МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru='Выберите фискальное устройство'"), 
		НСтр("ru='Фискальное устройство не подключено.'"), 
		НСтр("ru='Фискальное устройство не выбрано.'"), 
		Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	//Кассир = "";
	//СтандартнаяОбработка = Истина;
	//МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, СтандартнаяОбработка); 
	//ПараметрыОперации.Кассир = ?(Не СтандартнаяОбработка, Кассир, НСтр("ru='Администратор'")); 
	
	ПараметрыОперации.Кассир = ПараметрКассир; 
	ПараметрыОперации.КассирИНН = ПараметрКассирИНН;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетБезГашения(Команда)
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	//Кассир = "";
	//СтандартнаяОбработка = Истина;
	//МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, СтандартнаяОбработка); 
	//ПараметрыОперации.Кассир = ?(Не СтандартнаяОбработка, Кассир, НСтр("ru='Администратор'")); 
	
	ПараметрыОперации.Кассир = ПараметрКассир; 
	ПараметрыОперации.КассирИНН = ПараметрКассирИНН;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьФормированиеОтчетаБезГашения(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДенежнуюОперацию(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Сумма = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Сумма по денежной операции не должна быть равна 0.'"));
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Доступность = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ВыборУстройстваЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(Оповещение, "ФискальныйРегистратор",
			НСтр("ru='Выберите фискальное устройство'"), НСтр("ru='Фискальное устройство не подключено.'"), НСтр("ru='Фискальное устройство не выбрано.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборУстройстваЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения <> Неопределено Тогда
		
		СведенияОрганизацияКассаККМ = ИнтеграцияWebKassaВызовСервераПереопределяемый.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата());
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Кассир", ПользователиКлиентСервер.ТекущийПользователь());
		ДополнительныеПараметры.Вставить("Организация", СведенияОрганизацияКассаККМ.ПолноеНаименование);
		ДополнительныеПараметры.Вставить("ИИН", СведенияОрганизацияКассаККМ.БИН_ИИН);
		ДополнительныеПараметры.Вставить("СерийныйНомерККМ", "");
		ДополнительныеПараметры.Вставить("РегистрационныйНомерККМ","");
		ДополнительныеПараметры.Вставить("СерияСвидетельстваПоНДС", СведенияОрганизацияКассаККМ.СерияСвидетельстваПоНДС);
		ДополнительныеПараметры.Вставить("НомерСвидетельстваПоНДС", СведенияОрганизацияКассаККМ.НомерСвидетельстваПоНДС);
		ДополнительныеПараметры.Вставить("ОрганизацияСсылка", Организация);
		
		ТипИнкассации = ВидОперации; //  Тип операции (0 - Выемка / 1 - Внесение)
		СуммаОперации = Сумма; // Сумма внесения/выемки
		ПараметрыОперации = Новый Структура("ТипИнкассации, Сумма", ТипИнкассации, СуммаОперации);
		ОповещениеПриЗавершении = Новый ОписаниеОповещения("ВыполнитьДенежнуюОперациюЗавершение", ЭтотОбъект);
		
		МенеджерОборудованияКлиент.НачатьИнкассациюНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, 
								ПараметрыОперации,РезультатВыполнения);
		
	Иначе
		ЭтотОбъект.Доступность = Истина;
	КонецЕсли;
	             КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДенежнуюОперациюЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтотОбъект.Доступность = Истина;
	
	Если РезультатВыполнения <> Неопределено Тогда
		
		Если РезультатВыполнения.Результат Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Денежная операция выполнена успешно.'"));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Организация"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&Наклиенте
Функция ЗакрытьКассовуюСмену(ОповещениеПриЗавершении)
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеПриЗавершении" , ОповещениеПриЗавершении);
	Контекст.Вставить("УникальныйИдентификатор" , УникальныйИдентификатор);
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Статус", ПредопределенноеЗначение("Перечисление.СтатусыКассовойСмены.Открыта"));
	
	СтруктураРезультата = Новый Структура();
	СтруктураРезультата.Вставить("КассоваяСмена", "Ссылка");
	
	ПараметрыВыбора = Новый Структура();
	ПараметрыВыбора.Вставить("СтруктураПараметрыОтбора", СтруктураОтбора);
	ПараметрыВыбора.Вставить("СтруктураРезультата", СтруктураРезультата);
	ПараметрыВыбора.Вставить("Заголовок", НСтр("ru = 'Выберите кассовую смену для закрытия'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьКассовуюСменуВыборСмены", ЭтотОбъект, Контекст);
	
	ОткрытьФорму("Документ.КассоваяСмена.ФормаВыбора", ПараметрыВыбора,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецФункции

&НаКлиенте
Функция ЗакрытьКассовуюСменуВыборСмены(СтруктураПараметровСмены, Параметры) Экспорт
	
	РезультатВыполнения = Новый Структура();
	
	Если СтруктураПараметровСмены = Неопределено Тогда
		Если Параметры.ОповещениеПриЗавершении <> Неопределено Тогда
			ОписаниеОшибки = НСтр("ru='Кассовая смена не выбрана'");
			РезультатВыполнения.Вставить("ОписаниеОшибки" , ОписаниеОшибки);
			РезультатВыполнения.Вставить("Результат" , Ложь);
		КонецЕсли;
	Иначе
		ЗакрытьКассовуюСменуЗавершение(СтруктураПараметровСмены.КассоваяСмена);
		РезультатВыполнения.Вставить("Результат" , Истина);
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Параметры.ОповещениеПриЗавершении, РезультатВыполнения);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗакрытьКассовуюСменуЗавершение(КассоваяСмена) Экспорт
	
	КассоваяСменаОбъект = КассоваяСмена.ПолучитьОбъект();
	
	КассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Закрыта;
	КассоваяСменаОбъект.ОкончаниеКассовойСмены = ТекущаяДатаСеанса();
	КассоваяСменаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСменуПослеВыбораУстройства(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Доступность = Ложь;
	
	ПараметрыОперации = МенеджерОборудованияКлиентСервер.ПараметрыВыполненияОперации();
	ПараметрыОперации.Кассир = ПараметрКассир; 
	ПараметрыОперации.КассирИНН = ПараметрКассирИНН;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, ПараметрыОперации, РезультатВыбора);
	
КонецПроцедуры

#КонецОбласти