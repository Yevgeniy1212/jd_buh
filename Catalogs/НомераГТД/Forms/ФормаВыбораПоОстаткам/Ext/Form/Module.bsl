
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОценкаПроизводительностиСуществует = ПодсистемаОценкаПроизводительностиСуществует();
	Если ОценкаПроизводительностиСуществует Тогда
		ВремяНачалаЗамера = ОбщегоНазначения.ОбщийМодуль("ОценкаПроизводительности").НачатьЗамерВремени();		
	КонецЕсли;
	
	ПоказыватьТолькоОстатки = Истина;
	РежимОстатков	        = Истина;
	Период = Неопределено;
	Регистратор = Неопределено;
	
	Если Параметры.Свойство("Дата", Период) И Параметры.Свойство("Регистратор", Регистратор) Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.Регистратор) Тогда		
			Период = Новый Граница(Период, ВидГраницы.Включая);
		Иначе
			Период =  Новый Граница(Новый МоментВремени(Параметры.Дата, Параметры.Регистратор), ВидГраницы.Исключая)			
		КонецЕсли;	
	ИначеЕсли Параметры.Свойство("Дата", Период) Тогда
		Период = Новый Граница(Период, ВидГраницы.Включая);		
	КонецЕсли;
	
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "&УсловиеНаИзмерения", "{(Организация), (СтруктурноеПодразделение),(Склад), (Товар)}");
	
	ВедетсяУчетПоСкладам  = ?(ПланыСчетов.Типовой.Товары.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады, "ВидСубконто") = Неопределено, Ложь, Истина);
	
 	Если НЕ ВедетсяУчетПоСкладам ИЛИ НЕ Параметры.Отбор.Свойство("Склад") Тогда
		Список.ТекстЗапроса =  СтрЗаменить(Список.ТекстЗапроса, "(Склад),", "");		
		Если Параметры.Отбор.Свойство("Склад") Тогда
			Параметры.Отбор.Удалить("Склад");	
		КонецЕсли;		
	КонецЕсли;
	
	Если  Параметры.Свойство("ПоказыватьТолькоОстатки") Тогда
		ПоказыватьТолькоОстатки = Параметры.ПоказыватьТолькоОстатки;
		РежимОстатков			= Параметры.ПоказыватьТолькоОстатки;
	КонецЕсли;
		
	Если Параметры.Отбор.Свойство("СтранаПроисхожденияТовара", СтранаПроисхождения) Тогда
		Если Не ЗначениеЗаполнено(СтранаПроисхождения) тогда
			Параметры.Отбор.Удалить("СтранаПроисхожденияТовара");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СтранаПроисхожденияТовара", СтранаПроисхождения, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СтранаПроисхождения));
	КонецЕсли; 
	
	Если Параметры.Отбор.Свойство("СпособПроисхожденияТовара", СпособПроисхождения) Тогда
		Если Не ЗначениеЗаполнено(СтранаПроисхождения) тогда
			Параметры.Отбор.Удалить("СпособПроисхожденияТовара");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СпособПроисхожденияТовара", СпособПроисхождения, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СпособПроисхождения));
	КонецЕсли;

	Список.Параметры.УстановитьЗначениеПараметра("ПоказыватьТолькоОстатки", ПоказыватьТолькоОстатки);
	Список.Параметры.УстановитьЗначениеПараметра("РежимОстатков", РежимОстатков);
	Список.Параметры.УстановитьЗначениеПараметра("Период", Период);
	
	УправлениеФормой(ЭтаФорма);

	Если ОценкаПроизводительностиСуществует Тогда
		ОбщегоНазначения.ОбщийМодуль("ОценкаПроизводительности").ЗакончитьЗамерВремени("Справочник ""источники происхождения"" (открытие формы выбора по остаткам)", ВремяНачалаЗамера);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоОстаткиПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("ПоказыватьТолькоОстатки", ПоказыватьТолькоОстатки);

КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если ВладелецФормы <> Неопределено И ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
		
		Если ТипЗнч(ВладелецФормы.ТекущийЭлемент) = Тип("ТаблицаФормы") Тогда
			
			ТекущиеДанные = ВладелецФормы.ТекущийЭлемент.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				ТекущиеДанные.НомерГТД = Значение;			
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьИнформационнуюНадписьПараметрыВыбора(ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИнформационнуюНадписьПараметрыВыбора(Форма)

	ЭлементыОтбора = Форма.Список.Отбор.Элементы;

	ТекстНадписи = "";
	Для Каждого Элемент Из ЭлементыОтбора Цикл
		Если ЗначениеЗаполнено(Элемент.ПравоеЗначение) и Элемент.Использование Тогда			
			ТекстНадписи = ТекстНадписи + Элемент.ПравоеЗначение + "; ";
		КонецЕсли;
	КонецЦикла;

	ТекстНадписи = Лев(ТекстНадписи, СтрДлина(ТекстНадписи) - 2);

	Форма.ИнформационнаяНадписьПараметровВыбора = ТекстНадписи;

КонецПроцедуры

&НаКлиенте
Процедура СтранаПроисхожденияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СтранаПроисхожденияТовара", СтранаПроисхождения, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СтранаПроисхождения));	
	ОбновитьИнформационнуюНадписьПараметрыВыбора(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПроисхожденияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СпособПроисхожденияТовара", СпособПроисхождения, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(СпособПроисхождения));
	ОбновитьИнформационнуюНадписьПараметрыВыбора(ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
		
	// Доступность взаимосвязанных полей
	Элементы.ГруппаОтбор.Видимость           = Форма.ПоказыватьТолькоОстатки;
	Элементы.Остаток.Видимость       		 = Форма.ПоказыватьТолькоОстатки;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодсистемаОценкаПроизводительностиСуществует()
		
	Подсистема = Метаданные.НайтиПоПолномуИмени("Подсистема.СтандартныеПодсистемы.Подсистема.ОценкаПроизводительности");
	
	Возврат ?(Подсистема = Неопределено, Ложь, Истина);
	
КонецФункции