
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияБК.ФормаСпискаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ФормаВыбораИзКлассификатора") И  ВыбранноеЗначение <> Неопределено Тогда
		ОбработатьПодборКлассификатора(ВыбранноеЗначение);
		Элементы.Список.Обновить();
	КонецЕсли;    

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура Подбор(Команда)
	
	ТекущиеДанные =  Элементы.Список.ТекущиеДанные;
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора"		  , Истина);
	ПараметрыФормы.Вставить("ИмяМакета"			  , "КодыКатегорийЗемель");
	ПараметрыФормы.Вставить("ИмяСекции"			  ,	"Классификатор");
	ПараметрыФормы.Вставить("ПолучатьПолныеДанные", Истина);
	ПараметрыФормы.Вставить("ТекущийКодСтроки"	  , Неопределено);
	ПараметрыФормы.Вставить("ЯзыкМакета", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораИзКлассификатора", ПараметрыФормы, ЭтаФорма, Истина,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов
&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов


////////////////////////////////////////////////////////////////////////////////
//СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ПолучитьСуществующуюКатегорию(НаименованиеКатегории)
	
	Ссылка = Справочники.КатегорииЗемель.НайтиПоНаименованию(НаименованиеКатегории);	
	
	Возврат Ссылка;
	
КонецФункции 

&НаКлиенте
Функция ОбработатьПодборКлассификатора(ЗначениеВыбора)
	
	Если ТипЗнч(ЗначениеВыбора) <> Тип("Структура") Тогда
		КодСтроки      = "";
		Наименование   = ЗначениеВыбора;
		ПолноеНаименование = "";
	Иначе
		Наименование		= ЗначениеВыбора.КодСтроки;
		КодСтроки           = "";
	    ПолноеНаименование  = ЗначениеВыбора.Наименование;
	КонецЕсли;
			
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Наименование", Наименование);
	СтруктураДанных.Вставить("КодСтроки", "");	
	СтруктураДанных.Вставить("ПолноеНаименование", ПолноеНаименование);
	
	СсылкаНаКатегорию = ПолучитьСуществующуюКатегорию(Наименование);																									
	Если НЕ СсылкаНаКатегорию.Пустая() Тогда 
		
		ТекстВопроса = НСтр("ru='В справочнике ""Категории земель"" уже существует элемент с кодом с <%1>! Открыть существующий?'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, 
							Наименование);
		
		Данные = Новый Структура("Ссылка", СсылкаНаКатегорию);
		
		Режим = РежимДиалогаВопрос.ДаНетОтмена;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПриПодборе", ЭтотОбъект, Данные);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);	
		
	Иначе
		
		СоздатьНовуюКатегорию(СтруктураДанных);
		
	КонецЕсли;
			
КонецФункции  

&НаКлиенте
Процедура ПослеЗакрытияВопросаПриПодборе(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОткрытьФорму("Справочник.КатегорииЗемель.Форма.ФормаЭлемента", Новый Структура("Ключ", Параметры.Ссылка));
		
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура СоздатьНовуюКатегорию(СтруктураДанных)
	
	ФормаНовогоЭлемента = ПолучитьФорму("Справочник.КатегорииЗемель.ФормаОбъекта", , ЭтаФорма);

	ОбъектЗаполнения = ФормаНовогоЭлемента.Объект; 
		
	ОбъектЗаполнения.ПолноеНаименование  = СтруктураДанных.ПолноеНаименование;			
	ОбъектЗаполнения.Наименование        = СтруктураДанных.Наименование;
			
	ФормаНовогоЭлемента.Открыть();
	
КонецПроцедуры



