#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Определяет статью затрат, используемую по умолчанию.
// 
// Возвращаемое значение:
//  СправочникСсылка.СтатьиЗатрат - основная статья.
//       Возвращается пустая ссылка, если ни одна статья не назначена основной.
//
Функция ОсновнаяСтатьяЗатрат() Экспорт
	
	Возврат ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеРасходы");
	
КонецФункции

// Определяет статью затрат, используемую в конкретной ситуации.
// 
// Параметры:
//  НазначениеСтатьиЗатрат - Строка - имя предопределенного элемента
//                         - Неопределено - для статьи, используемой по умолчанию
// 
// Возвращаемое значение:
//  СправочникСсылка.СтатьиЗатрат - основная статья.
//       Возвращается пустая ссылка, если ни одна статья не назначена основной.
//
Функция СтатьяЗатратПоНазначению(НазначениеСтатьиЗатрат) Экспорт
	
	Если Не ЗначениеЗаполнено(НазначениеСтатьиЗатрат) Тогда
		Возврат ОсновнаяСтатьяЗатрат();
	Иначе
		Возврат ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат." + НазначениеСтатьиЗатрат);
	КонецЕсли;
	
КонецФункции

Процедура ВыполнитьЗагрузкуКлассификатора(Параметры, АдресХранилища) Экспорт
	
	Отказ = Ложь;
	
	НачатьТранзакцию();
	
	ТаблицаСправочника = ПолучитьТаблицуСправочника();
	
	Макет 	= УправлениеПечатью.МакетПечатнойФормы("Справочник.СтатьиЗатрат.КлассификаторЗатрат");
	Область = Макет.Области["Строки"];
		
	ЭлементРодитель = Справочники.СтатьиЗатрат.ПустаяСсылка();
	Для Ном = Область.Верх По Область.Низ Цикл
				
		ПризнакГруппы    	= СокрЛП(Макет.Область(Ном, 1).Текст);
		НаименованиеСтроки 	= СокрЛП(Макет.Область(Ном, 2).Текст);
		Категория 			= СокрЛП(Макет.Область(Ном, 3).Текст);
		ПризнакНУ 			= СокрЛП(Макет.Область(Ном, 4).Текст);
		ВидРасходаНУ 		= СокрЛП(Макет.Область(Ном, 5).Текст);
		
		Если ПризнакГруппы = "1" Тогда
			ЭлементРодитель = ЗаписатьГруппуСправочника(ТаблицаСправочника, НаименованиеСтроки, Отказ);				
		Иначе	
			ЗаписатьЭлементСправочника(ТаблицаСправочника, НаименованиеСтроки, Категория, ПризнакНУ, ВидРасходаНУ, ЭлементРодитель, Отказ);				
		КонецЕсли;
			
	КонецЦикла;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;                    	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

Функция ПолучитьТаблицуСправочника()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка,
	|	СтатьиЗатрат.Наименование,
	|	СтатьиЗатрат.ЭтоГруппа
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат";
		
	Возврат Запрос.Выполнить().Выгрузить();	 
	
КонецФункции

Функция ЗаписатьГруппуСправочника(ТаблицаСправочника, НаименованиеСтроки, Отказ)
	
	СтруктураПоиска = Новый Структура("Наименование, ЭтоГруппа", НаименованиеСтроки, Истина);
	
	НайденныеСтроки = ТаблицаСправочника.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки <> Неопределено И НайденныеСтроки.Количество() > 0 Тогда
		НайденноеЗначение = НайденныеСтроки[0].Ссылка;
	Иначе
		НовыйЭлемент = Справочники.СтатьиЗатрат.СоздатьГруппу();
		НовыйЭлемент.Наименование = НаименованиеСтроки;
		
		Попытка
			НовыйЭлемент.Записать();
		Исключение
			Отказ = Истина;
		КонецПопытки; 		
		
		НайденноеЗначение = НовыйЭлемент.Ссылка;
		
		ДобавитьЭлементВТаблицуСправочника(ТаблицаСправочника, НайденноеЗначение);		
		
	КонецЕсли;	
	
	Возврат	НайденноеЗначение;	
	
КонецФункции

Процедура ЗаписатьЭлементСправочника(ТаблицаСправочника, НаименованиеСтроки, Категория, ПризнакНУ, ВидРасходаНУ, ЭлементРодитель, Отказ)
	
	СтруктураПоиска = Новый Структура("Наименование, ЭтоГруппа", НаименованиеСтроки, Ложь);
	
	НайденныеСтроки = ТаблицаСправочника.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки <> Неопределено И НайденныеСтроки.Количество() > 0 Тогда
		Возврат
	КонецЕсли;
	             	
	НовыйЭлемент 						  = Справочники.СтатьиЗатрат.СоздатьЭлемент();
	НовыйЭлемент.Родитель 				  = ЭлементРодитель;
	НовыйЭлемент.Наименование 			  = НаименованиеСтроки;
	НовыйЭлемент.КатегорияЗатрат 		  = Перечисления.КатегорииЗатрат[Категория];				
	НовыйЭлемент.ПринятиеКНалоговомуУчету = ПризнакНУ = "1";
	
	Если ЗначениеЗаполнено(ВидРасходаНУ)  Тогда
		НовыйЭлемент.ВидРасходовНУ = Справочники.ВидыРасходовНУ[ВидРасходаНУ];		
	КонецЕсли;
	
	Попытка
		НовыйЭлемент.Записать();
	Исключение
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='Не удалось записать элемент: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, НаименованиеСтроки + Символы.ПС + ОписаниеОшибки());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
		Возврат;
	КонецПопытки;	
	
	ДобавитьЭлементВТаблицуСправочника(ТаблицаСправочника, НовыйЭлемент);

КонецПроцедуры

Процедура ДобавитьЭлементВТаблицуСправочника(ТаблицаСправочника, НайденноеЗначение);
	
	СтрокаТЗ = ТаблицаСправочника.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаТЗ, НайденноеЗначение);
	
КонецПроцедуры     


////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
			
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
КонецПроцедуры

#КонецЕсли
 