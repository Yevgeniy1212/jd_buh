
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ЗначенияЗаполнения);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипШаблона) Тогда
		Если ТипЗнч(ЭтаФорма.ОбъектДляОбразца) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.ОсновныеСредства;
		ИначеЕсли ТипЗнч(ЭтаФорма.ОбъектДляОбразца) = Тип("СправочникСсылка.Номенклатура") Тогда
			ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.Номенклатура;
		Иначе
			ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.Номенклатура;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьТипОбъектаНаСервере();
	
	ОбновитьРеквизитыФормы();
	
	РазмерЛентыПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РазмерЛентыПриИзменении(Элемент)
	
	РазмерЛентыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РазмерЛентыОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура ТипШаблонаПриИзменении(Элемент)
	УстановитьТипОбъектаНаСервере();
	ОбновитьРеквизитыФормы();
	ОбновитьВсе();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВРедакторе(Команда)
	
	Размеры = ПолучитьРазмеры(ЭтаФорма);
	
	Закрыть(Неопределено);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОткрытьРедактор", Истина);
	ПараметрыОткрытия.Вставить("ИмяМакета", ИмяВыбранногоМакета);
	ПараметрыОткрытия.Вставить("Ширина", Размеры.Ширина);
	ПараметрыОткрытия.Вставить("Высота", Размеры.Высота);
	ПараметрыОткрытия.Вставить("Наименование", Наименование);
	ПараметрыОткрытия.Вставить("ТипШаблона", ТипШаблона);
	
	ОткрытьФорму("Справочник.ШаблоныШтрихкодов.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСледующийШаблон(Команда)
	ТекущийИндексШаблона = ТекущийИндексШаблона + 1;
	ОбновитьВсе();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредыдущийШаблон(Команда)
	ТекущийИндексШаблона = ТекущийИндексШаблона - 1;
	ОбновитьВсе();
КонецПроцедуры

&НаКлиенте
Процедура НапечататьОбразец(Команда)
	
	ОчиститьСообщения();
	Если Не ЗначениеЗаполнено(ОбъектДляОбразца) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Объект для образца""'"),,"ОбъектДляОбразца");
		Возврат;
	КонецЕсли;
	
	ПараметрКоманды = Новый Массив;
	Если ТипШаблона = ПредопределенноеЗначение("Перечисление.ТипыШаблоновШтрихкодов.Номенклатура") Тогда
		ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
		ИменаМакетов = "ШтрихкодНоменклатура";
	ИначеЕсли ТипШаблона = ПредопределенноеЗначение("Перечисление.ТипыШаблоновШтрихкодов.ОсновныеСредства") Тогда
		ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка"));
		ИменаМакетов = "ШтрихкодОС";
	Иначе
		ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
		ИменаМакетов = "ШтрихкодНоменклатура";
	КонецЕсли;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.ПечатьШтрихКодов",
		ИменаМакетов,
		ПараметрКоманды,
		Неопределено,
		ПолучитьПараметры());
	
КонецПроцедуры

&НаСервере
Функция СохранитьНаСервере()
	
	Размер = ПолучитьРазмеры(ЭтаФорма);
	
	Макет = Справочники.ШаблоныШтрихкодов.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныШтрихкодов.ПодготовитьСтруктуруМакетаШаблона(Макет);
	
	НовыйЭлемент = Справочники.ШаблоныШтрихкодов.СоздатьЭлемент();
	НовыйЭлемент.Высота       = Размер.Высота;
	НовыйЭлемент.Ширина       = Размер.Ширина;
	НовыйЭлемент.РазмерЯчейки = 5;
	НовыйЭлемент.Наименование = Наименование;
	НовыйЭлемент.ТипШаблона   = ТипШаблона;
	НовыйЭлемент.Шаблон       = Новый ХранилищеЗначения(ПараметрыМакета);
	НовыйЭлемент.Записать();
	
	Возврат НовыйЭлемент.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура Сохранить(Команда)
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда 	
		Шаблон = СохранитьНаСервере();
		Оповестить("Запись_ШаблоныШтрихкодов", Новый Структура, Шаблон);
		Закрыть();
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзменении

&НаСервере
Процедура РазмерЛентыПриИзмененииНаСервере()
	
	Ключ = "Размер"+РазмерЛенты;
	
	ТекущийИндексШаблона  = 1;
	ВсегоШаблонов = Шаблоны[Ключ].Количество();
	
	ОбновитьВсе();
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьРазмеры(Форма)
	
	Высота = Число(СтрЗаменить(Форма.РазмерЛенты, Лев(Форма.РазмерЛенты, Найти(Форма.РазмерЛенты, "х")), ""));
	Ширина = (СтрЗаменить(Форма.РазмерЛенты, "х"+Высота, ""));
	
	Возврат Новый Структура("Ширина,Высота",Ширина,Высота);
	
КонецФункции

&НаСервере
Процедура ОбновитьВсе()
	
	Ключ = "Размер" + РазмерЛенты;
	
	Элементы.КомандаСледующийШаблон.Видимость = Не (ТекущийИндексШаблона = ВсегоШаблонов);
	Элементы.КомандаПредыдущийШаблон.Видимость = Не (ТекущийИндексШаблона = 1);
	
	Элементы.ДекорацияКомандаСледующийШаблон.Видимость = (ТекущийИндексШаблона = ВсегоШаблонов);
	Элементы.ДекорацияКомандаПредыдущийШаблон.Видимость = (ТекущийИндексШаблона = 1);
	
	Элементы.ТекущийНомер.Заголовок =  СтрШаблон(НСтр("ru = '%1 из %2'"), Строка(ТекущийИндексШаблона), ВсегоШаблонов);
	
	ИмяМакета = Шаблоны[Ключ][ТекущийИндексШаблона - 1];
	ИмяВыбранногоМакета = ИмяМакета;
	
	Макет = Справочники.ШаблоныШтрихкодов.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныШтрихкодов.ПодготовитьСтруктуруМакетаШаблона(Макет);
	
	Попытка
		МакетКартинки = Справочники.ШаблоныШтрихкодов.ПолучитьМакет(ИмяМакета + "_Картинка");
		АдресКартинки = ПоместитьВоВременноеХранилище(МакетКартинки, УникальныйИдентификатор);
	Исключение
		АдресКартинки = "";
	КонецПопытки;
	
	КоличествоНаСтранице = Справочники.ШаблоныШтрихкодов.МаксимальноеКоличествоНаСтранице(Макет);
	
	Если ПараметрыМакета.ПараметрыШаблона.Количество() > 0 Тогда
		ИменаПараметров = Новый Массив;
		Для Каждого КлючИЗначение Из ПараметрыМакета.ПараметрыШаблона Цикл
			ИменаПараметров.Добавить(КлючИЗначение.Ключ);
		КонецЦикла;
		Элементы.ДекорацияОписание.Заголовок = СтрСоединить(ИменаПараметров, ", ");
	Иначе
		Элементы.ДекорацияОписание.Заголовок = НСтр("ru = 'Нет параметров'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДополнитьПараметрыДляПечатиОбразца(ПараметрыПечати, ПараметрыМакета)
	
	ПараметрыПечати.Вставить("СтруктураМакетаШаблона", ПараметрыМакета);
	ПараметрыПечати.Вставить("ТипШаблона",             ТипШаблона);
	
	Возврат ПараметрыПечати;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметры()
	
	Макет 			= Справочники.ШаблоныШтрихкодов.ПолучитьМакет(ИмяМакета);
	ПараметрыМакета = Справочники.ШаблоныШтрихкодов.ПодготовитьСтруктуруМакетаШаблона(Макет);
	ТипКода 		= 0;
	
	ПараметрыПечати = Справочники.ШаблоныШтрихкодов.ПолучитьПараметрыОбразца(ОбъектДляОбразца, ТипШаблона, УникальныйИдентификатор);
	Возврат ДополнитьПараметрыДляПечатиОбразца(ПараметрыПечати,ПараметрыМакета);
	
КонецФункции

&НаСервере
Процедура УстановитьТипОбъектаНаСервере()
	
	Если ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.Номенклатура Тогда
		Элементы.ОбъектДляОбразца.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ИначеЕсли ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.ОсновныеСредства Тогда
		Элементы.ОбъектДляОбразца.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРеквизитыФормы()
	
	Если ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.Номенклатура Тогда
		ТипОбъектаДляПоиска = "Номенклатура";
	ИначеЕсли ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.ОсновныеСредства Тогда
		ТипОбъектаДляПоиска = "ОС";
	Иначе
		ТипОбъектаДляПоиска = "Номенклатура";
	КонецЕсли;
	
	Шаблоны = Новый Структура;
	
	Элементы.РазмерЛенты.СписокВыбора.Очистить();
	Для каждого Макет из Метаданные.НайтиПоТипу(Тип("СправочникСсылка.ШаблоныШтрихкодов")).Макеты Цикл
		
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.ТабличныйДокумент Тогда
			
			Если Найти(Макет.Имя, ТипОбъектаДляПоиска) > 0 Тогда
				
				ИмяМакетаДляПоиска = СтрЗаменить(Макет.Имя,"_" + ТипОбъектаДляПоиска, "");
				Размер = СтрЗаменить(ИмяМакетаДляПоиска, Лев(ИмяМакетаДляПоиска, Найти(ИмяМакетаДляПоиска, "_")), "");
				
				Если Найти(Макет.Имя, "х") > 0 Тогда
					
					Ключ = "Размер"+Размер;
					Если Не Шаблоны.Свойство(Ключ) Тогда
						Шаблоны.Вставить(Ключ, Новый Массив);
					КонецЕсли;
					Шаблоны[Ключ].Добавить(Макет.Имя);
					
					Если Не ЗначениеЗаполнено(РазмерЛенты) Тогда
						РазмерЛенты = Размер;
					КонецЕсли;
					
					Если Элементы.РазмерЛенты.СписокВыбора.НайтиПоЗначению(Размер) = Неопределено Тогда
						Элементы.РазмерЛенты.СписокВыбора.Добавить(Размер, Размер);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
