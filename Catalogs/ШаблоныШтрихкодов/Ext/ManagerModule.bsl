#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция выполняет получение имени поля из доступных полей компоновки данных.
//
// Параметры
//  ИмяПоля  - Строка - Имя поля
//
// Возвращаемое значение:
//   Строка   - Имя поля в шаблоне
//
Функция ИмяПоляВШаблоне(Знач ИмяПоля) Экспорт
	
	ИмяПоля = СтрЗаменить(ИмяПоля, ".DeletionMark", ".ПометкаУдаления");
	ИмяПоля = СтрЗаменить(ИмяПоля, ".Owner", ".Владелец");
	ИмяПоля = СтрЗаменить(ИмяПоля, ".Code", ".Код");
	ИмяПоля = СтрЗаменить(ИмяПоля, ".Parent", ".Родитель");
	ИмяПоля = СтрЗаменить(ИмяПоля, ".Predefined", ".Предопределенный");
	ИмяПоля = СтрЗаменить(ИмяПоля, ".IsFolder", ".ЭтоГруппа");
	ИмяПоля = СтрЗаменить(ИмяПоля, ".Description", ".Наименование");
	Возврат ИмяПоля;
	
КонецФункции

// Возвращает шаблон указанного назначения, если он один в базе, иначе - пустую ссылку
Функция ШаблонПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	ШаблоныШтрихкодов.Ссылка
	|ИЗ
	|	Справочник.ШаблоныШтрихкодов КАК ШаблоныШтрихкодов
	|ГДЕ
	|	ШаблоныШтрихкодов.ПометкаУдаления = Ложь";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ШаблоныШтрихкодов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Процедура СкопироватьСвойстваТабличногоДокумента(Приемник, Источник)
	
	Приемник.АвтоМасштаб = Источник.АвтоМасштаб;
	Приемник.ВысотаСтраницы = Источник.ВысотаСтраницы;
	Приемник.ИмяПараметровПечати = Источник.ИмяПараметровПечати;
	Приемник.ИмяПринтера = Источник.ИмяПринтера;
	Приемник.КлючПараметровПечати = Источник.КлючПараметровПечати;
	Приемник.КоличествоЭкземпляров = Источник.КоличествоЭкземпляров;
	Приемник.МасштабПечати = Источник.МасштабПечати;
	Приемник.ОриентацияСтраницы = Источник.ОриентацияСтраницы;
	Приемник.ПолеСверху = Источник.ПолеСверху;
	Приемник.ПолеСлева = Источник.ПолеСлева;
	Приемник.ПолеСнизу = Источник.ПолеСнизу;
	Приемник.ПолеСправа = Источник.ПолеСправа;
	Приемник.РазборПоКопиям = Источник.РазборПоКопиям;
	Приемник.РазмерКолонтитулаСверху = Источник.РазмерКолонтитулаСверху;
	Приемник.РазмерКолонтитулаСнизу = Источник.РазмерКолонтитулаСнизу;
	Приемник.РазмерСтраницы = Источник.РазмерСтраницы;
	Приемник.ТочностьПечати = Источник.ТочностьПечати;
	Приемник.ЧерноБелаяПечать = Источник.ЧерноБелаяПечать;
	Приемник.ШиринаСтраницы = Источник.ШиринаСтраницы;
	Приемник.ЭкземпляровНаСтранице = Источник.ЭкземпляровНаСтранице;
	
КонецПроцедуры

Функция ПодготовитьСтруктуруМакетаШаблона(ПолеТабличногоДокумента) Экспорт
	
	СтруктураМакетаШаблона = Новый Структура;
	ПараметрыШаблона       = Новый Соответствие;
	СчетчикПараметров      = 0;
	ПрефиксИмениПараметра  = "ПараметрМакета";
	
	ОбластьМакетаЭтикетки = ПолеТабличногоДокумента.ПолучитьОбласть(ПолеТабличногоДокумента.ОбластьПечати.Имя);
	СкопироватьСвойстваТабличногоДокумента(ОбластьМакетаЭтикетки, ПолеТабличногоДокумента);
	
	ОбластьМакетаЭтикетки.ОбластьПечати = ОбластьМакетаЭтикетки.Область("R1C1:"+"R"+ОбластьМакетаЭтикетки.ВысотаТаблицы+"C"+ОбластьМакетаЭтикетки.ШиринаТаблицы);
	
	Для НомерКолонки = 1 По ОбластьМакетаЭтикетки.ШиринаТаблицы Цикл
		
		Для НомерСтроки = 1 По ОбластьМакетаЭтикетки.ВысотаТаблицы Цикл
			
			Ячейка = ОбластьМакетаЭтикетки.Область(НомерСтроки, НомерКолонки);
			Если Ячейка.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон Тогда
				
				МассивПараметров = ПозицииПараметров(Ячейка.Текст);
				
				КоличествоПараметров = МассивПараметров.Количество();
				Для Индекс = 0 По КоличествоПараметров - 1 Цикл
					
					Структура = МассивПараметров[КоличествоПараметров - 1 - Индекс];
					
					ИмяПараметра = Сред(Ячейка.Текст, Структура.Начало + 1, Структура.Конец - Структура.Начало - 1);
					Если Найти(ИмяПараметра, ПрефиксИмениПараметра) = 0 Тогда
						
						ЛеваяЧасть = Лев(Ячейка.Текст, Структура.Начало);
						ПраваяЧасть = Прав(Ячейка.Текст, СтрДлина(Ячейка.Текст) - Структура.Конец+1);
						
						СохраненноеИмяПараметраМакета = ПараметрыШаблона.Получить(ИмяПараметра);
						Если СохраненноеИмяПараметраМакета = Неопределено Тогда
							СчетчикПараметров = СчетчикПараметров + 1;
							Ячейка.Текст = ЛеваяЧасть + (ПрефиксИмениПараметра + СчетчикПараметров) + ПраваяЧасть;
							ПараметрыШаблона.Вставить(ИмяПараметра, ПрефиксИмениПараметра + СчетчикПараметров);
						Иначе
							Ячейка.Текст = ЛеваяЧасть + (СохраненноеИмяПараметраМакета) + ПраваяЧасть;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			ИначеЕсли Ячейка.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр Тогда
				
				Если Найти(Ячейка.Параметр, ПрефиксИмениПараметра) = 0 Тогда
					СохраненноеИмяПараметраМакета = ПараметрыШаблона.Получить(Ячейка.Параметр);
					Если СохраненноеИмяПараметраМакета = Неопределено Тогда
						СчетчикПараметров = СчетчикПараметров + 1;
						ПараметрыШаблона.Вставить(Ячейка.Параметр, ПрефиксИмениПараметра + СчетчикПараметров);
						Ячейка.Параметр = ПрефиксИмениПараметра + СчетчикПараметров;
					Иначе
						Ячейка.Параметр = СохраненноеИмяПараметраМакета;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТребуетсяПараметрШтрихкод = ПараметрыШаблона.Получить(ИмяПараметраШтрихкод()) = Неопределено;
	
	// Вставляем в параметры штрихкод
	Для Каждого Рисунок Из ОбластьМакетаЭтикетки.Рисунки Цикл
		Если Найти(Рисунок.Имя, ИмяПараметраШтрихкод()) = 1 Тогда
			Если ТребуетсяПараметрШтрихкод Тогда
				ПараметрыШаблона.Вставить(ИмяПараметраШтрихкод(), ПрефиксИмениПараметра + (СчетчикПараметров+1));
			КонецЕсли;
			// Заменяем на пустую картинку.
			Рисунок.Картинка = Новый Картинка;
		КонецЕсли;
	КонецЦикла;
	
	КоличествоНаСтранице = МаксимальноеКоличествоНаСтранице(ПолеТабличногоДокумента);
	
	ОтображатьТекст = Истина;
	
	ТипКода = 1; // EAN13
	
	РазмерШрифта = 12;
	
	СтруктураМакетаШаблона.Вставить("МакетЭтикетки"            , ОбластьМакетаЭтикетки);
	СтруктураМакетаШаблона.Вставить("ИмяОбластиПечати"         , ОбластьМакетаЭтикетки.ОбластьПечати.Имя);
	СтруктураМакетаШаблона.Вставить("ТипКода"                  , ТипКода);
	СтруктураМакетаШаблона.Вставить("РазмерШрифта"             , РазмерШрифта);
	СтруктураМакетаШаблона.Вставить("ОтображатьТекст"          , ОтображатьТекст);
	СтруктураМакетаШаблона.Вставить("ПараметрыШаблона"         , ПараметрыШаблона);
	СтруктураМакетаШаблона.Вставить("РедакторТабличныйДокумент", ПолеТабличногоДокумента);
	СтруктураМакетаШаблона.Вставить("КоличествоПоВертикали"    , КоличествоНаСтранице.ПоВертикали);
	СтруктураМакетаШаблона.Вставить("КоличествоПоГоризонтали"  , КоличествоНаСтранице.ПоГоризонтали);
	
	Возврат СтруктураМакетаШаблона;
	
КонецФункции

Функция МаксимальноеКоличествоНаСтранице(ПолеТабличногоДокумента) Экспорт
	
	МаксимальноеКоличество = Новый Структура("ПоГоризонтали, ПоВертикали, Описание", 1, 1);
	
	РазмерСтраницы = РазмерСтраницы(ПолеТабличногоДокумента);
	
	ОбластьМакета = ПолеТабличногоДокумента.ПолучитьОбласть(ПолеТабличногоДокумента.ОбластьПечати.Имя);
		
	РисунокШтрихкода = ОбластьМакета.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	РисунокШтрихкода.Расположить(ОбластьМакета.Область("R1C1:"+"R"+Формат(ОбластьМакета.ВысотаТаблицы,"ЧГ=0")+"C"+Формат(ОбластьМакета.ШиринаТаблицы,"ЧГ=0")));
	
	Если ПолеТабличногоДокумента.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт Тогда
		ВысотаСтраницы = ПолеТабличногоДокумента.ШиринаСтраницы;
		ШиринаСтраницы = ПолеТабличногоДокумента.ВысотаСтраницы;
	Иначе
		ВысотаСтраницы = ПолеТабличногоДокумента.ВысотаСтраницы;
		ШиринаСтраницы = ПолеТабличногоДокумента.ШиринаСтраницы;
	КонецЕсли;
	
	Если НЕ ПолеТабличногоДокумента.АвтоМасштаб Тогда
		Если РисунокШтрихкода.Ширина <> 0 Тогда
			МаксимальноеКоличество.ПоГоризонтали = Цел((ШиринаСтраницы-ПолеТабличногоДокумента.ПолеСлева-ПолеТабличногоДокумента.ПолеСправа)/РисунокШтрихкода.Ширина);
		Иначе
			МаксимальноеКоличество.ПоГоризонтали = 1;
		КонецЕсли;
	Иначе
		МаксимальноеКоличество.ПоГоризонтали = 3;
	КонецЕсли;
	
	Если РисунокШтрихкода.Высота <> 0 Тогда
		МаксимальноеКоличество.ПоВертикали = Цел((ВысотаСтраницы-ПолеТабличногоДокумента.ПолеСверху-ПолеТабличногоДокумента.ПолеСнизу)/РисунокШтрихкода.Высота);
	Иначе
		МаксимальноеКоличество.ПоВертикали = 1;
	КонецЕсли;

	Описание = НСтр("ru = 'На странице %1 помещается по вертикали: %2, по горизонтали: %3'");
	МаксимальноеКоличество.Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Описание,
		РазмерСтраницы,
		МаксимальноеКоличество.ПоВертикали,
		МаксимальноеКоличество.ПоГоризонтали);
	
	Возврат МаксимальноеКоличество;
	
КонецФункции

#Область ПечатьОбразцов

Функция ПолучитьОрганизациюДляПечатиОбразца(ОсновноеСредствоДляОбразца)
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ПервоначальныеСведенияОС.Организация
	               |ИЗ
	               |	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС";
				   
	Запрос.УстановитьПараметр("ОсновноеСредство",ОсновноеСредствоДляОбразца);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Организация;	
	КонецЕсли;	
	УстановитьПривилегированныйРежим(Ложь);
	
	мТекущийПользователь = Пользователи.ТекущийПользователь();
	
	мОрганизация         = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	Если ЗначениеЗаполнено(мОрганизация) Тогда
		Возврат мОрганизация;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Данные.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Данные
	|ГДЕ
	|	НЕ Данные.ПометкаУдаления
	|	И Не Данные.Предопределенный
	|");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОбразцыШтрихкодов() Экспорт
	
	Коды = Новый Массив;
	
	ПримерКода = Новый Структура("ТипКода, Наименование, Пример");
	ПримерКода.ТипКода      = 1;
	ПримерКода.Наименование = "EAN13";
	ПримерКода.Пример       = "4600051000057";
	Коды.Добавить(ПримерКода);
	
	Возврат Коды;
	
КонецФункции

Функция ПолучитьПараметрыОбразца(ОбъектДляОбразца, ТипШаблона, УникальныйИдентификатор) Экспорт
	
	ПараметрыПечати = Новый Структура;
	
	Если ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.Номенклатура Тогда
		
		Номенклатура = Новый ТаблицаЗначений;
		Номенклатура.Колонки.Добавить("Номенклатура"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		Номенклатура.Колонки.Добавить("Штрихкод"				, Новый ОписаниеТипов("Строка"));
		
		НоваяСтрока = Номенклатура.Добавить();
		НоваяСтрока.Номенклатура = ОбъектДляОбразца;
		
		ПараметрыПечати.Вставить("Номенклатура"				, ПоместитьВоВременноеХранилище(Номенклатура, УникальныйИдентификатор));
		ПараметрыПечати.Вставить("СтруктураМакетаШаблона"	, Неопределено);
		ПараметрыПечати.Вставить("ШаблонШтрихкода"			, Справочники.ШаблоныШтрихкодов.ПустаяСсылка());
		ПараметрыПечати.Вставить("КоличествоЭкземпляров"	, 1);
		ПараметрыПечати.Вставить("ДатаСведений"				, ОбщегоНазначенияБК.ПолучитьРабочуюДату());
		ПараметрыПечати.Вставить("ТипШаблона"				, ТипШаблона);
		
	ИначеЕсли ТипШаблона = Перечисления.ТипыШаблоновШтрихкодов.ОсновныеСредства Тогда
		
		ОС = Новый ТаблицаЗначений;
		ОС.Колонки.Добавить("ОсновноеСредство"		, Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
		ОС.Колонки.Добавить("Штрихкод"				, Новый ОписаниеТипов("Строка"));
		ОС.Колонки.Добавить("ИнвентарныйНомер"		, Новый ОписаниеТипов("Строка"));
		
		
		НоваяСтрока = ОС.Добавить();
		НоваяСтрока.ОсновноеСредство = ОбъектДляОбразца;
		
		ПараметрыПечати.Вставить("ОС"						, ПоместитьВоВременноеХранилище(ОС, УникальныйИдентификатор));
		ПараметрыПечати.Вставить("Организация"				, ПолучитьОрганизациюДляПечатиОбразца(ОбъектДляОбразца));
		ПараметрыПечати.Вставить("СтруктураМакетаШаблона"	, Неопределено);
		ПараметрыПечати.Вставить("ШаблонШтрихкода"			, Справочники.ШаблоныШтрихкодов.ПустаяСсылка());
		ПараметрыПечати.Вставить("КоличествоЭкземпляров"	, 1);
		ПараметрыПечати.Вставить("ДатаСведений"				, ОбщегоНазначенияБК.ПолучитьРабочуюДату());
		ПараметрыПечати.Вставить("ТипШаблона"				, ТипШаблона);
		
	КонецЕсли;
	
	Возврат ПараметрыПечати;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" 
		И Не Параметры.Свойство("Ключ")
		И Не Параметры.Свойство("ОткрытьРедактор")
		И Не Параметры.Свойство("ЗначениеКопирования") Тогда
		
		ВыбраннаяФорма = "ПомощникНового";
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция РазмерСтраницы(ПолеТабличногоДокумента)
	
	ВысотаСтраницы = ПолеТабличногоДокумента.ВысотаСтраницы;
	ШиринаСтраницы = ПолеТабличногоДокумента.ШиринаСтраницы;
	
	Наименование = Строка(ШиринаСтраницы)+"х"+Строка(ВысотаСтраницы);
	
	Если ШиринаСтраницы = 210 И ВысотаСтраницы = 297 Тогда
		Наименование = "A4";
	ИначеЕсли ШиринаСтраницы = 148 И ВысотаСтраницы = 210 Тогда
		Наименование = "A5";
	ИначеЕсли ШиринаСтраницы = 105 И ВысотаСтраницы = 148 Тогда
		Наименование = "A6";
	ИначеЕсли ШиринаСтраницы = 74 И ВысотаСтраницы = 105 Тогда
		Наименование = "A7";
	ИначеЕсли ШиринаСтраницы = 52 И ВысотаСтраницы = 74 Тогда
		Наименование = "A8";
	ИначеЕсли ШиринаСтраницы = 37 И ВысотаСтраницы = 52 Тогда
		Наименование = "A9";
	ИначеЕсли ШиринаСтраницы = 26 И ВысотаСтраницы = 37 Тогда
		Наименование = "A10";
	КонецЕсли;
	
	Возврат Наименование;
	
КонецФункции

Функция ПозицииПараметров(ТекстЯчейки)
	
	Массив = Новый Массив;
	
	Начало = -1;
	Конец  = -1;
	СчетчикСкобокОткрывающих = 0;
	СчетчикСкобокЗакрывающих = 0;
	
	Для Индекс = 1 По СтрДлина(ТекстЯчейки) Цикл
		Симв = Сред(ТекстЯчейки, Индекс, 1);
		Если Симв = "[" Тогда
			СчетчикСкобокОткрывающих = СчетчикСкобокОткрывающих + 1;
			Если СчетчикСкобокОткрывающих = 1 Тогда
				Начало = Индекс;
			КонецЕсли;
		ИначеЕсли Симв = "]" Тогда
			СчетчикСкобокЗакрывающих = СчетчикСкобокЗакрывающих + 1;
			Если СчетчикСкобокЗакрывающих = СчетчикСкобокОткрывающих Тогда
				Конец = Индекс;
				
				Массив.Добавить(Новый Структура("Начало, Конец", Начало, Конец));
				
				Начало = -1;
				Конец  = -1;
				СчетчикСкобокОткрывающих = 0;
				СчетчикСкобокЗакрывающих = 0;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

Функция ИмяПараметраШтрихкод() Экспорт
	
	Возврат "Штрихкод";
	
КонецФункции

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#КонецЕсли