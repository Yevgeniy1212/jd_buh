
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация", "Объект.Организация");
		Если Не ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
			Объект.НачалоПериода = НачалоГода(ТекущаяДатаСеанса());
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.КонецПериода) Тогда
			Объект.КонецПериода = КонецГода(ТекущаяДатаСеанса());
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    
    // СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриПолученииДанныхНаСервере();
			
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
    
    // СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РезервПриИзменении(Элемент)
	ОбновитьПараметрыРасчетаРезерва();
КонецПроцедуры

&НаКлиенте
Процедура ВидРезерваПриИзменении(Элемент)
	
	ЭтоРасчетОтпуска = Объект.ВидРезерва = ВидРезерваОтпуск;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПериодаПриИзменении(Элемент)
	
	Объект.КонецПериода = КонецГода(Объект.НачалоПериода);
	ПроверитьСоответствиеПериодов();
	ОбновитьПараметрыРасчетаРезерва();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПериодаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ФормироватьРезервНУПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНазваниеПараметраРасчетаРезервов()
	
	ОписаниеОбъекта = Новый Структура();
	ОписаниеОбъекта.Вставить("Организация",   Объект.Организация);
	ОписаниеОбъекта.Вставить("Резерв",        Объект.Резерв);
	ОписаниеОбъекта.Вставить("НачалоПериода", Объект.НачалоПериода);
	ОписаниеОбъекта.Вставить("КонецПериода",  Объект.КонецПериода);
	
	Объект.Наименование       = НаименованиеНастройки(ОписаниеОбъекта);
	Объект.ПолноеНаименование = ПолноеНаименованиеНастройки(ОписаниеОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыРасчетаРезерва()
	
	СформироватьНазваниеПараметраРасчетаРезервов();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НаименованиеНастройки(Источник)
    
    
    Если НачалоДня(Источник.НачалоПериода) = НачалоГода(Источник.НачалоПериода)
		И КонецДня(Источник.КонецПериода) = КонецГода(Источник.КонецПериода) Тогда
		ПредставлениеПериодаНастройки = СтрШаблон(НСтр("ru = 'на %1  г.'"), Формат(Источник.НачалоПериода, "ДФ=yyyy"));
	Иначе
		ПредставлениеПериодаНастройки = СтрШаблон(НСтр("ru = 'на период %1 - %2'"),Формат(Источник.НачалоПериода, "ДФ='MMMM yyyy'"), Формат(Источник.КонецПериода, "ДФ='MMMM yyyy'"));
	КонецЕсли;

    НаименованиеПериодаНастройки = СтрШаблон(НСтр("ru = '%1 (%2)'"), Источник.Резерв, ПредставлениеПериодаНастройки);
    
    Возврат НаименованиеПериодаНастройки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолноеНаименованиеНастройки(Источник)
    
    Если НачалоДня(Источник.НачалоПериода) = НачалоГода(Источник.НачалоПериода)
		И КонецДня(Источник.КонецПериода) = КонецГода(Источник.КонецПериода) Тогда
		ПредставлениеПериодаНастройки = СтрШаблон(НСтр("ru = 'на %1  г.'"), Формат(Источник.НачалоПериода, "ДФ=yyyy"));
	Иначе
		ПредставлениеПериодаНастройки = СтрШаблон(НСтр("ru = 'на период %1 - %2'"),Формат(Источник.НачалоПериода, "ДФ='MMMM yyyy'"), Формат(Источник.КонецПериода, "ДФ='MMMM yyyy'"));
	КонецЕсли;

	ПолноеНаименованиеНастройки = СтрШаблон(НСтр("ru = '%1: %2 (%3)'"), Источник.Организация, Источник.Резерв, ПредставлениеПериодаНастройки);

	Возврат ПолноеНаименованиеНастройки;
	
КонецФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
		
	ФормироватьРезервБУ = Истина;
	
	ОрганизацияСсылка = Объект.Организация;
	Если ЗначениеЗаполнено(ОрганизацияСсылка) Тогда
		ГоловнаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "ГоловнаяОрганизация");
		
		ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ГоловнаяОрганизация,"ЮрФизЛицо");
		ЭтоФизЛицо = ЮридическоеФизическоеЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
	КонецЕсли;
	
	ВидРезерваОтпуск = Перечисления.ВидыРезервовПоОплатеТруда.Отпуск;
	ЭтоРасчетОтпуска = Объект.ВидРезерва = ВидРезерваОтпуск;
	ОбновитьПараметрыРасчетаРезерва();

    Элементы.Организация.ТолькоПросмотр = НЕ ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(ПользователиКлиентСервер.ТекущийПользователь(), "УчетПоВсемОрганизациям");
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПроверитьСоответствиеПериодов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСоответствиеПериодов(Отказ = Ложь)
	
	ТекстОшибки = "";
	Если Не ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
		ТекстОшибки  = НСтр("ru = 'Дата начала периода не может быть пустой'");
		ИмяРеквизита = "ГодПериода";
		Отказ        = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , ИмяРеквизита);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы  = Форма.Элементы;
	Объект    = Форма.Объект;
	
	Элементы.Организация.ТолькоПросмотр                         = Форма.ОбособленноеПодразделение;
	Элементы.ГруппаШапка.ТолькоПросмотр                         = Форма.ОбособленноеПодразделение;
	Элементы.ГруппаНастраиваемая.ТолькоПросмотр                 = Форма.ОбособленноеПодразделение;
		
	ЭтоФизЛицо          = Форма.ЭтоФизЛицо;
	ФормироватьРезервНУ = Объект.ФормироватьРезервНУ;
	
	Элементы.Резерв.Видимость = Не Форма.КонтекстныйВызов;
	
    // не используется 
	Элементы.ВидРезерва.Видимость                       = Ложь;
	Элементы.ГруппаБухгалтерскийУчет.Видимость          = Ложь;
	Элементы.ГруппаПараметрыРасчетаРезервовНУ.Видимость = Ложь;
			
КонецПроцедуры

#КонецОбласти

