
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_СпособыОтраженияРасходовПоАмортизации", Параметры, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	УстановитьДоступностьСубконто();

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Способы

&НаКлиенте
Процедура СпособыСчетЗатратПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.Способы.ТекущиеДанные;
	
	ПоляОбъекта = Новый Структура("Субконто1,  Субконто2,    Субконто3",
								  "Субконто1", "Субконто2", "Субконто3");
	
	ПроцедурыБухгалтерскогоУчетаКлиентСервер.ПриИзмененииСчета(СтрокаТаблицы.СчетЗатрат, СтрокаТаблицы, ПоляОбъекта, Истина);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, "СчетЗатрат", "Способы");
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока и Элемент.ТекущиеДанные.НомерСтроки = 1 Тогда
		Элемент.ТекущиеДанные.Коэффициент  = 1;
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура СпособыСубконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТаблицы = Элементы.Способы.ТекущиеДанные;		
	СубконтоНачалоВыбора(Элемент, "Субконто",  1, "СчетЗатрат", СтрокаТаблицы, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыСубконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТаблицы = Элементы.Способы.ТекущиеДанные;		
	СубконтоНачалоВыбора(Элемент, "Субконто",  2, "СчетЗатрат", СтрокаТаблицы, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыСубконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТаблицы = Элементы.Способы.ТекущиеДанные;		
	СубконтоНачалоВыбора(Элемент, "Субконто",  3, "СчетЗатрат", СтрокаТаблицы, СтандартнаяОбработка);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли; 
	
	ПоляОбъекта = Новый Структура("Субконто1,  Субконто2,    Субконто3",
								  "Субконто1", "Субконто2", "Субконто3");
								  
	Для Каждого СтрокаСпособов Из Объект.Способы Цикл
		ПроцедурыБухгалтерскогоУчетаКлиентСервер.УстановитьДоступностьИЗаголовкиСубконто(СтрокаСпособов.СчетЗатрат, СтрокаСпособов, ПоляОбъекта);
		ИзменитьПараметрыВыбораПолейСубконтоВСтроке(ЭтаФорма, "СчетЗатрат", "Способы", СтрокаСпособов);
	КонецЦикла; 
	
	НастройкиПользователя = ПользователиБКВызовСервераПовтИсп.ЗначенияНастроекПользователя(
								Пользователи.ТекущийПользователь(), "ПоказыватьВДокументахСчетаУчета,УчетПоВсемОрганизациям");
	
	Элементы.Организация.ТолькоПросмотр = НЕ НастройкиПользователя.УчетПоВсемОрганизациям;
			                                                                                                                                     		
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Если Объект.Способы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ПоказатьСообщение = Ложь;
	
	Для Каждого ТекСтрока Из Объект.Способы Цикл 		
		ПроверитьСубконтоПодразделение(ТекСтрока.Субконто1, Объект.Организация, ПоказатьСообщение);
		ПроверитьСубконтоПодразделение(ТекСтрока.Субконто2, Объект.Организация, ПоказатьСообщение);
		ПроверитьСубконтоПодразделение(ТекСтрока.Субконто3, Объект.Организация, ПоказатьСообщение);
	КонецЦикла;
	
	Если ПоказатьСообщение Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Значение в поле ""Подразделение"" не соответствует выбранной организации и было очищено.'"));
	КонецЕсли; 
	
	Для Каждого ТекСтрока Из Объект.Способы Цикл
		 ИзменитьПараметрыВыбораПолейСубконтоВСтроке(ЭтаФорма, "СчетЗатрат", "Способы", ТекСтрока);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроверитьСубконтоПодразделение(Субконто, Организация, ПоказатьСообщение)
	
	Если ТипЗнч(Субконто) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		
		ПодразделениеПоУмолчанию = ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОсновноеПодразделениеОрганизации");
		ПодразделениеПоУмолчаниюВладелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодразделениеПоУмолчанию, "Владелец"); 
		
		Если НЕ ЗначениеЗаполнено(Субконто) Тогда
			Если ПодразделениеПоУмолчаниюВладелец = Организация Тогда
				Субконто = ПодразделениеПоУмолчанию;
			КонецЕсли;
		Иначе 
			СубконтоВладелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Субконто, "Владелец");
			Если НЕ СубконтоВладелец = Организация Тогда
				Если ПодразделениеПоУмолчаниюВладелец = Организация Тогда
					Субконто = ПодразделениеПоУмолчанию;
				Иначе 
					Субконто = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
					ПоказатьСообщение = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

 &НаКлиенте
Процедура СубконтоНачалоВыбора(Элемент, ИмяЭлементаСубконто, ИндексСубконто, ИмяЭлементаСчета, СтрокаТаблицы, СтандартнаяОбработка)	
		
	ПараметрыДокумента = СписокПараметровВыбораСубконто(Объект, СтрокаТаблицы, ИмяЭлементаСубконто + "%Индекс%", ИмяЭлементаСчета);
	ПроцедурыБухгалтерскогоУчетаКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, ИндексСубконто, СтандартнаяОбработка, ПараметрыДокумента);	
	
КонецПроцедуры     

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровВыбораСубконто(ДанныеОбъекта, ПараметрыОбъекта, ШаблонИмяПоляОбъекта, ИмяСчета)
	
	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			СписокПараметров.Вставить("ДоговорКонтрагента", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокПараметров.Вставить("Номенклатура", ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад", ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("СчетУчета", 				  ПараметрыОбъекта[ИмяСчета]);	
	СписокПараметров.Вставить("Организация", 			  ДанныеОбъекта.Организация);
	СписокПараметров.Вставить("СтруктурноеПодразделение", ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка"));
	СписокПараметров.Вставить("ВыбиратьПодразделенияОрганизации", Истина);

	Возврат СписокПараметров; 

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма, ИмяСчета, ИмяТабличнойЧасти)
	
	Если Форма.Элементы[ИмяТабличнойЧасти].ТекущаяСтрока <> Неопределено Тогда
		СтрокаТаблицы = Форма.Объект[ИмяТабличнойЧасти].НайтиПоИдентификатору(Форма.Элементы[ИмяТабличнойЧасти].ТекущаяСтрока);
		Если СтрокаТаблицы = Неопределено Тогда 
			Возврат;
		КонецЕсли;
				
		ИзменитьПараметрыВыбораПолейСубконтоВСтроке(Форма, ИмяСчета, ИмяТабличнойЧасти, СтрокаТаблицы);		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконтоВСтроке(Форма, ИмяСчета, ИмяТабличнойЧасти, СтрокаТаблицы)
	
		ПараметрыДокумента = СписокПараметровВыбораСубконто(Форма.Объект, СтрокаТаблицы, "Субконто" + "%Индекс%", ИмяСчета);
		ПроцедурыБухгалтерскогоУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(Форма, СтрокаТаблицы, "Субконто" + "%Индекс%", ИмяТабличнойЧасти + "Субконто" + "%Индекс%", ПараметрыДокумента);	
		
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьСубконто()
			
	ПоляОбъекта = Новый Структура("Субконто1,  Субконто2,    Субконто3",
								  "Субконто1", "Субконто2", "Субконто3");
								  
	Для Каждого СтрокаСпособов Из Объект.Способы Цикл
		ПроцедурыБухгалтерскогоУчетаКлиентСервер.УстановитьДоступностьИЗаголовкиСубконто(СтрокаСпособов.СчетЗатрат, СтрокаСпособов, ПоляОбъекта);
		ИзменитьПараметрыВыбораПолейСубконтоВСтроке(ЭтаФорма, "СчетЗатрат", "Способы", СтрокаСпособов);
	КонецЦикла; 
	
КонецПроцедуры
