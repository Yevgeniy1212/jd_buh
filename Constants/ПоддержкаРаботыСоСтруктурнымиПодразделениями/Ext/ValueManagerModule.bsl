#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью
// Менеджера константы
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры // ПередЗаписью

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеДоступом.ОбновитьРазрешенныеЗначенияПриИзмененииИспользованияВидовДоступа();
	
	Если Не Значение Тогда
		НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Настройка.Установить(ПланыВидовХарактеристик.НастройкиПользователей.ОсновноеСтруктурноеПодразделениеОрганизации, Истина);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
		КонецЕсли;
		УдалитьСубконтоКонтрагенты();
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьСубконтоКонтрагенты()
	
	// Начисленные налоги в разрезе налоговых комитетов: БУ
	СчетаНалогов = Новый СписокЗначений;
	СчетаНалогов.Добавить(ПланыСчетов.Типовой.ИндивидуальныйПодоходныйНалог); 	//3120
	СчетаНалогов.Добавить(ПланыСчетов.Типовой.СоциальныйНалог); 				//3150
	СчетаНалогов.Добавить(ПланыСчетов.Типовой.ЗемельныйНалог);  				//3160
	СчетаНалогов.Добавить(ПланыСчетов.Типовой.НалогНаТранспортныеСредства);  	//3170
	СчетаНалогов.Добавить(ПланыСчетов.Типовой.НалогНаИмущество); 				//3180
	СчетаНалогов.Добавить(ПланыСчетов.Типовой.ПрочиеНалоги); 					//3190
	Для Каждого Счет Из СчетаНалогов Цикл
		ПрименитьПараметрыКонтрагентыНалогов(Счет.Значение);
	КонецЦикла;
	
	// Начисленные налоги в разрезе налоговых комитетов: НУ
	СчетаНалогов = Новый СписокЗначений;
	СчетаНалогов.Добавить(ПланыСчетов.Налоговый.ИндивидуальныйПодоходныйНалог); //3120Н
	СчетаНалогов.Добавить(ПланыСчетов.Налоговый.ПрочиеНалоги); 					//3190Н
	Для Каждого Счет Из СчетаНалогов Цикл
		ПрименитьПараметрыКонтрагентыНалогов(Счет.Значение);
	КонецЦикла;
	
	// Авансовые платежи  в разрезе налоговых комитетов: БУ
	СчетаАвансовНалогов = Новый СписокЗначений;
	СчетаАвансовНалогов.Добавить(ПланыСчетов.Типовой.ПрочиеНалогиИДругиеОбязательныеПлатежиВБюджет); // 1430
	Для Каждого Счет Из СчетаАвансовНалогов Цикл
		ПрименитьПараметрыКонтрагентыНалогов(Счет.Значение);
	КонецЦикла;
	
	// Авансовые платежи  в разрезе налоговых комитетов: НУ
	СчетаАвансовНалогов = Новый СписокЗначений;
	СчетаАвансовНалогов.Добавить(ПланыСчетов.Налоговый.НалоговыеАктивыПрочее); // 1430Н
	Для Каждого Счет Из СчетаАвансовНалогов Цикл
		ПрименитьПараметрыКонтрагентыНалогов(Счет.Значение);
	КонецЦикла;
	
КонецПроцедуры


Процедура ПрименитьПараметрыКонтрагентыНалогов(СчетУплатыНалога)
	
	Попытка
		
		Объект   = СчетУплатыНалога.ПолучитьОбъект();
		КодСчета = Объект.Код;
		
		Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты, "ВидСубконто");
		
		// Удаляем
		
		Если Субконто = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		Объект.ВидыСубконто.Удалить(Субконто);
		Объект.Записать();
		
	Исключение
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка удаления субконто ""Контрагенты""'"), УровеньЖурналаРегистрации.Ошибка,,СчетУплатыНалога,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()))
		
	КонецПопытки;
	

КонецПроцедуры


#КонецОбласти

#КонецЕсли
