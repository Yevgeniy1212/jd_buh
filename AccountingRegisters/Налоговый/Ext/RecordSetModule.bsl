
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ, РежимЗаписи)
	
	Если ОбменДанными.Загрузка Тогда
		//Автономная работа: созданиче начального образа, исключения ошибки Запись не верна!
		//До изменении в механизмах платформы
		Если ЭтотОбъект.ДополнительныеСвойства.Свойство("СозданиеНачальногоОбраза")
			ИЛИ ЭтотОбъект.ДополнительныеСвойства.Свойство("ОбработкаДанных") Тогда
			Для Каждого ТекЗапись Из ЭтотОбъект Цикл
				УстановитьЗначенияПоУмолчанию(ТекЗапись);
			КонецЦикла; 
		КонецЕсли; 	
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	КэшВидыСоставныхСубконто = Новый Соответствие;
	//СписокСчетовВА = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСписокСчетовВАУчетаНУ();
	
	Для Каждого Проводка Из ЭтотОбъект Цикл
		Если НЕ ЗначениеЗаполнено(Проводка.ВидУчетаДт) ИЛИ НЕ ЗначениеЗаполнено(Проводка.ВидУчетаКт) Тогда
			ВидУчетаДт = Проводка.ВидУчетаДт;
			ВидУчетаКт = Проводка.ВидУчетаКт;			
			//ПроцедурыНалоговогоУчета.ВидУчетаНУ(Проводка, Проводка.Регистратор.ОтражатьВНалоговомУчете, Проводка.Регистратор.ВидУчетаНУ);
			Если (ЗначениеЗаполнено(ВидУчетаДт)) И
				(ЗначениеЗаполнено(Проводка.СчетДт)) Тогда
				Проводка.ВидУчетаДт = ВидУчетаДт;
			КонецЕсли;	
			Если (ЗначениеЗаполнено(ВидУчетаКт)) И
				(ЗначениеЗаполнено(Проводка.СчетКт))  Тогда
				Проводка.ВидУчетаКт = ВидУчетаКт;
			КонецЕсли;			
		КонецЕсли;
		
		ПривестиПустыеЗначенияСубконтоСоставногоТипа(Проводка, КэшВидыСоставныхСубконто);
		
		Если ЗначениеЗаполнено(Проводка.СтруктурноеПодразделениеДт) И ЗначениеЗаполнено(Проводка.СчетДт) Тогда
			
			Если ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.СчетЯвляетсяВАНУ(Проводка.СчетДт) Тогда 
				Проводка.СтруктурноеПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Проводка.СтруктурноеПодразделениеКт) И ЗначениеЗаполнено(Проводка.СчетКт) Тогда
			
			Если ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.СчетЯвляетсяВАНУ(Проводка.СчетКт) Тогда 
				Проводка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Субконто составного типа

Процедура ПривестиПустыеЗначенияСубконтоСоставногоТипа(Проводка, КэшВидыСоставныхСубконто)
	
	Для Каждого Субконто Из Проводка.СубконтоДт Цикл
		
		Если НЕ ЗначениеЗаполнено(Субконто.Значение) 
			И Субконто.Значение <> Неопределено 
			И СоставнойТипСубконто(Субконто.Ключ, КэшВидыСоставныхСубконто) Тогда
			Проводка.СубконтоДт.Вставить(Субконто.Ключ, Неопределено);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Субконто Из Проводка.СубконтоКт Цикл
		
		Если НЕ ЗначениеЗаполнено(Субконто.Значение) 
			И Субконто.Значение <> Неопределено 
			И СоставнойТипСубконто(Субконто.Ключ, КэшВидыСоставныхСубконто) Тогда
			Проводка.СубконтоКт.Вставить(Субконто.Ключ, Неопределено);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоставнойТипСубконто(ВидСубконто, КэшВидыСоставныхСубконто)
	
	Составной = КэшВидыСоставныхСубконто.Получить(ВидСубконто);
	
	Если Составной = Неопределено Тогда
		Составной = ВидСубконто.ТипЗначения.Типы().Количество() > 1;
		КэшВидыСоставныхСубконто.Вставить(ВидСубконто, Составной);
	КонецЕсли;
	
	Возврат Составной;
	
КонецФункции

Процедура УстановитьЗначенияПоУмолчанию(СтрокаНабора)
	СвойстваСчетаДт = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаНабора.СчетДт);
	УстановитьЗначенияПоУмолчаниюДтКт(СтрокаНабора, СвойстваСчетаДт, "Дт");
	СвойстваСчетаКт = ПроцедурыБухгалтерскогоУчетаВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаНабора.СчетКт);
	УстановитьЗначенияПоУмолчаниюДтКт(СтрокаНабора, СвойстваСчетаКт, "Кт");
КонецПроцедуры

Процедура УстановитьЗначенияПоУмолчаниюДтКт(СтрокаНабора, СвойстваСчета, ДтКт)
	
	ПроверитьУстановленныеСубконто(СтрокаНабора, СвойстваСчета, ДтКт);
	
КонецПроцедуры

Процедура ПроверитьУстановленныеСубконто(СтрокаНабора, СвойстваСчета, ДтКт)

	ЗначенияСубконто = Новый Соответствие;
	Для каждого ВидСубконтоСчета Из СтрокаНабора["Субконто" + ДтКт] Цикл
		ЗначенияСубконто.Вставить(ВидСубконтоСчета.Ключ, ВидСубконтоСчета.Значение);
	КонецЦикла;
	
	СтрокаНабора["Субконто" + ДтКт].Очистить();
	
	Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
		ВидСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто];
		ТипСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
		Попытка
		СтрокаНабора["Субконто" + ДтКт].Вставить(
			ВидСубконто,
				ТипСубконто.ПривестиЗначение(ЗначенияСубконто.Получить(ВидСубконто)));
		Исключение
			Продолжить;				
		КонецПопытки;			
	КонецЦикла;    
	
КонецПроцедуры

#КонецЕсли
