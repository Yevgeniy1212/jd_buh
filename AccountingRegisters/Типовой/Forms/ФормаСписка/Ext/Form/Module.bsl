////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтборСчет") Тогда 
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Счет", Параметры.ОтборСчет,,,Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПерейтиКДокументу(Команда)
		
	СтрокаТЧ = Элементы.Список.ТекущиеДанные;
	
	Если СтрокаТЧ = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НаименованиеДокумента = НаименованиеДокументаНаСервер(СтрокаТЧ.Регистратор);
	
	Отбор = Новый Структура("Ссылка", СтрокаТЧ.Регистратор);
	
	ОткрытьФорму("Документ." + НаименованиеДокумента + ".ФормаСписка", Новый Структура("Отбор", Отбор)); 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция НаименованиеДокументаНаСервер(Документ)
	
	Возврат Документ.Метаданные().Имя;
	
КонецФункции

&НаСервере
Процедура ПроверкаПроводокНаСервере()
	Запрос = Новый Запрос;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Типовой.СчетДт,
	|	Типовой.СчетКт,
	|	Типовой.СчетДт.Код КАК КодДт,
	|	Типовой.СчетКт.Код КАК КодКт,
	|	Типовой.Содержание КАК Комментарий,
	|	Типовой.СчетДт.Порядок КАК ПорядокДт,
	|	Типовой.СчетКт.Порядок КАК ПорядокКт
	|ПОМЕСТИТЬ Типовой
	|ИЗ
	|	РегистрБухгалтерии.Типовой КАК Типовой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Типовой.СчетДт КАК СчетДт,
	|	Типовой.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ ПроверенныеСчета
	|ИЗ
	|	Типовой КАК Типовой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КорректныеКорреспонденцииСчетов КАК КорректныеКорреспонденцииСчетов
	|		ПО Типовой.СчетДт = КорректныеКорреспонденцииСчетов.СчетДт
	|			И Типовой.СчетКт = КорректныеКорреспонденцииСчетов.СчетКт
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Типовой.СчетДт,
	|	Типовой.СчетКт
	|ИЗ
	|	Типовой КАК Типовой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КорректныеКорреспонденцииСчетов КАК КорректныеКорреспонденцииСчетов
	|		ПО Типовой.СчетДт = КорректныеКорреспонденцииСчетов.СчетДт
	|			И (КорректныеКорреспонденцииСчетов.СчетКт = &ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Типовой.СчетДт,
	|	Типовой.СчетКт
	|ИЗ
	|	Типовой КАК Типовой
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КорректныеКорреспонденцииСчетов КАК КорректныеКорреспонденцииСчетов
	|		ПО (КорректныеКорреспонденцииСчетов.СчетДт = &ПустаяСсылка)
	|			И Типовой.СчетКт = КорректныеКорреспонденцииСчетов.СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Типовой.СчетДт КАК СчетДт,
	|	Типовой.СчетКт КАК СчетКт,
	|	Типовой.КодДт,
	|	Типовой.КодКт,
	|	Типовой.Комментарий КАК Комментарий,
	|	СУММА(1) КАК ВесПроводки,
	|	Типовой.ПорядокДт КАК ПорядокДт,
	|	Типовой.ПорядокКт КАК ПорядокКт
	|ИЗ
	|	Типовой КАК Типовой
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроверенныеСчета КАК ПроверенныеСчета
	|		ПО (ПроверенныеСчета.СчетКт = Типовой.СчетКт)
	|			И (ПроверенныеСчета.СчетДт = Типовой.СчетДт)
	|ГДЕ
	|	ПроверенныеСчета.СчетКт ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Типовой.СчетДт,
	|	Типовой.СчетКт,
	|	Типовой.КодДт,
	|	Типовой.КодКт,
	|	Типовой.Комментарий,
	|	Типовой.ПорядокДт,
	|	Типовой.ПорядокКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокДт,
	|	ПорядокКт";

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ПустаяСсылка", ПланыСчетов.Типовой.ПустаяСсылка()); 
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();		
	
	ТаблицаНекорректныхПроводок.Загрузить(ТаблицаРезультат);
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПроводок(Команда)
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'При проверке корреспонденций не учитываются заданные отборы!'"));
	
	ТаблицаНекорректныхПроводок.Очистить();
	
	ПроверкаПроводокНаСервере();
			
	Если НЕ ТаблицаНекорректныхПроводок.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Обнаружены некорректные корреспонденции!'"));
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТаблицаКорреспонденций",ТаблицаНекорректныхПроводок);
		ОткрытьФорму("РегистрСведений.КорректныеКорреспонденцииСчетов.Форма.ФормаСпискаКорреспонденций", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Проверка проводок завершена!'"));
	КонецЕсли;
	
КонецПроцедуры
