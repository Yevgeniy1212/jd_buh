
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПрефиксПродукта", ПрефиксПродукта);
	Если ПрефиксПродукта = "" Тогда
		ПрефиксПродукта = си_ПроцедурыМеханизмаЗащиты.ПрефиксПрикладногоРешения();
	КонецЕсли;
	
	Попытка
		ОбновитьИнформациюОПодписке();
	Исключение
	КонецПопытки;
	
	Организация = "<Укажите название организации>";
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = "Организация: " + Организация;
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	|Регистрационный номер отраслевого решения: " + ?(ЗначениеЗаполнено(Объект.НомерРегистрационнойАнкеты),Объект.НомерРегистрационнойАнкеты,"<Укажите номер регистрационной анкеты>");
	
	ИмяКонфигурации = Вычислить(ПрефиксПродукта + "ПроцедурыМеханизмаЗащиты.ИмяМетаданных()");
	
	Если ИмяКонфигурации = Метаданные.Имя Тогда
		ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
		|Программный продукт: " + Метаданные.Синоним;
	Иначе
		ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
		|Программный продукт: " + ИмяКонфигурации;
		ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
		|Базовый программный продукт: " + Метаданные.Синоним;
	КонецЕсли;
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	|Версия отраслевого решения: " + Вычислить(ПрефиксПродукта + "ПроцедурыМеханизмаЗащиты.ВерсияМетаданных()");
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	|Версия типового решения: " + Вычислить("ОбновлениеИнформационнойБазы.ВерсияИБ(" + ПрефиксПродукта + "ОбщегоНазначения.ИмяКонфигурацииБК())");
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	|Версия библиотек защиты отраслевого решения: " + Вычислить(ПрефиксПродукта + "ПроцедурыМеханизмаЗащиты.ВерсияБиблиотекЗащиты()");
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ТекущаяВерсия = СистемнаяИнформация.ВерсияПриложения;
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	|Версия платформы 1С:Предприятие: " + ТекущаяВерсия;
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	|Режим запуска: " + ТекущийРежимЗапуска();
	
	ФайловаяБаза = ОпределитьЭтаИнформационнаяБазаФайловая();
	
	ИнформацияДляОбращенияНаЛиниюКонсультаций = ИнформацияДляОбращенияНаЛиниюКонсультаций + "
	| " + ?(ФайловаяБаза,"Файловый режим","Клиент-серверный режим
	|Используемый сервер: <Укажите используемый сервер>");
	
	ПочтовыйАдресЛК = Вычислить(ПрефиксПродукта + "ОбщегоНазначения.ПочтовыйАдресЛК()");
	
	Элементы.ВыполнитьАктивациюПодписки.Доступность = Вычислить(ПрефиксПродукта + "ОбщегоНазначенияСервер.ПравоРедактированияСведенийОЛицензииНаПоддержку()");
	
	Элементы.НастройкаСвязиССерверомЛицензий.Видимость = Вычислить(ПрефиксПродукта + "ОбщегоНазначенияСервер.ПравоРедактированияПутиСЛК()");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДекорацияИнформацияНажатие(Элемент)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ЗапуститьПриложение("http://1c-rating.kz/sol/support");
	#Иначе
		ПерейтиПоНавигационнойСсылке("http://1c-rating.kz/sol/support");
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДанныеДляАктивацииВДругихИБЛокальнойСети(Команда)
	
	Попытка
		ИмяОбработкиАктивации = ИмяФормыОбработки();
		Если ЗначениеЗаполнено(ИмяОбработкиАктивации) Тогда
			ОткрытьФорму(ИмяОбработкиАктивации+".Форма.ДанныеАктивации",Новый Структура("ПрефиксПродукта",ПрефиксПродукта),ЭтаФорма,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно);
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАктивациюПодписки(Команда)
	Попытка
		ИмяОбработкиАктивации = ИмяФормыОбработки();
		Если ЗначениеЗаполнено(ИмяОбработкиАктивации) Тогда
			ОткрытьФорму(ИмяОбработкиАктивации+".Форма.Форма",Новый Структура("ПрефиксПродукта",ПрефиксПродукта),ЭтаФорма);
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСвязиССерверомЛицензий(Команда)
	
	// 1. Вариант с модальными окном
	Результат = ОткрытьФормуМодально("ОбщаяФорма." + ПрефиксПродукта + "НастройкаСвязиССерверомЛицензий",,ЭтаФорма);
	Если Результат <> Неопределено Тогда
		ОбновитьИнформациюОПодписке();
	КонецЕсли; 
	
	// 2. Вариант без использования модальности
	//ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработкаРезультатаНастройкиСвязиССерверомЛицензий", ЭтотОбъект); 
	//ОткрытьФорму("ОбщаяФорма." + ПрефиксПродукта + "НастройкаСвязиССерверомЛицензий",,ЭтаФорма,,,,ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнформациюОПодпискеКлиент() Экспорт
	
	ОбновитьИнформациюОПодписке();
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьИнформациюОПодписке()
	
	КатегорияПоддержки = Строка(Вычислить(ПрефиксПродукта + "ЗащитаКлиентСервер.КатегорияПоддержки()"));
	КатегорияПлатнойПоддержкиОтраслевогоРешения = КатегорияПоддержки + "-ая категория";

	Объект.НомерОсновногоКлюча = Константы[ПрефиксПродукта + "НомерОсновногоКлюча"].Получить();
	Объект.НомерРегистрационнойАнкеты = Константы[ПрефиксПродукта + "НомерРегистрационнойАнкеты"].Получить();
	СписокКлючей = Вычислить(ПрефиксПродукта + "ЗащитаКлиентСервер.СписокНомеровКлючей()");
	
	НомерОсновногоКлюча = Новый СписокЗначений;
	Для Каждого Ключ Из СписокКлючей Цикл
		НомерОсновногоКлюча.Добавить(Ключ);	
	КонецЦикла;
	
	ИнформацияОПодписке = Вычислить(ПрефиксПродукта + "ЗащитаКлиентСервер.ПолучитьСведенияОПоддержке()");
	Внимание = "";
	Если НЕ ЗначениеЗаполнено(ИнформацияОПодписке) Тогда
		СостояниеПодписки = "Лицензия не активирована";
		Внимание = "ВНИМАНИЕ!!! Необходимо активировать Лицензию";
		Элементы.ДанныеДляАктивацииВДругихИБЛокальнойСети.Видимость = Ложь;
	Иначе
		СостояниеПодписки = "Лицензия действительна до: " + Формат(ИнформацияОПодписке.СрокОкончанияПоддержки,"ДФ=dd.MM.yyyy") + ", оформлена на ключ защиты с серийным номером: " + ИнформацияОПодписке.НомерКлюча;
		Элементы.ДанныеДляАктивацииВДругихИБЛокальнойСети.Видимость = Истина;
		Если ИнформацияОПодписке.СрокОкончанияПоддержки < ТекущаяДата() Тогда
			Внимание = "ВНИМАНИЕ!!! Срок действующей Лицензии истек! Необходимо активировать Лицензию";
			Элементы.ДанныеДляАктивацииВДругихИБЛокальнойСети.Видимость = Ложь;
		ИначеЕсли ИнформацияОПодписке.СрокОкончанияПоддержки < ДобавитьМесяц(ТекущаяДата(),1) Тогда
			Внимание = "До окончания срока действия Лицензии осталось менее месяца! Не забудьте продлить Лицензию!";
		ИначеЕсли ИнформацияОПодписке.Свойство("КатегорияПоддержки") И Строка(ИнформацияОПодписке.КатегорияПоддержки) <> КатегорияПоддержки Тогда
			Элементы.ДанныеДляАктивацииВДругихИБЛокальнойСети.Видимость = Ложь;
			Внимание = "Активированная категория поддержки не соответствует категории поддержки данного программного продукта!";
		КонецЕсли;
		Если НомерОсновногоКлюча.НайтиПоЗначению(ИнформацияОПодписке.НомерКлюча) = Неопределено Тогда
			Внимание = Внимание + ?(Внимание = "", "", Символы.ПС) + "Отсутствует ключ защиты, на который оформлена Лицензия!";
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Внимание.Видимость = Внимание <> "";
	
КонецПроцедуры

&НаСервере
Функция ОпределитьЭтаИнформационнаяБазаФайловая()
	
	СтрокаСоединенияСБД = СтрокаСоединенияИнформационнойБазы();
	
	// в зависимости от того файловый это вариант БД или нет немного по-разному путь в БД формируется
	ПозицияПоиска = Найти(Врег(СтрокаСоединенияСБД), "FILE=");
	
	Возврат ПозицияПоиска = 1;	
	
КонецФункции

&НаСервере
Функция ИмяФормыОбработки()
	
	Возврат Вычислить(ПрефиксПродукта + "ЗащитаКлиентСервер.ПолучитьИмяФормыДляОткрытия()");
	
КонецФункции

&НаКлиенте
Процедура ОбработкаРезультатаНастройкиСвязиССерверомЛицензий(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОбновитьИнформациюОПодписке();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


