#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МодификацияКонфигурации.ПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПоискНаИТСОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("http://its.1c.kz/db/morphmergedkz#search:");
	
КонецПроцедуры                                            
&НаКлиенте
Процедура НайтиНаИТС(Команда)
	
	ПоискОтветаНаВопрос();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛекторийНажатие(Элемент)
	
	 ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://its.1c.kz/lector?utm_source=bp30&utm_medium=prog&utm_content=PoleznayaInformatsiyaGlavnoe");
	
КонецПроцедуры


&НаКлиенте
Процедура ЦентрИдейНажатие(Элемент)
	
	ИнформационныйЦентрКлиент.ОткрытьЦентрИдей();
	
КонецПроцедуры

&НаКлиенте
Процедура РуководствоПоВедениюУчетаНажатие(Элемент)
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://its.1c.kz/db/acc30kz");
КонецПроцедуры
  &НаКлиенте
Процедура ФорумФрешНажатие(Элемент)
	
	ИнформационныйЦентрКлиент.ОткрытьОбсужденияНаФоруме();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбратитьсяВСлужбуПоддержкиНажатие(Элемент)
	
	Если ИспользуетсяРазделениеДанных Тогда
		ИнформационныйЦентрКлиент.ОткрытьОбращенияВСлужбуПоддержки();
	Иначе
		Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СообщенияВСлужбуТехническойПоддержки") Тогда
			
			МодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер =
			ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиентСервер");
			ДанныеСообщения = МодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер.ДанныеСообщения();
			ДанныеСообщения.Получатель = "hotlinekz";
			ДанныеСообщения.Тема       = НСтр("ru = 'Бухгалтерия для Казахстана'");
			ДанныеСообщения.Сообщение  = НСтр("ru = '<Заполните текст сообщения>'");
			
			МодульСообщенияВСлужбуТехническойПоддержкиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль(
			"СообщенияВСлужбуТехническойПоддержкиКлиент");
			МодульСообщенияВСлужбуТехническойПоддержкиКлиент.ОтправитьСообщение(
			ДанныеСообщения);			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьВЧатНажатие(Элемент)
	
	ИнтеграцияСКоннектКлиент.СвязатьсяСоСпециалистом();
	
КонецПроцедуры

&НаКлиенте
Процедура БагбоардНажатие(Элемент)
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://bugboard.v8.1c.ru/project/bpkz3");
	
КонецПроцедуры

&НаКлиенте
Процедура НовоеВПрограммеНажатие(Элемент)
	
	//Когда в Новостной ленте будут размещать дополнения к документации
	//ПоказатьОбновления(НСтр("ru='Что нового в программе'"));
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://its.1c.kz/db/obnov/content/1384/hdoc");
		
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОбновления(ЗаголовокФормы = Неопределено) Экспорт
	
	ИмяМетаданных = "БК.РазделУчета.Обновления";
	
	Если ЗаголовокФормы = Неопределено Тогда
		ЗаголовокФормы = НСтр("ru='Обновления'");
	КонецЕсли;
	
	// По всем лентам новостей
	СписокЛентНовостей = Неопределено;
	// Отбор по новый / опытный пользователь
	//СписокЛентНовостей = ОбработкаНовостейПереопределяемыйПовтИсп.ПолучитьСписокЛентНовостейДляКонтекстныхНовостей();
	
	ОбработкаНовостейКлиент.ПоказатьКонтекстныеНовости(
		Неопределено, // ФормаВладелец
		СписокЛентНовостей, // СписокЛентНовостей
		ИмяМетаданных, // ИмяМетаданных
		"", // ИмяФормы,
		"", // ИмяСобытия
		Новый Структура("ЗаголовокФормы, СкрыватьКолонкуЛентаНовостей, СкрыватьКолонкуПодзаголовок, СкрыватьКолонкуДатаПубликации, ПоказыватьПанельНавигации, РежимОткрытияОкна",
			ЗаголовокФормы, // ЗаголовокФормы
			Ложь, // СкрыватьКолонкуЛентаНовостей
			Истина, // СкрыватьКолонкуПодзаголовок
			Ложь, // СкрыватьКолонкуДатаПубликации
			Ложь, // ПоказыватьПанельНавигации
			"Независимый" // РежимОткрытияОкна ("Независимый", "Блокировать окно владельца" (по-умолчанию), "Блокировать весь интерфейс")
		)
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НовостиНажатие(Элемент)
	
	ОткрытьФорму("Справочник.Новости.Форма.ФормаПросмотраНовостей",,, "");
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеИзмененийПрограммыНажатие(Элемент)
	ОткрытьФорму("ОбщаяФорма.ОписаниеИзмененийПрограммы",,, "");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ИспользуетсяРазделениеДанных = РаботаВМоделиСервиса.ДоступноИспользованиеРазделенныхДанных()
		И РаботаВМоделиСервиса.РазделениеВключено();                                             
		
	//В сервисе не автоматизирован		
	ИспользуетсяФорумФреш = Ложь;
	
	ЭтоWindowsКлиент = ОбщегоНазначения.ЭтоWindowsКлиент();
	
	Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		
	РазрешенаРаботаСНовостями = ПолучитьФункциональнуюОпцию("РазрешенаРаботаСНовостями");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ЦентрИдей.Видимость                    = Форма.ИспользуетсяРазделениеДанных;
	Элементы.ФорумФреш.Видимость                    = Форма.ИспользуетсяРазделениеДанных И Форма.ИспользуетсяФорумФреш;
	Элементы.Новости.Видимость                      = Форма.РазрешенаРаботаСНовостями;
	Элементы.НаписатьВЧат.Видимость                 = Форма.ЭтоWindowsКлиент;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискОтветаНаВопрос()
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбработкаОжиданияПоискаОтветаНаВопрос", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаОжиданияПоискаОтветаНаВопрос()
	
	Если ПустаяСтрока(СтрокаПоискаНаИТС) Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаПоискаИнформации = "http://its.1c.kz/db/morphmergedkz#search:";
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаПоискаИнформации + СтрокаПоискаНаИТС);
	
КонецПроцедуры

#КонецОбласти