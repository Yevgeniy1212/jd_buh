#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьШтатноеРасписание = ЭТДСервер.ИспользоватьШтатноеРасписание();
	Элементы.СопоставлениеДолжностейЭТДДолжностьПоШтатномуРасписанию.Видимость = ИспользоватьШтатноеРасписание;
	Элементы.СопоставлениеДолжностейЭТДДолжностьОрганизации.Видимость = НЕ ИспользоватьШтатноеРасписание;
	
	ЭТДСервер.ПриСозданииНаСервереСопоставлениеДолжностей(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Организация = ЭТДСервер.ОрганизацияПоУмолчанию();
	ПериодАктуальности = ТекущаяДатаСеанса();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ЗаполнитьТаблицуСопоставления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаСохранитьЗакрыть", ЭтотОбъект);
	ПоказатьВопрос(Оповещение
		, НСтр("ru = 'Сохранить внесенные изменения перед закрытием?'")
		, РежимДиалогаВопрос.ДаНетОтмена
		, 
		, КодВозвратаДиалога.Отмена
		, НСтр("ru = 'Сохранение перед закрытием'"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ПериодАктуальностиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПериодАктуальности)
		 И ЗначениеЗаполнено(Организация) Тогда
		ЗаполнитьТаблицуСопоставления();
	Иначе
		СопоставлениеДолжностейЭТД.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ЗаполнитьТаблицуСопоставления();
	Иначе
		СопоставлениеДолжностейЭТД.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСопоставлениеДолжностейЭТД

&НаКлиенте
Процедура СопоставлениеДолжностейЭТДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СопоставлениеДолжностейЭТДНаименованиеЭТД" Тогда
		КодДолжностиЭТДНаименованиеДолжностиЭТДНачалоВыбора(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеДолжностейЭТДКодДолжностиЭТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	КодДолжностиЭТДНаименованиеДолжностиЭТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеДолжностейЭТДПериодПриИзменении(Элемент)
	
	УстановитьСтрокаИзменена();
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеДолжностейЭТДДолжностьОрганизацииПриИзменении(Элемент)
	
	УстановитьСтрокаИзменена();
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеДолжностейЭТДДолжностьПоШтатномуРасписаниюПриИзменении(Элемент)
	
	УстановитьСтрокаИзменена();
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеДолжностейЭТДКодДолжностиЭТДПриИзменении(Элемент)
	
	УстановитьСтрокаИзменена();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьСопоставлениеНаСервере();
	
	Для Каждого СтрокаТаблицы Из СопоставлениеДолжностейЭТД Цикл
		
		СтрокаТаблицы.СтрокаИзменена = Ложь;
		
	КонецЦикла;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуСопоставления()
	
	СопоставлениеДолжностейЭТД.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодАктуальности", ПериодАктуальности);
	
	ЭТДСервер.СформироватьЗапросСопоставлениеДолжностей(Запрос);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СопоставлениеДолжностейЭТД.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКодаПрофессии(ВыбранноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	Если ВыбранноеЗначение.Код <> ТекущиеДанные.КодДолжностиЭТД Тогда
		ТекущиеДанные.Организация = Организация;
		ТекущиеДанные.КодДолжностиЭТД = ВыбранноеЗначение.Код;
		ТекущиеДанные.НаименованиеЭТД = ВыбранноеЗначение.Наименование;
		ТекущиеДанные.СтрокаИзменена = Истина;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСопоставлениеНаСервере()
	
	ТаблицаСопоставлений = ЭтотОбъект.СопоставлениеДолжностейЭТД.Выгрузить();
	
	Для Каждого СтрокаТаблицы Из ТаблицаСопоставлений Цикл
		
		Если Не СтрокаТаблицы.ДолжностьОрганизации.Пустая()Тогда
			
			Если СтрокаТаблицы.СтрокаИзменена Тогда
				
				ЗаписьРегистра = РегистрыСведений.СопоставлениеДолжностейЭТД.СоздатьМенеджерЗаписи();
			
				ЗаполнитьЗначенияСвойств(ЗаписьРегистра, СтрокаТаблицы);
				
				ЗаписьРегистра.Записать(Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаСохранитьЗакрыть(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьСопоставлениеНаСервере();
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КодДолжностиЭТДНаименованиеДолжностиЭТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СопоставлениеДолжностейЭТД.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидКлассификатора",  "ПрофессийXML");
	ПараметрыФормы.Вставить("Заголовок",   НСтр("ru = 'Классификатор профессий'"));
	ПараметрыФормы.Вставить("Уровень",     1);
	ПараметрыФормы.Вставить("ВыборГруппы", Ложь);
	ПараметрыФормы.Вставить("ЗначениеВыбора", ТекущиеДанные.КодДолжностиЭТД);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
	
	ОткрытьФорму("Обработка.ОбменЭТД.Форма.ФормаПодбораКлассификатора",
	ПараметрыФормы,
	,
	,
	,
	,
	Новый ОписаниеОповещения("ПослеВыбораКодаПрофессии",
	ЭтотОбъект, ДополнительныеПараметры));

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтрокаИзменена()
	
	ТекущиеДанные = Элементы.СопоставлениеДолжностейЭТД.ТекущиеДанные;
	ТекущиеДанные.СтрокаИзменена = Истина;
	
КонецПроцедуры

#КонецОбласти