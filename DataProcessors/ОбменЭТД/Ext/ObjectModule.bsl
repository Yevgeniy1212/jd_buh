
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ПолучитьТекущуюВерсиюМакета() Экспорт
	
	Возврат ЭТДКлиентСервер.ПолучитьТекущуюВерсиюМакета();
	
КонецФункции

Функция УдалосьПодключитьКриптопровайдерНаКлиенте(Версия = "", РежимТишины = Ложь, ТолькоПодключение = Ложь) Экспорт
	
	Криптопровайдер = ЭТДКлиентСервер.НовыйЭкземплярКриптопровайдера(, РежимТишины, ТолькоПодключение);
	
	Если Криптопровайдер = Неопределено Тогда
		ОбновитьПовторноИспользуемыеЗначения();
		Подключается = Ложь;
		Версия = "";
	Иначе
		Подключается = Истина;
		Версия = Криптопровайдер.Версия;
	КонецЕсли;
	
	Возврат Подключается;
	
КонецФункции

Функция УдалосьПодключитьКриптопровайдерНаСервере(Версия = "", РежимТишины = Ложь) Экспорт
	
	Подключается = ЭТДВызовСервера.УдалосьПодключитьКриптопровайдерНаСервере(Версия, РежимТишины);
	
	Возврат Подключается;
	
КонецФункции

// При вызове процедуры из конекста клиента необходимо передавать идентификатор клиентской формы,
// иначе хранилище будет очищено при возврате в контекст клиента
Функция АдресБиблиотекиКриптографии(УникальныйИдентификаторФормыКлиента = Неопределено) Экспорт
	
	Компонента = Обработки.ОбменЭТД.ПолучитьМакет("КриптобиблиотекаЭТД");
	СсылкаНаМодуль = ПоместитьВоВременноеХранилище(Компонента, УникальныйИдентификаторФормыКлиента);
	Возврат СсылкаНаМодуль;
	
КонецФункции

Функция ВерсияВнешнегоМодуляКриптографии() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Константы.ВерсияВнешнегоМодуляЭТД.Получить();
	
КонецФункции

Функция ИмяКомпонентыКриптографии() Экспорт
	
	// для обхода ошибки подключения внешней компоненты на серверных базах
	// при параллельных сеансах работы пользователей используем номер сеанса ИБ, начиная с версии 8.3.7
	Попытка
		
		ТекущийСеансИБ = Вычислить("ПолучитьТекущийСеансИнформационнойБазы()");
		
		УникальныйНомерКомпоненты = "" + Формат(ТекущийСеансИБ.НомерСеанса, "ЧРГ=_") + "" + Формат(ТекущийСеансИБ.НачалоСеанса, "ДФ=ддММгггЧЧммсс") + ЭТДВызовСервера.ПолучитьВерсиюВнешнегоМодуляЭТД();
		
		Результат = "";
		
		Для НомерСимвола = 1 По СтрДлина(УникальныйНомерКомпоненты) Цикл
			КодСимвола = КодСимвола(УникальныйНомерКомпоненты, НомерСимвола);
			Если КодСимвола > 47 И КодСимвола < 58 Тогда // Число.
				Результат = Результат + Символ(КодСимвола);
			КонецЕсли;
		КонецЦикла;
		
		УникальныйНомерКомпоненты = Результат;
		
	Исключение
		
		УникальныйНомерКомпоненты = "";
		
	КонецПопытки;
	
	Возврат "ISMPCrypto" + УникальныйНомерКомпоненты;
	
КонецФункции

Функция ИмяОбъектаКриптографии() Экспорт
	
	Возврат "AddIn." + ИмяКомпонентыКриптографии() + ".WSCrypto";
	
КонецФункции

Функция КриптопровайдерПодключается(Версия = "", РежимТишины = Ложь, МестоВыполненияОпераций = Неопределено, ТолькоПодключение = Ложь) Экспорт
	
	// Место выполнения операции
	ВыполнятьКриптографическиеОперацииНаКлиенте = Неопределено;
	Если ЗначениеЗаполнено(МестоВыполненияОпераций) Тогда
		ВыполнятьКриптографическиеОперацииНаКлиенте = МестоВыполненияОпераций = ПредопределенноеЗначение("Перечисление.МестаВыполненияКриптографическихОпераций.НаКлиенте");
	Иначе
		ВыполнятьКриптографическиеОперацииНаКлиенте = ЭТДВызовСервера.ВыполнятьКриптографическиеОперацииНаКлиенте();
	КонецЕсли;
	
	// Проверка подключения в требуемом контексте
	Если ВыполнятьКриптографическиеОперацииНаКлиенте Тогда
		Подключается = УдалосьПодключитьКриптопровайдерНаКлиенте(Версия, РежимТишины, ТолькоПодключение);
	Иначе
		Подключается = УдалосьПодключитьКриптопровайдерНаСервере(Версия, РежимТишины);
	КонецЕсли;
	
	Возврат Подключается;

КонецФункции

#КонецЕсли