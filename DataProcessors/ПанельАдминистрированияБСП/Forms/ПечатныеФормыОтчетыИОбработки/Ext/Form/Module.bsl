///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ОбновитьИнтерфейс;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		РазделениеВключено = ОбщегоНазначения.РазделениеВключено();
		Элементы.ИспользоватьДополнительныеОтчетыИОбработки.Видимость = Не РазделениеВключено;
		Элементы.ОткрытьДополнительныеОтчетыИОбработки.Видимость      = Не РазделениеВключено
			// При работе в модели сервиса, если включено администратором сервиса.
			Или НаборКонстант.ИспользоватьДополнительныеОтчетыИОбработки;
	Иначе
		Элементы.ГруппаДополнительныеОтчетыИОбработки.Видимость = Ложь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		МодульРассылкаОтчетов = ОбщегоНазначения.ОбщийМодуль("РассылкаОтчетов");
		КомандаОткрытьрассылки = Элементы.Найти("ОткрытьРассылкиОтчетов");
		Если КомандаОткрытьрассылки <> Неопределено Тогда
			КомандаОткрытьрассылки.Видимость = МодульРассылкаОтчетов.ПравоДобавления();
		КонецЕсли;
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") Тогда
			ТекстПодсказки = НСтр("ru = 'Позволяет узнать, когда, кому и с каким результатом были разосланы отчеты. Для ограничения объема хранимых данных
			|устаревшая история рассылок удаляется автоматически. Вместе с историей рассылок отчетов бессрочно сохраняются отправленные электронные письма.'");
			Элементы.ГруппаНастройкиИсторииРассылкиОтчетов.РасширеннаяПодсказка.Заголовок = ТекстПодсказки;
		КонецЕсли;
		ФорматЧисла = НСтр("ru = '%Число% %Месяцев%'");
		ФорматЧисла = СтрЗаменить(ФорматЧисла, "%Число%", "Ч");
		ФорматЧисла = СтрЗаменить(ФорматЧисла, "%Месяцев%", НСтр("ru = 'мес.'"));
		Элементы.КоличествоМесяцевХраненияИсторииРассылкиОтчетов.ФорматРедактирования =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ЧФ='%1'", ФорматЧисла);	
		Элементы.КоличествоМесяцевХраненияИсторииРассылкиОтчетов.Ширина = СтрДлина(ФорматЧисла);
	Иначе
		Элементы.ГруппаРассылкиОтчетов.Видимость = Ложь;
	КонецЕсли;
	
	// Обновление состояния элементов.
	УстановитьДоступность();
	
	НастройкиПрограммыПереопределяемый.ПечатныеФормыОтчетыИОбработкиПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьДополнительныеОтчетыИОбработкиПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранитьИсториюРассылкиОтчетовПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);   
		
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		МодульРассылкаОтчетовВызовСервера = ОбщегоНазначенияКлиент.ОбщийМодуль("РассылкаОтчетовВызовСервера");
		МодульРассылкаОтчетовВызовСервера.ПриИзмененииХранитьИсториюРассылкиОтчетов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоМесяцевХраненияИсторииРассылкиОтчетовПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНомераСчетаФактурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьРННПриИзменении(Элемент)
	Если НЕ ВыводитьРНН Тогда 
		НаборКонстант.ДатаПрекращенияВыводаРННВПервичныхДокументах = ОбщегоНазначенияКлиент.ДатаСеанса();
	Иначе 
		НаборКонстант.ДатаПрекращенияВыводаРННВПервичныхДокументах = Дата(1,1,1);
	КонецЕсли;
	Подключаемый_ПриИзмененииРеквизита(Элементы.ДатаПрекращенияВыводаРННВПервичныхДокументах);
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьБИН_ИИНПриИзменении(Элемент)
	Если ВыводитьБИН_ИИН Тогда 
		НаборКонстант.ДатаНачалаВыводаБИН_ИИНВПервичныхДокументах = ОбщегоНазначенияКлиент.ДатаСеанса();
	Иначе 
		НаборКонстант.ДатаНачалаВыводаБИН_ИИНВПервичныхДокументах = Дата(1,1,1);
	КонецЕсли;
	Подключаемый_ПриИзмененииРеквизита(Элементы.ДатаНачалаВыводаБИН_ИИНВПервичныхДокументах);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПрекращенияВыводаРННВПервичныхДокументахПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяКолонкаПечатныхФормДокументовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНомераДокументовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаВыводаБИН_ИИНВПервичныхДокументахПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДополнительныеОтчетыИОбработки(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		МодульДополнительныеОтчетыИОбработкиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДополнительныеОтчетыИОбработкиКлиент");
		МодульДополнительныеОтчетыИОбработкиКлиент.ОткрытьСписокДополнительныхОтчетовИОбработок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИсториюРассылкиОтчетов(Команда)

	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		МодульРассылкаОтчетовКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РассылкаОтчетовКлиент");
		МодульРассылкаОтчетовКлиент.ОчиститьИсториюРассылкиОтчетов(ЭтотОбъект);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	ИмяКонстанты = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если ИмяКонстанты <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, ИмяКонстанты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	ИмяКонстанты = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат ИмяКонстанты;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	ЧастиИмени = СтрРазделить(РеквизитПутьКДанным, ".");
	Если ЧастиИмени.Количество() <> 2 Тогда
		Возврат "";
	КонецЕсли;
	
	ИмяКонстанты = ЧастиИмени[1];
	КонстантаМенеджер = Константы[ИмяКонстанты];
	КонстантаЗначение = НаборКонстант[ИмяКонстанты];
	
	Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
		КонстантаМенеджер.Установить(КонстантаЗначение);
	КонецЕсли;
	
	Возврат ИмяКонстанты;

	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьДополнительныеОтчетыИОбработки" ИЛИ РеквизитПутьКДанным = ""
		И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		Элементы.ОткрытьДополнительныеОтчетыИОбработки.Доступность = НаборКонстант.ИспользоватьДополнительныеОтчетыИОбработки;
		Элементы.ГруппаДополнительныеОтчетыИОбработки.Видимость    = ДополнительныеОтчетыИОбработки.ПравоДобавления();
	КонецЕсли;
	
	Если  РеквизитПутьКДанным = "НаборКонстант.ХранитьИсториюРассылкиОтчетов" ИЛИ РеквизитПутьКДанным = ""
		И ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		Элементы.КоличествоМесяцевХраненияИсторииРассылкиОтчетов.Доступность = НаборКонстант["ХранитьИсториюРассылкиОтчетов"];
	КонецЕсли;

	Элементы.ВыводитьРНН.Доступность     = ПравоДоступа("Изменение", Метаданные.Константы.ДатаПрекращенияВыводаРННВПервичныхДокументах);
	Элементы.ВыводитьБИН_ИИН.Доступность = ПравоДоступа("Изменение", Метаданные.Константы.ДатаНачалаВыводаБИН_ИИНВПервичныхДокументах);
	
КонецПроцедуры

#КонецОбласти
