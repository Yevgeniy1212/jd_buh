
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокСвойств = "ИмяДокумента, ИмяТаблицы, СтруктураРеквизитов, СтруктураСвязанныхРеквизитов";
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, СписокСвойств);
	
	Если НЕ (ЗначениеЗаполнено(ИмяДокумента) И ЗначениеЗаполнено(ИмяТаблицы)) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитов) Тогда
		СтруктураРеквизитов = Новый Структура;
	КонецЕсли;                 	
	Если НЕ ЗначениеЗаполнено(СтруктураСвязанныхРеквизитов) Тогда
		СтруктураСвязанныхРеквизитов = Новый Структура;
	КонецЕсли;                 	
	
	Если ВыбиратьСчетаГруппы = Неопределено Тогда
		ВыбиратьСчетаГруппы = Ложь;
	КонецЕсли;
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УстановитьФлажки(Команда)

	УстановитьПометкуВСтрокахТаблицы(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)

	УстановитьПометкуВСтрокахТаблицы(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	Закрыть(ТаблицаРеквизитов);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаРеквизитовЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.ВыбиратьТип = (Элементы.ТаблицаРеквизитов.ТекущиеДанные.ТипРеквизита.Типы().Количество()>1);	
	
	Если Элемент.ВыбиратьТип Тогда
		Элемент.ОграничениеТипа = Элементы.ТаблицаРеквизитов.ТекущиеДанные.ТипРеквизита;
	КонецЕсли;
	
	ТекущееЗначение = Элементы.ТаблицаРеквизитов.ТекущиеДанные.Значение;
	
	Если (ТипЗнч(ТекущееЗначение) = Тип("ПланСчетовСсылка.Типовой")
		ИЛИ ТипЗнч(ТекущееЗначение) = Тип("ПланСчетовСсылка.Налоговый")) Тогда
		ПараметрыВыбора = Новый Массив; 
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЗапретитьИспользоватьВПроводках", Ложь));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовЗначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	
	СвязанныеРеквизиты = Неопределено;
	ИмяРеквизита = ТекущиеДанные.ИмяРеквизита;
	Если СтруктураСвязанныхРеквизитов.Свойство(ИмяРеквизита, СвязанныеРеквизиты) Тогда
		УстановитьСвязанныеРеквизиты(ИмяРеквизита, ТекущиеДанные.Значение, СвязанныеРеквизиты);
	КонецЕсли;	
	Элементы.ТаблицаРеквизитов.ТекущиеДанные.Пометка = ЗначениеЗаполнено(ТекущиеДанные.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПриАктивизацииСтроки(Элемент)
	
	// Вставить содержимое обработчика.
	СтрокаТабличнойЧасти = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	Элемент.ПодчиненныеЭлементы.ТаблицаРеквизитовЗначение.ТолькоПросмотр = Ложь;
		
	Если Найти(СтрокаТабличнойЧасти.Реквизит, "Субконто") > 0 Тогда
		// Если это субконто "лишнее", то его значение "неопределено"
		Элемент.ПодчиненныеЭлементы.ТаблицаРеквизитовЗначение.ТолькоПросмотр = НЕ СтрокаТабличнойЧасти.ДоступностьСубконто;		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьПометкуВСтрокахТаблицы(НоваяПометка)

	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитов Цикл
		СтрокаТаблицы.Пометка = НоваяПометка;
	КонецЦикла; 

КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	МетаданныеТабличнойЧастиДокумента = Метаданные.Документы[ИмяДокумента].ТабличныеЧасти[ИмяТаблицы].Реквизиты;
	
	Для Каждого Реквизит из СтруктураРеквизитов Цикл
		РеквизитТабличнойЧасти = МетаданныеТабличнойЧастиДокумента.Найти(Реквизит.Ключ);
		Если РеквизитТабличнойЧасти = Неопределено Тогда
			СтруктураРеквизитов.Удалить(Реквизит.Ключ);
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРеквизитов.Добавить();	
		НоваяСтрока.Реквизит 			= РеквизитТабличнойЧасти.Синоним;
		НоваяСтрока.ИмяРеквизита 		= Реквизит.Ключ;		
		ОписаниеТипаРеквизита 			= РеквизитТабличнойЧасти.Тип;
		НоваяСтрока.ТипРеквизита 		= ОписаниеТипаРеквизита;
		НоваяСтрока.Значение 			= ОписаниеТипаРеквизита.ПривестиЗначение(); //(Неопределено);	
		НоваяСтрока.ДоступностьСубконто = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязанныеРеквизиты(ИмяРеквизита, ЗначениеРеквизита, СписокСвязанныхРеквизитов)
	
	МассивСвязанныхРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СписокСвязанныхРеквизитов);
	КоличествоАналитикиСчета = 0;
	НазначатьАналитику = Ложь;
	Если ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеРеквизита)) Тогда
		// устанавливаем аналитику для счета
		КоличествоАналитикиСчета = ЗначениеРеквизита.ВидыСубконто.Количество();
		НазначатьАналитику = Истина;
	КонецЕсли;
	СтруктураПоиска = Новый Структура;
	Для СчетчикЭлементов = 0 по МассивСвязанныхРеквизитов.Количество()-1 Цикл
		ЭлементМассива = СокрЛП(МассивСвязанныхРеквизитов[СчетчикЭлементов]);
		СтруктураПоиска.Очистить();
		СтруктураПоиска.Вставить("ИмяРеквизита", ЭлементМассива);
		СтрокиТаблицыРеквизитов = ТаблицаРеквизитов.НайтиСтроки(СтруктураПоиска);
		Если СтрокиТаблицыРеквизитов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыРеквизитов = СтрокиТаблицыРеквизитов[0];
		Если НазначатьАналитику Тогда
			// устанавливаем аналитику для счета
			Если СчетчикЭлементов < КоличествоАналитикиСчета Тогда				
				ОграничениеТипа = ЗначениеРеквизита.ВидыСубконто[СчетчикЭлементов].ВидСубконто.ТипЗначения;
				СтрокаТаблицыРеквизитов.ТипРеквизита = ОграничениеТипа;
				СтрокаТаблицыРеквизитов.Значение = ОграничениеТипа.ПривестиЗначение(СтрокаТаблицыРеквизитов.Значение);					
			Иначе
				СтрокаТаблицыРеквизитов.Значение = Неопределено;
				СтрокаТаблицыРеквизитов.ДоступностьСубконто  = Ложь;				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	



