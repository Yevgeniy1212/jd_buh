&НаКлиенте
Процедура СформироватьШтрихкода(Команда)
	СформироватьШтрихкодаНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьШтрихкодаНаСервере()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Выбран",Истина);
	МассивНом = Объект.Номенклатура.Выгрузить(ПараметрыОтбора).ВыгрузитьКолонку("Номенклатура");
	Если МассивНом.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Не выбрано ни одной номенклатуры'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	ПодключаемоеОборудованиеБКВызовСервера.СформироватьШтрихкодаМассиваНоменклатур(МассивНом,ФормироватьШрихкодТолькоДляНоменклатурыСПустымШтрихкодом);
	
	ПерезаполнитьДанныеНоменклатурыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДанныеНоменклатурыНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаНом = Объект.Номенклатура.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	              	|	НоменклатураСпр.Ссылка КАК Номенклатура
	              	|ПОМЕСТИТЬ вт_Ном
	              	|ИЗ
	              	|	Справочник.Номенклатура КАК НоменклатураСпр
	              	|ГДЕ
	              	|	НоменклатураСпр.Ссылка В(&МассивНом)
	              	|;
	              	|
	              	|////////////////////////////////////////////////////////////////////////////////
	              	|ВЫБРАТЬ
	              	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	              	|	вт_Ном.Номенклатура КАК Номенклатура
	              	|ИЗ
	              	|	вт_Ном КАК вт_Ном
	              	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	              	|		ПО вт_Ном.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура";
	
	Запрос.УстановитьПараметр("МассивНом", ТаблицаНом.ВыгрузитьКолонку("Номенклатура"));
	
	РезултатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Объект.Номенклатура.Загрузить(РезултатЗапроса);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьНоменклатурамиБезШтрихкода()
	
	Если Объект.Номенклатура.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Таблица будет полностью перезаполнена. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнитьНоменклатурыБезШтрихкода", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		ЗаполнитьНоменклатурамиБезШтрихкодаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнитьНоменклатурыБезШтрихкода(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;
	
	Объект.Номенклатура.Очистить();
	
	ЗаполнитьНоменклатурамиБезШтрихкодаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатурамиБезШтрихкодаНаСервере()
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	Штрих.Штрихкод КАК Штрихкод,
	             	  |	Ном.Ссылка КАК Номенклатура
	             	  |ИЗ
	             	  |	Справочник.Номенклатура КАК Ном
	             	  |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             	  |			РегШтрих.Номенклатура КАК Номенклатура,
	             	  |			РегШтрих.Штрихкод КАК Штрихкод
	             	  |		ИЗ
	             	  |			РегистрСведений.ШтрихкодыНоменклатуры КАК РегШтрих) КАК Штрих
	             	  |		ПО (Штрих.Номенклатура = Ном.Ссылка)
	             	  |ГДЕ
	             	  |	(Штрих.Штрихкод = """"
	             	  |			ИЛИ Штрих.Штрихкод ЕСТЬ NULL)";
			
	Объект.Номенклатура.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьСнятьФлажки(Истина);	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьСнятьФлажки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлажки(Пометка)
	Для Каждого СтрокаТЧ Из Объект.Номенклатура Цикл
		СтрокаТЧ.Выбран = Пометка;	
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура НоменклатураНоменклатураПриИзменении(Элемент)
	
	СтрокаТЧ 		 = Элементы.Номенклатура.ТекущиеДанные;
	Номенклатура = СтрокаТЧ.Номенклатура;
	
	НайденныеСтроки = Объект.Номенклатура.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура)).Количество();
	
	Если НайденныеСтроки > 1 Тогда
		ТекстСообщения = НСтр("ru='Номенклатура ""%1"" уже выбрана.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Номенклатура);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Номенклатура", СтрокаТЧ.НомерСтроки, "Номенклатура");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , Поле , "Объект");
		СтрокаТЧ.Номенклатура = Неопределено;	
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		СтрокаТЧ.Штрихкод 			= "";
	Иначе
		СтрокаТЧ.Штрихкод 			= ПолучитьШтрихкодНоменклатуры(Номенклатура);
		СтрокаТЧ.Выбран 			= Истина;
	КонецЕсли;

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШтрихкодНоменклатуры(Номенклатура)
	
	Штрихкод = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Штрихкод = Выборка.Штрихкод;
	КонецЕсли;
	
	Возврат Штрихкод;
	
КонецФункции


&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	Если Команда.Имя = "Подбор" Тогда
		ФормаВыбора = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма);
	Иначе
		ФормаВыбора = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбораГруппы", ПараметрыОткрытия, ЭтаФорма);
	КонецЕсли; 
	
	ФормаВыбора.Открыть();
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	КонецЕсли; 
	
КонецПроцедуры  

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	Если Не ВыбранноеЗначение.ЭтоГруппа Тогда
		НоваяСтрока = Объект.Номенклатура.Добавить();
		НоваяСтрока.Номенклатура = ВыбранноеЗначение;
		НоваяСтрока.Штрихкод = ПолучитьШтрихкодНоменклатуры(ВыбранноеЗначение);
	Иначе
				
		Выборка = Справочники.Номенклатура.ВыбратьИерархически(ВыбранноеЗначение);
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.ЭтоГруппа Тогда
				НоваяСтрока = Объект.Номенклатура.Добавить();
				НоваяСтрока.Номенклатура = Выборка.Ссылка;
				НоваяСтрока.Штрихкод = ПолучитьШтрихкодНоменклатуры(Выборка);						
			КонецЕсли; 
		КонецЦикла; 		
		
	КонецЕсли; 
	
	
	ЭтаФорма.Модифицированность = Истина;	
	
КонецПроцедуры 


#Область Печать

&НаКлиенте
Процедура Печать(Команда)
	
	Если ВыполнитьПроверку() Тогда
		Возврат
	КонецЕсли;
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	
	ИменаМакетов = "ШтрихкодНоменклатура";
	
	ПараметрыПечати = ПолучитьПараметры();
	
	Если ПараметрыПечати = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Нет данных для печати.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	Иначе	
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ПечатьШтрихКодов",
			ИменаМакетов,
			ПараметрКоманды,
			ЭтаФорма,
			ПараметрыПечати);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметры()
	
	Ошибки = Неопределено;
	
	//+[ДОРАБОТКА] Автор: Байбакиров А.У. Дата: 10.11.2022  
	Если СтрНайти(Строка(Склад),"Брак")<> 0 Тогда
	     Киб_ИмяСклада =  "[БРАК]";
	ИначеЕсли СтрНайти(Строка(Склад),"Неликвид")<> 0 Тогда
	     Киб_ИмяСклада =  "[НЕЛИКВИД]";
	Иначе
		 Киб_ИмяСклада = "";
	КонецЕсли; 
	//-[ДОРАБОТКА] Автор: Байбакиров А.У. Дата: 10.11.2022
	
	Ном = Новый ТаблицаЗначений;
	Ном.Колонки.Добавить("Номенклатура"		, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Ном.Колонки.Добавить("Штрихкод"				, Новый ОписаниеТипов("Строка"));
	
	Для Каждого СтрокаТЧ ИЗ Объект.Номенклатура Цикл
		Если Не СтрокаТЧ.Выбран Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) Тогда
			ТекстСообщения = НСтр("ru='В строке %1 у номенклатуры ""%2"" не заполнен штрихкод. Печатная форма не будет сформирована!!!'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаТЧ.НомерСтроки, СтрокаТЧ.Номенклатура);
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Ном.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
	КонецЦикла;
	
	Если Ном.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;	
		
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("Номенклатура"						, ПоместитьВоВременноеХранилище(Ном, УникальныйИдентификатор));
	ПараметрыПечати.Вставить("Организация"				, Объект.Организация);
	ПараметрыПечати.Вставить("ДатаСведений"				, Объект.ДатаСведений);
	ПараметрыПечати.Вставить("СтруктураМакетаШаблона"	, Неопределено);
	ПараметрыПечати.Вставить("ШаблонШтрихкода"			, Объект.Шаблон);
	ПараметрыПечати.Вставить("КоличествоЭкземпляров"	, 1);
	ПараметрыПечати.Вставить("ТипШаблона"				, Перечисления.ТипыШаблоновШтрихкодов.Номенклатура);
	ПараметрыПечати.Вставить("Киб_ИмяСклада"			, Киб_ИмяСклада);

	
	Возврат ПараметрыПечати;
	
КонецФункции

#КонецОбласти

&НаСервере
Функция ВыполнитьПроверку()
	
	ЕстьОшибки = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Шаблон) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан шаблон штрихкода номенклатуры'"),,"Объект.Шаблон");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Возврат ЕстьОшибки;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначенияНастроекПользователя = ПользователиБКВызовСервераПовтИсп.ЗначенияНастроекПользователя(Пользователи.ТекущийПользователь(), Новый Структура("ОсновнойШаблонШтрихкодаНоменклатуры, ОсновнаяОрганизация"));
	Объект.Организация 			 = ЗначенияНастроекПользователя.ОсновнаяОрганизация;
	Объект.Шаблон 				 = ЗначенияНастроекПользователя.ОсновнойШаблонШтрихкодаНоменклатуры;
	Объект.ДатаСведений			 = ОбщегоНазначенияБК.ПолучитьРабочуюДату();	
	
	Если Параметры.Свойство("АдресВХранилище") И
		ЭтоАдресВременногоХранилища(Параметры.АдресВХранилище) Тогда	
		СтруктураДанных = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		
		Объект.Номенклатура.Загрузить(СтруктураДанных.Номенклатура);
		
		Если СтруктураДанных.Свойство("Организация")
				И ЗначениеЗаполнено(СтруктураДанных.Организация) Тогда
			Объект.Организация = СтруктураДанных.Организация;
		КонецЕсли;
		
		Если СтруктураДанных.Свойство("ДатаСведений") 
			И ЗначениеЗаполнено(СтруктураДанных.ДатаСведений) Тогда
			Объект.ДатаСведений = СтруктураДанных.ДатаСведений;	
		КонецЕсли;
		
		//ПерезаполнитьДанныеОСНаСервере();
		
	КонецЕсли;	
	
	Если ОбменДаннымиСервер.ЭтоПодчиненныйУзелРИБ()
		И ПолучитьФункциональнуюОпцию("ШтрихкодУстанавливаетсяВГлавномУзлеРИБ") Тогда // В подчиненных узлах РИБ не выполняется
			Элементы.СформироватьШтрихкода.Доступность 	= Ложь;
	КонецЕсли;
	
	Если Не ПравоДоступа("Изменение",Метаданные.Справочники.Номенклатура) ТОгда
		Элементы.СформироватьШтрихкода.Доступность 	= Ложь;
	КонецЕсли;
	
	ФормироватьШрихкодТолькоДляНоменклатурыСПустымШтрихкодом = Истина;
	УстановитьОтображениеПредупрежденияПриРедактировании(ЭтаФорма);

	Для каждого Строка Из Объект.Номенклатура Цикл
		Строка.Штрихкод = ПолучитьШтрих(Строка.Номенклатура);	
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьШтрих(Номенклатура)

	Штрих = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Штрих = Выборка.Штрихкод;
	КонецЦикла;

	Возврат Штрих;
	
КонецФункции 

	
&НаКлиенте
Процедура ЗаполнитьПоОстаткам()
	
	Если Объект.Номенклатура.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Таблица будет полностью перезаполнена. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнитьНоменклатурыБезШтрихкода", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		ЗаполнитьПоОстаткамНаСервере();
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамНаСервере()
	
	Объект.Номенклатура.Очистить();
	
	ВыбСчет = Новый Массив;
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1310"));
	//ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1312"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1313"));
	//ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1314"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1315"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1316"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1317"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("2932"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ1"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ2"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ3")); 
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ4"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ5"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ6"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ7"));
	ВыбСчет.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("МАТ8"));

	
	ВидыСУбконто = Новый Массив;
	ВидыСУбконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	ВидыСУбконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТиповойОстатки.Субконто1 КАК Номенклатура,
	|	ТиповойОстатки.Субконто2 КАК Субконто2,
	|	ТиповойОстатки.КоличествоОстатокДт КАК Количество,
	|	ТиповойОстатки.СуммаОстатокДт КАК СуммаОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОстатков, Счет В (&ВыбСчет), &ВидыСубконто, Субконто2 = &Склад) КАК ТиповойОстатки";	
	
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСУбконто);
	Запрос.УстановитьПараметр("ВыбСчет", ВыбСчет);
	Запрос.УстановитьПараметр("ДатаОстатков", ТекущаяДата());
	//Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоКоду("АО000069"));
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Не имеется остатков по выбранному складу");
		Возврат;
	КонецЕсли;  
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Номенклатура.Добавить();		
		НоваяСтрока.Номенклатура = Выборка.Номенклатура;
		НоваяСтрока.Штрихкод = НайтиШтрих(Выборка.Номенклатура);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция НайтиШтрих(Номенклатура)
	
	Штрих = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
		|ИЗ
		|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|ГДЕ
		|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если ВЫборка.Следующий() Тогда
		Штрих = Выборка.Штрихкод;		
	КонецЕсли; 
	
	Возврат Штрих;

КонецФункции


&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеПредупрежденияПриРедактировании(Форма)
	
	Если Форма.Объект.Номенклатура.Количество() = 0 Тогда
		ЗначениеОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	Иначе
		ЗначениеОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;	
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Организация",
		"ОтображениеПредупрежденияПриРедактировании",
		ЗначениеОтображениеПредупрежденияПриРедактировании);
	
КонецПроцедуры
	
&НаКлиенте
Процедура Заполнить(Команда)
	
	Меню = Новый СписокЗначений(); 
	Меню.Добавить(1, "Заполнить номенклатурой без штрихкода");
	Меню.Добавить(2, "Заполнить по остаткам");
	
	Результат = ВыбратьИзМеню(Меню, Элементы.Заполнить1);
	
	Если Результат <> Неопределено Тогда
		Если Результат.Значение = 1 Тогда
			ЗаполнитьНоменклатурамиБезШтрихкода();
		ИначеЕсли Результат.Значение = 2 Тогда
			ЗаполнитьПоОстаткам();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


