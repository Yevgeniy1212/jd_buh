////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	УстановитьДоступностьЭлементовЗагрузкиКурсовПоРасписанию();
	
	ЗагружатьКурсыПоРасписанию = ПолучитьНачальноеЗначениеЗагружатьКурсыПоРасписанию();	
	Расписание = ПолучитьНачальноеЗначениеРасписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьКнопкиНастройкиРасписания();
	УстановитьЗаголовокКнопкиНастройкиРасписания();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(РасписаниеВыбора, ДополнительныеПараметры) Экспорт
	
	Если РасписаниеВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Расписание = РасписаниеВыбора;
		
	УстановитьЗаголовокКнопкиНастройкиРасписания();

КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	
	ОповещениеЗавершение = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтаФорма);
	Диалог.Показать(ОповещениеЗавершение) 
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьНастройки();
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	СохранитьНастройкиЗагрузкиПоРасписанию();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ЗагружатьКурсыПоРасписаниюПриИзменении(Элемент)
	
	УстановитьДоступностьКнопкиНастройкиРасписания();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Изменение внешнего вида формы

&НаСервере
Процедура УстановитьДоступностьЭлементовЗагрузкиКурсовПоРасписанию()
	
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
    	Элементы.Администрирование.Видимость = Ложь;
	Иначе
		Элементы.ЗагружатьКурсыПоРасписанию.Доступность	= Ложь;
		Элементы.НастроитьРасписание.Доступность = Ложь;
		Элементы.Администрирование.Видимость = Истина;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопкиНастройкиРасписания()
	
	Если ЗагружатьКурсыПоРасписанию Тогда
		Элементы.НастроитьРасписание.Доступность = Истина;
	Иначе
		Элементы.НастроитьРасписание.Доступность = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокКнопкиНастройкиРасписания()
	
	ПредставлениеРасписания = Строка(Расписание);
	ПредставлениеПустогоРасписания = ПолучитьПредставлениеПустогоРасписания();
	
	Если ПредставлениеРасписания = ПредставлениеПустогоРасписания Тогда
		Элементы.НастроитьРасписание.Заголовок = НСтр("ru = 'Настроить расписание'");			
	Иначе
		Элементы.НастроитьРасписание.Заголовок = ПредставлениеРасписания;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочие служебные процедуры и функции

&НаСервере
Функция ПолучитьНачальноеЗначениеЗагружатьКурсыПоРасписанию()
	
	Перем ЗагружатьКурсыПоРасписанию;
	
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
		МетаданныеЗадания = Метаданные.РегламентныеЗадания.ЗагрузкаКурсовВалют;
		РегламентноеЗадание= РегламентныеЗадания.НайтиПредопределенное(МетаданныеЗадания);
		ЗагружатьКурсыПоРасписанию = РегламентноеЗадание.Использование;
	Иначе
		ЗагружатьКурсыПоРасписанию = Ложь;
	КонецЕсли;
	
	Возврат ЗагружатьКурсыПоРасписанию;
	
КонецФункции

&НаСервере
Функция ПолучитьНачальноеЗначениеРасписания()
	
	Перем Расписание;
	
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
		МетаданныеЗадания = Метаданные.РегламентныеЗадания.ЗагрузкаКурсовВалют;
		РегламентноеЗадание= РегламентныеЗадания.НайтиПредопределенное(МетаданныеЗадания);
		Расписание = РегламентноеЗадание.Расписание;
	Иначе
		Расписание = Неопределено;
	КонецЕсли;
	
	Возврат Расписание;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПредставлениеПустогоРасписания()
	
	Перем ПредставлениеПустогоРасписания;
	
	ПустоеРасписание = Новый РасписаниеРегламентногоЗадания();
	ПредставлениеПустогоРасписания = Строка(ПустоеРасписание);
	
	Возврат ПредставлениеПустогоРасписания;
	
КонецФункции

&НаСервере
Процедура СохранитьНастройкиЗагрузкиПоРасписанию()
	
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
				
		МетаданныеЗадания = Метаданные.РегламентныеЗадания.ЗагрузкаКурсовВалют;
		ЗагрузкаКурсовВалют = РегламентныеЗадания.НайтиПредопределенное(МетаданныеЗадания);
		ЗагрузкаКурсовВалют.Использование = ЗагружатьКурсыПоРасписанию;
		ЗагрузкаКурсовВалют.Расписание = Расписание;
		
		ЗагрузкаКурсовВалют.Записать();
		
	КонецЕсли;	
	
КонецПроцедуры