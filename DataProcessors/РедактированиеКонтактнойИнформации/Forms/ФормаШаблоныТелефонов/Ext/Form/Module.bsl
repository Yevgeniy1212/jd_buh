
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьШаблоныТелефонныхНомеров();
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПодтвердитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ИМЯ ТАБЛИЦЫ ФОРМЫ>

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПодтвердитьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Подтвердить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПодтвердитьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	// При немодифицированности работает "отмена"
	
	Если Подтвердить(Результат, ДополнительныеПараметры) И (МодальныйРежим Или ЗакрыватьПриВыборе) И Открыта() Тогда
		СброситьМодифицированностьПриВыборе();
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция Подтвердить(Результат = Неопределено, ДополнительныеПараметры = Неопределено)
	
	// При немодифицированности работает "отмена"
	
	Если Модифицированность Тогда
		
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если НЕ ЗаписатьШаблоныТелефонныхНомеров() Тогда
			Возврат Ложь;
		КонецЕсли;
		
		СброситьМодифицированностьПриВыборе();
		
	Иначе
		
		Результат = Неопределено;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СброситьМодифицированностьПриВыборе()
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьШаблоныТелефонныхНомеров()
	
	ТаблицаСоответствий = Новый Соответствие;

	Для каждого СтрокаШаблонов Из ШаблоныТелефонов Цикл

		Если ПустаяСтрока(СтрокаШаблонов.ШаблоныТелефонныхНомеров) Тогда
			Продолжить;
		КонецЕсли;

		ТаблицаСоответствий.Вставить(СтрЧислоВхождений(СокрЛП(СтрокаШаблонов.ШаблоныТелефонныхНомеров),"9"),СокрЛП(СтрокаШаблонов.ШаблоныТелефонныхНомеров));

	КонецЦикла;

	Попытка
		Константы.ШаблоныТелефонныхНомеров.Установить(Новый ХранилищеЗначения(ТаблицаСоответствий));
	Исключение
		ШаблонСообщения = НСтр("ru = 'Не удалось записать шаблоны телефонных номеров по причине: %1'");
		ОбщегоНазначения.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблоныТелефонов, КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
			)
		);
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПрочитатьШаблоныТелефонныхНомеров()
	
	Шаблоны = Константы.ШаблоныТелефонныхНомеров.Получить();
	
	Если ТипЗнч(Шаблоны) <> Тип("ХранилищеЗначения") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураШаблонов = Шаблоны.Получить();
		
	ШаблоныТелефонов.Очистить();
	
	Если ТипЗнч(СтруктураШаблонов) = Тип("Соответствие") Тогда
		
		Для Индекс = 1 По 50 Цикл
			
			НайденныйШаблон = СтруктураШаблонов.Получить(Индекс);
			
			Если НайденныйШаблон <> Неопределено Тогда
				
				СтрокаШаблонов = ШаблоныТелефонов.Добавить();
				СтрокаШаблонов.ШаблоныТелефонныхНомеров = НайденныйШаблон;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	ЭтаФорма.ТолькоПросмотр = НЕ ПравоДоступа("Изменение", Метаданные.Константы.ШаблоныТелефонныхНомеров);
	
КонецПроцедуры
