
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ЛокальнаяСтруктураЗаписи) Тогда
		ЗаполнитьЗначенияСвойств(Объект, Параметры.ЛокальнаяСтруктураЗаписи);
	КонецЕсли;
	
	Объект.Тип = Параметры.ТипКИ;
	
	Объект.ДоступностьОбъекта = Параметры.ДоступностьОбъекта;
	Объект.ЗаписыватьВРегистр = Параметры.ЗаписыватьВРегистр;
	
	Если Объект.Вид = Неопределено Тогда
		Объект.Вид = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	КонецЕсли;
	
	РедактируетсяНаборЗаписей = Параметры.РедактируетсяНаборЗаписей;
	
	ВидОбъектаКИ = КонтактнаяИнформацияКлиентСерверПовтИсп.ВидОбъектаКИ(Объект.Объект);

	Элементы.Объект.Видимость = Объект.ДоступностьОбъекта;
	
	УстановитьПиктограммуКомментария(ЭтотОбъект);
	
	ПредставлениеАдреса = КонтактнаяИнформацияКлиентСервер.ПолучитьПредставлениеАдреса(Объект);
	ИностранныйАдрес    = (ПредставлениеАдреса <> Объект.Представление) И (ПредставлениеАдреса <> НСтр("ru = 'Республика Казахстан'"));
	
	СтранаКазахстан = Справочники.КлассификаторСтранМира.Казахстан;
	Если НЕ ИностранныйАдрес Тогда
		Страна = СтранаКазахстан;
		Индекс = Объект.Поле1;
	ИначеЕсли ЗначениеЗаполнено(Объект.Поле1) Тогда
		Страна = Справочники.КлассификаторСтранМира.НайтиПоНаименованию(Объект.Поле1);
	Иначе
		Страна = СтранаКазахстан;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Объект) И Объект.ДоступностьОбъекта Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Объект;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Вид) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Вид;
	ИначеЕсли ИностранныйАдрес Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.ПредставлениеИностранногоАдреса;
	Иначе 
		ЭтаФорма.ТекущийЭлемент = Элементы.ПредставлениеАдреса;
	КонецЕсли;
		
	МожноЗагружатьКлассификатор = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.АдресныйКлассификатор);
	Элементы.ФормаЗагрузитьКлассификатор.Видимость = МожноЗагружатьКлассификатор;
	
	ОбработкаИзмененияСтраны(ЭтотОбъект);
	
	Если НЕ ИностранныйАдрес Тогда 
		ЗаполнитьСтруктуруАдресДетально();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПодтвердитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

// При изменении

&НаКлиенте
Процедура ОбъектКонтактнойИнформацииПриИзменении(Элемент)
	
	ВидОбъектаКИ = КонтактнаяИнформацияКлиентСерверПовтИсп.ВидОбъектаКИ(Объект.Объект);

	Если НЕ ЗначениеЗаполнено(Объект.Объект) И ТипЗнч(Объект.Вид) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		
		Объект.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
		ВидОбъектаКИ = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	
	Если ТекущаяСтрана = Страна Тогда 
		Возврат;
	КонецЕсли;
	
	ОбработкаИзмененияСтраны(ЭтотОбъект);
	
	Объект.Представление = "";
	Индекс = "";
	
	Если ИностранныйАдрес Тогда 
		Объект.Поле1 = СокрЛП(Страна);
	Иначе 
		Объект.Поле1 = Индекс;
		ЗаполнитьСтруктуруАдресДетально();
	КонецЕсли;
	
	СФормироватьПредставлениеАдреса(ЭтотОбъект);
	
#Если ВебКлиент Тогда
	// Обход особенности платформы
	Элемент.ОбновитьТекстРедактирования();
#КонецЕсли

	// Выводим всегда представление
	Элементы.АдресПредставлениеКомментарий.ТекущаяСтраница = Элементы.АдресСтраницаПредставление;
	
КонецПроцедуры

&НаКлиенте
Процедура ПочтовыйИндексПриИзменении(Элемент)
	
	Объект.Поле1 = Индекс;
	СФормироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеПриИзменении(Элемент)
	
	СФормироватьПредставлениеАдреса(ЭтотОбъект);
	
	УстановитьЗначениеЧастиАдреса(
		Элемент, 
		Элемент.ТекстРедактирования, 
		ВариантыВыбораПредставленияЭлементаАдреса(Элемент).НайтиПоЗначению(Элемент.ТекстРедактирования) <> Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДомПриИзменении(Элемент)
	
	СФормироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КорпусПриИзменении(Элемент)
	
	СФормироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КвартираПриИзменении(Элемент)
	
	СФормироватьПредставлениеАдреса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	УстановитьПиктограммуКомментария(ЭтотОбъект);
КонецПроцедуры

// Начало выбора

&НаКлиенте
Процедура ПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонтактнаяИнформацияКлиент.НачалоВыбораЭлементаАдреса(
		Элемент, Элемент.Имя, АдресДетально, 
	);
	
КонецПроцедуры

// Обработка выбора

&НаКлиенте
Процедура ПолеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Перем МожноЗагружатьОбласть;
	
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Структура") Тогда
		
		ОбластьНеЗагружена = (ВыбранноеЗначение.Свойство("МожноЗагружатьОбласть") И ВыбранноеЗначение.МожноЗагружатьОбласть)
		               Или (ВыбранноеЗначение.Свойство("СтруктураАдреса") И ВыбранноеЗначение.СтруктураАдреса.МожноЗагружатьОбласть);
		
		Если МожноЗагружатьКлассификатор И ОбластьНеЗагружена Тогда
			// Предлагаем загрузить классификатор
			КонтактнаяИнформацияКлиент.ПредложениеЗагрузкиКлассификатора(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Данные для ""%1"" не загружены.'"), СокрЛП(ВыбранноеЗначение.Представление)), ВыбранноеЗначение.КодОбласти);
		КонецЕсли;
		
		АдресДетально     = ВыбранноеЗначение.АдресДетально;
		ВыбранноеЗначение = УстановитьЗначениеЧастиАдреса(Элемент, ВыбранноеЗначение);
		
		УстановитьЗначенияЭлементовПоДетальномуАдресу();
		Модифицированность = Истина;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение)=Тип("Строка") Тогда
		УстановитьЗначениеЧастиАдреса(
			Элемент, 
			ВыбранноеЗначение, 
			ВариантыВыбораПредставленияЭлементаАдреса(Элемент).НайтиПоЗначению(Элемент.ТекстРедактирования) <> Неопределено);
		Модифицированность = Истина;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

// Очистка

&НаКлиенте
Процедура ПолеОчистка(Элемент, СтандартнаяОбработка)
	УстановитьЗначениеЧастиАдреса(Элемент, "");
КонецПроцедуры

// АвтоПодбор

&НаКлиенте
Процедура ПолеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Ожидание = 0;
	
	ДанныеВыбора = ВариантыВыбораПредставленияЭлементаАдреса(Элемент);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	ПодтвердитьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьАдрес(Команда)
	
	Для а = 1 По 10 Цикл
		Объект["Поле" + а] = "";
	КонецЦикла;
	
	Объект.Комментарий   = "";
	Объект.Представление = "";
	
	АдресДетально = КонтактнаяИнформацияКлиентСервер.ПустойСписокРеквизитовАдреса();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКлассификатор(Команда)
	АдресныйКлассификаторКлиент.ЗагрузитьАдресныйКлассификатор();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПодтвердитьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	// При немодифицированности работает "отмена"
	
	Если Модифицированность Тогда
		
		Если НЕ ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		Результат = РезультатВыбора();
		
		СброситьМодифицированностьПриВыборе();
		
	Иначе
		
		Результат = Неопределено;
		
	КонецЕсли;
	
	Если (МодальныйРежим Или ЗакрыватьПриВыборе) И Открыта() Тогда
		СброситьМодифицированностьПриВыборе();
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьМодифицированностьПриВыборе()
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция РезультатВыбора()
	
	Если ИностранныйАдрес Тогда
		Для а = 1 По 10 Цикл
			Объект["Поле" + Строка(а)] = "";
		КонецЦикла;
		Объект.Поле1 = Страна.Наименование;
	Иначе
		Объект.Поле1 = Индекс;
		Объект.Представление = КонтактнаяИнформацияКлиентСервер.ПолучитьПредставлениеАдреса(Объект, ИностранныйАдрес);
	КонецЕсли;
	
	Если НЕ РедактируетсяНаборЗаписей Тогда
		СтруктураЗаписи = КонтактнаяИнформацияКлиентСервер.ПолучитьСтруктуруЗаписиРегистра(Объект);
		СтруктураЗаписи.Вставить("ДобавленаНоваяКИ", Ложь);
	ИначеЕсли РедактируетсяНаборЗаписей Тогда
		СтруктураЗаписи = КонтактнаяИнформацияКлиентСервер.ПолучитьСтруктуруЗаписиРегистра(Объект);
		СтруктураЗаписи.Вставить("ДобавленаНоваяКИ", Истина);
	КонецЕсли;
	
	Если Объект.ЗаписыватьВРегистр Тогда
		МенеджерЗаписи = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Объект);
		
		Попытка
			МенеджерЗаписи.Записать(Ложь);
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось записать данные о контактной информации по причине: %1.'");
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли; 
	
	Возврат СтруктураЗаписи;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПиктограммуКомментария(Форма)
	
	Если ПустаяСтрока(Форма.Объект.Комментарий) Тогда
		Форма.Элементы.АдресСтраницаКомментарий.Картинка = Новый Картинка;
	Иначе
		Форма.Элементы.АдресСтраницаКомментарий.Картинка = БиблиотекаКартинок.Комментарий;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработкаИзмененияСтраны(Форма)
	
	Элементы = Форма.Элементы;
	
	ЭтоКазахстанскийАдрес = Форма.Страна = Форма.СтранаКазахстан;
	Форма.ИностранныйАдрес = НЕ ЭтоКазахстанскийАдрес;
	
	Форма.ТекущаяСтрана = Форма.Страна;
	
	Элементы.ПочтовыйИндекс.Видимость = ЭтоКазахстанскийАдрес;
	Элементы.ТипАдреса.ТекущаяСтраница = ?(ЭтоКазахстанскийАдрес, Элементы.КазахстанскийАдрес, Элементы.ИностранныйАдрес);
	
	// Загружать можем только казахстанские адреса
	Если Форма.МожноЗагружатьКлассификатор Тогда
		КнопкаПанели = Элементы.Найти("ФормаЗагрузитьКлассификатор");
		Если КнопкаПанели<>Неопределено Тогда
			Элементы.ФормаЗагрузитьКлассификатор.Доступность = ЭтоКазахстанскийАдрес;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СФормироватьПредставлениеАдреса(Форма)
	
	Форма.Объект.Представление = КонтактнаяИнформацияКлиентСервер.ПолучитьПредставлениеАдреса(Форма.Объект, Форма.ИностранныйАдрес);

КонецПроцедуры

&НаКлиенте 
Функция ЧастьАдресаЭлемента(Элемент)
	Возврат АдресДетально[Элемент.Имя];
КонецФункции

&НаКлиенте
Функция УстановитьЗначениеЧастиАдреса(Элемент, ВыбранноеЗначение, ИзменятьТолькоПредставление = Ложь)
	ЧастьАдреса = ЧастьАдресаЭлемента(Элемент);
	
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Структура") Тогда
		СтруктураЧасти = ?(ВыбранноеЗначение.Свойство("Значение"), ВыбранноеЗначение.Значение, ВыбранноеЗначение);
		ЧастьАдреса.КодКлассификатора = СтруктураЧасти.Код;
		ЧастьАдреса.Значение          = СтруктураЧасти.ПолноеНаименование;
		ЧастьАдреса.Наименование      = СтруктураЧасти.Наименование;
		ЧастьАдреса.Сокращение        = СтруктураЧасти.Сокращение;
	ИначеЕсли ИзменятьТолькоПредставление Тогда
		ЧастьАдреса.Значение          = СокрЛП(ВыбранноеЗначение);
	Иначе
		ЧастьАдреса.КодКлассификатора = Неопределено;
		ЧастьАдреса.Значение          = СокрЛП(ВыбранноеЗначение);
		
		Части = КонтактнаяИнформацияКлиентСервер.НаименованиеСокращение(ЧастьАдреса.Значение);
		ЧастьАдреса.Наименование      = Части.Наименование;
		ЧастьАдреса.Сокращение        = Части.Сокращение;
	КонецЕсли;
	
	// Ставим в форму, автоматически сгенерированные имена элементов и реквизитов совпадают
	Объект[ЧастьАдреса.ПолеФормы] = ЧастьАдреса.Значение;
	
	Возврат ЧастьАдреса.Значение;
КонецФункции

&НаКлиенте
Процедура УстановитьЗначенияЭлементовПоДетальномуАдресу()
	
	Для Каждого КлючЗначение Из АдресДетально Цикл
		// Ставим в форму, автоматически сгенерированные имена элементов и реквизитов совпадают
		Объект[КлючЗначение.Значение.ПолеФормы] = КлючЗначение.Значение.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруАдресДетально()
	
	СтруктураАдреса = АдресныйКлассификатор.ВернутьСтруктуруАдресногоКлассификатораПоАдреснымЭлементам(
		Объект.Поле2, Объект.Поле3, Объект.Поле4, Объект.Поле5, Объект.Поле6);
	
	АдресДетально = КонтактнаяИнформация.СписокРеквизитовАдреса(СтруктураАдреса.Код);
	
КонецПроцедуры

&НаКлиенте
Функция ВариантыВыбораПредставленияЭлементаАдреса(Элемент)
	
	Результат = Новый СписокЗначений;
	
	ЧастьАдреса = ЧастьАдресаЭлемента(Элемент);
	
	Результат.Добавить(Элемент.ТекстРедактирования);
	
	НаименованиеЧастиАдреса = СокрЛП(ЧастьАдреса.Наименование);
	Если НЕ ЗначениеЗаполнено(НаименованиеЧастиАдреса) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Результат.Добавить(НаименованиеЧастиАдреса);
	
	Если ЗначениеЗаполнено(СокрЛП(ЧастьАдреса.Сокращение)) Тогда
		Результат.Добавить(НаименованиеЧастиАдреса        + " " + СокрЛП(ЧастьАдреса.Сокращение));
		Результат.Добавить(СокрЛП(ЧастьАдреса.Сокращение) + " " + НаименованиеЧастиАдреса);
	КонецЕсли;
	
	СписокСокращений = КонтактнаяИнформацияКлиентСерверПовтИсп.ПолучитьАдресныеСокращенияПоУровню(Число(Прав(ЧастьАдреса.ПолеФормы, 1)) - 1);
	Для Каждого ЭлементСписка Из СписокСокращений Цикл
		
		Если ЗначениеЗаполнено(ЭлементСписка.Значение) Тогда
			Результат.Добавить(НаименованиеЧастиАдреса + " " + ЭлементСписка.Значение);
			Результат.Добавить(ЭлементСписка.Значение  + " " + НаименованиеЧастиАдреса);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
