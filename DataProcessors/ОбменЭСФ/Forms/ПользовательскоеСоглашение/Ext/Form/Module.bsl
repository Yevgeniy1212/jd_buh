////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	РежимЗаключениеСоглашения = Параметры.ЦельОткрытияСоглашения = "Заключение" ИЛИ Параметры.ЦельОткрытияСоглашения = "Обновление";
	
	Если Параметры.ЦельОткрытияСоглашения = "Обновление" Тогда
		Элементы.ФормаПолучить.Заголовок = НСтр("ru = 'Обновить'");
	КонецЕсли;
	
	ТекстСоглашения.УстановитьHTML(РеквизитФормыВЗначение("Объект").ПолучитьМакет("ОфертаКриптографии").ПолучитьТекст(), Новый Структура);
	Если РежимЗаключениеСоглашения Тогда
		Пользователь = ЭСФКлиентСерверПереопределяемый.ТекущийПользователь();
		ПользовательПриИзмененииНаСервере();
	Иначе		
		ПользовательСогласен = ?(Параметры.ИспользоватьОбменЭСФЧерезAPI, 1, -1);		
		Элементы.ГруппаИдентификацияКлиента.Доступность = Ложь;
	КонецЕсли;
	
	ВосстановитьНастройки();
	ЗаполнитьДополнительныеПараметрыСоглашенияНаСервере(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Контейнер = ЭСФКлиентСервер.КонтейнерМетодов();	
	Контейнер.ПриОткрытииФормы(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	Результат = ?(ПользовательСогласен = 1, Истина, Ложь);
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Получить(Команда)
	Если ПользовательСогласен <> 1 Тогда
		ТекстСообщения = НСТР("ru = 'Для получения библиотеки необходимо принять условия Соглашения.'");
		ЭСФКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	Если НЕ ПроверитьЗаполнение() Тогда
		ТекстСообщения = НСТР("ru = 'Для получения библиотеки необходимо заполнить требуемые сведения и принять условия Соглашения.'");
		ЭСФКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	СохранитьНастройки();
	
	// Запрос на получение библиотеки
	Контейнер = ЭСФКлиентСервер.КонтейнерМетодов();	
	ПараметрыАвторизации = ПолучитьТекущиеПараметрыСоглашения(ЭтаФорма);
	
	ДополнительныеПараметры = Новый Структура("ПользовательСогласен", ПользовательСогласен);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьМодульКриптографииЗавершение", ЭтаФорма, ДополнительныеПараметры);
	Контейнер.ОбновитьМодульКриптографии(ПараметрыАвторизации, ОписаниеОповещения,,Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМодульКриптографииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Результат = ?(ДополнительныеПараметры.ПользовательСогласен = 1, Истина, Ложь);
	Закрыть(Результат);
КонецПроцедуры	

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)	
	// Заключение соглашения
	Форма.Элементы.ГруппаОтветПользователя.Доступность = Форма.РежимЗаключениеСоглашения;	
	Форма.Элементы.ФормаПолучить.Видимость = Форма.РежимЗаключениеСоглашения;	
	ЭСФКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ФормаПолучить", "КнопкаПоУмолчанию", Форма.РежимЗаключениеСоглашения  И (Форма.ПользовательСогласен = 1));
		
	// Просмотр условий соглашения или отказ от заключения соглашения
	Форма.Элементы.ФормаОК.Видимость = НЕ Форма.РежимЗаключениеСоглашения ИЛИ (Форма.ПользовательСогласен <> 1);		
	ЭСФКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ФормаОК", "КнопкаПоУмолчанию", НЕ Форма.РежимЗаключениеСоглашения ИЛИ (Форма.ПользовательСогласен <> 1));			
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	РеквизитыОрганизаци = ЭСФСерверПереопределяемый.РеквизитыОрганизации(Организация);
	ОрганизацияБИН = РеквизитыОрганизаци.ИдентификационныйНомер;
	ОрганизацияНаименование = РеквизитыОрганизаци.Наименование;
	ОрганизацияАдрес = РеквизитыОрганизаци.Адрес;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПользовательПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииНаСервере()	
	РеквизитыПользователя = ЭСФСерверПереопределяемый.РеквизитыПользователя(Пользователь);
	ПользовательИИН = РеквизитыПользователя.ИдентификационныйНомер;
	ПользовательФамилия = РеквизитыПользователя.Фамилия;
	ПользовательИмя = РеквизитыПользователя.Имя;
	ПользовательОтчество = РеквизитыПользователя.Отчество;
	ПользовательДолжность = РеквизитыПользователя.Должность;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСогласенПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТекущиеПараметрыСоглашения(Форма)
	ПараметрыСоглашения = Новый Структура("ИДКонфигурации, ВерсияКонфигурации, ЭтоБазовая, РегистрационныйНомер, Организация, ОрганизацияБИН, ОрганизацияНаименование, ОрганизацияАдрес, ОрганизацияТелефон,
											|Пользователь, ПользовательИИН, ПользовательФамилия, ПользовательИмя, ПользовательОтчество, ПользовательДолжность, ДатаЗаключения, ДополнительныеСведения");
	ЗаполнитьЗначенияСвойств(ПараметрыСоглашения, Форма);
	
	// На сервере установлена обязательность представления контактных данных при регистрации обращения
	Если НЕ ЗначениеЗаполнено(ПараметрыСоглашения.ОрганизацияТелефон) Тогда
		ПараметрыСоглашения.ОрганизацияТелефон = "Не указано";
	КонецЕсли;
	
	Возврат ПараметрыСоглашения;
КонецФункции	

&НаСервере
Процедура ЗаполнитьДополнительныеПараметрыСоглашенияНаСервере(ПараметрыСоглашения) Экспорт
	ПараметрыСоглашения.ИДКонфигурации 	= ЭСФСерверПереопределяемый.ИДКонфигурации();
	ПараметрыСоглашения.ВерсияКонфигурации = Метаданные.Версия;
	ПараметрыСоглашения.ЭтоБазовая 		= (Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0);	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	Если РежимЗаключениеСоглашения И ПользовательСогласен = 1 Тогда
		ПараметрыСоглашения = ПолучитьТекущиеПараметрыСоглашения(ЭтаФорма);
		
		ПараметрыСоглашения.ДатаЗаключения	= ЭСФВызовСервера.ТекущаяДатаНаСервере();
		
		Константы.ЭСФПараметрыСоглашения.Установить(Новый ХранилищеЗначения(ПараметрыСоглашения));		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	ПараметрыСоглашения = Константы.ЭСФПараметрыСоглашения.Получить().Получить();
	Если ТипЗнч(ПараметрыСоглашения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыСоглашения);
	КонецЕсли;	
КонецПроцедуры
