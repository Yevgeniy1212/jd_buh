////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПредставлениеСпискаОрганизацийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("СписокСтруктурныхЕдиниц"              , СписокСтруктурныхЕдиниц);
		ДополнительныеПараметры.Вставить("СписокПодразделений"                  , СписокПодразделений);
		ДополнительныеПараметры.Вставить("СписокВладельцевГоловныхПодразделений", СписокВладельцевГоловныхПодразделений);
		ДополнительныеПараметры.Вставить("ВыборСтруктурныхПодразделений"        , ПоддержкаРаботыСоСтруктурнымиПодразделениями); 
		
		БухгалтерскиеОтчетыКлиент.ПредставлениеСпискаОрганизацийНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, ДополнительныеПараметры);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеСпискаОрганизацийПриИзменении(Элемент)
	
	Если Не ПоддержкаРаботыСоСтруктурнымиПодразделениями 
		И ТипЗнч(ПредставлениеСпискаОрганизацийОрганизация) = Тип("СправочникСсылка.Организации") Тогда

		ПредставлениеСпискаОрганизацийПриИзмененииНаСервере();
		
		Если Не ЗначениеЗаполнено(ПредставлениеСпискаОрганизацийОрганизация) Тогда
			Элементы.БухОстаткиКоманднаяПанель.ПодчиненныеЭлементы.БухОстаткиЗаполнить.КнопкаПоУмолчанию = Истина;	
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ДатаУплатыПриИзменении(Элемент)
	
	УстановитьЗаголовкиКолонокТаблицыПП(ЭтаФорма);
	
	Если Объект.ПлатежныеПоручения.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='При изменении даты уплаты табличная часть ""Платежные поручения"" будет перезаполнены. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаИзмененииРеквизитов", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		ПлатежныеПорученияЗаполнитьОбновитьНаСервере(Ложь);
	КонецЕсли;    
	
КонецПроцедуры

&НаКлиенте
Процедура ОплачиватьСРасчетногоСчетаФилиалаПриИзменении(Элемент)

	Если Объект.ОплачиватьСРасчетногоСчетаФилиала Тогда
		ЗаполнитьРасчетныеСчетаФилиаловНаСервере();                          		
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	ИзменитьПериод(0);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ 

&НаКлиенте
Процедура РасчетныеСчетаФилиаловРасчетныйСчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.РасчетныеСчетаФилиалов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВалютаДенежныхСредств", ВалютаРегламентированногоУчета);
	Если ТипЗнч(ТекущиеДанные.Филиал) =  Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		ДанныеФилиала = ПолучитьЗначенияРеквизитов(ТекущиеДанные.Филиал, "Владелец");		
		Отбор.Вставить("Владелец", ДанныеФилиала.Владелец);                          
	Иначе		
		Отбор.Вставить("Владелец", ТекущиеДанные.Филиал);
	КонецЕсли;
	
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыФормы.Вставить("РежимВыбора",					 Истина);
	ПараметрыФормы.Вставить("Отбор",	 Отбор);
	
	ОткрытьФорму("Справочник.БанковскиеСчета.Форма.ФормаВыбора", ПараметрыФормы, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", Объект.ДатаНачала, Объект.ДатаОкончания);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиОбновить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) ИЛИ (ПоддержкаРаботыСоСтруктурнымиПодразделениями И СписокСтруктурныхЕдиниц.Количество() = 0) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбрана организация!'"));		
		Возврат;		
	КонецЕсли;
	
	ЗаполнитьПоОстаткамОборотамНаСервере(Истина);

КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиЗаполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) ИЛИ (ПоддержкаРаботыСоСтруктурнымиПодразделениями И СписокСтруктурныхЕдиниц.Количество() = 0) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбрана организация!'"));		
		Возврат;
	КонецЕсли;
	
	Если Объект.БухОстатки.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Заполнить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнитьТабличнуюЧасть", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		ЗаполнитьПоОстаткамОборотамНаСервере();
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныеПорученияОбновить(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "Обработка ""формирование платежных поручений на уплату налогов"" (обновление платежных поручений)");
	
	ПлатежныеПорученияЗаполнитьОбновитьНаСервере(Ложь);

КонецПроцедуры

&НаСервере
Процедура ПлатежныеПорученияЗаполнитьОбновитьНаСервере(РежимВвода)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ТаблицаОстатков",Объект.БухОстатки.Выгрузить()); 
	ДопПараметры.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями",ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	ДопПараметры.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
	ДопПараметры.Вставить("ДатаПрекращенияВыводаРНН", ДатаПрекращенияВыводаРНН);
	ДопПараметры.Вставить("ТаблицаПлатежныхПоручений", Объект.ПлатежныеПоручения.Выгрузить());

	СформироватьПлатежныеПорученияНаСервере(РежимВвода, ДопПараметры);

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.СчетОрганизации) И НЕ Объект.ОплачиватьСРасчетногоСчетаФилиала Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указан счет организации'"));		
		Возврат;
	КонецЕсли;

	Если ИтогоОплатить = 0 Тогда
		ПоказатьПредупреждение = НСтр(, "ru = 'Нет остатков, отмеченных для оплаты'");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаУплаты) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указана дата уплаты налогов'"));		
		Возврат;
	КонецЕсли;

	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "Обработка ""формирование платежных поручений на уплату налогов"" (формирование платежных поручений)");
	
	ПлатежныеПорученияЗаполнитьОбновитьНаСервере(Истина);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	ИзменитьПериод(-1);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	ИзменитьПериод(1);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура  СформироватьПлатежныеПорученияНаСервере(РежимВвода = Истина, ДопПараметры)
	
	ДопПараметры.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
	ДопПараметры.Вставить("ДатаПрекращенияВыводаРНН", ДатаПрекращенияВыводаРНН);
	ДопПараметры.Вставить("ТаблицаПлатежныхПоручений", Объект.ПлатежныеПоручения.Выгрузить());

	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	ОбъектОбработка.СформироватьПлатежныеПорученияПоОстаткам(РежимВвода,ДопПараметры);
	ЗначениеВДанныеФормы(ДопПараметры.ТаблицаПлатежныхПоручений, Объект.ПлатежныеПоручения);
	
	ОбновитьИтоги(ЭтаФорма);	
	  
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнитьТабличнуюЧасть(Результат, Параметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;

	Объект.БухОстатки.Очистить();
	Объект.ПлатежныеПоручения.Очистить();
	
	ЗаполнитьПоОстаткамОборотамНаСервере();
	     
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамОборотамНаСервере(ОбновлятьТолькоСуммы = Ложь)
	
	ЗначениеТаймера = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ТаблицаОстатков = ЗаполнитьОстаткиНаСчетах3100();
	
	Если ОбновлятьТолькоСуммы Тогда 
		
		Для Каждого Строка Из Объект.БухОстатки Цикл
			Если Не Строка.Оплатить Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Организация");
			
			Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
				СтруктураПоиска.Вставить("СтруктурнаяЕдиница");
			КонецЕсли;
			
			СтруктураПоиска.Вставить("Субконто1");
			СтруктураПоиска.Вставить("Субконто2");
			СтруктураПоиска.Вставить("Субконто3");
			СтруктураПоиска.Вставить("СчетУчета");
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
			СтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска); 
			
			Если СтрокиОстатков.Количество() = 0 Тогда
				Строка.Сумма = 0;
			Иначе
				Строка.Сумма = СтрокиОстатков[0].Сумма;
			КонецЕсли;			
		КонецЦикла;     		
		
	Иначе
		Объект.БухОстатки.Загрузить(ТаблицаОстатков);		
	КонецЕсли;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ТаблицаОстатков",Объект.БухОстатки.Выгрузить()); 
	ДопПараметры.Вставить("ПоддержкаРаботыСоСтруктурнымиПодразделениями",ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	ДопПараметры.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
	ДопПараметры.Вставить("ПолучениеОборотов", (ПолучениеОстатковНаДату = 1));
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
		
	СформироватьПлатежныеПорученияНаСервере(Ложь, ДопПараметры);
				
	ЗначениеВДанныеФормы(ДопПараметры.ТаблицаОстатков,Объект.БухОстатки) ;
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	ОбновитьИтоги(ЭтаФорма);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("Обработка ""формирование платежных поручений на уплату налогов"" (заполнение)", ЗначениеТаймера);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	ВалютаРегламентированногоУчета 				 = ОбщегоНазначенияБКВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	ДатаПрекращенияВыводаРНН 					 = Константы.ДатаПрекращенияВыводаРННВПервичныхДокументах.Получить();
	
	РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.ПредставлениеСпискаОрганизаций, Неопределено, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
		                   		
	ПолучениеОстатковНаДату = 0;		
	
	ЗаполнитьДанныеПоПериодамНаСервере();	
		
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Объект.Организация  = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		СписокСтруктурныхЕдиниц.Добавить(Объект.Организация);		                                                            		
		Объект.ПредставлениеСпискаОрганизаций = БухгалтерскиеОтчетыКлиентСервер.ВыгрузитьСписокВСтроку(СписокСтруктурныхЕдиниц);		
		ПредставлениеСпискаОрганизацийОрганизация = Объект.ПредставлениеСпискаОрганизаций;
		
		СписокПодразделений.Добавить(Справочники.ПодразделенияОрганизаций.ПустаяСсылка(), "Головное подразделение");				
		СписокВладельцевГоловныхПодразделений.Добавить(Объект.Организация);						
		Объект.ПредставлениеСпискаПодразделений = БухгалтерскиеОтчетыКлиентСервер.ВыгрузитьСписокВСтроку(СписокПодразделений);			
	Иначе
		ПредставлениеСпискаОрганизацийОрганизация = Объект.Организация;
	КонецЕсли;
	
	ОрганизацияПриИзмененииНаСервере();	
	
	УстановитьЗаголовкиКолонокТаблицыПП(ЭтаФорма);  
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьОстаткиНаСчетах3100() Экспорт

	Запрос = Новый Запрос;
	
	//если выбран филиал, не нужно показывать остатки по счетам 3130, 3110(НДС и КПН)
	//так как плательщиком выступает всегда голова
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями И СписокСтруктурныхЕдиниц.Количество() = 0 Тогда
		УсловиеПоСчетам = " И Не (Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.НалогНаДобавленнуюСтоимость) ИЛИ
		| Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.КорпоративныйПодоходныйНалог) ИЛИ 
		| Счет = ЗНАЧЕНИЕ(ПланСчетов.Типовой.Акцизы))";
	Иначе
		УсловиеПоСчетам = "";				   
	КонецЕсли;
	
	Если ПолучениеОстатковНаДату = 0 Тогда
		Запрос.Текст = " 
		|			
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТиповойОстатки.Счет КАК СчетУчета,
		|	ТиповойОстатки.Организация КАК Организация,
		|	ТиповойОстатки.СтруктурноеПодразделение КАК СтруктурнаяЕдиница,
		|	ТиповойОстатки.Субконто1 Как Субконто1,
		|	ТиповойОстатки.Субконто2 Как Субконто2,
		|	ЕстьNull(ТиповойОстатки.Субконто3, Неопределено) Как Субконто3,		
		|	ТиповойОстатки.СуммаОстатокКт КАК Сумма,
		|	ИСТИНА КАК Оплатить
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(&ГраницаОстатков, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоНалогам)) "
												+ УсловиеПоСчетам + " , , Организация В (&СписокОрганизаций)И (ВЫБОР КОГДА &УчетПоСтруктурным ТОГДА СтруктурноеПодразделение В (&СписокСтруктурныхПодразделений) ИНАЧЕ ИСТИНА КОНЕЦ)) КАК ТиповойОстатки		
		|		
		|ГДЕ
		|	ТиповойОстатки.СуммаОстаток < 0
		|УПОРЯДОЧИТЬ ПО
		|	СчетУчета,
		|	Организация";
				
		Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(КонецДня(Объект.ДатаОстатков), ВидГраницы.Включая));
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТиповойОбороты.Счет КАК СчетУчета,
		|	ТиповойОбороты.Организация КАК Организация,
		|	ТиповойОбороты.СтруктурноеПодразделение КАК СтруктурнаяЕдиница,
		|	ТиповойОбороты.Субконто1,
		|	ТиповойОбороты.Субконто2,
		|	ЕстьNull(ТиповойОбороты.Субконто3, Неопределено) КАК Субконто3,
		|	ТиповойОбороты.СуммаОборотКт КАК Сумма,
		|	ИСТИНА КАК Оплатить
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Обороты(&ДатаНач, &ГраницаОстатков, , Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ОбязательстваПоНалогам)) "
												+ УсловиеПоСчетам + " , , Организация В (&СписокОрганизаций) И (ВЫБОР КОГДА &УчетПоСтруктурным ТОГДА СтруктурноеПодразделение В (&СписокСтруктурныхПодразделений) ИНАЧЕ ИСТИНА КОНЕЦ), , ) КАК ТиповойОбороты
		|ГДЕ
		|	ТиповойОбороты.СуммаОборот < 0 
		|УПОРЯДОЧИТЬ ПО
		|	СчетУчета,
		|	Организация"; 		
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Периодичность", Строка(Периодичность));
		Запрос.УстановитьПараметр("ГраницаОстатков", Новый Граница(КонецДня(КонПериода), ВидГраницы.Включая));
	КонецЕсли;
	    	
	//добавим данные по ИПН - возьмем с регистров ИПНРасчетыСБюджетом	
	Запрос.УстановитьПараметр("ДатаНач", НачПериода);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("УчетПоСтруктурным", ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	Если Не ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда 		
		Запрос.УстановитьПараметр("СписокОрганизаций", 					Объект.Организация);
		Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", 	Справочники.ПодразделенияОрганизаций.ПустаяСсылка());		
	Иначе
		Запрос.УстановитьПараметр("СписокОрганизаций", 					СписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", 	СписокПодразделений.ВыгрузитьЗначения());				
	КонецЕсли;      
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	//свернем данные
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ТаблицаРезультата.Свернуть("СчетУчета,Организация, СтруктурнаяЕдиница,Субконто1,Субконто2,Субконто3, Оплатить", "Сумма");
	Иначе
		ТаблицаРезультата.Свернуть("СчетУчета,Организация, Субконто1,Субконто2,Субконто3, Оплатить", "Сумма");
	КонецЕсли;
	
	Возврат ТаблицаРезультата;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)

	ИтогоОплатить = 0;
	Для Каждого СтрокаОстатка Из Форма.Объект.БухОстатки Цикл
		Если СтрокаОстатка.Оплатить Тогда
			ИтогоОплатить = ИтогоОплатить + СтрокаОстатка.Сумма; 
		КонецЕсли;                                                  
		СтруктураПоиска = Новый Структура("НомерСтрокиОстатка", СтрокаОстатка.НомерСтроки);
		СтрокиПлатежек = Форма.Объект.ПлатежныеПоручения.НайтиСтроки(СтруктураПоиска);
	КонецЦикла;
	
	Форма.ИтогоОплатить = ИтогоОплатить;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиКолонокТаблицыПП(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ВыводитьРНН = НЕ ЗначениеЗаполнено(Форма.ДатаПрекращенияВыводаРНН) ИЛИ Объект.ДатаУплаты < Форма.ДатаПрекращенияВыводаРНН;
	БИН_РНН = ?(ВыводитьРНН, "РНН", "БИН");
		
	Элементы.ПлатежныеПорученияРННПолучателя.Заголовок 	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
																				НСтр("ru='%1 плательщика'"),БИН_РНН);
	Элементы.ПлатежныеПорученияРННПлательщика.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
																				НСтр("ru='%1 получателя'"),БИН_РНН);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		
		СписокПодразделений = РезультатВыбора.СписокПодразделений;
		СписокСтруктурныхЕдиниц = РезультатВыбора.СписокСтруктурныхЕдиниц;
		СписокВладельцевГоловныхПодразделений   = РезультатВыбора.СписокВладельцевГоловныхПодразделений;			
		Объект.ПредставлениеСпискаПодразделений = БухгалтерскиеОтчетыКлиентСервер.ВыгрузитьСписокВСтроку(СписокПодразделений);		
		Объект.ПредставлениеСпискаОрганизаций   = БухгалтерскиеОтчетыКлиентСервер.ВыгрузитьСписокВСтроку(СписокСтруктурныхЕдиниц);		
		ПредставлениеСпискаОрганизацийОрганизация = Объект.ПредставлениеСпискаОрганизаций;
		
		Если СписокСтруктурныхЕдиниц.Количество() > 0  Тогда		
			ОрганизацияПриИзмененииНаСервере();		
		КонецЕсли;		
		
		УправлениеФормой(ЭтаФорма);		
		
	КонецЕсли;       		
	
КонецПроцедуры

&НаСервере
Процедура ПредставлениеСпискаОрганизацийПриИзмененииНаСервере()
	
	Объект.Организация = ПредставлениеСпискаОрганизацийОрганизация; 
	Объект.ПредставлениеСпискаОрганизаций = ""; 
	Объект.ПредставлениеСпискаПодразделений = ""; 
		
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьНачальныеНастройкиПриИзмененииОрганизации()
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда		
		//проверим есть ли филиалы у организации
		ЕстьОбособленныеПодразделения = (СписокСтруктурныхЕдиниц.Количество() > 1) ИЛИ  (СписокПодразделений.Количество() > 1);
		
		ГоловнаяОрганизация = ОбщегоНазначенияБК.ГоловнаяОрганизация(Объект.Организация);
		//является ли выбранная организация обособленным подразделением
		ЯвляетсяОбособленнымПодразделением = (Не ГоловнаяОрганизация = Объект.Организация);
		
		Если ЯвляетсяОбособленнымПодразделением И Объект.ОплачиватьСРасчетногоСчетаФилиала Тогда
			Объект.ОплачиватьСРасчетногоСчетаФилиала = Ложь;		
		КонецЕсли;
		
		//очистим расчетные счета филиалов
		Если Объект.РасчетныеСчетаФилиалов.Количество() > 0 Тогда
			Объект.РасчетныеСчетаФилиалов.Очистить();
		КонецЕсли;
	Иначе
		ЕстьОбособленныеПодразделения		 = Ложь;	
		ЯвляетсяОбособленнымПодразделением	 = Ложь;	
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ЗаполнитьНачальныеНастройкиПриИзмененииОрганизации();
		
	Если СписокСтруктурныхЕдиниц.Количество() <= 1 ИЛИ НЕ ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		УправлениеДенежнымиСредствамиСервер.УстановитьБанковскийСчет(Объект.СчетОрганизации, Объект.Организация, ВалютаРегламентированногоУчета);		
		УстановитьПараметрыВыбораСчетаОрганизации(ЭтаФорма);				
		Объект.ОплачиватьСРасчетногоСчетаФилиала = Ложь;
	Иначе
		Объект.ОплачиватьСРасчетногоСчетаФилиала = Истина;
		ЗаполнитьРасчетныеСчетаФилиаловНаСервере();		
	КонецЕсли;                                     	
	
	Объект.БухОстатки.Очистить();
	Объект.ПлатежныеПоручения.Очистить();
	ЗаполнитьПоОстаткамОборотамНаСервере();
	
	ОбновитьИтоги(ЭтаФорма);
	УправлениеФормой(ЭтаФорма);
		
	УстановитьПараметрыВыбораСчетаОрганизации(ЭтаФорма);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасчетныеСчетаФилиаловНаСервере() 
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка КАК Филиал,
		|	ВЫБОР
		|		КОГДА Организации.ОсновнойБанковскийСчет.ВалютаДенежныхСредств = &ВалютаРегл
		|			ТОГДА Организации.ОсновнойБанковскийСчет
		|	КОНЕЦ КАК РасчетныйСчет
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка В(&МассивОрганизаций)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка,
		|	ВЫБОР
		|		КОГДА ПодразделенияОрганизаций.ОсновнойБанковскийСчет.ВалютаДенежныхСредств = &ВалютаРегл
		|			ТОГДА ПодразделенияОрганизаций.ОсновнойБанковскийСчет
		|	КОНЕЦ
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Ссылка В(&МассивПодразделений)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организации.Ссылка";
		
		Запрос.УстановитьПараметр("МассивОрганизаций", 		СписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		Запрос.УстановитьПараметр("МассивПодразделений", 	СписокПодразделений.ВыгрузитьЗначения());
		
		Запрос.УстановитьПараметр("ВалютаРегл",  ВалютаРегламентированногоУчета);
		ТаблицаСчетов = Запрос.Выполнить().Выгрузить();		
		Объект.РасчетныеСчетаФилиалов.Загрузить(ТаблицаСчетов)
	Иначе 
		Объект.РасчетныеСчетаФилиалов.Очистить();
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПараметрыВыбораСчетаОрганизации(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	НовыйМассивПараметров = Новый Массив();
	
	НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", Форма.ВалютаРегламентированногоУчета));
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		НовыйМассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Объект.Организация));
	КонецЕсли;
	
	Элементы.СчетОрганизации.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассивПараметров);
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.БухОстатки.Количество() > 0 Тогда		
		Элементы.БухОстаткиКоманднаяПанель.ПодчиненныеЭлементы.ФормаСформировать.КнопкаПоУмолчанию = Истина;		
	Иначе
		Элементы.БухОстаткиКоманднаяПанель.ПодчиненныеЭлементы.БухОстаткиЗаполнить.КнопкаПоУмолчанию = Истина;		
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаРасчетныеСчетаФилиалов.Видимость = Объект.ОплачиватьСРасчетногоСчетаФилиала;
	
	Элементы.ОплачиватьСРасчетногоСчетаФилиала.Видимость = Форма.ПоддержкаРаботыСоСтруктурнымиПодразделениями;
	Элементы.СчетОрганизации.Доступность                 = НЕ Форма.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ Форма.СписокСтруктурныхЕдиниц.Количество()<=1;
	
	Элементы.ГруппаПериодичностьПериода.Видимость = (Форма.ПолучениеОстатковНаДату = 1);
	Элементы.ДатаОстатков.Видимость               = (Форма.ПолучениеОстатковНаДату = 0);
	   	                				
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиОплатитьПриИзменении(Элемент)
	ОбновитьИтоги(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПериод(Шаг)

	Если Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		КонПериода  = КонецГода(ДобавитьМесяц(КонПериода, Шаг*12)); 
		НачПериода = НачалоГода(КонПериода);
	ИначеЕсли Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал")  Тогда
		КонПериода  = КонецКвартала(ДобавитьМесяц(КонПериода, Шаг*3));
		НачПериода = НачалоКвартала(КонПериода);
	Иначе
		КонПериода  = КонецМесяца(ДобавитьМесяц(КонПериода, Шаг)); 
		НачПериода = НачалоМесяца(КонПериода);
	КонецЕсли;

	ПоказатьПериод(ЭтаФорма);

КонецПроцедуры

// Процедура управляет показом в форме периода построения отчета.
//
&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьПериод(Форма)

	Если (Форма.КонПериода < Форма.НачПериода) Тогда
		ТекстСообщения = НСтр("ru='Неверно задан период'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);	
		Возврат;
	КонецЕсли;

	СтрПериод = ПредставлениеПериода(НачалоДня(Форма.НачПериода), КонецДня(Форма.КонПериода), "ФП = Истина" );
		
	Форма.НадписьПериод = СтрПериод;

КонецПроцедуры

&НаКлиенте
Процедура ПолучениеОстатковНаДатуПриИзменении(Элемент)
	
	Если Объект.БухОстатки.Количество() Тогда
		ТекстВопроса = НСтр("ru = 'При изменении способа заполнения, табличная часть будет очищена. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаИзменениеСпособаПолучения", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	Иначе
		ЗаполнитьДанныеПоПериодамНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаИзменениеСпособаПолучения(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.БухОстатки.Очистить();
		ЗаполнитьДанныеПоПериодамНаСервере();
	Иначе
		ПолучениеОстатковНаДату = Не ПолучениеОстатковНаДату;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоПериодамНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.ДатаУплаты)  Тогда
		Объект.ДатаУплаты = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	Если ПолучениеОстатковНаДату Тогда
		Если Не ЗначениеЗаполнено(НачПериода) Или Не ЗначениеЗаполнено(КонПериода) Тогда
			КонПериода    = КонецМесяца(Объект.ДатаУплаты);
			НачПериода    = НачалоМесяца(Объект.ДатаУплаты);
			Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц");
		КонецЕсли;
		ПоказатьПериод(ЭтаФорма);
	Иначе
		Объект.ДатаОстатков = Объект.ДатаУплаты;
		Элементы.НадписьПериод.Заголовок = "";
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныеПорученияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ДопПараметрыФормы = Новый Структура;
		ДопПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Ссылка);
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытииФормыДокументеПлатежногоПоручения", ЭтаФорма, ДопПараметрыФормы);
		ОткрытьФорму("Документ.ПлатежноеПоручениеИсходящее.Форма.ФормаДокумента", ДопПараметрыФормы,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца) ;			
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытииФормыДокументеПлатежногоПоручения(РезультатЗакрытия, ДопПараметрыФормы) Экспорт
	ДанныеСсылки = Неопределено;
	Если ДопПараметрыФормы.Свойство("Ключ",ДанныеСсылки) Тогда
		
		ОбновитьУплаченныеСуммыИСуммыОстаткаПоДаннымПлатежки(ДанныеСсылки);
		КонецЕсли;
	
	ОбновитьИтоги(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаИзмененииРеквизитов(Результат, Параметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;	
	КонецЕсли;

	Объект.ПлатежныеПоручения.Очистить();
	ПлатежныеПорученияЗаполнитьОбновитьНаСервере(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьУплаченныеСуммыИСуммыОстаткаПоДаннымПлатежки(ДокументПлатеж)
	
	СтруктураРеквизитов = ПолучитьЗначенияРеквизитов(ДокументПлатеж, "Проведен, ПометкаУдаления, ВидНалога,КодБК, СуммаДокумента, НазначениеПлатежа,
	|Контрагент, СчетКонтрагента, Номер, Дата, КодНазначенияПлатежа, РННПлательщика,СтруктурноеПодразделениеОтправитель,
	|РННПолучателя, ТекстПлательщика, ТекстПолучателя, Организация, СчетУчетаРасчетовСКонтрагентомБУ, СчетУчетаРасчетовСКонтрагентомНУ");
	
	ПараметрыОтбора = Новый Структура("Ссылка", ДокументПлатеж);														   
	СтрокиППИ = Объект.ПлатежныеПоручения.НайтиСтроки(ПараметрыОтбора);
	Если СтрокиППИ.Количество()> 0 Тогда
		ЗаполнитьЗначенияСвойств(СтрокиППИ[0],СтруктураРеквизитов);
		СтрокиППИ[0].СтруктурноеПодразделение = СтруктураРеквизитов.СтруктурноеПодразделениеОтправитель;
		
		Если СтруктураРеквизитов.Проведен Тогда  
			СтруктураПоиска = Новый Структура("НомерСтроки", СтрокиППИ[0].НомерСтрокиОстатка);
			СтрокиОстатка = Объект.БухОстатки.НайтиСтроки(СтруктураПоиска);
			Если СтрокиОстатка.Количество() > 0 Тогда
				СтрокаОстатка= СтрокиОстатка[0];
				СтрокаОстатка.УплаченнаяСумма = СтрокиППИ[0].СуммаДокумента;
				СтрокаОстатка.Сумма           = СтрокаОстатка.Сумма - СтрокиППИ[0].СуммаДокумента;				
				СтрокаОстатка.СуммаВсего = СтрокаОстатка.Сумма + СтрокаОстатка.УплаченнаяСумма
			КонецЕсли;					
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияРеквизитов(СсылкаНаОбъект, Реквизиты)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, Реквизиты);	
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	Для Каждого СтрокаПлатеж Из Объект.ПлатежныеПоручения Цикл
		
		Если ЗначениеЗаполнено(СтрокаПлатеж.Ссылка) Тогда
			ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаПлатеж.Ссылка, "Проведен, ПометкаУдаления");
			СтрокаПлатеж.Проведен = ДанныеДокумента.Проведен;			
			СтрокаПлатеж.ПометкаУдаления = ДанныеДокумента.ПометкаУдаления;			
		КонецЕсли;      		
	КонецЦикла;         	
	
	Для Каждого СтрокаПлатеж Из Объект.БухОстатки Цикл
		СтрокаПлатеж.СуммаВсего = СтрокаПлатеж.Сумма + СтрокаПлатеж.УплаченнаяСумма;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
		
	УстановитьОплатуСтрокТаблицы(ЭтаФорма, Истина)

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОплатуСтрокТаблицы(Форма, ЗначениеОтметки)
	
	Для Каждого СтрокаТаблицы Из Форма.Объект.БухОстатки Цикл
		СтрокаТаблицы.Оплатить = ЗначениеОтметки;
	КонецЦикла;
	
	ОбновитьИтоги(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	УстановитьОплатуСтрокТаблицы(ЭтаФорма, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура БухОстаткиПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.БухОстатки.ТекущиеДанные;
	Отбор = Новый Структура();
	
	Если ТекущиеДанные = Неопределено Тогда
		Отбор.Вставить("НомерСтрокиОстатка", 0);		 
	Иначе	 	
		Отбор.Вставить("НомерСтрокиОстатка", ТекущиеДанные.НомерСтроки);
	КонецЕсли;
	
	Отбор.Вставить("ПометкаУдаления", Ложь);

	Элементы.ПлатежныеПоручения.ОтборСтрок =  Новый ФиксированнаяСтруктура(Отбор);

КонецПроцедуры



