#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Производит автозаполнение табличной части ТребованияНакладные
//
Процедура ЗаполнитьТребованияНакладные(ДанныеОбъекта, ТребованияНакладные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НЕ ЕСТЬNULL(ТребованиеНакладная.Проведен, ЛОЖЬ) КАК Отметка,
	|	ОтчетПроизводстваЗаСменуПродукция.Номенклатура КАК Продукция,
	|	ОтчетПроизводстваЗаСменуПродукция.Количество,
	|	ОтчетПроизводстваЗаСменуПродукция.Спецификация,
	|	ЕСТЬNULL(ТребованиеНакладная.Ссылка, &ПустаяТН) КАК ТребованиеНакладная,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладная.СубконтоЗатратБУ1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ТребованиеНакладная.СубконтоЗатратБУ1
	|		КОГДА ТребованиеНакладная.СубконтоЗатратБУ2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ТребованиеНакладная.СубконтоЗатратБУ2
	|		КОГДА ТребованиеНакладная.СубконтоЗатратБУ3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ТребованиеНакладная.СубконтоЗатратБУ3
	|		ИНАЧЕ &ПустаяСтатьяЗатрат
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТребованиеНакладная.Ссылка ЕСТЬ NULL 
	|			ТОГДА 3
	|		КОГДА ТребованиеНакладная.ПометкаУдаления
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТребованиеНакладная.Проведен
	|					ТОГДА 0
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК ИндексКартинки	
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная КАК ТребованиеНакладная
	|		ПО ОтчетПроизводстваЗаСменуПродукция.Ссылка.Ссылка = ТребованиеНакладная.ДокументОснование
	|			И ОтчетПроизводстваЗаСменуПродукция.Номенклатура = ТребованиеНакладная.Номенклатура
	|ГДЕ
	|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", 			ДанныеОбъекта.Ссылка);
	Запрос.УстановитьПараметр("ПустаяТН", 			Документы.ТребованиеНакладная.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	ТребованияНакладные.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // Автозаполнение()

// Процедура заполняет счета учета по бухгалтерскому и налоговому учету.
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчетаБУ") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Материалы" Тогда
		
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаБУ) Тогда
			СтрокаТабличнойЧасти.СчетБУ = СчетаУчета.СчетУчетаБУ;
		КонецЕсли;
			
		Если ЗначениеЗаполнено(СчетаУчета.СчетУчетаНУ) Тогда
			СтрокаТабличнойЧасти.СчетНУ = СчетаУчета.СчетУчетаНУ;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧасти()

// Создает документы ТН по отмеченным строкам
//
// Параметры
//  нет
//
Процедура СоздатьТН(ДанныеОбъекта) Экспорт

	ДанныеОтчетаПроизводстваЗаСмену = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеОбъекта.ОтчетПроизводстваЗаСмену, "Ссылка, Организация, СтруктурноеПодразделение, СчетЗатратБУ, СчетЗатратНУ, 
																				|ПодразделениеОрганизации, НоменклатурнаяГруппа, Склад, Дата, Номер");

	Основание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										НСтр("ru = 'Отчет производства за смену №%1 от %2'"), ДанныеОтчетаПроизводстваЗаСмену.Номер, Формат(ДанныеОтчетаПроизводстваЗаСмену.Дата, "ДФ=дд.ММ.гггг"));
	
	Для Каждого СтрокаТаблицы Из ДанныеОбъекта.ТребованияНакладные Цикл
		
		Если СтрокаТаблицы.Отметка И НЕ ЗначениеЗаполнено(СтрокаТаблицы.ТребованиеНакладная) Тогда
			
			ДокументТН = Документы.ТребованиеНакладная.СоздатьДокумент();                                           
			
			ДокументТН.Дата		 		 		= ДанныеОбъекта.ДатаФормирования;
			ДокументТН.Организация       		= ДанныеОтчетаПроизводстваЗаСмену.Организация;
			ДокументТН.СтруктурноеПодразделение = ДанныеОтчетаПроизводстваЗаСмену.СтруктурноеПодразделение;
			ДокументТН.ДокументОснование 		= ДанныеОтчетаПроизводстваЗаСмену.Ссылка;
			ДокументТН.СчетЗатратБУ      		= ДанныеОтчетаПроизводстваЗаСмену.СчетЗатратБУ;
			ДокументТН.СубконтоЗатратБУ1 		= ДанныеОтчетаПроизводстваЗаСмену.ПодразделениеОрганизации;
			ДокументТН.СубконтоЗатратБУ2 		= ДанныеОтчетаПроизводстваЗаСмену.НоменклатурнаяГруппа; 
			ДокументТН.СубконтоЗатратБУ3 		= СтрокаТаблицы.СтатьяЗатрат; 
			ДокументТН.Склад  			 		= ДанныеОтчетаПроизводстваЗаСмену.Склад;
			ДокументТН.Номенклатура      		= СтрокаТаблицы.Продукция;
			
			ОрганизацияПлательщикНалогаНаПрибыль = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ДокументТН.Организация, ДокументТН.Дата);
			ДокументТН.УчитыватьКПН = ОрганизацияПлательщикНалогаНаПрибыль;
			ДокументТН.ВидУчетаНУ = ?(ПользователиБКВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОтражатьДокументыВНалоговомУчете"), Справочники.ВидыУчетаНУ.НУ, Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ);
			
			Если ОрганизацияПлательщикНалогаНаПрибыль Тогда
				ДокументТН.СчетЗатратНУ      = ДанныеОтчетаПроизводстваЗаСмену.СчетЗатратНУ;
				ДокументТН.СубконтоЗатратНУ1 = ДанныеОтчетаПроизводстваЗаСмену.ПодразделениеОрганизации;
				ДокументТН.СубконтоЗатратНУ2 = ДанныеОтчетаПроизводстваЗаСмену.НоменклатурнаяГруппа; 
				ДокументТН.СубконтоЗатратНУ3 = СтрокаТаблицы.СтатьяЗатрат; 
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
						   |	СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура КАК Номенклатура,
						   |	СпецификацииНоменклатурыИсходныеКомплектующие.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
						   |	ВЫБОР
						   |		КОГДА СпецификацииНоменклатуры.Количество = 0
						   |			ТОГДА 0
						   |		ИНАЧЕ ВЫРАЗИТЬ(&КоличествоПродукции * СпецификацииНоменклатурыИсходныеКомплектующие.Количество / СпецификацииНоменклатуры.Количество КАК ЧИСЛО(15, 3))
						   |	КОНЕЦ КАК Количество
						   |ИЗ
						   |	Справочник.СпецификацииНоменклатуры КАК СпецификацииНоменклатуры
						   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры.ИсходныеКомплектующие КАК СпецификацииНоменклатурыИсходныеКомплектующие
						   |		ПО (СпецификацииНоменклатурыИсходныеКомплектующие.Ссылка = СпецификацииНоменклатуры.Ссылка)
						   |ГДЕ
						   |	СпецификацииНоменклатуры.Ссылка = &СсылкаСпецификацииНоменклатуры";
						   
			Запрос.УстановитьПараметр("КоличествоПродукции", 			СтрокаТаблицы.Количество);
			Запрос.УстановитьПараметр("СсылкаСпецификацииНоменклатуры", СтрокаТаблицы.Спецификация);
			
			Результат = Запрос.Выполнить();
			
			ТаблицаМатериалов = Результат.Выгрузить();
			ТаблицаМатериалов.Свернуть("Номенклатура,ЕдиницаИзмерения","Количество");

			ДокументТН.Материалы.Загрузить(ТаблицаМатериалов);

			СоответствиеСчетовУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаСпискаНоменклатуры(
				ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаМатериалов, "Номенклатура", Истина), ДанныеОбъекта.ДатаФормирования);

			Для Каждого Стр Из ДокументТН.Материалы Цикл
				СчетаУчета = СоответствиеСчетовУчета.Получить(Стр.Номенклатура);
				ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, Стр, "Материалы", СчетаУчета);
				Стр.Коэффициент      = 1;				
				Стр.КлючСвязи = ОбщегоНазначенияБККлиентСервер.НовыйКлючСвязиСтрокиТаблицы(ДокументТН.Материалы);
			КонецЦикла;
			
			ДокументТН.Записать();
			
			СтрокаТаблицы.ТребованиеНакладная = ДокументТН.Ссылка;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры 

// Изменяет даты у существующих документов ТН по отмеченным строкам
//
// Параметры
//  НоваяДатаДок - новое значение даты, которую надо установить
//
Процедура ИзменитьДатыТН(ДанныеОбъекта) Экспорт
	
	Для Каждого СтрокаТаблицы Из ДанныеОбъекта.ТребованияНакладные Цикл
		
		Если СтрокаТаблицы.Отметка 
			И ЗначениеЗаполнено(СтрокаТаблицы.ТребованиеНакладная) 
			И НачалоДня(СтрокаТаблицы.ТребованиеНакладная.Дата) <> НачалоДня(ДанныеОбъекта.ДатаФормирования) Тогда
			
			ДокументТН 		= СтрокаТаблицы.ТребованиеНакладная.ПолучитьОбъект();
			ДокументТН.Дата	= ДанныеОбъекта.ДатаФормирования;
			
			Если ДокументТН.Проведен Тогда
				Попытка 
					ДокументТН.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Дата документа %1 не изменена!'"), 
																	СтрокаТаблицы.ТребованиеНакладная));
				КонецПопытки;
			Иначе
				ДокументТН.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ИзменитьДатыРКО()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли