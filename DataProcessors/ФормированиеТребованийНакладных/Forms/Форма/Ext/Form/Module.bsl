////////////////////////////////////////////////////////////////////////////////
// Описание формы
// Параметры фомры:
//  Организация - СправочникСсылка.Организации - ОписаниеПараметра1
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - ОписаниеПараметра2
//  ОтчетПроизводстваЗаСмену - ДокументСсылка.ОтчетПроизводстваЗаСмену - ОписаниеПараметра2
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Объект.Организация = Параметры.Организация
	Иначе
		Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СтруктурноеПодразделение) Тогда
		Объект.СтруктурноеПодразделение = Параметры.СтруктурноеПодразделение
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ОтчетПроизводстваЗаСмену) Тогда
		Объект.ОтчетПроизводстваЗаСмену = Параметры.ОтчетПроизводстваЗаСмену;
	КонецЕсли;
	
	Объект.ДатаФормирования = ОбщегоНазначения.ТекущаяДатаПользователя();
	
	ТекущаяОрганизация      		= Объект.Организация;
	ТекущееСтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
	ТекущаяДатаФормирования		    = Объект.ДатаФормирования;
	
	РаботаСДиалогамиКлиентСервер.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, Истина);
	РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизация, Объект.СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	Если Параметры.ЗаполнятьПриОткрытии Тогда
		ОтчетПроизводстваЗаСменуПриИзмененииНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСДиалогамиКлиент.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе 
		Результат = РаботаСДиалогамиКлиент.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПроизводстваЗаСменуПриИзменении(Элемент)
	
	ОтчетПроизводстваЗаСменуПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтчетПроизводстваЗаСменуПриИзмененииНаСервере()
	
	ЗначениеТаймера = ОценкаПроизводительности.НачатьЗамерВремени();
	
	Обработки.ФормированиеТребованийНакладных.ЗаполнитьТребованияНакладные(Объект.ОтчетПроизводстваЗаСмену, Объект.ТребованияНакладные);
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени("Обработка ""формирование требований-накладных"" (заполнение документов)", ЗначениеТаймера);

КонецПроцедуры

&НаКлиенте
Процедура ДатаФормированияПриИзменении(Элемент)
	
	// спросим у пользователя о необходимости смены даты ТН в табличной части требований-накладных
	Если ТекущаяДатаФормирования <> Объект.ДатаФормирования 
		И ЗначениеЗаполнено(Объект.ДатаФормирования) Тогда
			
		// если ли созданные документы
		КоличествоДокументов = 0;
		
		Для Каждого СтрокаТаблицы Из Объект.ТребованияНакладные Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.ТребованиеНакладная) Тогда
				КоличествоДокументов = КоличествоДокументов + 1;
			КонецЕсли;
		КонецЦикла;
	
		Если КоличествоДокументов > 0 Тогда
			
			Режим = РежимДиалогаВопрос.ДаНет;
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаДатаФормированияПриИзменении", ЭтотОбъект, Параметры);
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Изменить даты отмеченных документов на %1?'"), Формат(Объект.ДатаФормирования, "ДФ=дд.ММ.гггг"));

			ПоказатьВопрос(Оповещение, ТекстВопроса, Режим);
			
		Иначе
			
			ПослеЗакрытияВопросаДатаФормированияПриИзменении(КодВозвратаДиалога.Нет, Неопределено);
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаДатаФормированияПриИзменении(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ТекущаяДатаФормирования = Объект.ДатаФормирования;
		Возврат;	
	КонецЕсли;

	ДатаФормированияПриИзмененииНаСервере();
	
	ТекущаяДатаФормирования = Объект.ДатаФормирования;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ТребованияНакладные

&НаКлиенте
Процедура ТребованияНакладныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ТребованияНакладные.ТекущиеДанные.ИндексКартинки = 3;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ТребованияНакладныеТребованиеНакладнаяПриИзменении(Элемент)
	
	Элементы.ТребованияНакладные.ТекущиеДанные.ИндексКартинки = ПолучитьИндексКартинки(Элементы.ТребованияНакладные.ТекущиеДанные.ТребованиеНакладная);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Инвертировать(Команда)
	
	Для Каждого СтрокаТаблицы Из Объект.ТребованияНакладные Цикл		
		СтрокаТаблицы.Отметка = НЕ СтрокаТаблицы.Отметка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, "Обработка ""формирование требований-накладных"" (создание документов)");
	
	СоздатьТН();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаПроведения(Команда)
	
	ОперацияНеВыполнена = Ложь;
	
	УИДЗамера = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Ложь, "Обработка ""формирование требований-накладных"" (отмена проведения документов)");
	
	ОтменитьПроведениеТребованияНакладныеНаСервере(ОперацияНеВыполнена);
	
	Если ОперацияНеВыполнена Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Операция не выполнена!'"));
	Иначе
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
	КонецЕсли;
	
	Оповестить("ОбновитьФорму", , Объект.ОтчетПроизводстваЗаСмену);
	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	
	ОперацияНеВыполнена = Ложь;
	
	УИДЗамера = ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Ложь, "Обработка ""формирование требований-накладных"" (проведение документов)");
	
	ПровестиТребованияНакладныеНаСервере(ОперацияНеВыполнена);
	
	Если ОперацияНеВыполнена Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Операция не выполнена!'"));
	Иначе
		ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
	КонецЕсли;
	
	Оповестить("ОбновитьФорму", , Объект.ОтчетПроизводстваЗаСмену);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	
	Для Каждого СтрокаТаблицы Из Объект.ТребованияНакладные Цикл
		СтрокаТаблицы.Отметка = Ложь
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлаги(Команда)
	
	Для Каждого СтрокаТаблицы Из Объект.ТребованияНакладные Цикл
		СтрокаТаблицы.Отметка = Истина;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СоздатьТН()
	
	Обработки.ФормированиеТребованийНакладных.СоздатьТН(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПровестиТребованияНакладныеНаСервере(ОперацияНеВыполнена)
	
	Для Каждого СтрокаТаблицы Из Объект.ТребованияНакладные Цикл
		
		Если СтрокаТаблицы.Отметка И ЗначениеЗаполнено(СтрокаТаблицы.ТребованиеНакладная) Тогда
			
			ДокументТН = СтрокаТаблицы.ТребованиеНакладная.ПолучитьОбъект();
			
			Если ДокументТН.ПометкаУдаления Тогда
				ДокументТН.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
			
			Попытка
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.СтатьяЗатрат) Тогда
					Если ТипЗнч(ДокументТН.СубконтоЗатратБУ3) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						ДокументТН.СубконтоЗатратБУ3 = СтрокаТаблицы.СтатьяЗатрат;
					КонецЕсли;	
					Если ТипЗнч(ДокументТН.СубконтоЗатратНУ1) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
						ДокументТН.СубконтоЗатратНУ1 = СтрокаТаблицы.СтатьяЗатрат;
					КонецЕсли;	
				КонецЕсли;
				
				ДокументТН.Записать(РежимЗаписиДокумента.Проведение);
				СтрокаТаблицы.ИндексКартинки = 0;
			Исключение
				ОперацияНеВыполнена = Истина;
				СтрокаТаблицы.ИндексКартинки = 2;
			КонецПопытки;
			
			СтрокаТаблицы.Отметка = НЕ СтрокаТаблицы.Отметка;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеТребованияНакладныеНаСервере(ОперацияНеВыполнена)
	
	Для Каждого СтрокаТаблицы Из Объект.ТребованияНакладные Цикл
		
		Если СтрокаТаблицы.Отметка И ЗначениеЗаполнено(СтрокаТаблицы.ТребованиеНакладная) И СтрокаТаблицы.ТребованиеНакладная.Проведен Тогда
			
			ДокументТН = СтрокаТаблицы.ТребованиеНакладная.ПолучитьОбъект();
			
			Попытка
				ДокументТН.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Исключение
				ОперацияНеВыполнена = Истина;
			КонецПопытки;
			
			СтрокаТаблицы.Отметка = НЕ СтрокаТаблицы.Отметка;
			СтрокаТаблицы.ИндексКартинки = 2;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЗначенияОрганизации()
	
	Если ТекущаяОрганизация <> Объект.Организация ИЛИ ТекущееСтруктурноеПодразделение <> Объект.СтруктурноеПодразделение Тогда
		ОтчетПроизводстваЗаСмену = ПредопределенноеЗначение("Документ.ОтчетПроизводстваЗаСмену.ПустаяСсылка");
		Объект.ТребованияНакладные.Очистить();
		ТекущаяОрганизация 			    = Объект.Организация;
		ТекущееСтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДатаФормированияПриИзмененииНаСервере()
	
	Обработки.ФормированиеТребованийНакладных.ИзменитьДатыТН(Объект); 

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИндексКартинки(ТребованияНакладная)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТребованияНакладная, "ПометкаУдаления, Проведен");
	
	Если НЕ ЗначениеЗаполнено(ТребованияНакладная) Тогда
		ИндексКартинки = 3;
	ИначеЕсли Реквизиты.ПометкаУдаления Тогда
		ИндексКартинки = 1;
	ИначеЕсли Реквизиты.Проведен Тогда
		ИндексКартинки = 0;
	Иначе
		ИндексКартинки = 2;
	КонецЕсли;
	
	Возврат ИндексКартинки;
	
КонецФункции

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	РаботаСДиалогамиКлиент.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
		Модифицированность = Истина;
		Результат.Вставить("НеобходимоИзменитьЗначенияРеквизитовОбъекта", Ложь);
		СтруктурноеПодразделениеОрганизацияПриИзменении(Результат);
	КонецЕсли;
	
КонецПроцедуры
