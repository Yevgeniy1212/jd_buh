
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Организация    = Параметры.Организация;
	
	ПрочитатьУчетнуюПолитикуПоБухУчету();
	ПрочитатьУчетнуюПолитикуПоНалУчету();
	ПрочитатьУчетнуюПолитикуПоПерсоналу();
	
	Элементы.ГруппаОтветственныеЛица.Доступность = ЗначениеЗаполнено(Организация);
	
	Если Параметры.Свойство("НепоказанныеСообщения") Тогда
		Для Каждого Сообщение Из Параметры.НепоказанныеСообщения Цикл
			Сообщение.Значение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиИЗакрытьНаСервере()
	
	//Запишем отвественных лиц
	//РУКОВОДИТЕЛЬ
	Если ЗначениеЗаполнено(ФизЛицоРуководитель) Тогда
		Запись = РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
		Запись.Период 				= ТекущаяДата();
		Запись.ОтветственноеЛицо 	= Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		Запись.СтруктурнаяЕдиница 	= Организация;
		Запись.ФизическоеЛицо 		= ФизЛицоРуководитель;
		Запись.Должность 	  		= ДолжностьРуководитель;
		Запись.Записать();
	КонецЕсли;
	
	//ГЛАВНЫЙ БУХГАЛТЕР
	Если ЗначениеЗаполнено(ФизЛицоГлБухгалтер) Тогда
		
		Запись = РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
		Запись.Период 				= ТекущаяДата();
		Запись.ОтветственноеЛицо 	= Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
		Запись.СтруктурнаяЕдиница 	= Организация;
		Запись.ФизическоеЛицо 		= ФизЛицоГлБухгалтер;
		Запись.Должность 	  		= ДолжностьГлБухгалтер;
		Запись.Записать();
	КонецЕсли;
	
	//КАССИР
	Если ЗначениеЗаполнено(ФизЛицоКассир) Тогда					
		Запись = РегистрыСведений.ОтветственныеЛицаОрганизаций.СоздатьМенеджерЗаписи();
		Запись.Период 				= ТекущаяДата();
		Запись.ОтветственноеЛицо 	= Перечисления.ОтветственныеЛицаОрганизаций.Кассир;
		Запись.СтруктурнаяЕдиница 	= Организация;
		Запись.ФизическоеЛицо 		= ФизЛицоКассир;
		Запись.Должность 	  		= ДолжностьКассир;
		Запись.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиИЗакрыть(Команда)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		СохранитьНастройкиИЗакрытьНаСервере();
	КонецЕсли;
	
	Если ЭтотОбъект.Открыта() Тогда
		ЭтотОбъект.Закрыть();
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьОрганизацияНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ПоказатьЗначение(, Организация);
	Иначе
		ОткрытьФорму("Справочник.Организации.ФормаСписка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПараметрыУчетаНажатие(Элемент)
	
	ОткрытьФорму("ОбщаяФорма.НастройкаПараметровУчета");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФункциональностьПрограммыНажатие(Элемент)
	
	ОткрытьФорму("Обработка.ФункциональностьПрограммы.Форма.ФормаФункциональностьПрограммы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУчетнаяПолитикаБУНажатие(Элемент)
	
	Если ЗначениеЗаполнено(УчетнаяПолитикаБух.Организация) Тогда
		ПоказатьЗначение(, УчетнаяПолитикаБух.ИсходныйКлючЗаписи);
	Иначе
		ОткрытьФорму("РегистрСведений.УчетнаяПолитикаБухгалтерскийУчет.ФормаСписка");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУчетнаяПолитикаНУНажатие(Элемент)
	
	Если ЗначениеЗаполнено(УчетнаяПолитикаНал.Организация) Тогда
		ПоказатьЗначение(, УчетнаяПолитикаНал.ИсходныйКлючЗаписи);
	Иначе
		ОткрытьФорму("РегистрСведений.УчетнаяПолитикаНалоговыйУчет.ФормаСписка");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУчетнаяПолитикаНажатие(Элемент)
	
	Если ЗначениеЗаполнено(УчетнаяПолитикаПерсонал.Организация) Тогда
		ПоказатьЗначение(, УчетнаяПолитикаПерсонал.ИсходныйКлючЗаписи);
	Иначе
		ОткрытьФорму("РегистрСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.ФормаСписка");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОценкаЗапасовНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.СпособОценкиЗапасовБУ.ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьДатуПоследнейЗаписиУчетнойПолитики(НаименованиеРегистра, ОрганизацияСсылка)
	
	Результат = Неопределено;
	
	Если ЗначениеЗаполнено(ОрганизацияСсылка) Тогда
		Отбор = Новый Структура("Организация",ОрганизацияСсылка);
		СрезПоследних = РегистрыСведений[НаименованиеРегистра].СрезПоследних(ТекущаяДата(), Отбор);
		Если СрезПоследних.Количество()=1 Тогда
			Результат = СрезПоследних[0].Период;
		Конецесли;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции // ПолучитьДатуПоследнейЗаписиУчетнойПолитики()

&НаСервере
Процедура ПрочитатьУчетнуюПолитикуПоБухУчету()
	
	ПериодЗаписиБух = ПолучитьДатуПоследнейЗаписиУчетнойПолитики("УчетнаяПолитикаБухгалтерскийУчет", Организация);
	
	УчетнаяПолитикаБухУчета = РеквизитФормыВЗначение("УчетнаяПолитикаБух");
	
	//учетная политика по бухгалтерскому учету	
	Если ПериодЗаписиБух <> Неопределено Тогда
		УчетнаяПолитикаБухУчета.Период = ПериодЗаписиБух;
	Иначе	
		УчетнаяПолитикаБухУчета.Период = НачалоМесяца(ТекущаяДата());
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УчетнаяПолитикаБухУчета.Организация = Организация;
	КонецЕсли;
	
	УчетнаяПолитикаБухУчета.Прочитать();
	
	ЗначениеВДанныеФормы(УчетнаяПолитикаБухУчета, ЭтотОбъект.УчетнаяПолитикаБух);
	
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьУчетнуюПолитикуПоНалУчету()
	
	//учетная политика по налоговому учету
	ПериодЗаписиНал = ПолучитьДатуПоследнейЗаписиУчетнойПолитики("УчетнаяПолитикаНалоговыйУчет", Организация);
	
	УчетнаяПолитикаНалУчета = РеквизитФормыВЗначение("УчетнаяПолитикаНал");
	
	Если ПериодЗаписиНал <> Неопределено Тогда
		УчетнаяПолитикаНалУчета.Период = ПериодЗаписиНал;
	Иначе	
		УчетнаяПолитикаНалУчета.Период = НачалоМесяца(ТекущаяДата());
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УчетнаяПолитикаНалУчета.Организация = Организация;
	КонецЕсли;
	
	УчетнаяПолитикаНалУчета.Прочитать();
	ЗначениеВДанныеФормы(УчетнаяПолитикаНалУчета, ЭтотОбъект.УчетнаяПолитикаНал);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьУчетнуюПолитикуПоПерсоналу()
	
	УчетнаяПолитикаПерсоналУчет = РеквизитФормыВЗначение("УчетнаяПолитикаПерсонал");
	
	Если ЗначениеЗаполнено(Организация) Тогда
		УчетнаяПолитикаПерсоналУчет.Организация = Организация;
	КонецЕсли;
	
	УчетнаяПолитикаПерсоналУчет.Прочитать();
	
	ЗначениеВДанныеФормы(УчетнаяПолитикаПерсоналУчет, ЭтотОбъект.УчетнаяПолитикаПерсонал);
	
КонецПроцедуры

#КонецОбласти