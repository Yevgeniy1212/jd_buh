#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДополнительныеСвойства.Свойство("ЗаполнениеИдентификаторовПриОбновлении") И ДополнительныеСвойства.ЗаполнениеИдентификаторовПриОбновлении Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ИндентификаторУникален() Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтрЗаменить(НСтр("ru='В базе данных уже содержится настройка пользователя с идентификатором ""%Идентификатор%"". Идентификатор должен быть уникальным'"), "%Идентификатор%", Идентификатор), 
			ЭтотОбъект, "Идентификатор",, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Настройка.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Осуществляет поиск идентификатора, совпадающего с заполненным в объекте
//
// Возвращаемое значение:
//	Булево
//	Истина, если идентификатор не найден, Ложь в противном случае
//
Функция ИндентификаторУникален()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	1
		|ИЗ
		|	ПланВидовХарактеристик.НастройкиПользователей
		|ГДЕ
		|	Идентификатор = &Идентификатор
		|	И Ссылка <> &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка",        Ссылка);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецЕсли
